var searchIndex = JSON.parse('{\
"andiskaz":{"doc":"This crate provides basic utilities for writing …","t":"AAAFAAAAAOAAOOAFFDDISDDDNNENDNDEDDEDDNNNNNNNNNDSNNNNNNNSSSSNDDDINKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLMGGDNNDNDENNNDNNDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNGNEENDNNDNNMLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLDNNNIDNNDNQNEDEDEDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLMMLLLLLMLLLMLLLLLLLLLLLLLMLLLLLLMLMLMLMLMLLMLLLLDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDILLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLAAADLLMLLLLLLLLLLLLLLLMLMLMMMMMLLLLNDENLLLLMLLLLMMMLLLLMLLLLLLLLMLLLLLLLLLLLLLLMLMMMMLLLLMMMMLLLLLLLLMNEDINLMLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMMLLLLMMMMLLLLLLLLM","n":["clipboard","color","coord","emergency_restore","error","event","screen","string","style","tdebug","terminal","tile","tstring","tstring_concat","ui","get","set","AdaptBgToFg","AdaptFgToBg","ApproxBrightness","BASE","BadBasicColor","BadCmyColor","BadGrayColor","Basic","Basic","BasicColor","Black","Brightness","Cmy","CmyColor","Color","Color2","Color8Bit","Color8BitKind","ContrastBgWithFg","ContrastFgWithBg","DarkBlue","DarkCyan","DarkGray","DarkGreen","DarkMagenta","DarkRed","DarkYellow","EightBit","Gray","GrayColor","HALF","LightBlue","LightCyan","LightGray","LightGreen","LightMagenta","LightRed","LightYellow","MAX","MAX","MIN","MIN","Rgb","RgbColor","UpdateBg","UpdateFg","Updater","White","approx_brightness","approx_brightness","approx_brightness","approx_brightness","approx_brightness","approx_brightness","approx_brightness","approx_brightness","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","background","basic","blue","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brightness","brightness","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmy","code","code","code","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","compare","cyan","cyan","default","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","foreground","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gray","green","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","kind","level","magenta","magenta","new","new","new","not","not","not","not","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","red","set_approx_brightness","set_approx_brightness","set_approx_brightness","set_approx_brightness","set_approx_brightness","set_approx_brightness","set_approx_brightness","set_approx_brightness","set_cyan","set_magenta","set_yellow","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","update","update","update","update","update","update","update","with_approx_brightness","with_approx_brightness","yellow","yellow","Coord","Vec2","AlreadyRunning","AlreadyRunning","Clipboard","ClipboardError","Custom","Error","ErrorKind","Fmt","IO","ParseInt","ServicesOff","ServicesOff","TaskJoin","TaskJoinError","Utf8","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_dyn","as_dyn","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","kind","new","source","source","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Backspace","Char","Down","Enter","Epoch","Esc","Event","Key","Key","KeyEvent","Left","Resize","ResizeEvent","Right","Up","alt","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","ctrl","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","main_key","shift","size","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Screen","as_any","as_any_mut","borrow","borrow_mut","clear","fmt","from","get","into","into_any","into_any_arc","into_any_rc","min_size","set","size","styled_text","try_from","try_into","type_id","valid_size","DiacriticAtStart","DiacriticAtStart","DiacriticAtStart","Graphm","Index","InvalidControl","InvalidControl","InvalidControl","NotAGrapheme","NotAGrapheme","Output","String","StringOrGraphm","TermGrapheme","TermGraphemeError","TermString","TermStringError","TermStringIndices","TermStringIter","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_ref","as_ref","as_ref","as_ref","as_str","as_str","as_str","as_tstring","as_tstring","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","count_graphemes","default","default","default","default","deref","deref","deref","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","from_iter","full_buf","get","get","hash","hash","hash","index","index","indices","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_iter","into_iter","into_iter","into_tstring","iter","name","new","new","new_lossy","new_lossy","next","next","next_back","next_back","partial_cmp","partial_cmp","partial_cmp","position","space","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Style","align","align_denom","align_numer","as_any","as_any_mut","borrow","borrow_mut","bottom_margin","bottom_margin","clone","clone_into","colors","colors","default","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","into_any","into_any_arc","into_any_rc","left_margin","left_margin","make_margin_above","make_margin_below","make_max_size","make_min_size","make_size","max_height","max_height","max_width","max_width","min_height","min_height","min_width","min_width","right_margin","right_margin","to_owned","top_margin","top_margin","try_from","try_into","type_id","with_colors","Builder","Terminal","TerminalGuard","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear_event","clone","clone","clone_into","clone_into","default","event","event_interval","fmt","fmt","fmt","frame_time","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","listen","lock_now","min_screen","new","run","run","screen","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_user","Background","Foreground","Tile","Updater","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","color","color","colors","compare","compare","compare","default","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","grapheme","grapheme","hash","hash","hash","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","partial_cmp","partial_cmp","partial_cmp","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","update","update","update","info","input","menu","InfoDialog","as_any","as_any_mut","bg","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","fmt","from","hash","into","into_any","into_any_arc","into_any_rc","message","new","ok_label","run","selected_colors","style","title","title_colors","title_y","to_owned","try_from","try_into","type_id","Cancel","InputDialog","InputDialogItem","Ok","as_any","as_any","as_any_mut","as_any_mut","bg","borrow","borrow","borrow_mut","borrow_mut","box_colors","buffer","cancel_label","clone","clone","clone_into","clone_into","cursor_colors","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","filter","fmt","fmt","from","from","hash","hash","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","max","new","ok_label","pad_after_box","pad_after_ok","pad_after_title","select","select_cancel_initial","select_with_cancel","select_with_initial","selected_colors","title","title_colors","title_y","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unselected_colors","Cancel","DangerPromptOption","Menu","MenuOption","Ok","all","arrow_colors","as_any","as_any","as_any_mut","as_any_mut","bg","borrow","borrow","borrow_mut","borrow_mut","cancel_label","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","hash","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","name","name","new","options","pad_after_option","pad_after_title","select","select_cancel_initial","select_with_cancel","select_with_initial","selected_colors","title","title_colors","title_y","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unselected_colors"],"q":[[0,"andiskaz"],[15,"andiskaz::clipboard"],[17,"andiskaz::color"],[563,"andiskaz::coord"],[565,"andiskaz::error"],[696,"andiskaz::event"],[799,"andiskaz::screen"],[820,"andiskaz::string"],[1087,"andiskaz::style"],[1137,"andiskaz::terminal"],[1198,"andiskaz::tile"],[1284,"andiskaz::ui"],[1287,"andiskaz::ui::info"],[1319,"andiskaz::ui::input"],[1386,"andiskaz::ui::menu"]],"d":["Provides an interface to system clipboard. Supports …","This module provides colors that are usable with the …","Provides types related to the coordinate system.","Best-effort function to restore the terminal in a panic.","This module exports error types used by the terminal …","This module defines input events of a terminal.","This module defines screen related utilities.","This module provides a string type used to be printed to …","This module provides styles for terminal text.","Writes the given formatting expression into the file …","This crate exports a terminal terminal and its utilites.","This module exports items related to a “tile” in the …","Creates a <code>TermString</code> from string literal. Currently, …","Concatenates various <code>TermString</code> or <code>TermString</code>-like into a …","UI helpers.","Gets the content of the clipboard. May fail if clipboard …","Sets the content of the clipboard to the given string. May …","Adapts the brightness of the background color to match the …","Adapts the brightness of the foreground color to match the …","A trait for types that can approximate their brightness.","Base of CMY colors (6).","Error returned when a <code>BasicColor</code> is attempted to be …","Error returned when a <code>CmyColor</code> is attempted to be created …","Error returned when a <code>GrayColor</code> is attempted to be created …","16 Basic colors.","A basic color. Totals 16 colors. By far, the most portable …","A basic color used by the terminal.","Black.","The brightness of a color.","216 CMY colors.","A CMY (Cyan-Magenta-Yellow) color. The lower one of its …","A color usable in the terminal.","A pair of colors (foreground and background).","An 8-bit encoded color for the terminal.","The kind of a color. <code>enum</code> representation of an 8-bit color.","Contrasts the brightness of the background color against …","Contrasts the brightness of the foreground color against …","Dark blue/blue.","Dark cyan/cyan.","Dark gray/light black.","Dark green/green.","Dark magenta/magenta.","Dark red/red.","Dark yellow/yellow.","ANSI 8-bit color. Totals 256 colors: 16 basic colors …","24 Gray-scale colors.","A gray-scale color. Goes from white, to gray, to black.","Half of maximum gray-scale brightness (gray).","Light blue.","Light cyan.","Light gray/dark white.","Light green.","Light magenta.","Light red.","Light yellow.","Maximum brightness (i.e. white).","Maximum gray-scale brightness (white).","Minimum brightness (i.e. dark).","Minimum gray-scale brightness (0, black).","RGB color (Red-Green-Blue). Not very portable, but some …","An RGB color ((Red-Green-Blue)). This is an additive color …","Updates the background of a pair of colors (<code>Color2</code>) to the …","Updates the foreground of a pair of colors (<code>Color2</code>) to the …","A function that updates a <code>Color2</code>.","White","Approximate the brightness of the color.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The background of this pair.","Creates a color that is basic.","The blue channel of this RGB color. Higher values means …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the brightness of this color.","The code given to <code>GrayColor</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a color that is CMY.","The resulting code of the color.","Returns the color code.","The code given to <code>BasicColor</code>.","","","","","","","","","","","","","","","","The level of cyan component.","The cyan channel given to <code>CmyColor</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The foreground of this pair.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Creates a color that is gray-scale.","The green channel of this RGB color. Higher values means …","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts to en <code>enum</code> representation.","Level of brightness. The lower the brightness, the darker …","The level of magenta component.","The magenta channel given to <code>CmyColor</code>.","Creates a new <code>CmyColor</code> given its components.","Creates a new gray-scale color given its brightness.","Just a convenience method for creating color pairs with …","","","","","","","","","","","","","","","","","","","","","","","","","The red channel of this RGB color. Higher values means …","Set the approximate brightness of the color.","","","","","","","","Sets the cyan component.","Sets the magenta component.","Sets the yellow component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>CmyColor</code> given its components. Returns an …","Creates a new gray-scale color given its brightness. …","","","","","","","","","","","","","","","","","","","Receives a pair of color and yields a new one.","","","","","","","","Like <code>Self::set_approx_brightness</code> but takes and returns <code>self</code>","Like <code>Self::set_approx_brightness</code> but takes and returns <code>self</code>","The level of yellow component.","The yellow channel given to <code>CmyColor</code>.","A single scalar coordinate used in the terminal.","A coordinate made of two components <code>x</code> and <code>y</code>. The <code>x</code> axis …","Error returned by the terminal handle initialization when …","Terminal services already running.","This is an error that may happen accessing clipboard.","Error returned when accessing the clipboard fails.","A custom error, stored in a trait object.","An error that may happen when executing an operation on …","The kind of an error that may happen when executing a …","This is a formatting error.","This is an IO error.","This is an error from a bad integer parse attempt.","Error returned by the events handler when the listener …","Event listener and/or renderer disconnected.","This is an error from failing to join a task, either …","Error that might happen joining a task.","This is an string from UTF-8 conversion error.","","","","","","","","","","","","","Returns this error kind as a trait object.","Returns this error as a trait object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Returns the kind of the error.","Creates an error from its kind.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The backspace key","A regular, unicode character. E.g. <code>Key::Char(&#39;a&#39;)</code> or …","The down arrow key.","The enter key. Preferred over <code>Char(&#39;\\\\n&#39;)</code>.","Epoch integer for our channel’s versions. Hopefully, it …","The escape key.","A generic event type.","A supported pressed key.","User pressed key.","An event fired by a key pressed by the user.","The left arrow key.","User resized screen.","An event fired by a resize of the screen.","The right arrow key.","The up arrow key.","Whether alt is modifiying the key (pressed).","","","","","","","","","","","","","","","","","","","","","","","","","Whether control is modifiying the key (pressed).","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Key pressed by the user.","Whether shift is modifiying the key (pressed).","New dimensions of the screen. If set to <code>None</code>, then the …","","","","","","","","","","","","","","","","","A locked screen terminal with exclusive access to it. With …","","","","","Sets every <code>Tile</code> into a whitespace grapheme with the given …","","Returns the argument unchanged.","Gets the attributes of a given <code>Tile</code>, regardless of being …","Calls <code>U::from(self)</code>.","","","","Returns the minimum size required for the screen.","Applies an update function to a <code>Tile</code>. An update function …","Returns the current size of the screen.","Prints a grapheme-encoded text (a <code>TermString</code>) using some …","","","","Returns whether the stored size is the actual size and the …","Error generated when validating a <code>TermString</code> or a grapheme …","The given input string starts with a diacritic.","The given input string starts with a diacritic.","A terminal grapheme cluster.","Specifies usable indices for a <code>TermString</code>.","Error generated when validating a <code>TermString</code> and the …","Invalid control character found in the given input string.","Invalid control character found in the given input string.","Error generated when validating a grapheme (<code>TermGrapheme</code>) …","The given input is not made of only one grapheme (…","Output of the indexing operation.","A terminal string.","Either a string or a grapheme reference. Used by …","A grapheme cluster. Represents what a human visually sees …","Possible errors when creating a <code>TermGrapheme</code>.","Graphical string: a string valid to be printed on a …","Possible errors when creating a <code>TermGrapheme</code>.","Iterator over the <code>TermString</code>’s grapheme cluster (…","Iterator only over the grapheme cluster (<code>TermGrapheme</code>)s of …","","","","","","","","","","","","","","","","","","","","","","","","","Converts into a reference to a plain string.","Converts into a reference of a plain string.","The inherent string under this <code>TermString</code> or this …","Returns the underlying string buffer of this <code>TermGrapheme</code>.","If it this is a <code>TermString</code>, return it; if this is a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Counts how many grapheme clusters the string contains by …","","","","Returns the grapheme for the space “ “.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","De-slices a sub-<code>TermString</code> into the original buffer.","Tries to index the <code>TermString</code> and returns <code>None</code> if out of …","Indexes the string by returning <code>None</code> if out of bounds. …","","","","Indexes the <code>TermString</code> or panics if out of bounds.","Indexes the string by panicking if out of bounds. <code>usize</code> …","Iterates over indices and grapheme clusters of this string.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts into the underlying string buffer of this …","Iterates only over graphemes of this string.","","Builds a new graphical string.","Builds a new grapheme cluster. The argument must be …","Creates a new <code>TermString</code>, but replaces error with the …","Creates a new <code>TermGrapheme</code>, but replaces error with the …","","","","","","","","The position in bytes of the invalid character.","Returns the grapheme for the space “ “. This is the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Alignment, margin and other settings for texts.","Sets alignment. Numerator and align_denomominator are used …","Alignment align_denomominator.","Alignment align_numererator.","","","","","Sets bottom margin.","Bottom margin.","","","Updates the style to the given color updater.","Foreground-background color pair.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Sets left margin.","Left margin.","Makes a coordinate pair that contains the margin …","Makes a coordinate pair that contains the margin …","Makes a coordinate pair that contains the maxima sizes.","Makes a coordinate pair that contains the minima sizes.","Makes a coordinate pair that contains the actual sizes.","Sets maximum height.","Maximum height.","Sets maximum width.","Maximum width.","Sets minimum height.","Minimum height.","Sets minimum width.","Minimum width.","Sets right margin.","Right margin.","","Sets top margin.","Top margin.","","","","Creates a style with the given colors.","A terminal configuration builder.","An application’s handle to the terminal.","A guard on a locked terminal handle.","","","","","","","","","","","","","Clears the event channel. After this call, the current …","","","","","","Reads the last event. When this method is called, the …","Interval waited when a poll for an event fails.","","","","Builds the rate that the screen is updated.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Listens for an event and only finishes when an event …","Locks the terminal immediately (except it has to wait for …","Builds the minimum screen size for the application.","Initializes this configuration builder.","Starts the application and gives it a handle to the …","Runs the terminal application with the default settings, …","Returns a locked handle to the screen.","","","","","","","","","","","","Waits for user input before continuing, but waits for some …","Updates a <code>Tile</code> to set the background to the given color, …","Updates a <code>Tile</code> to set the foreground to the given …","A <code>Tile</code> in the terminal, i.e. a single character with …","A function that updates a <code>Tile</code>.","","","","","","","","","","","","","","","","","","","","","","Foreground color to be contrasted with the background.","Background color to be contrasted with the foreground.","The foreground-background pair of colors.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Grapheme shown in this <code>Tile</code>.","The new displayed grapheme.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Receives a mutable reference to a tile and updates it.","","","","An INFO dialong: just shows a message.","This module exports a simple input dialog and related …","This module exports items related to menus in the UI, such …","An info dialog, with just an Ok option.","","","Color of the background.","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","Long text message to be shown.","Creates a dialog with default style settings.","Label showed by the “OK” button (default “OK”).","Runs this dialog showing it to the user, awaiting OK!","Colors shown with the selected option.","Settings such as margin and alignment.","Title to be shown.","Colors shown with the title.","Position of the title in height.","","","","","Input text prompt is going to be cancelled.","A dialog asking for user input, possibly filtered.","A selected item/option of the input dialog.","Input text prompt is going to be successful.","","","","","Background of non-text areas.","","","","","Input box colors.","Initial buffer of the input dialog.","Label showed by the “CANCEL” button (default “CANCEL…","","","","","Input box’s cursor colors.","","","","","","","","","Filter of the valid characters for the input dialog’s …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Maximum size of the input box.","Creates a new input dialog, with the given title, initial …","Label showed by the “OK” button (default “OK”).","Padding lines inserted after the box.","Padding lines inserted after the OK option.","Padding lines inserted after the title.","Gets user input without possibility of canceling it, with …","Gets user input with the user possibly canceling it, with …","Gets user input with the user possibly canceling it, with …","Gets user input without possibility of canceling it, with …","Selected option colors.","The title of the input dialog.","Colors of the title.","Position of the title.","","","","","","","","","Unselected option colors.","Returned when user cancels this action.","An item of a prompt about a dangerous action.","A menu, with a list of options and potentially a cancel …","A trait representing a menu option.","Returned when user confirms this action.","Yields all options of a menu over a dangerous prompt.","Colors for the arrows.","","","","","Color of the background of no text.","","","","","Label showed by the “CANCEL” button (default “CANCEL…","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns the display name of this option.","","Creates a new menu with default styles.","A list of options.","Number of lines padded after an option.","Number of lines padded after the title.","Asks for the user to select an item of the menu without …","Asks for the user to select an item of the menu with a …","Asks for the user to select an item of the menu with a …","Asks for the user to select an item of the menu without …","Colors for selected options.","The title shown above the menu.","Colors for the title.","Number of lines padded before the title.","","","","","","","","","Colors for unselected options."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,8,11,0,5,0,8,0,0,0,0,0,0,0,5,5,5,5,5,5,5,11,8,0,7,5,5,5,5,5,5,5,4,7,4,7,11,0,0,0,0,5,94,5,6,7,8,9,10,11,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,17,9,10,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,7,15,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,9,6,9,14,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,6,16,4,17,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,4,4,4,5,5,5,6,6,6,7,7,7,8,8,8,9,9,9,10,10,10,17,17,17,18,18,18,19,19,19,20,20,20,21,21,21,22,22,22,23,23,23,11,11,11,14,14,15,15,16,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,17,14,15,16,4,5,6,7,8,8,8,8,8,9,9,9,9,9,10,17,18,19,20,21,22,23,11,11,11,11,11,11,11,9,10,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,9,4,6,16,6,7,17,4,5,6,7,8,9,10,17,11,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,10,94,5,6,7,8,9,10,11,6,6,6,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,14,15,16,14,15,16,4,5,5,6,7,8,9,10,17,18,19,20,21,22,23,11,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,6,7,14,15,16,4,5,6,7,8,9,10,17,18,19,20,21,22,23,11,56,17,18,19,20,21,22,23,94,94,6,16,0,0,0,37,37,0,37,0,0,37,37,37,0,37,37,0,37,40,41,2,42,37,39,40,41,2,42,37,39,37,39,40,41,2,42,37,39,40,41,2,42,37,39,40,41,40,41,40,40,41,41,2,2,42,42,37,39,39,40,41,2,42,37,37,37,37,37,37,37,37,37,37,39,39,39,39,39,39,39,39,39,39,39,40,41,2,42,37,39,40,41,2,42,37,39,40,41,2,40,41,2,42,37,39,39,39,42,39,40,41,40,41,2,42,39,40,41,2,42,37,39,40,41,2,42,37,39,40,41,2,42,37,39,47,47,47,47,0,47,0,0,50,0,47,50,0,47,47,48,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,48,47,48,49,50,47,47,47,48,48,48,49,49,49,50,50,50,47,48,49,50,47,48,49,50,50,50,47,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,48,48,49,47,48,49,50,47,48,49,50,47,48,49,50,47,48,49,50,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,66,67,61,0,0,66,67,0,66,72,61,0,0,0,0,0,0,0,69,70,63,64,65,66,67,55,62,61,69,70,63,64,65,66,67,55,62,61,55,55,61,61,55,62,61,62,61,69,70,63,64,65,66,67,55,62,61,69,70,63,64,65,66,67,55,62,61,63,64,65,66,67,55,62,61,63,64,65,66,67,55,62,61,55,62,61,55,62,61,55,63,64,55,62,55,62,61,55,62,61,55,55,55,62,62,62,61,61,61,69,70,63,63,64,64,65,65,66,66,67,67,55,55,62,62,61,69,70,63,64,65,66,66,66,66,66,67,67,67,55,62,61,61,61,55,55,55,55,55,55,72,55,55,62,61,72,55,55,69,70,63,64,65,66,67,55,62,61,69,70,63,64,65,66,67,55,62,61,69,70,63,64,65,66,67,55,62,61,69,70,63,64,65,66,67,55,62,61,69,70,55,62,55,55,55,62,55,62,69,70,69,70,55,62,61,65,62,63,64,65,66,67,55,62,61,63,64,65,66,67,55,62,69,70,63,64,65,66,67,55,55,55,62,62,62,61,69,70,63,64,65,66,67,55,62,61,69,70,63,64,65,66,67,55,62,61,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,0,0,79,78,80,79,78,80,79,78,80,79,78,80,78,79,78,79,78,79,80,79,79,78,80,79,79,78,80,79,78,80,79,78,80,79,78,80,79,78,80,78,78,79,79,79,78,80,79,78,79,78,80,79,78,80,79,78,80,78,0,0,0,0,53,84,85,53,84,85,53,84,85,53,84,85,53,84,85,53,84,85,53,84,85,84,85,53,53,84,85,53,53,84,85,53,53,53,84,84,84,85,85,85,53,84,85,53,84,85,53,84,53,84,85,53,84,85,53,84,85,53,84,85,53,84,85,53,84,85,53,84,85,53,84,85,53,84,85,53,84,85,54,53,84,85,0,0,0,0,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,87,0,0,87,87,89,87,89,89,87,89,87,89,89,89,89,87,89,87,89,89,87,89,87,87,87,89,89,89,89,87,89,87,89,87,89,87,89,87,89,87,89,87,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,87,89,87,89,87,89,87,89,89,90,0,0,0,90,90,93,93,90,93,90,93,93,90,93,90,93,93,90,93,90,93,90,93,93,93,90,90,90,93,90,93,90,93,93,90,93,90,93,90,93,90,92,90,93,93,93,93,93,93,93,93,93,93,93,93,93,90,93,90,93,90,93,90,93],"f":[0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,[[],[[3,[1,2]]]],[1,[[3,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[5,4],[6,4],[7,4],[8,4],[9,4],[10,4],[11,4],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[5,9],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,13],0,[14,14],[15,15],[16,16],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[11,11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[4,4],24],[[5,5],24],[[6,6],24],[[7,7],24],[[8,8],24],[[9,9],24],[[10,10],24],[[17,17],24],[[18,18],24],[[19,19],24],[[20,20],24],[[21,21],24],[[22,22],24],[[23,23],24],[[11,11],24],[6,9],[6,13],[9,13],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[6,13],0,[[],4],[[],17],[[14,14],25],[[15,15],25],[[16,16],25],[[4,4],25],[[5,5],25],[[6,6],25],[[7,7],25],[[8,8],25],[[9,9],25],[[10,10],25],[[17,17],25],[[18,18],25],[[19,19],25],[[20,20],25],[[21,21],25],[[22,22],25],[[23,23],25],[[11,11],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[14,26],27],[[14,26],27],[[15,26],27],[[15,26],27],[[16,26],27],[[16,26],27],[[4,26],27],[[5,26],27],[[6,26],27],[[7,26],27],[[8,26],27],[[9,26],27],[[10,26],27],[[17,26],27],[[18,26],27],[[19,26],27],[[20,26],27],[[21,26],27],[[22,26],27],[[23,26],27],[[11,26],27],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,8],[9,8],[5,8],[7,8],[6,9],[7,9],[5,9],[8,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,11],[6,11],[9,11],[[]],[10,11],[7,11],[8,11],[7,9],0,[[4,28]],[[5,28]],[[6,28]],[[7,28]],[[8,28]],[[9,28]],[[10,28]],[[17,28]],[[18,28]],[[19,28]],[[20,28]],[[21,28]],[[22,28]],[[23,28]],[[11,28]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[9,8],0,[6,13],0,[[13,13,13],6],[13,7],[[[33,[11]],[33,[11]]],17],[4],[5],[6],[7],[8],[9],[10],[17],[11],[[4,4],[[34,[24]]]],[[5,5],[[34,[24]]]],[[6,6],[[34,[24]]]],[[7,7],[[34,[24]]]],[[8,8],[[34,[24]]]],[[9,9],[[34,[24]]]],[[10,10],[[34,[24]]]],[[17,17],[[34,[24]]]],[[18,18],[[34,[24]]]],[[19,19],[[34,[24]]]],[[20,20],[[34,[24]]]],[[21,21],[[34,[24]]]],[[22,22],[[34,[24]]]],[[23,23],[[34,[24]]]],[[11,11],[[34,[24]]]],0,[4],[[5,4]],[[6,4]],[[7,4]],[[8,4]],[[9,4]],[[10,4]],[[11,4]],[[6,13],6],[[6,13],6],[[6,13],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],3],[[],3],[[],3],[[],3],[13,[[3,[5]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[13,13,13],[[3,[6,16]]]],[13,[[3,[7,15]]]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[17,17],[[17,17],17],[[18,17],17],[[19,17],17],[[20,17],17],[[21,17],17],[[22,17],17],[[23,17],17],[[36,4],36],[[36,4],36],[6,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[37,38],[39,38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,40],[41,41],[[]],[[]],[[40,26],27],[[40,26],27],[[41,26],27],[[41,26],27],[[2,26],27],[[2,26],27],[[42,26],27],[[42,26],27],[[37,26],27],[[39,26],27],[[39,26],27],[[]],[[]],[[]],[[]],[[]],[[[30,[38]]],37],[43,37],[42,37],[2,37],[41,37],[44,37],[45,37],[46,37],[40,37],[42,39],[43,39],[40,39],[37,39],[44,39],[41,39],[2,39],[45,39],[[]],[46,39],[[[30,[38]]],39],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[39,37],[37,39],[42,[[34,[38]]]],[39,[[34,[38]]]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[48,48],[49,49],[50,50],[[]],[[]],[[]],[[]],0,[[47,47],25],[[48,48],25],[[49,49],25],[[50,50],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[47,26],27],[[48,26],27],[[49,26],27],[[50,26],27],[[]],[[]],[[]],[48,50],[49,50],[[]],[[47,28]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],0,0,0,[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],35],[[],35],[[],35],[[],35],0,[[],12],[[],12],[[]],[[]],[[51,11]],[[51,26],27],[[]],[[51,52],53],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[51,52],[[51,52,54]],[51,52],[[51,55,[57,[56]]],58],[[],3],[[],3],[[],35],[51,25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[55,59],[55,60],[61,55],[61,60],[55,60],[62,60],[61,60],[62,55],[61,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[63,63],[64,64],[65,65],[66,66],[67,67],[55,55],[62,62],[61,61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[55,55],24],[[62,62],24],[[61,61],24],[[],24],[[],24],[[],24],[55,68],[[],63],[[],64],[[],55],[[],62],[55],[62],[61],[[55,55],25],[[62,62],25],[[61,61],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[69,26],27],[[70,26],27],[[63,26],27],[[63,26],27],[[64,26],27],[[64,26],27],[[65,26],27],[[65,26],27],[[66,26],27],[[66,26],27],[[67,26],27],[[67,26],27],[[55,26],27],[[55,26],27],[[62,26],27],[[62,26],27],[[61,26],27],[[]],[[]],[[]],[[]],[[]],[63,66],[65,66],[[]],[64,66],[67,66],[63,67],[65,67],[[]],[[]],[[]],[55,61],[62,61],[[]],[71,55],[71,55],[71,55],[71,55],[71,55],[55,55],[55,34],[[55,72],34],[[55,28]],[[62,28]],[[61,28]],[55],[[55,72]],[55,69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[]],[[]],[55],[62,55],[55,70],[55,55],[[[73,[60]]],[[3,[55,67]]]],[[[0,[[73,[60]],[33,[1]]]]],[[3,[62,66]]]],[[[73,[60]]],55],[[[0,[[33,[1]],[73,[60]]]]],62],[69,34],[70,34],[69,34],[70,34],[[55,55],[[34,[24]]]],[[62,62],[[34,[24]]]],[[61,61],[[34,[24]]]],0,[[],62],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[60,[[3,[55]]]],[1,[[3,[55]]]],[[],3],[60,[[3,[62]]]],[[],3],[1,[[3,[62]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],0,[[[57,[56]],58,58],[[57,[56]]]],0,0,[[],12],[[],12],[[]],[[]],[[[57,[56]],58],[[57,[56]]]],0,[[[57,[[0,[56,74]]]]],[[57,[[0,[56,74]]]]]],[[]],[[[57,[56]],56],[[57,[56]]]],0,[[],57],[[[57,[[0,[56,75]]]],[57,[[0,[56,75]]]]],25],[[],25],[[],25],[[],25],[[[57,[[0,[56,76]]]],26],27],[[]],[[[57,[[0,[56,77]]]],28]],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[57,[56]],58],[[57,[56]]]],0,[[[57,[56]]],52],[[[57,[56]]],52],[[[57,[56]]],52],[[[57,[56]]],52],[[[57,[56]],52],52],[[[57,[56]],58],[[57,[56]]]],0,[[[57,[56]],58],[[57,[56]]]],0,[[[57,[56]],58],[[57,[56]]]],0,[[[57,[56]],58],[[57,[56]]]],0,[[[57,[56]],58],[[57,[56]]]],0,[[]],[[[57,[56]],58],[[57,[56]]]],0,[[],3],[[],3],[[],35],[56,[[57,[56]]]],0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[78],[79,79],[78,78],[[]],[[]],[[],79],[80,[[34,[50]]]],[[79,81],79],[[79,26],27],[[78,26],27],[[80,26],27],[[79,81],79],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[78,[[3,[80,41]]]],[78,[[3,[80,41]]]],[[79,52],79],[[],79],[[79,[0,[82,83]]],[[3,[83,39]]]],[[[0,[82,83]]],[[3,[83,39]]]],[80,51],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],35],[[],35],[[],35],[[78,81],[[3,[80,41]]]],0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[53,53],[84,84],[85,85],[[]],[[]],[[]],[[53,53],24],[[84,84],24],[[85,85],24],0,0,0,[[],24],[[],24],[[],24],[[],53],[[53,53],25],[[84,84],25],[[85,85],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[53,26],27],[[84,26],27],[[85,26],27],[[]],[[]],[[]],0,0,[[53,28]],[[84,28]],[[85,28]],[[]],[[]],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[53,53],[[34,[24]]]],[[84,84],[[34,[24]]]],[[85,85],[[34,[24]]]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],35],[[],35],[[],35],[53],[[53,53]],[[84,53]],[[85,53]],0,0,0,0,[[],12],[[],12],0,[[]],[[]],[86,86],[[]],[[86,86],25],[[],25],[[],25],[[],25],[[86,26],27],[[]],[[86,28]],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],0,[[55,55],86],0,[[86,78],[[3,[39]]]],0,0,0,0,0,[[]],[[],3],[[],3],[[],35],0,0,0,0,[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[[]],[[]],0,0,0,[87,87],[[[89,[[0,[88,74]]]]],[[89,[[0,[88,74]]]]]],[[]],[[]],0,[[87,87],25],[[[89,[[0,[88,75]]]],[89,[[0,[88,75]]]]],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[87,26],27],[[[89,[[0,[88,76]]]],26],27],[[]],[[]],[[87,28]],[[[89,[[0,[88,77]]]],28]],[[]],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],0,[[55,55,58,88],[[89,[88]]]],0,0,0,0,[[[89,[88]],78],[[3,[55,39]]]],[[[89,[88]],78,68,87],[[3,[[34,[55]],39]]]],[[[89,[88]],78],[[3,[[34,[55]],39]]]],[[[89,[88]],78,68],[[3,[55,39]]]],0,0,0,0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],35],[[],35],0,0,0,0,0,0,[[],[[91,[90]]]],0,[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[[]],[[]],0,[[[93,[[0,[92,74]]]]],[[93,[[0,[92,74]]]]]],[90,90],[[]],[[]],[[[93,[[0,[92,75]]]],[93,[[0,[92,75]]]]],25],[[90,90],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[[93,[[0,[92,76]]]],26],27],[[90,26],27],[[]],[[]],[[[93,[[0,[92,77]]]],28]],[[]],[[]],[[[30,[29]]],[[30,[12,29]]]],[[[30,[29]]],[[30,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[31,[29]]],[[31,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[[32,[29]]],[[32,[12,29]]]],[[],55],[90,55],[[55,[91,[92]]],[[93,[92]]]],0,0,0,[[[93,[92]],78],[[3,[68,39]]]],[[[93,[92]],78,68,25],[[3,[[34,[68]],39]]]],[[[93,[92]],78],[[3,[[34,[68]],39]]]],[[[93,[92]],78,68],[[3,[68,39]]]],0,0,0,0,[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],35],[[],35],0],"c":[],"p":[[3,"String"],[3,"ClipboardError"],[4,"Result"],[3,"Brightness"],[4,"BasicColor"],[3,"CmyColor"],[3,"GrayColor"],[4,"Color8BitKind"],[3,"Color8Bit"],[3,"RgbColor"],[4,"Color"],[8,"Any"],[15,"u8"],[3,"BadBasicColor"],[3,"BadGrayColor"],[3,"BadCmyColor"],[3,"Color2"],[3,"UpdateFg"],[3,"UpdateBg"],[3,"AdaptFgToBg"],[3,"AdaptBgToFg"],[3,"ContrastFgWithBg"],[3,"ContrastBgWithFg"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Into"],[4,"Option"],[3,"TypeId"],[8,"Sized"],[4,"ErrorKind"],[8,"Error"],[3,"Error"],[3,"AlreadyRunning"],[3,"ServicesOff"],[3,"TaskJoinError"],[3,"Error"],[3,"Error"],[3,"FromUtf8Error"],[3,"ParseIntError"],[4,"Key"],[3,"KeyEvent"],[3,"ResizeEvent"],[4,"Event"],[3,"Screen"],[6,"Vec2"],[3,"Tile"],[8,"Updater"],[3,"TermString"],[8,"Updater"],[3,"Style"],[6,"Coord"],[3,"Path"],[15,"str"],[4,"StringOrGraphm"],[3,"TermGrapheme"],[3,"DiacriticAtStart"],[3,"NotAGrapheme"],[3,"InvalidControl"],[4,"TermGraphemeError"],[4,"TermStringError"],[15,"usize"],[3,"TermStringIndices"],[3,"TermStringIter"],[8,"IntoIterator"],[8,"Index"],[8,"AsRef"],[8,"Clone"],[8,"PartialEq"],[8,"Debug"],[8,"Hash"],[3,"Terminal"],[3,"Builder"],[3,"TerminalGuard"],[3,"Duration"],[8,"FnOnce"],[8,"Send"],[3,"Foreground"],[3,"Background"],[3,"InfoDialog"],[4,"InputDialogItem"],[8,"FnMut"],[3,"InputDialog"],[4,"DangerPromptOption"],[3,"Vec"],[8,"MenuOption"],[3,"Menu"],[8,"ApproxBrightness"]]},\
"anyhow":{"doc":"github crates-io docs-rs","t":"DIDFGOLLOLLLLLLLKLLLLLLLLOLLCLLLLLLLLLLLLLLLLLLLLLLLLK","n":["Chain","Context","Error","Ok","Result","anyhow","as_ref","as_ref","bail","borrow","borrow","borrow_mut","borrow_mut","chain","clone","clone_into","context","context","default","deref","deref_mut","downcast","downcast_mut","downcast_ref","drop","ensure","fmt","fmt","format_err","from","from","from","from","into","into","into_iter","is","len","msg","new","new","next","next_back","root_cause","size_hint","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_context"],"q":[[0,"anyhow"]],"d":["Iterator of a chain of source errors.","Provides the <code>context</code> method for <code>Result</code>.","The <code>Error</code> type, a wrapper around a dynamic error type.","Equivalent to Ok::&lt;_, anyhow::Error&gt;(value).","<code>Result&lt;T, Error&gt;</code>","Construct an ad-hoc error from a string or existing non-…","","","Return early with an error.","","","","","An iterator of the chain of source errors contained by …","","","Wrap the error value with additional context.","Wrap the error value with additional context.","","","","Attempt to downcast the error object to a concrete type.","Downcast this error object by mutable reference.","Downcast this error object by reference.","","Return early with an error if a condition is not satisfied.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns true if <code>E</code> is the type held by this error object.","","Create a new error object from a printable error message.","Create a new error object from any error type.","","","","The lowest level cause of this error — this error’s …","","","","","","","","","","Wrap the error value with additional context that is …"],"i":[0,0,0,0,0,0,2,2,0,2,4,2,4,2,4,4,19,2,4,2,2,2,2,2,2,0,2,2,0,2,2,2,4,2,4,4,2,4,2,2,4,4,4,2,4,4,2,2,4,2,4,2,4,19],"f":[0,0,0,[[],1],0,0,[2,3],[2,3],0,[[]],[[]],[[]],[[]],[2,4],[4,4],[[]],[[[0,[5,6,7]]],[[1,[2]]]],[[2,[0,[5,6,7]]],2],[[],4],[2],[2],[2,[[9,[[0,[5,8,6,7]],2]]]],[2,[[10,[[0,[5,8,6,7]]]]]],[2,[[10,[[0,[5,8,6,7]]]]]],[2],0,[[2,11],12],[[2,11],12],0,[[]],[13],[[[0,[3,6,7]]],2],[[]],[[]],[[]],[[]],[2,14],[4,15],[[[0,[5,8,6,7]]],2],[[[0,[3,6,7]]],2],[3,4],[4,10],[4,10],[2,3],[4],[[]],[[],16],[[],9],[[],9],[[],9],[[],9],[[],17],[[],17],[18,[[1,[2]]]]],"c":[],"p":[[6,"Result"],[3,"Error"],[8,"Error"],[3,"Chain"],[8,"Display"],[8,"Send"],[8,"Sync"],[8,"Debug"],[4,"Result"],[4,"Option"],[3,"Formatter"],[6,"Result"],[15,"never"],[15,"bool"],[15,"usize"],[3,"String"],[3,"TypeId"],[8,"FnOnce"],[8,"Context"]]},\
"bitflags":{"doc":"Generate types for C-style flags with ergonomic APIs.","t":"SCIQSSDILLOKLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLALLLLLLALLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLDIILLLLLLFLLLKLFLLLK","n":["ALL","BitFlags","Bits","Bits","EMPTY","FLAGS","Flag","Flags","all","all","bitflags","bits","borrow","borrow_mut","complement","complement","contains","contains","difference","difference","empty","empty","from","from_bits","from_bits","from_bits_retain","from_bits_truncate","from_bits_truncate","from_name","from_name","insert","insert","intersection","intersection","intersects","intersects","into","is_all","is_all","is_empty","is_empty","is_named","is_unnamed","iter","iter","iter","iter_names","iter_names","name","new","parser","remove","remove","set","set","symmetric_difference","symmetric_difference","toggle","toggle","try_from","try_into","type_id","union","union","value","Iter","IterNames","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","into_iter","into_iter","next","next","remaining","try_from","try_from","try_into","try_into","type_id","type_id","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","fmt","from","from_str","into","invalid_hex_flag","invalid_named_flag","parse_hex","to_string","to_writer","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[65,"bitflags::iter"],[86,"bitflags::parser"]],"d":["A value with all bits set.","","A bits type that can be used as storage for a flags type.","The underlying bits type.","A value with all bits unset.","The set of defined flags.","A defined flags value that may be named or unnamed.","A set of defined flags using a bits type as storage.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Generate a flags type.","Get the underlying bits value.","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether the flag is named.","Whether the flag is unnamed.","Yield the bits of a source flags value in a set of …","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Get the name of this flag.","Define a flag.","Parsing flags from text.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","Call <code>Flags::insert</code> when <code>value</code> is <code>true</code> or <code>Flags::remove</code> …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the flags value of this flag.","An iterator over flags values.","An iterator over flags values.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get a flags value of any remaining bits that haven’t …","","","","","","","An error encountered while parsing flags from text.","Parse a value from a hex string.","Encode a value as a hex string.","","","A hex or named flag wasn’t found between separators.","","","Returns the argument unchanged.","Parse a flags value from text.","Calls <code>U::from(self)</code>.","An invalid hex flag was encountered.","A named flag that doesn’t correspond to any on the flags …","Parse the value from hex.","","Write a flags value as text.","","","","Write the value as hex."],"i":[18,0,0,10,18,10,0,0,10,10,0,10,5,5,10,10,10,10,10,10,10,10,5,10,10,10,10,10,10,10,10,10,10,10,10,10,5,10,10,10,10,5,5,0,10,10,10,10,5,5,0,10,10,10,10,10,10,10,10,5,5,5,10,10,5,0,0,6,7,6,7,6,7,6,7,6,7,6,7,7,6,7,6,7,6,7,0,0,0,11,11,11,11,11,11,0,11,11,11,19,11,0,11,11,11,20],"f":[0,0,0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[1,1],2],[[1,1],2],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[]],[[]],[[]],[4,3],[4,3],[[1,1]],[[1,1]],[[]],[[]],[[1,1],2],[[1,1],2],[[]],[[],2],[[],2],[[],2],[[],2],[5,2],[5,2],0,[[],6],[[],6],[[],7],[[],7],[5,4],[4,5],0,[[1,1]],[[1,1]],[[1,1,2]],[[1,1,2]],[[]],[[]],[[1,1]],[[1,1]],[[],8],[[],8],[[],9],[[]],[[]],[5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[10]]],3],[[[7,[10]]],3],[7],[[],8],[[],8],[[],8],[[],8],[[],9],[[],9],0,0,0,[[]],[[]],[[],11],[[11,12],13],[[11,12],13],[[]],[4,[[8,[10,11]]]],[[]],[14,11],[14,11],[4,[[8,[1,11]]]],[[],15],[[10,16],[[8,[17]]]],[[],8],[[],8],[[],9],[16,13]],"c":[],"p":[[8,"Sized"],[15,"bool"],[4,"Option"],[15,"str"],[3,"Flag"],[3,"Iter"],[3,"IterNames"],[4,"Result"],[3,"TypeId"],[8,"Flags"],[3,"ParseError"],[3,"Formatter"],[6,"Result"],[8,"Display"],[3,"String"],[8,"Write"],[3,"Error"],[8,"Bits"],[8,"ParseHex"],[8,"WriteHex"]]},\
"bytecount":{"doc":"count occurrences of a given byte, or the number of UTF-8 …","t":"FFFFF","n":["count","naive_count","naive_count_32","naive_num_chars","num_chars"],"q":[[0,"bytecount"]],"d":["Count occurrences of a byte in a slice of bytes, fast","Count occurrences of a byte in a slice of bytes, simple","Count up to <code>(2^32)-1</code> occurrences of a byte in a slice of …","Count the number of UTF-8 encoded Unicode codepoints in a …","Count the number of UTF-8 encoded Unicode codepoints in a …"],"i":[0,0,0,0,0],"f":[[[[2,[1]],1],3],[[[2,[1]],1],3],[[[2,[1]],1],3],[[[2,[1]]],3],[[[2,[1]]],3]],"c":[],"p":[[15,"u8"],[15,"slice"],[15,"usize"]]},\
"bytes":{"doc":"Provides abstractions for working with bytes.","t":"CCDDLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIDDDDDDDKLLKLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Buf","BufMut","Bytes","BytesMut","advance","advance","advance_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buf","capacity","chunk","chunk","chunk_mut","clear","clear","clone","clone","clone_into","clone_into","cmp","cmp","copy_from_slice","copy_to_bytes","copy_to_bytes","default","default","deref","deref","deref_mut","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","extend","extend","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","fmt","freeze","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_static","hash","hash","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","len","len","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","put","put_bytes","put_slice","remaining","remaining","remaining_mut","reserve","resize","set_len","slice","slice_ref","spare_capacity_mut","split","split_off","split_off","split_to","split_to","to_owned","to_owned","truncate","truncate","try_from","try_from","try_into","try_into","type_id","type_id","unsplit","with_capacity","write_fmt","write_str","zeroed","Buf","BufMut","Chain","IntoIter","Limit","Reader","Take","UninitSlice","Writer","advance","advance","advance","advance_mut","advance_mut","advance_mut","as_mut_ptr","as_uninit_slice_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chain","chain","chain_mut","chain_mut","chunk","chunk","chunk","chunk_mut","chunk_mut","chunk_mut","chunks_vectored","chunks_vectored","chunks_vectored","consume","copy_from_slice","copy_to_bytes","copy_to_bytes","copy_to_bytes","copy_to_bytes","copy_to_slice","copy_to_slice","fill_buf","first_mut","first_ref","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw_parts_mut","get_f32","get_f32","get_f32_le","get_f32_le","get_f32_ne","get_f32_ne","get_f64","get_f64","get_f64_le","get_f64_le","get_f64_ne","get_f64_ne","get_i128","get_i128","get_i128_le","get_i128_le","get_i128_ne","get_i128_ne","get_i16","get_i16","get_i16_le","get_i16_le","get_i16_ne","get_i16_ne","get_i32","get_i32","get_i32_le","get_i32_le","get_i32_ne","get_i32_ne","get_i64","get_i64","get_i64_le","get_i64_le","get_i64_ne","get_i64_ne","get_i8","get_i8","get_int","get_int","get_int_le","get_int_le","get_int_ne","get_int_ne","get_mut","get_mut","get_mut","get_mut","get_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_u128","get_u128","get_u128_le","get_u128_le","get_u128_ne","get_u128_ne","get_u16","get_u16","get_u16_le","get_u16_le","get_u16_ne","get_u16_ne","get_u32","get_u32","get_u32_le","get_u32_le","get_u32_ne","get_u32_ne","get_u64","get_u64","get_u64_le","get_u64_le","get_u64_ne","get_u64_ne","get_u8","get_u8","get_uint","get_uint","get_uint_le","get_uint_le","get_uint_ne","get_uint_ne","has_remaining","has_remaining","has_remaining_mut","has_remaining_mut","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","last_mut","last_ref","len","limit","limit","limit","limit","new","new","next","put","put","put_bytes","put_bytes","put_f32","put_f32","put_f32_le","put_f32_le","put_f32_ne","put_f32_ne","put_f64","put_f64","put_f64_le","put_f64_le","put_f64_ne","put_f64_ne","put_i128","put_i128","put_i128_le","put_i128_le","put_i128_ne","put_i128_ne","put_i16","put_i16","put_i16_le","put_i16_le","put_i16_ne","put_i16_ne","put_i32","put_i32","put_i32_le","put_i32_le","put_i32_ne","put_i32_ne","put_i64","put_i64","put_i64_le","put_i64_le","put_i64_ne","put_i64_ne","put_i8","put_i8","put_int","put_int","put_int_le","put_int_le","put_int_ne","put_int_ne","put_slice","put_slice","put_u128","put_u128","put_u128_le","put_u128_le","put_u128_ne","put_u128_ne","put_u16","put_u16","put_u16_le","put_u16_le","put_u16_ne","put_u16_ne","put_u32","put_u32","put_u32_le","put_u32_le","put_u32_ne","put_u32_ne","put_u64","put_u64","put_u64_le","put_u64_le","put_u64_ne","put_u64_ne","put_u8","put_u8","put_uint","put_uint","put_uint_le","put_uint_le","put_uint_ne","put_uint_ne","read","reader","reader","remaining","remaining","remaining","remaining_mut","remaining_mut","remaining_mut","set_limit","set_limit","size_hint","take","take","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uninit","write","write_byte","writer","writer"],"q":[[0,"bytes"],[139,"bytes::buf"]],"d":["","","A cheaply cloneable and sliceable chunk of contiguous …","A unique reference to a contiguous slice of memory.","","","","","","","","","","","","","","Utilities for working with buffers.","Returns the number of bytes the <code>BytesMut</code> can hold without …","","","","Clears the buffer, removing all data.","Clears the buffer, removing all data. Existing capacity is …","","","","","","","Creates <code>Bytes</code> instance from slice, by copying it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Appends given bytes to this <code>BytesMut</code>.","","","","","","","Converts <code>self</code> into an immutable <code>Bytes</code>.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Creates a new <code>Bytes</code> from a static slice.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Returns true if the <code>Bytes</code> has a length of 0.","Returns true if the <code>BytesMut</code> has a length of 0.","Returns the number of bytes contained in this <code>Bytes</code>.","Returns the number of bytes contained in this <code>BytesMut</code>.","Creates a new empty <code>Bytes</code>.","Creates a new <code>BytesMut</code> with default capacity.","","","","","","","","","","","","","","","","","","","Reserves capacity for at least <code>additional</code> more bytes to be …","Resizes the buffer so that <code>len</code> is equal to <code>new_len</code>.","Sets the length of the buffer.","Returns a slice of self for the provided range.","Returns a slice of self that is equivalent to the given …","Returns the remaining spare capacity of the buffer as a …","Removes the bytes from the current view, returning them in …","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","Splits the buffer into two at the given index.","","","Shortens the buffer, keeping the first <code>len</code> bytes and …","Shortens the buffer, keeping the first <code>len</code> bytes and …","","","","","","","Absorbs a <code>BytesMut</code> that was previously split off.","Creates a new <code>BytesMut</code> with the specified capacity.","","","Creates a new <code>BytesMut</code>, which is initialized with zero.","Read bytes from a buffer.","A trait for values that provide sequential write access to …","A <code>Chain</code> sequences two buffers.","Iterator over the bytes contained by the buffer.","A <code>BufMut</code> adapter which limits the amount of bytes that can …","A <code>Buf</code> adapter which implements <code>io::Read</code> for the inner …","A <code>Buf</code> adapter which limits the bytes read from an …","Uninitialized byte slice.","A <code>BufMut</code> adapter which implements <code>io::Write</code> for the inner …","Advance the internal cursor of the Buf","","","Advance the internal cursor of the BufMut","","","Return a raw pointer to the slice’s buffer.","Return a <code>&amp;mut [MaybeUninit&lt;u8&gt;]</code> to this slice’s buffer.","","","","","","","","","","","","","","","Creates an adaptor which will chain this buffer with …","Creates an adaptor which will chain this buffer with …","Creates an adapter which will chain this buffer with …","Creates an adapter which will chain this buffer with …","Returns a slice starting at the current position and of …","","","Returns a mutable slice starting at the current BufMut …","","","Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>…","Fills <code>dst</code> with potentially multiple slices starting at <code>self</code>…","","","Copies bytes  from <code>src</code> into <code>self</code>.","Consumes <code>len</code> bytes inside self and returns new instance of …","Consumes <code>len</code> bytes inside self and returns new instance of …","","","Copies bytes from <code>self</code> into <code>dst</code>.","Copies bytes from <code>self</code> into <code>dst</code>.","","Gets a mutable reference to the first underlying <code>Buf</code>.","Gets a reference to the first underlying <code>Buf</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>&amp;mut UninitSlice</code> from a pointer and a length.","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 single-precision (4 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets an IEEE754 double-precision (8 bytes) floating point …","Gets a signed 128 bit integer from <code>self</code> in big-endian byte …","Gets a signed 128 bit integer from <code>self</code> in big-endian byte …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 128 bit integer from <code>self</code> in little-endian …","Gets a signed 128 bit integer from <code>self</code> in native-endian …","Gets a signed 128 bit integer from <code>self</code> in native-endian …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in big-endian byte …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in little-endian …","Gets a signed 16 bit integer from <code>self</code> in native-endian …","Gets a signed 16 bit integer from <code>self</code> in native-endian …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in big-endian byte …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in little-endian …","Gets a signed 32 bit integer from <code>self</code> in native-endian …","Gets a signed 32 bit integer from <code>self</code> in native-endian …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in big-endian byte …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in little-endian …","Gets a signed 64 bit integer from <code>self</code> in native-endian …","Gets a signed 64 bit integer from <code>self</code> in native-endian …","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed 8 bit integer from <code>self</code>.","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in big-endian byte …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a signed n-byte integer from <code>self</code> in little-endian …","Gets a signed n-byte integer from <code>self</code> in native-endian …","Gets a signed n-byte integer from <code>self</code> in native-endian …","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>BufMut</code>.","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>Buf</code>.","Gets a mutable reference to the underlying <code>BufMut</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>BufMut</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>Buf</code>.","Gets a reference to the underlying <code>BufMut</code>.","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in big-endian …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 128 bit integer from <code>self</code> in …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in big-endian …","Gets an unsigned 16 bit integer from <code>self</code> in little-endian …","Gets an unsigned 16 bit integer from <code>self</code> in little-endian …","Gets an unsigned 16 bit integer from <code>self</code> in native-endian …","Gets an unsigned 16 bit integer from <code>self</code> in native-endian …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in the …","Gets an unsigned 32 bit integer from <code>self</code> in native-endian …","Gets an unsigned 32 bit integer from <code>self</code> in native-endian …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in big-endian …","Gets an unsigned 64 bit integer from <code>self</code> in little-endian …","Gets an unsigned 64 bit integer from <code>self</code> in little-endian …","Gets an unsigned 64 bit integer from <code>self</code> in native-endian …","Gets an unsigned 64 bit integer from <code>self</code> in native-endian …","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned 8 bit integer from <code>self</code>.","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in big-endian …","Gets an unsigned n-byte integer from <code>self</code> in little-endian …","Gets an unsigned n-byte integer from <code>self</code> in little-endian …","Gets an unsigned n-byte integer from <code>self</code> in native-endian …","Gets an unsigned n-byte integer from <code>self</code> in native-endian …","Returns true if there are any more bytes to consume","Returns true if there are any more bytes to consume","Returns true if there is space in <code>self</code> for more bytes.","Returns true if there is space in <code>self</code> for more bytes.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this <code>Chain</code>, returning the underlying values.","Consumes this <code>IntoIter</code>, returning the underlying value.","Consumes this <code>Limit</code>, returning the underlying value.","Consumes this <code>Reader</code>, returning the underlying value.","Consumes this <code>Take</code>, returning the underlying value.","Consumes this <code>Writer</code>, returning the underlying value.","","","Gets a mutable reference to the last underlying <code>Buf</code>.","Gets a reference to the last underlying <code>Buf</code>.","Returns the number of bytes in the slice.","Creates an adaptor which can write at most <code>limit</code> bytes to …","Creates an adaptor which can write at most <code>limit</code> bytes to …","Returns the maximum number of bytes that can be written","Returns the maximum number of bytes that can be read.","Creates a <code>&amp;mut UninitSlice</code> wrapping a slice of initialised …","Creates an iterator over the bytes contained by the buffer.","","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Put <code>cnt</code> bytes <code>val</code> into <code>self</code>.","Put <code>cnt</code> bytes <code>val</code> into <code>self</code>.","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 single-precision (4 bytes) floating …","Writes an IEEE754 single-precision (4 bytes) floating …","Writes an IEEE754 single-precision (4 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes  an IEEE754 double-precision (8 bytes) floating …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in the big-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 128 bit integer to <code>self</code> in little-endian …","Writes a signed 128 bit integer to <code>self</code> in native-endian …","Writes a signed 128 bit integer to <code>self</code> in native-endian …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in big-endian byte …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in little-endian …","Writes a signed 16 bit integer to <code>self</code> in native-endian …","Writes a signed 16 bit integer to <code>self</code> in native-endian …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in big-endian byte …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in little-endian …","Writes a signed 32 bit integer to <code>self</code> in native-endian …","Writes a signed 32 bit integer to <code>self</code> in native-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in the big-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in little-endian …","Writes a signed 64 bit integer to <code>self</code> in native-endian …","Writes a signed 64 bit integer to <code>self</code> in native-endian …","Writes a signed 8 bit integer to <code>self</code>.","Writes a signed 8 bit integer to <code>self</code>.","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Writes low <code>nbytes</code> of a signed integer to <code>self</code> in …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Transfer bytes into <code>self</code> from <code>src</code> and advance the cursor …","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in the …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 128 bit integer to <code>self</code> in …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in big-endian …","Writes an unsigned 16 bit integer to <code>self</code> in little-endian …","Writes an unsigned 16 bit integer to <code>self</code> in little-endian …","Writes an unsigned 16 bit integer to <code>self</code> in native-endian …","Writes an unsigned 16 bit integer to <code>self</code> in native-endian …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in big-endian …","Writes an unsigned 32 bit integer to <code>self</code> in little-endian …","Writes an unsigned 32 bit integer to <code>self</code> in little-endian …","Writes an unsigned 32 bit integer to <code>self</code> in native-endian …","Writes an unsigned 32 bit integer to <code>self</code> in native-endian …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in the …","Writes an unsigned 64 bit integer to <code>self</code> in little-endian …","Writes an unsigned 64 bit integer to <code>self</code> in little-endian …","Writes an unsigned 64 bit integer to <code>self</code> in native-endian …","Writes an unsigned 64 bit integer to <code>self</code> in native-endian …","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned 8 bit integer to <code>self</code>.","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in big-endian …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","Writes an unsigned n-byte integer to <code>self</code> in the …","","Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>…","Creates an adaptor which implements the <code>Read</code> trait for <code>self</code>…","Returns the number of bytes between the current position …","","","Returns the number of bytes that can be written from the …","","","Sets the maximum number of bytes that can be written.","Sets the maximum number of bytes that can be read.","","Creates an adaptor which will read at most <code>limit</code> bytes …","Creates an adaptor which will read at most <code>limit</code> bytes …","","","","","","","","","","","","","","","","","","","","Creates a <code>&amp;mut UninitSlice</code> wrapping a slice of …","","Write a single byte at the specified offset.","Creates an adaptor which implements the <code>Write</code> trait for …","Creates an adaptor which implements the <code>Write</code> trait for …"],"i":[0,0,0,0,1,3,3,3,1,3,1,1,3,3,1,3,3,0,3,1,3,3,1,3,1,3,1,3,1,3,1,1,3,1,3,1,3,3,1,3,1,1,1,1,1,1,1,3,3,3,3,3,3,3,1,3,3,3,3,3,1,1,1,3,3,3,3,1,1,1,1,1,1,1,3,3,3,1,3,3,1,1,3,1,3,1,1,3,3,1,3,1,3,1,3,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,1,3,3,3,3,3,1,1,3,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,19,25,26,27,25,28,6,6,6,25,34,28,30,26,32,6,25,34,28,30,26,32,19,19,27,27,19,25,26,27,25,28,19,19,25,30,6,19,19,25,26,19,19,30,25,25,32,6,25,34,28,30,26,32,6,6,25,34,28,30,26,32,6,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,34,28,30,26,32,34,28,30,26,32,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,27,27,6,6,6,6,6,6,6,6,6,6,6,6,25,34,28,30,26,32,25,34,28,30,26,32,25,34,25,25,6,27,27,28,26,6,34,34,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,30,19,19,19,25,26,27,25,28,28,26,34,19,19,25,34,28,30,26,32,25,34,28,30,26,32,6,25,34,28,30,26,32,6,32,6,27,27],"f":[0,0,0,0,[[1,2]],[[3,2]],[[3,2]],[3,[[5,[4]]]],[1,[[5,[4]]]],[3,[[5,[4]]]],[1,[[5,[4]]]],[[]],[[]],[3,[[5,[4]]]],[[]],[3,[[5,[4]]]],[[]],0,[3,2],[1,[[5,[4]]]],[3,[[5,[4]]]],[3,6],[1],[3],[1,1],[3,3],[[]],[[]],[[1,1],7],[[3,3],7],[[[5,[4]]],1],[[1,2],1],[[3,2],1],[[],1],[[],3],[1,[[5,[4]]]],[3,[[5,[4]]]],[3,[[5,[4]]]],[1],[3],[[1,3],8],[[1,1],8],[[1,9],8],[[1,10],8],[[1,11],8],[[1,[5,[4]]],8],[[1,[12,[4]]],8],[[3,[12,[4]]],8],[[3,11],8],[[3,3],8],[[3,9],8],[[3,[5,[4]]],8],[[3,1],8],[[3,10],8],[[],8],[[],8],[[3,13]],[[3,13]],[[3,13]],[[3,[5,[4]]]],[[1,14],15],[[1,14],15],[[1,14],15],[[3,14],15],[[3,14],15],[[3,14],15],[3,1],[9,1],[[[16,[[5,[4]]]]],1],[3,1],[[[12,[4]]],1],[10,1],[[]],[[[5,[4]]],1],[[]],[[[5,[4]]],3],[10,3],[13,1],[13,3],[13,3],[[[5,[4]]],1],[[1,17]],[[3,17]],[[]],[[]],[1],[1],[3],[3],[1,8],[3,8],[1,2],[3,2],[[],1],[[],3],[[1,9],[[18,[7]]]],[[1,[12,[4]]],[[18,[7]]]],[[1,1],[[18,[7]]]],[[1,11],[[18,[7]]]],[[1,10],[[18,[7]]]],[[1,[5,[4]]],[[18,[7]]]],[[3,[12,[4]]],[[18,[7]]]],[[3,3],[[18,[7]]]],[[3,11],[[18,[7]]]],[[3,10],[[18,[7]]]],[[3,9],[[18,[7]]]],[[3,[5,[4]]],[[18,[7]]]],[[3,19]],[[3,4,2]],[[3,[5,[4]]]],[1,2],[3,2],[3,2],[[3,2]],[[3,2,4]],[[3,2]],[[1,[20,[2]]],1],[[1,[5,[4]]],1],[3,[[5,[[21,[4]]]]]],[3,3],[[1,2],1],[[3,2],3],[[1,2],1],[[3,2],3],[[]],[[]],[[1,2]],[[3,2]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[3,3]],[2,3],[[3,24],15],[[3,10],15],[2,3],0,0,0,0,0,0,0,0,0,[2],[[[25,[19,19]],2]],[[[26,[19]],2]],[2],[[[25,[27,27]],2]],[[[28,[27]],2]],[6,4],[6,[[5,[[21,[4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[11,19],[[25,[11,19]]]],[[11,19],[[25,[11,19]]]],[[11,27],[[25,[11,27]]]],[[11,27],[[25,[11,27]]]],[[],[[5,[4]]]],[[[25,[19,19]]],[[5,[4]]]],[[[26,[19]]],[[5,[4]]]],[[],6],[[[25,[27,27]]],6],[[[28,[27]]],6],[[[5,[29]]],2],[[[5,[29]]],2],[[[25,[19,19]],[5,[29]]],2],[[[30,[[0,[19,11]]]],2]],[[6,[5,[4]]]],[2,1],[2,1],[[[25,[19,19]],2],1],[[[26,[19]],2],1],[[[5,[4]]]],[[[5,[4]]]],[[[30,[[0,[19,11]]]]],[[31,[[5,[4]]]]]],[25],[25],[[[32,[[0,[27,11]]]]],31],[[6,14],15],[[[25,[33,33]],14],15],[[[34,[33]],14],15],[[[28,[33]],14],15],[[[30,[33]],14],15],[[[26,[33]],14],15],[[[32,[33]],14],15],[[[5,[[21,[4]]]]],6],[[[5,[4]]],6],[[]],[[]],[[]],[[]],[[]],[[]],[[4,2],6],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],41],[[],41],[2,40],[2,40],[2,40],[2,40],[2,40],[2,40],[34],[28],[[[30,[19]]],19],[26],[[[32,[27]]],27],[34],[28],[[[30,[19]]],19],[26],[[[32,[27]]],27],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],45],[[],45],[[],45],[[],45],[[],45],[[],45],[[],4],[[],4],[2,45],[2,45],[2,45],[2,45],[2,45],[2,45],[[],8],[[],8],[[],8],[[],8],[[6,[46,[2]]],6],[[6,[47,[2]]],6],[[6,[48,[2]]],6],[[6,[49,[2]]],6],[[6,[50,[2]]],6],[[6,51],6],[[6,[50,[2]]],6],[[6,[46,[2]]],6],[[6,[49,[2]]],6],[[6,[47,[2]]],6],[[6,51],6],[[6,[48,[2]]],6],[[]],[[]],[[]],[[]],[[]],[[]],[25],[34],[28],[[[30,[19]]],19],[26],[[[32,[27]]],27],[[[25,[19,19]]]],[[]],[25],[25],[6,2],[[11,2],[[28,[11]]]],[[11,2],[[28,[11]]]],[28,2],[26,2],[[[5,[4]]],6],[[],34],[[[34,[19]]],[[18,[4]]]],[[11,19]],[[11,19]],[[4,2]],[[4,2]],[35],[35],[35],[35],[35],[35],[36],[36],[36],[36],[36],[36],[37],[37],[37],[37],[37],[37],[38],[38],[38],[38],[38],[38],[39],[39],[39],[39],[39],[39],[40],[40],[40],[40],[40],[40],[41],[41],[[40,2]],[[40,2]],[[40,2]],[[40,2]],[[40,2]],[[40,2]],[[[5,[4]]]],[[[5,[4]]]],[42],[42],[42],[42],[42],[42],[43],[43],[43],[43],[43],[43],[44],[44],[44],[44],[44],[44],[45],[45],[45],[45],[45],[45],[4],[4],[[45,2]],[[45,2]],[[45,2]],[[45,2]],[[45,2]],[[45,2]],[[[30,[[0,[19,11]]]],[5,[4]]],[[31,[2]]]],[11,[[30,[11]]]],[11,[[30,[11]]]],[[],2],[[[25,[19,19]]],2],[[[26,[19]]],2],[[],2],[[[25,[27,27]]],2],[[[28,[27]]],2],[[28,2]],[[26,2]],[[[34,[19]]]],[[11,2],[[26,[11]]]],[[11,2],[[26,[11]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[[5,[[21,[4]]]]],6],[[[32,[[0,[27,11]]]],[5,[4]]],[[31,[2]]]],[[6,2,4]],[11,[[32,[11]]]],[11,[[32,[11]]]]],"c":[],"p":[[3,"Bytes"],[15,"usize"],[3,"BytesMut"],[15,"u8"],[15,"slice"],[3,"UninitSlice"],[4,"Ordering"],[15,"bool"],[3,"String"],[15,"str"],[8,"Sized"],[3,"Vec"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"Box"],[8,"Hasher"],[4,"Option"],[8,"Buf"],[8,"RangeBounds"],[19,"MaybeUninit"],[4,"Result"],[3,"TypeId"],[3,"Arguments"],[3,"Chain"],[3,"Take"],[8,"BufMut"],[3,"Limit"],[3,"IoSlice"],[3,"Reader"],[6,"Result"],[3,"Writer"],[8,"Debug"],[3,"IntoIter"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[3,"RangeToInclusive"],[3,"RangeInclusive"],[3,"RangeFull"]]},\
"cfg_if":{"doc":"A macro for defining <code>#[cfg]</code> if-else statements.","t":"O","n":["cfg_if"],"q":[[0,"cfg_if"]],"d":["The main macro provided by this crate. See crate …"],"i":[0],"f":[0],"c":[],"p":[]},\
"cli_clipboard":{"doc":"CLI Clipboard","t":"GIKFKAKFKAADLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLDDIDLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["ClipboardContext","ClipboardProvider","clear","get_contents","get_contents","linux_clipboard","new","set_contents","set_contents","wayland_clipboard","x11_clipboard","LinuxClipboardContext","as_any","as_any_mut","borrow","borrow_mut","clear","from","get_contents","into","into_any","into_any_arc","into_any_rc","new","set_contents","try_from","try_into","type_id","WaylandClipboardContext","as_any","as_any_mut","borrow","borrow_mut","clear","from","get_contents","into","into_any","into_any_arc","into_any_rc","new","set_contents","try_from","try_into","type_id","Clipboard","Primary","Selection","X11ClipboardContext","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","atom","atom","atom","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","from","from","from","get_contents","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","new","set_contents","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"cli_clipboard"],[11,"cli_clipboard::linux_clipboard"],[28,"cli_clipboard::wayland_clipboard"],[45,"cli_clipboard::x11_clipboard"]],"d":["","Trait for clipboard access","Method to clear the clipboard","Get the current clipboard contents","Method to get the clipboard contents as a String","","Create a context with which to access the clipboard","Write a string to the clipboard","Method to set the clipboard contents as a String","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","Interface to the clipboard for Wayland windowing systems.","","","","","","Returns the argument unchanged.","Pastes from the Wayland clipboard.","Calls <code>U::from(self)</code>.","","","","Constructs a new <code>WaylandClipboardContext</code> that operates on …","Copies to the Wayland clipboard.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,16,0,16,0,16,0,16,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,17,18,15,17,18,15,14,17,18,17,18,15,17,18,15,15,17,18,15,15,17,18,15,17,18,15,17,18,15,17,18,15,15,15,17,18,15,17,18,15,17,18,15],"f":[0,0,[[],[[3,[[2,[1]]]]]],[[],[[3,[4,[2,[1]]]]]],[[],[[3,[4,[2,[1]]]]]],0,[[],[[3,[[2,[1]]]]]],[4,[[3,[[2,[1]]]]]],[4,[[3,[[2,[1]]]]]],0,0,0,[[],5],[[],5],[[]],[[]],[6,[[3,[[2,[1]]]]]],[[]],[6,[[3,[4,[2,[1]]]]]],[[]],[[[2,[7]]],[[2,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[9,[7]]],[[9,[5,7]]]],[[],[[3,[6,[2,[1]]]]]],[[6,4],[[3,[[2,[1]]]]]],[[],3],[[],3],[[],10],0,[[],5],[[],5],[[]],[[]],[11,[[3,[[2,[1]]]]]],[[]],[11,[[3,[4,[2,[1]]]]]],[[]],[[[2,[7]]],[[2,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[9,[7]]],[[9,[5,7]]]],[[],[[3,[11,[2,[1]]]]]],[[11,4],[[3,[[2,[1]]]]]],[[],3],[[],3],[[],10],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[12,13],[12,13],[12,13],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[14]]],[[3,[[2,[1]]]]]],[[]],[[]],[[]],[[[15,[14]]],[[3,[4,[2,[1]]]]]],[[]],[[]],[[]],[[[2,[7]]],[[2,[5,7]]]],[[[2,[7]]],[[2,[5,7]]]],[[[2,[7]]],[[2,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[8,[7]]],[[8,[5,7]]]],[[[9,[7]]],[[9,[5,7]]]],[[[9,[7]]],[[9,[5,7]]]],[[[9,[7]]],[[9,[5,7]]]],[[],[[3,[[15,[14]],[2,[1]]]]]],[[[15,[14]],4],[[3,[[2,[1]]]]]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],10],[[],10],[[],10]],"c":[],"p":[[8,"Error"],[3,"Box"],[4,"Result"],[3,"String"],[8,"Any"],[3,"LinuxClipboardContext"],[3,"Global"],[3,"Arc"],[3,"Rc"],[3,"TypeId"],[3,"WaylandClipboardContext"],[3,"Atoms"],[6,"Atom"],[8,"Selection"],[3,"X11ClipboardContext"],[8,"ClipboardProvider"],[3,"Primary"],[3,"Clipboard"]]},\
"crossterm":{"doc":"Cross-platform Terminal Manipulation Library","t":"IIIIAAKOKOAKAAKNNNNDDDDDDDDDDDDDDEDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSNNSSNNSNDDDNNNDDDNNNENNNNSNNNNSNEDEDDDNNNNNNNNNNSNENNNENEDENNSSSNNNNNNNNNDNNDSSSNNNNNNNNNNNNNNNSSNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLFFLLLMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDNNNNEEDDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDDNNNNDNNDDDDDDDNQDINNNNNNNLLLLLLLLLMFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMNDDENDDDDNNDNDDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLFLMFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLIK","n":["Command","ExecutableCommand","QueueableCommand","SynchronizedUpdate","cursor","event","execute","execute","queue","queue","style","sync_update","terminal","tty","write_ansi","BlinkingBar","BlinkingBlock","BlinkingUnderScore","DefaultUserShape","DisableBlinking","EnableBlinking","Hide","MoveDown","MoveLeft","MoveRight","MoveTo","MoveToColumn","MoveToNextLine","MoveToPreviousLine","MoveToRow","MoveUp","RestorePosition","SavePosition","SetCursorStyle","Show","SteadyBar","SteadyBlock","SteadyUnderScore","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","position","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","ALT","BackTab","Backspace","CAPS_LOCK","CONTROL","CapsLock","Char","DISAMBIGUATE_ESCAPE_CODES","Delete","DisableBracketedPaste","DisableFocusChange","DisableMouseCapture","Down","Down","Drag","EnableBracketedPaste","EnableFocusChange","EnableMouseCapture","End","Enter","Esc","Event","F","FastForward","FocusGained","FocusLost","HYPER","Home","Insert","IsoLevel3Shift","IsoLevel5Shift","KEYPAD","Key","KeyCode","KeyEvent","KeyEventKind","KeyEventState","KeyModifiers","KeyboardEnhancementFlags","KeypadBegin","Left","Left","LeftAlt","LeftControl","LeftHyper","LeftMeta","LeftShift","LeftSuper","LowerVolume","META","Media","MediaKeyCode","Menu","Middle","Modifier","ModifierKeyCode","Mouse","MouseButton","MouseEvent","MouseEventKind","Moved","MuteVolume","NONE","NONE","NUM_LOCK","Null","NumLock","PageDown","PageUp","Paste","Pause","Pause","Play","PlayPause","PopKeyboardEnhancementFlags","Press","PrintScreen","PushKeyboardEnhancementFlags","REPORT_ALL_KEYS_AS_ESCAPE_CODES","REPORT_ALTERNATE_KEYS","REPORT_EVENT_TYPES","RaiseVolume","Record","Release","Repeat","Resize","Reverse","Rewind","Right","Right","RightAlt","RightControl","RightHyper","RightMeta","RightShift","RightSuper","SHIFT","SUPER","ScrollDown","ScrollLeft","ScrollLock","ScrollRight","ScrollUp","Stop","Tab","TrackNext","TrackPrevious","Up","Up","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","column","complement","complement","complement","contains","contains","contains","difference","difference","difference","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_name","from_name","from_name","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_all","is_all","is_all","is_empty","is_empty","is_empty","iter","iter","iter","iter_names","iter_names","iter_names","kind","kind","modifiers","modifiers","new","new_with_kind","new_with_kind_and_state","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","poll","read","remove","remove","remove","row","set","set","set","state","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","AnsiValue","Attribute","Attributes","BackgroundColor","Black","Blue","Bold","Color","Colored","Colors","ContentStyle","CrossedOut","Cyan","DarkBlue","DarkCyan","DarkGreen","DarkGrey","DarkMagenta","DarkRed","DarkYellow","Dim","DoubleUnderlined","Encircled","ForegroundColor","Fraktur","Framed","Green","Grey","Hidden","Italic","Magenta","NoBlink","NoBold","NoHidden","NoItalic","NoReverse","NoUnderline","NormalIntensity","NotCrossedOut","NotFramedOrEncircled","NotOverLined","OverLined","Print","PrintStyledContent","RapidBlink","Red","Reset","Reset","ResetColor","Reverse","Rgb","SetAttribute","SetAttributes","SetBackgroundColor","SetColors","SetForegroundColor","SetStyle","SetUnderlineColor","SlowBlink","Styled","StyledContent","Stylize","Undercurled","Underdashed","Underdotted","UnderlineColor","Underlined","White","Yellow","ansi_color_disabled","ansi_color_disabled_memoized","apply","as_mut","as_mut","as_ref","as_ref","attribute","attribute","attributes","available_color_count","background","background_color","bitand","bitand","bitor","bitor","bitxor","bitxor","black","black","blue","blue","bold","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","content","crossed_out","crossed_out","cyan","cyan","dark_blue","dark_blue","dark_cyan","dark_cyan","dark_green","dark_green","dark_grey","dark_grey","dark_magenta","dark_magenta","dark_red","dark_red","dark_yellow","dark_yellow","default","default","dim","dim","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_color_output","foreground","foreground_color","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","green","green","grey","grey","has","hash","hash","hash","hidden","hidden","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","italic","italic","iterator","magenta","magenta","negative","negative","new","new","new","on","on","on_black","on_black","on_blue","on_blue","on_cyan","on_cyan","on_dark_blue","on_dark_blue","on_dark_cyan","on_dark_cyan","on_dark_green","on_dark_green","on_dark_grey","on_dark_grey","on_dark_magenta","on_dark_magenta","on_dark_red","on_dark_red","on_dark_yellow","on_dark_yellow","on_green","on_green","on_grey","on_grey","on_magenta","on_magenta","on_red","on_red","on_white","on_white","on_yellow","on_yellow","parse_ansi","parse_ansi","partial_cmp","partial_cmp","partial_cmp","rapid_blink","rapid_blink","red","red","reset","reset","reverse","reverse","set","set_ansi_color_disabled","sgr","slow_blink","slow_blink","style","style","style_mut","stylize","stylize","stylize","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underline","underline","underline_black","underline_black","underline_blue","underline_blue","underline_color","underline_cyan","underline_cyan","underline_dark_blue","underline_dark_blue","underline_dark_cyan","underline_dark_cyan","underline_dark_green","underline_dark_green","underline_dark_grey","underline_dark_grey","underline_dark_magenta","underline_dark_magenta","underline_dark_red","underline_dark_red","underline_dark_yellow","underline_dark_yellow","underline_green","underline_green","underline_grey","underline_grey","underline_magenta","underline_magenta","underline_red","underline_red","underline_white","underline_white","underline_yellow","underline_yellow","underlined","underlined","unset","white","white","with","with","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","yellow","yellow","b","g","r","All","BeginSynchronizedUpdate","Clear","ClearType","CurrentLine","DisableLineWrap","EnableLineWrap","EndSynchronizedUpdate","EnterAlternateScreen","FromCursorDown","FromCursorUp","LeaveAlternateScreen","Purge","ScrollDown","ScrollUp","SetSize","SetTitle","UntilNewLine","WindowSize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","columns","disable_raw_mode","enable_raw_mode","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","height","into","into","into","into","into","into","into","into","into","into","into","into","into","is_raw_mode_enabled","partial_cmp","rows","size","supports_keyboard_enhancement","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","window_size","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","write_ansi","IsTty","is_tty"],"q":[[0,"crossterm"],[15,"crossterm::cursor"],[292,"crossterm::event"],[827,"crossterm::style"],[1333,"crossterm::style::Color"],[1336,"crossterm::terminal"],[1552,"crossterm::tty"]],"d":["An interface for a command that performs an action on the …","An interface for types that can directly execute commands.","An interface for types that can queue commands for further …","An interface for types that support synchronized updates.","A module to work with the terminal cursor","A module to read events.","Executes the given command directly.","Executes one or more command(s).","Queues the given command for further execution.","Queues one or more command(s) for further execution.","A module to apply attributes and colors on your text.","Performs a set of actions against the given type.","A module to work with the terminal.","A module to query if the current instance is a tty. Making …","Write an ANSI representation of this command to the given …","A blinking cursor bar shape (|)","A blinking block cursor shape (■).","A blinking underscore cursor shape(_).","Default cursor shape configured by the user.","A command that disables blinking of the terminal cursor.","A command that enables blinking of the terminal cursor.","A command that hides the terminal cursor.","A command that moves the terminal cursor a given number of …","A command that moves the terminal cursor a given number of …","A command that moves the terminal cursor a given number of …","A command that moves the terminal cursor to the given …","A command that moves the terminal cursor to the given …","A command that moves the terminal cursor down the given …","A command that moves the terminal cursor up the given …","A command that moves the terminal cursor to the given row …","A command that moves the terminal cursor a given number of …","A command that restores the saved terminal cursor position.","A command that saves the current terminal cursor position.","A command that sets the style of the cursor. It uses two …","A command that shows the terminal cursor.","A steady cursor bar shape (inverse of <code>BlinkingBar</code>).","A non blinking block cursor shape (inverse of <code>BlinkingBlock</code>…","A non blinking underscore cursor shape (inverse of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the cursor position (column, row).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shift + Tab key.","Backspace key.","Caps Lock was enabled for this key event.","","Caps Lock key.","A character.","Represent Escape and modified keys using CSI-u sequences, …","Delete key.","A command that disables bracketed paste mode.","A command that disables focus event emission.","A command that disables mouse event capturing.","Pressed mouse button. Contains the button that was pressed.","Down arrow key.","Moved the mouse cursor while pressing the contained mouse …","A command that enables bracketed paste mode.","A command that enables focus event emission.","A command that enables mouse event capturing.","End key.","Enter key.","Escape key.","Represents an event.","F key.","Fast-forward media key.","The terminal gained focus","The terminal lost focus","","Home key.","Insert key.","Iso Level3 Shift key.","Iso Level5 Shift key.","The key event origins from the keypad.","A single key event with additional pressed modifiers.","Represents a key.","Represents a key event.","Represents a keyboard event kind.","Represents extra state about the key event.","Represents key modifiers (shift, control, alt, etc.).","Represents special flags that tell compatible terminals to …","The “Begin” key (often mapped to the 5 key when Num …","Left mouse button.","Left arrow key.","Left Alt key.","Left Control key.","Left Hyper key.","Left Meta key.","Left Shift key.","Left Super key.","Lower-volume media key.","","A media key.","Represents a media key (as part of <code>KeyCode::Media</code>).","Menu key.","Middle mouse button.","A modifier key.","Represents a modifier key (as part of <code>KeyCode::Modifier</code>).","A single mouse event with additional pressed modifiers.","Represents a mouse button.","Represents a mouse event.","A mouse event kind.","Moved the mouse cursor while not pressing a mouse button.","Mute media key.","","","Num Lock was enabled for this key event.","Null.","Num Lock key.","Page down key.","Page up key.","A string that was pasted into the terminal. Only emitted …","Pause media key.","Pause key.","Play media key.","Play/Pause media key.","A command that disables extra kinds of keyboard events.","","Print Screen key.","A command that enables the kitty keyboard protocol, which …","Represent all keyboard events as CSI-u sequences. This is …","","Add extra events with [<code>KeyEvent.kind</code>] set to …","Raise-volume media key.","Record media key.","","","An resize event with new dimensions after resize (columns, …","Reverse media key.","Rewind media key.","Right mouse button.","Right arrow key.","Right Alt key.","Right Control key.","Right Hyper key.","Right Meta key.","Right Shift key.","Right Super key.","","","Scrolled mouse wheel downwards (towards the user).","Scrolled mouse wheel left (mostly on a laptop touchpad).","Scroll Lock key.","Scrolled mouse wheel right (mostly on a laptop touchpad).","Scrolled mouse wheel upwards (away from the user).","Stop media key.","Tab key.","Next-track media key.","Previous-track media key.","Released mouse button. Contains the button that was …","Up arrow key.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The key itself.","The column that the event occurred on.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The kind of mouse event that was caused.","Kind of event.","The key modifiers active when the event occurred.","Additional key modifiers.","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","Checks if there is an <code>Event</code> available.","Reads a single <code>Event</code>.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The row that the event occurred on.","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Keyboard state.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","An ANSI color. See 256 colors - cheat sheet for more info.","Represents an attribute.","a bitset for all possible attributes","A background color.","Black color.","Light blue color.","Increases the text intensity.","Represents a color.","Represents a foreground or background color.","Represents, optionally, a foreground and/or a background …","The style that can be put on content.","Crosses the text.","Light cyan color.","Dark blue color.","Dark cyan color.","Dark green color.","Dark grey color.","Dark magenta color.","Dark red color.","Dark yellow color.","Decreases the text intensity.","Double underlines the text.","Makes the text encircled.","A foreground color.","Sets the Fraktur typeface.","Makes the text framed.","Light green color.","Grey color.","Hides the text (also known as Conceal).","Emphasises the text.","Light magenta color.","Turns off the text blinking (<code>SlowBlink</code> or <code>RapidBlink</code>).","Turns off the <code>Bold</code> attribute. - Inconsistent - Prefer to …","Turns off the <code>Hidden</code> attribute.","Turns off the <code>Italic</code> attribute.","Turns off the <code>Reverse</code> attribute.","Turns off the <code>Underlined</code> attribute.","Switches the text back to normal intensity (no bold, …","Turns off the <code>CrossedOut</code> attribute.","Turns off the <code>Frame</code> and <code>Encircled</code> attributes.","Turns off the <code>OverLined</code> attribute.","Draws a line at the top of the text.","A command that prints the given displayable type.","A command that prints styled content.","Makes the text blinking (&gt;= 150 per minute).","Light red color.","Resets all the attributes.","Resets the terminal color.","A command that resets the colors back to default.","Swaps foreground and background colors.","An RGB color. See RGB color model for more info.","A command that sets an attribute.","A command that sets several attributes.","A command that sets the the background color.","A command that optionally sets the foreground and/or …","A command that sets the the foreground color.","A command that sets a style (colors and attributes).","A command that sets the the underline color.","Makes the text blinking (&lt; 150 per minute).","This type with styles applied.","The style with the content to be styled.","Provides a set of methods to set attributes and colors.","Undercurls the text.","Underdashes the text.","Underdots the text.","An underline color. Imporant: doesnt work on windows 10 or …","Underlines the text.","White color.","Light yellow color.","Checks whether ansi color sequences are disabled by …","","Creates a <code>StyledContent</code> by applying the style to the given …","","","","","Styles the content with the attribute.","Styles the content with the attribute.","List of attributes.","Returns available color count.","","The background color.","","","","","","","Sets the foreground color to <code>Black</code>.","Sets the foreground color to <code>Black</code>.","Sets the foreground color to <code>Blue</code>.","Sets the foreground color to <code>Blue</code>.","Applies the <code>Bold</code> attribute to the text.","Applies the <code>Bold</code> attribute to the text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a u32 with one bit set, which is the signature of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the content.","Applies the <code>CrossedOut</code> attribute to the text.","Applies the <code>CrossedOut</code> attribute to the text.","Sets the foreground color to <code>Cyan</code>.","Sets the foreground color to <code>Cyan</code>.","Sets the foreground color to <code>DarkBlue</code>.","Sets the foreground color to <code>DarkBlue</code>.","Sets the foreground color to <code>DarkCyan</code>.","Sets the foreground color to <code>DarkCyan</code>.","Sets the foreground color to <code>DarkGreen</code>.","Sets the foreground color to <code>DarkGreen</code>.","Sets the foreground color to <code>DarkGrey</code>.","Sets the foreground color to <code>DarkGrey</code>.","Sets the foreground color to <code>DarkMagenta</code>.","Sets the foreground color to <code>DarkMagenta</code>.","Sets the foreground color to <code>DarkRed</code>.","Sets the foreground color to <code>DarkRed</code>.","Sets the foreground color to <code>DarkYellow</code>.","Sets the foreground color to <code>DarkYellow</code>.","","","Applies the <code>Dim</code> attribute to the text.","Applies the <code>Dim</code> attribute to the text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets all the passed attributes. Removes none.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forces colored output on or off globally, overriding …","","The foreground color.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a ‘Color’ from the tuple representation.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>Color</code> from the string representation.","Sets the foreground color to <code>Green</code>.","Sets the foreground color to <code>Green</code>.","Sets the foreground color to <code>Grey</code>.","Sets the foreground color to <code>Grey</code>.","Returns whether the attribute is set.","","","","Applies the <code>Hidden</code> attribute to the text.","Applies the <code>Hidden</code> attribute to the text.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether there is no attribute set.","Applies the <code>Italic</code> attribute to the text.","Applies the <code>Italic</code> attribute to the text.","Iterates over all the variants of the Attribute enum.","Sets the foreground color to <code>Magenta</code>.","Sets the foreground color to <code>Magenta</code>.","Applies the <code>Reverse</code> attribute to the text.","Applies the <code>Reverse</code> attribute to the text.","Creates a new <code>ContentStyle</code>.","Creates a new <code>StyledContent</code>.","","Sets the background color.","Sets the background color.","Sets the background color to <code>Black</code>.","Sets the background color to <code>Black</code>.","Sets the background color to <code>Blue</code>.","Sets the background color to <code>Blue</code>.","Sets the background color to <code>Cyan</code>.","Sets the background color to <code>Cyan</code>.","Sets the background color to <code>DarkBlue</code>.","Sets the background color to <code>DarkBlue</code>.","Sets the background color to <code>DarkCyan</code>.","Sets the background color to <code>DarkCyan</code>.","Sets the background color to <code>DarkGreen</code>.","Sets the background color to <code>DarkGreen</code>.","Sets the background color to <code>DarkGrey</code>.","Sets the background color to <code>DarkGrey</code>.","Sets the background color to <code>DarkMagenta</code>.","Sets the background color to <code>DarkMagenta</code>.","Sets the background color to <code>DarkRed</code>.","Sets the background color to <code>DarkRed</code>.","Sets the background color to <code>DarkYellow</code>.","Sets the background color to <code>DarkYellow</code>.","Sets the background color to <code>Green</code>.","Sets the background color to <code>Green</code>.","Sets the background color to <code>Grey</code>.","Sets the background color to <code>Grey</code>.","Sets the background color to <code>Magenta</code>.","Sets the background color to <code>Magenta</code>.","Sets the background color to <code>Red</code>.","Sets the background color to <code>Red</code>.","Sets the background color to <code>White</code>.","Sets the background color to <code>White</code>.","Sets the background color to <code>Yellow</code>.","Sets the background color to <code>Yellow</code>.","Parses an ANSI color sequence.","Parse an ANSI foreground or background color. This is the …","","","","Applies the <code>RapidBlink</code> attribute to the text.","Applies the <code>RapidBlink</code> attribute to the text.","Sets the foreground color to <code>Red</code>.","Sets the foreground color to <code>Red</code>.","Applies the <code>Reset</code> attribute to the text.","Applies the <code>Reset</code> attribute to the text.","Applies the <code>Reverse</code> attribute to the text.","Applies the <code>Reverse</code> attribute to the text.","Sets the attribute. If it’s already set, this does …","","Returns the SGR attribute value.","Applies the <code>SlowBlink</code> attribute to the text.","Applies the <code>SlowBlink</code> attribute to the text.","Creates a <code>StyledContent</code>.","Returns the style.","Returns a mutable reference to the style, so that it can …","Styles this type.","","","Returns a new <code>Color</code> which, when applied, has the same …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the attribute if it’s unset, unset it if it is set.","","","","","","Try to create a <code>Color</code> from the string representation. This …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the underline color.","Sets the underline color.","Sets the underline color to <code>Black</code>.","Sets the underline color to <code>Black</code>.","Sets the underline color to <code>Blue</code>.","Sets the underline color to <code>Blue</code>.","The underline color.","Sets the underline color to <code>Cyan</code>.","Sets the underline color to <code>Cyan</code>.","Sets the underline color to <code>DarkBlue</code>.","Sets the underline color to <code>DarkBlue</code>.","Sets the underline color to <code>DarkCyan</code>.","Sets the underline color to <code>DarkCyan</code>.","Sets the underline color to <code>DarkGreen</code>.","Sets the underline color to <code>DarkGreen</code>.","Sets the underline color to <code>DarkGrey</code>.","Sets the underline color to <code>DarkGrey</code>.","Sets the underline color to <code>DarkMagenta</code>.","Sets the underline color to <code>DarkMagenta</code>.","Sets the underline color to <code>DarkRed</code>.","Sets the underline color to <code>DarkRed</code>.","Sets the underline color to <code>DarkYellow</code>.","Sets the underline color to <code>DarkYellow</code>.","Sets the underline color to <code>Green</code>.","Sets the underline color to <code>Green</code>.","Sets the underline color to <code>Grey</code>.","Sets the underline color to <code>Grey</code>.","Sets the underline color to <code>Magenta</code>.","Sets the underline color to <code>Magenta</code>.","Sets the underline color to <code>Red</code>.","Sets the underline color to <code>Red</code>.","Sets the underline color to <code>White</code>.","Sets the underline color to <code>White</code>.","Sets the underline color to <code>Yellow</code>.","Sets the underline color to <code>Yellow</code>.","Applies the <code>Underlined</code> attribute to the text.","Applies the <code>Underlined</code> attribute to the text.","Unsets the attribute. If it’s not set, this changes …","Sets the foreground color to <code>White</code>.","Sets the foreground color to <code>White</code>.","Sets the foreground color.","Sets the foreground color.","","","","","","","","","","","Sets the foreground color to <code>Yellow</code>.","Sets the foreground color to <code>Yellow</code>.","","","","All cells.","A command that instructs the terminal emulator to begin a …","A command that clears the terminal screen buffer.","Different ways to clear the terminal buffer.","All cells at the cursor row.","Disables line wrapping.","Enable line wrapping.","A command that instructs the terminal to end a …","A command that switches to alternate screen.","All cells from the cursor position downwards.","All cells from the cursor position upwards.","A command that switches back to the main screen.","All plus history","A command that scrolls the terminal screen a given number …","A command that scrolls the terminal screen a given number …","A command that sets the terminal buffer size …","A command that sets the terminal title","All cells from the cursor position until the new line.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Disables raw mode.","Enables raw mode.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tells whether the raw mode is enabled.","","","Returns the terminal size <code>(columns, rows)</code>.","Queries the terminal’s support for progressive keyboard …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the terminal size <code>[WindowSize]</code>.","","","","","","","","","","","","Adds the <code>is_tty</code> method to types that might represent a …","Returns true when an instance is a terminal teletype, …"],"i":[0,0,0,0,0,0,95,0,96,0,0,97,0,0,1,21,21,21,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,21,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,14,14,15,15,16,16,17,17,18,18,19,19,20,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,28,47,47,29,28,47,47,27,47,0,0,0,41,47,41,0,0,0,47,47,47,0,47,45,39,39,28,47,47,46,46,29,39,0,0,0,0,0,0,47,42,47,46,46,46,46,46,46,45,28,47,0,47,42,47,0,39,0,0,0,41,45,28,29,29,47,47,47,47,39,45,47,45,45,0,43,47,0,27,27,27,45,45,43,43,39,45,45,42,47,46,46,46,46,46,46,28,28,41,41,47,41,41,45,47,45,45,41,47,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,27,27,28,28,29,29,27,28,29,27,28,29,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,44,40,27,28,29,27,28,29,27,28,29,27,28,29,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,27,28,29,27,27,27,27,27,31,32,33,34,35,36,37,38,39,40,41,42,28,28,28,28,28,43,29,29,29,29,29,44,45,46,47,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,44,45,46,47,27,28,29,27,27,28,28,29,29,27,28,29,27,28,29,27,28,29,27,39,40,41,42,28,43,29,44,45,46,47,27,28,29,27,28,29,27,28,29,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,27,28,29,27,28,29,27,28,29,27,28,29,27,28,29,40,44,40,44,44,44,44,27,28,29,27,39,40,41,42,28,43,29,44,45,46,47,0,0,27,28,29,40,27,28,29,44,27,28,29,27,28,29,27,28,29,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,27,28,29,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,27,31,32,33,34,35,36,37,38,39,40,41,42,28,43,29,44,45,46,47,27,28,29,31,32,33,34,35,36,37,38,64,0,0,65,64,64,59,0,0,0,0,59,64,64,64,64,64,64,64,64,59,59,59,65,59,59,64,64,59,59,64,59,59,59,59,59,59,59,59,59,59,59,0,0,59,64,59,64,0,59,64,0,0,0,0,0,0,0,59,98,0,0,59,59,59,65,59,64,64,65,65,56,56,58,56,58,98,98,56,0,66,56,61,61,61,61,61,61,98,98,98,98,98,98,61,56,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,61,56,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,59,61,56,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,61,56,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,59,64,65,58,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,61,56,98,98,61,56,58,59,64,65,66,67,68,69,70,71,72,73,75,76,61,56,58,59,64,65,66,67,68,69,70,71,72,73,75,76,61,61,56,58,58,59,59,64,65,65,66,67,67,68,68,69,70,70,71,71,72,73,74,74,74,75,75,76,76,0,66,56,61,61,61,56,58,59,64,64,65,66,66,67,68,69,70,71,72,73,74,75,76,64,98,98,98,98,61,59,64,65,98,98,61,56,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,61,98,98,59,98,98,98,98,56,58,66,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,64,65,59,64,65,98,98,98,98,98,98,98,98,61,65,59,98,98,0,58,58,98,56,58,66,61,56,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,58,59,65,67,68,70,71,74,75,76,61,61,56,58,59,64,64,65,66,67,68,69,70,71,72,73,74,75,76,61,56,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,61,56,58,59,64,65,66,67,68,69,70,71,72,73,74,75,76,98,98,98,98,98,98,56,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,61,98,98,98,98,67,68,69,70,71,72,73,74,75,76,98,98,99,99,99,85,0,0,0,85,0,0,0,0,85,85,0,85,0,0,0,0,85,0,93,81,82,83,84,85,86,87,88,89,90,91,92,93,81,82,83,84,85,86,87,88,89,90,91,92,81,82,83,84,85,86,87,88,89,90,91,92,81,82,83,84,85,86,87,88,89,90,91,92,85,93,0,0,81,82,83,84,85,86,87,88,89,90,91,92,81,82,83,84,85,86,87,88,89,90,91,92,93,81,82,83,84,85,86,86,87,87,88,88,89,89,90,91,92,93,93,81,82,83,84,85,86,87,88,89,90,91,92,85,93,93,81,82,83,84,85,86,87,88,89,90,91,92,0,85,93,0,0,81,82,83,84,85,86,87,88,89,90,91,92,86,87,88,89,93,81,82,83,84,85,86,87,88,89,90,91,92,93,81,82,83,84,85,86,87,88,89,90,91,92,93,81,82,83,84,85,86,87,88,89,90,91,92,93,0,81,82,83,84,86,87,88,89,90,91,92,0,100],"f":[0,0,0,0,0,0,[1,2],0,[1,2],0,0,[3,2],0,0,[4,5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,6],22],[[7,7],22],[[8,8],22],[[9,9],22],[[10,10],22],[[11,11],22],[[12,12],22],[[13,13],22],[[14,14],22],[[15,15],22],[[16,16],22],[[17,17],22],[[18,18],22],[[19,19],22],[[20,20],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[6,23],5],[[6,23],5],[[7,23],5],[[7,23],5],[[8,23],5],[[8,23],5],[[9,23],5],[[9,23],5],[[10,23],5],[[10,23],5],[[11,23],5],[[11,23],5],[[12,23],5],[[12,23],5],[[13,23],5],[[13,23],5],[[14,23],5],[[14,23],5],[[15,23],5],[[15,23],5],[[16,23],5],[[16,23],5],[[17,23],5],[[17,23],5],[[18,23],5],[[18,23],5],[[19,23],5],[[19,23],5],[[20,23],5],[[20,23],5],[[21,23],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[6,4],5],[[7,4],5],[[8,4],5],[[9,4],5],[[10,4],5],[[11,4],5],[[12,4],5],[[13,4],5],[[14,4],5],[[15,4],5],[[16,4],5],[[17,4],5],[[18,4],5],[[19,4],5],[[20,4],5],[[21,4],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],27],[[],28],[[],29],[[27,27],27],[[28,28],28],[[29,29],29],[[27,27]],[[28,28]],[[29,29]],[[27,27],27],[[28,28],28],[[29,29],29],[[27,27]],[[28,28]],[[29,29]],[27,30],[27,30],[28,30],[28,30],[29,30],[29,30],[[27,27],27],[[28,28],28],[[29,29],29],[[27,27]],[[28,28]],[[29,29]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[28,28],[43,43],[29,29],[44,44],[45,45],[46,46],[47,47],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[27,27],[28,28],[29,29],[[27,27],22],[[28,28],22],[[29,29],22],[[27,27],27],[[28,28],28],[[29,29],29],[[],27],[[],28],[[],29],[[27,27],22],[[31,31],22],[[32,32],22],[[33,33],22],[[34,34],22],[[35,35],22],[[36,36],22],[[37,37],22],[[38,38],22],[[39,39],22],[[40,40],22],[[41,41],22],[[42,42],22],[[28,28],22],[[43,43],22],[[29,29],22],[[44,44],22],[[45,45],22],[[46,46],22],[[47,47],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[27,48]],[[28,48]],[[29,48]],[[27,23],5],[[27,23],5],[[27,23],5],[[27,23],5],[[27,23],5],[[31,23],5],[[32,23],5],[[33,23],5],[[34,23],5],[[35,23],5],[[36,23],5],[[37,23],5],[[38,23],5],[[39,23],5],[[40,23],5],[[41,23],5],[[42,23],5],[[28,23],5],[[28,23],5],[[28,23],5],[[28,23],5],[[28,23],5],[[43,23],5],[[29,23],5],[[29,23],5],[[29,23],5],[[29,23],5],[[29,23],5],[[44,23],5],[[45,23],5],[[46,23],5],[[47,23],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,44],[[]],[[]],[[]],[30,[[49,[27]]]],[30,[[49,[28]]]],[30,[[49,[29]]]],[30,27],[30,27],[30,28],[30,28],[30,29],[30,29],[30,27],[30,28],[30,29],[48,27],[48,28],[48,29],[50,[[49,[27]]]],[50,[[49,[28]]]],[50,[[49,[29]]]],[[27,51]],[[39,51]],[[40,51]],[[41,51]],[[42,51]],[[28,51]],[[43,51]],[[29,51]],[[44,51]],[[45,51]],[[46,51]],[[47,51]],[[27,27]],[[28,28]],[[29,29]],[[27,27],27],[[28,28],28],[[29,29],29],[[27,27],22],[[28,28],22],[[29,29],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27],[28],[29],[27,22],[28,22],[29,22],[27,22],[28,22],[29,22],[27,[[52,[27]]]],[28,[[52,[28]]]],[29,[[52,[29]]]],[27,[[53,[27]]]],[28,[[53,[28]]]],[29,[[53,[29]]]],0,0,0,0,[[47,28],44],[[47,28,43],44],[[47,28,43,29],44],[27,27],[28,28],[29,29],[[27,27],[[49,[54]]]],[[39,39],[[49,[54]]]],[[40,40],[[49,[54]]]],[[41,41],[[49,[54]]]],[[42,42],[[49,[54]]]],[[28,28],[[49,[54]]]],[[43,43],[[49,[54]]]],[[29,29],[[49,[54]]]],[[44,44],[[49,[54]]]],[[45,45],[[49,[54]]]],[[46,46],[[49,[54]]]],[[47,47],[[49,[54]]]],[55,[[2,[22]]]],[[],[[2,[39]]]],[[27,27]],[[28,28]],[[29,29]],0,[[27,27,22]],[[28,28,22]],[[29,29,22]],0,[[27,27],27],[[28,28],28],[[29,29],29],[[27,27]],[[28,28]],[[29,29]],[[27,27],27],[[28,28],28],[[29,29],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[27,27]],[[28,28]],[[29,29]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[27,27],27],[[28,28],28],[[29,29],29],[[31,4],5],[[32,4],5],[[33,4],5],[[34,4],5],[[35,4],5],[[36,4],5],[[37,4],5],[[38,4],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],22],[[],22],[[56,57],[[58,[57]]]],[56,56],[[[58,[57]]],56],[56,56],[[[58,[57]]],56],[59],[59],0,[[],60],0,0,[[61,59],61],[[61,61],61],[[61,61],61],[[61,59],61],[[61,59],61],[[61,61],61],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[59,62],[61,61],[56,56],[[[58,[[0,[63,57]]]]],[[58,[[0,[63,57]]]]]],[59,59],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[[[74,[[0,[63,57]]]]],[[74,[[0,[63,57]]]]]],[75,75],[[[76,[[0,[63,57]]]]],[[76,[[0,[63,57]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[59,59],54],[[64,64],54],[[65,65],54],[[[58,[57]]],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],61],[[],56],[[]],[[]],[[61,61],22],[[56,56],22],[[[58,[[0,[77,57]]]],[58,[[0,[77,57]]]]],22],[[59,59],22],[[64,64],22],[[65,65],22],[[66,66],22],[[67,67],22],[[68,68],22],[[69,69],22],[[70,70],22],[[71,71],22],[[72,72],22],[[73,73],22],[[75,75],22],[[[76,[[0,[77,57]]]],[76,[[0,[77,57]]]]],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[61,61]],[[61,23],5],[[56,23],5],[[[58,[57]],23],5],[[[58,[[0,[78,57]]]],23],5],[[59,23],5],[[59,23],5],[[64,23],5],[[65,23],5],[[65,23],5],[[66,23],5],[[67,23],5],[[67,23],5],[[68,23],5],[[68,23],5],[[69,23],5],[[70,23],5],[[70,23],5],[[71,23],5],[[71,23],5],[[72,23],5],[[73,23],5],[[[74,[[0,[78,57]]]],23],5],[[[74,[50]],23],5],[[[74,[24]],23],5],[[75,23],5],[[75,23],5],[[[76,[[0,[78,57]]]],23],5],[[[76,[57]],23],5],[22],0,0,[[[79,[59]]],61],[59,61],[[]],[[]],[[]],[[]],[[],64],[[]],[[]],[65,66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,[[25,[64]]]],[[]],[[]],[[]],[[]],[[61,59],22],[[59,51]],[[64,51]],[[65,51]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,22],[[]],[[]],[[],80],[[]],[[]],[[]],[[]],[[],56],[[56,57],[[58,[57]]]],[[64,64],66],[64],[64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[50,[[49,[64]]]],[50,[[49,[65]]]],[[59,59],[[49,[54]]]],[[64,64],[[49,[54]]]],[[65,65],[[49,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[61,59]],[22],[59,24],[[]],[[]],[57,[[58,[57]]]],[[[58,[57]]],56],[[[58,[57]]],56],[[]],[56],[[[58,[57]]]],[[66,66],66],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[61,59]],[[],25],[[],25],[[],25],[[],25],[[],25],[50,[[25,[64]]]],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[64],[64],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[61,59]],[[]],[[]],[64],[64],[[67,4],5],[[68,4],5],[[69,4],5],[[70,4],5],[[71,4],5],[[72,4],5],[[73,4],5],[[[74,[57]],4],5],[[75,4],5],[[[76,[57]],4],5],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[[[90,[63]]],[[90,[63]]]],[91,91],[92,92],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[85,85],54],0,[[],2],[[],2],[[81,81],22],[[82,82],22],[[83,83],22],[[84,84],22],[[85,85],22],[[86,86],22],[[87,87],22],[[88,88],22],[[89,89],22],[[[90,[77]],[90,[77]]],22],[[91,91],22],[[92,92],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[93,23],5],[[81,23],5],[[82,23],5],[[83,23],5],[[84,23],5],[[85,23],5],[[86,23],5],[[86,23],5],[[87,23],5],[[87,23],5],[[88,23],5],[[88,23],5],[[89,23],5],[[89,23],5],[[[90,[78]],23],5],[[91,23],5],[[92,23],5],[[]],[94,93],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[85,51]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[2,[22]]]],[[85,85],[[49,[54]]]],0,[[],2],[[],[[2,[22]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[],[[2,[93]]]],[[81,4],5],[[82,4],5],[[83,4],5],[[84,4],5],[[86,4],5],[[87,4],5],[[88,4],5],[[89,4],5],[[[90,[57]],4],5],[[91,4],5],[[92,4],5],0,[[],22]],"c":[],"p":[[8,"Command"],[6,"Result"],[8,"FnOnce"],[8,"Write"],[6,"Result"],[3,"MoveTo"],[3,"MoveToNextLine"],[3,"MoveToPreviousLine"],[3,"MoveToColumn"],[3,"MoveToRow"],[3,"MoveUp"],[3,"MoveRight"],[3,"MoveDown"],[3,"MoveLeft"],[3,"SavePosition"],[3,"RestorePosition"],[3,"Hide"],[3,"Show"],[3,"EnableBlinking"],[3,"DisableBlinking"],[4,"SetCursorStyle"],[15,"bool"],[3,"Formatter"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"KeyboardEnhancementFlags"],[3,"KeyModifiers"],[3,"KeyEventState"],[15,"u8"],[3,"EnableMouseCapture"],[3,"DisableMouseCapture"],[3,"EnableFocusChange"],[3,"DisableFocusChange"],[3,"EnableBracketedPaste"],[3,"DisableBracketedPaste"],[3,"PushKeyboardEnhancementFlags"],[3,"PopKeyboardEnhancementFlags"],[4,"Event"],[3,"MouseEvent"],[4,"MouseEventKind"],[4,"MouseButton"],[4,"KeyEventKind"],[3,"KeyEvent"],[4,"MediaKeyCode"],[4,"ModifierKeyCode"],[4,"KeyCode"],[8,"IntoIterator"],[4,"Option"],[15,"str"],[8,"Hasher"],[3,"Iter"],[3,"IterNames"],[4,"Ordering"],[3,"Duration"],[3,"ContentStyle"],[8,"Display"],[3,"StyledContent"],[4,"Attribute"],[15,"u16"],[3,"Attributes"],[15,"u32"],[8,"Clone"],[4,"Color"],[4,"Colored"],[3,"Colors"],[3,"SetForegroundColor"],[3,"SetBackgroundColor"],[3,"SetUnderlineColor"],[3,"SetColors"],[3,"SetAttribute"],[3,"SetAttributes"],[3,"SetStyle"],[3,"PrintStyledContent"],[3,"ResetColor"],[3,"Print"],[8,"PartialEq"],[8,"Debug"],[15,"slice"],[8,"Iterator"],[3,"DisableLineWrap"],[3,"EnableLineWrap"],[3,"EnterAlternateScreen"],[3,"LeaveAlternateScreen"],[4,"ClearType"],[3,"ScrollUp"],[3,"ScrollDown"],[3,"Clear"],[3,"SetSize"],[3,"SetTitle"],[3,"BeginSynchronizedUpdate"],[3,"EndSynchronizedUpdate"],[3,"WindowSize"],[3,"winsize"],[8,"ExecutableCommand"],[8,"QueueableCommand"],[8,"SynchronizedUpdate"],[8,"Stylize"],[13,"Rgb"],[8,"IsTty"]]},\
"derive_new":{"doc":"A custom derive implementation for <code>#[derive(new)]</code>","t":"Y","n":["new"],"q":[[0,"derive_new"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"downcast_rs":{"doc":"Build status Latest version Documentation","t":"IIKKOKKK","n":["Downcast","DowncastSync","as_any","as_any_mut","impl_downcast","into_any","into_any_arc","into_any_rc"],"q":[[0,"downcast_rs"]],"d":["Supports conversion to <code>Any</code>. Traits to be extended by …","Extends <code>Downcast</code> to support <code>Sync</code> traits that thus support …","Convert <code>&amp;Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This is …","Convert <code>&amp;mut Trait</code> (where <code>Trait: Downcast</code>) to <code>&amp;Any</code>. This …","Adds downcasting support to traits that extend …","Convert <code>Box&lt;dyn Trait&gt;</code> (where <code>Trait: Downcast</code>) to …","Convert <code>Arc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Arc&lt;Any&gt;</code>. …","Convert <code>Rc&lt;Trait&gt;</code> (where <code>Trait: Downcast</code>) to <code>Rc&lt;Any&gt;</code>. …"],"i":[0,0,5,5,0,5,6,5],"f":[0,0,[[],1],[[],1],0,[2,[[2,[1]]]],[3,[[3,[1]]]],[4,[[4,[1]]]]],"c":[],"p":[[8,"Any"],[3,"Box"],[3,"Arc"],[3,"Rc"],[8,"Downcast"],[8,"DowncastSync"]]},\
"equivalent":{"doc":"<code>Equivalent</code> and <code>Comparable</code> are traits for key comparison in …","t":"IIKK","n":["Comparable","Equivalent","compare","equivalent"],"q":[[0,"equivalent"]],"d":["Key ordering trait.","Key equivalence trait.","Compare self to <code>key</code> and return their ordering.","Compare self to <code>key</code> and return <code>true</code> if they are equal."],"i":[0,0,3,4],"f":[0,0,[[],1],[[],2]],"c":[],"p":[[4,"Ordering"],[15,"bool"],[8,"Comparable"],[8,"Equivalent"]]},\
"fastrand":{"doc":"A simple and fast random number generator.","t":"DFLFLFLLLFLFLFLLLLFLLLFLFLLLLLFLFLFLFLFLFLLFLFLLFLFLLLLLFLFLFLFLFLFLFLL","n":["Rng","alphabetic","alphabetic","alphanumeric","alphanumeric","bool","bool","borrow","borrow_mut","char","char","choice","choice","choose_multiple","choose_multiple","clone","clone_into","default","digit","digit","eq","equivalent","f32","f32","f64","f64","fill","fmt","fork","from","get_seed","get_seed","i128","i128","i16","i16","i32","i32","i64","i64","i8","i8","into","isize","isize","lowercase","lowercase","new","seed","seed","shuffle","shuffle","to_owned","try_from","try_into","type_id","u128","u128","u16","u16","u32","u32","u64","u64","u8","u8","uppercase","uppercase","usize","usize","with_seed"],"q":[[0,"fastrand"]],"d":["A random number generator.","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z and A-Z.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Generates a random <code>char</code> in ranges a-z, A-Z and 0-9.","Generates a random <code>bool</code>.","Generates a random <code>bool</code>.","","","Generates a random <code>char</code> in the given range.","Generates a random <code>char</code> in the given range.","Choose an item from an iterator at random.","Choose an item from an iterator at random.","Collects <code>amount</code> values at random from the iterator into a …","Collects <code>amount</code> values at random from the iterator into a …","Clones the generator by creating a new generator with the …","","Initialize the <code>Rng</code> from the system’s random number …","Generates a random digit in the given <code>base</code>.","Generates a random digit in the given <code>base</code>.","","","Generates a random <code>f32</code> in range <code>0..1</code>.","Generates a random <code>f32</code> in range <code>0..1</code>.","Generates a random <code>f64</code> in range <code>0..1</code>.","Generates a random <code>f64</code> in range <code>0..1</code>.","Fill a byte slice with random data.","","Clones the generator by deterministically deriving a new …","Returns the argument unchanged.","Gives back <strong>current</strong> seed that is being held by the …","Gives back <strong>current</strong> seed that is being held by this …","Generates a random <code>i128</code> in the given range.","Generates a random <code>i128</code> in the given range.","Generates a random <code>i16</code> in the given range.","Generates a random <code>i16</code> in the given range.","Generates a random <code>i32</code> in the given range.","Generates a random <code>i32</code> in the given range.","Generates a random <code>i64</code> in the given range.","Generates a random <code>i64</code> in the given range.","Generates a random <code>i8</code> in the given range.","Generates a random <code>i8</code> in the given range.","Calls <code>U::from(self)</code>.","Generates a random <code>isize</code> in the given range.","Generates a random <code>isize</code> in the given range.","Generates a random <code>char</code> in range a-z.","Generates a random <code>char</code> in range a-z.","Creates a new random number generator.","Initializes the thread-local generator with the given seed.","Initializes this generator with the given seed.","Shuffles a slice randomly.","Shuffles a slice randomly.","","","","","Generates a random <code>u128</code> in the given range.","Generates a random <code>u128</code> in the given range.","Generates a random <code>u16</code> in the given range.","Generates a random <code>u16</code> in the given range.","Generates a random <code>u32</code> in the given range.","Generates a random <code>u32</code> in the given range.","Generates a random <code>u64</code> in the given range.","Generates a random <code>u64</code> in the given range.","Generates a random <code>u8</code> in the given range.","Generates a random <code>u8</code> in the given range.","Generates a random <code>char</code> in range A-Z.","Generates a random <code>char</code> in range A-Z.","Generates a random <code>usize</code> in the given range.","Generates a random <code>usize</code> in the given range.","Creates a new random number generator with the initial …"],"i":[0,0,2,0,2,0,2,2,2,0,2,0,2,0,2,2,2,2,0,2,2,2,0,2,0,2,2,2,2,2,0,2,0,2,0,2,0,2,0,2,0,2,2,0,2,0,2,2,0,2,0,2,2,2,2,2,0,2,0,2,0,2,0,2,0,2,0,2,0,2,2],"f":[0,[[],1],[2,1],[[],1],[2,1],[[],3],[2,3],[[]],[[]],[[[4,[1]]],1],[[2,[4,[1]]],1],[5,6],[[2,5],6],[[7,8],9],[[2,7,8],9],[2,2],[[]],[[],2],[10,1],[[2,10],1],[[2,2],3],[[],3],[[],11],[2,11],[[],12],[2,12],[[2,[14,[13]]]],[[2,15],16],[2,2],[[]],[[],17],[2,17],[[[4,[18]]],18],[[2,[4,[18]]],18],[[[4,[19]]],19],[[2,[4,[19]]],19],[[[4,[20]]],20],[[2,[4,[20]]],20],[[[4,[21]]],21],[[2,[4,[21]]],21],[[[4,[22]]],22],[[2,[4,[22]]],22],[[]],[[[4,[23]]],23],[[2,[4,[23]]],23],[[],1],[2,1],[[],2],[17],[[2,17]],[14],[[2,14]],[[]],[[],24],[[],24],[[],25],[[[4,[26]]],26],[[2,[4,[26]]],26],[[[4,[27]]],27],[[2,[4,[27]]],27],[[[4,[10]]],10],[[2,[4,[10]]],10],[[[4,[17]]],17],[[2,[4,[17]]],17],[[[4,[13]]],13],[[2,[4,[13]]],13],[[],1],[2,1],[[[4,[8]]],8],[[2,[4,[8]]],8],[17,2]],"c":[],"p":[[15,"char"],[3,"Rng"],[15,"bool"],[8,"RangeBounds"],[8,"IntoIterator"],[4,"Option"],[8,"Iterator"],[15,"usize"],[3,"Vec"],[15,"u32"],[15,"f32"],[15,"f64"],[15,"u8"],[15,"slice"],[3,"Formatter"],[6,"Result"],[15,"u64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[4,"Result"],[3,"TypeId"],[15,"u128"],[15,"u16"]]},\
"fixedbitset":{"doc":"<code>FixedBitSet</code> is a simple fixed size set of bits.","t":"DDIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Difference","FixedBitSet","IndexRange","Intersection","Ones","SymmetricDifference","Union","as_mut_slice","as_slice","bitand","bitand_assign","bitand_assign","bitor","bitor_assign","bitor_assign","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","cmp","contains","copy_bit","count_ones","default","difference","difference_with","end","end","eq","extend","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","grow","hash","index","insert","insert_range","intersect_with","intersection","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_clear","is_disjoint","is_empty","is_subset","is_superset","len","new","next","next","next","next","next","ones","partial_cmp","put","set","set_range","start","start","symmetric_difference","symmetric_difference_with","to_owned","to_string","toggle","toggle_range","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union_with","with_capacity","with_capacity_and_blocks"],"q":[[0,"fixedbitset"]],"d":["An iterator producing elements in the difference of two …","<code>FixedBitSet</code> is a simple fixed size set of bits that each …","<strong>IndexRange</strong> is implemented by Rust’s built-in range …","An iterator producing elements in the intersection of two …","An  iterator producing the indices of the set bit in a set.","An iterator producing elements in the symmetric difference …","An iterator producing elements in the union of two sets.","View the bitset as a mutable slice of <code>u32</code> blocks. Writing …","View the bitset as a slice of <code>u32</code> blocks","","","","","","","","","","","","","","","","","","","","","","Clear all bits.","","","","Return <strong>true</strong> if the bit is enabled in the <strong>FixedBitSet</strong>, <strong>false</strong>…","Copies boolean value from specified bit to the specified …","Count the number of set bits in the given bit range.","","Returns a lazy iterator over the difference of two …","In-place difference of two <code>FixedBitSet</code>s.","End index (exclusive)","End index (exclusive)","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Grow capacity to <strong>bits</strong>, all new bits initialized to zero","","","Enable <code>bit</code>.","Enables every bit in the given range.","In-place intersection of two <code>FixedBitSet</code>s.","Returns a lazy iterator over the intersection of two …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","<code>true</code> if all bits in the <code>FixedBitSet</code> are unset.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","<code>true</code> if the <code>FixedBitSet</code> is empty.","Returns <code>true</code> if the set is a subset of another, i.e. <code>other</code> …","Returns <code>true</code> if the set is a superset of another, i.e. <code>self</code>…","The length of the <code>FixedBitSet</code> in bits.","Create a new empty <strong>FixedBitSet</strong>.","","","","","","Iterates over all enabled bits.","","Enable <code>bit</code>, and return its previous value.","<strong>Panics</strong> if <strong>bit</strong> is out of bounds.","Sets every bit in the given range to the given state (…","Start index (inclusive)","Start index (inclusive)","Returns a lazy iterator over the symmetric difference of …","In-place symmetric difference of two <code>FixedBitSet</code>s.","","","Toggle <code>bit</code> (inverting its state).","Toggles (inverts) every bit in the given range.","","","","","","","","","","","","","","","","","","","Returns a lazy iterator over the union of two <code>FixedBitSet</code>s.","In-place union of two <code>FixedBitSet</code>s.","Create a new <strong>FixedBitSet</strong> with a specific number of bits, …","Create a new <strong>FixedBitSet</strong> with a specific number of bits, …"],"i":[0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,8,17,16,18,19,1,8,17,16,18,19,1,1,1,1,1,1,1,1,1,1,1,7,7,1,1,1,1,1,8,17,16,18,19,1,1,1,1,1,1,1,1,1,8,17,16,18,19,1,8,17,16,18,19,1,1,1,1,1,1,1,8,17,16,18,19,1,1,1,1,1,7,7,1,1,1,1,1,1,8,17,16,18,19,1,8,17,16,18,19,1,8,17,16,18,19,1,1,1,1,1],"f":[0,0,0,0,0,0,0,[1,[[3,[2]]]],[1,[[3,[2]]]],[[1,1],1],[[1,1]],[[1,1]],[[1,1],1],[[1,1]],[[1,1]],[[1,1],1],[[1,1]],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[1,1],[[]],[[1,1],4],[[1,5],6],[[1,5,5]],[[1,7],5],[[],1],[[1,1],8],[[1,1]],[[],9],[[],9],[[1,1],6],[[1,10]],[[1,11],12],[[1,11],[[14,[13]]]],[[1,11],[[14,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[10,1],[[1,5]],[[1,15]],[[1,5],6],[[1,5]],[[1,7]],[[1,1]],[[1,1],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,6],[[1,1],6],[1,6],[[1,1],6],[[1,1],6],[1,5],[[],1],[8,9],[17,9],[16,9],[18,9],[19,9],[1,19],[[1,1],[[9,[4]]]],[[1,5],6],[[1,5,6]],[[1,7,6]],[[],9],[[],9],[[1,1],17],[[1,1]],[[]],[[],20],[[1,5]],[[1,7]],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[1,1],18],[[1,1]],[5,1],[[5,10],1]],"c":[],"p":[[3,"FixedBitSet"],[15,"u32"],[15,"slice"],[4,"Ordering"],[15,"usize"],[15,"bool"],[8,"IndexRange"],[3,"Difference"],[4,"Option"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Result"],[8,"Hasher"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[3,"Ones"],[3,"String"],[3,"TypeId"]]},\
"fnv":{"doc":"An implementation of the Fowler–Noll–Vo hash function.","t":"GGGDLLLLLLLLLLL","n":["FnvBuildHasher","FnvHashMap","FnvHashSet","FnvHasher","borrow","borrow_mut","default","finish","from","into","try_from","try_into","type_id","with_key","write"],"q":[[0,"fnv"]],"d":["A builder for default FNV hashers.","A <code>HashMap</code> using a default FNV hasher.","A <code>HashSet</code> using a default FNV hasher.","An implementation of the Fowler–Noll–Vo hash function.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","Create an FNV hasher starting with a state corresponding …",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1],"f":[0,0,0,0,[[]],[[]],[[],1],[1,2],[[]],[[]],[[],3],[[],3],[[],4],[2,1],[[1,[6,[5]]]]],"c":[],"p":[[3,"FnvHasher"],[15,"u64"],[4,"Result"],[3,"TypeId"],[15,"u8"],[15,"slice"]]},\
"futures":{"doc":"Abstractions for asynchronous programming.","t":"CCCCCCCCCCCCCCCCCCAAAOAAOOOOAOOOAAOAOAADDDDDDDLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLDDDDLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDFFLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDGDNNEDQDDDDIINNIDNNDDDDDDDDDDDNGDDDDDDEDQDDDQDDDDDDNDDDDDDDIIDDDDDEDDIDDFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLFLLFLLLLLFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLFLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNDNNIIIIIIIINDDDDNNNDDDNNDNNDNDENNNNDDNNDNNNDDNDDNNNNNNNNNDDDDNDDDDDNGDDDEDNNNDNNNNDNDDDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLFFFLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGIIIIQQQIQQQQIIIICCCCCCCCCKAKKKKKKKKLKKKLALKAKKDDDDDGDNNEDQDDDDIINNIDNNDDDDDDDDDDDNGDDDDDDEDQDDDQDDDDDDNDDDDDDDIIDDDDDEDDIDDFLLLLKFLLLLLLLLLKLKFFFFFFLLLLLLFLLFLLFKFFLFLLFFFLLLLFFFFFFKLFLLDDDQDDDDDIDIDDDDLLFLLLLKLKLKLLLLLLKLFLLDDDDDDDGDDDDDDDDDDDDQDDDDDGDDDDDIDDDDDDDQDNGDDDDDDQDDDDDDDDEDDDDNDDDDDDDDDIIDDDDDDDDDDDDDDDDDDDDDDIIDDDDDFLLLLLLLLLLLLLLLFLLLLLLLLLLLLLALLLLLLKFLLLLLFLLFFFKLLFFLLFAFLFLLLLLLLLLLLLLLLLLLLLLLLKLLLLFFLLDDDDDDDDDDFDDDQDDDDDIDIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLDDDDDDDGDDDDDDDDDDDDQDDDDDGDDDDDIDDDDDDDQDNGDDDDDDQDDDDDDDDEDDDDNDDDDDDDDDIIDDDDDDDDDDDDDDDDDDDDDDIIDDDDDLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLFLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLFAFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLIDDDDIINEDDNIDIIDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLFFLLLLLLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLFLFL","n":["AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","Future","FutureExt","Sink","SinkExt","Stream","StreamExt","TryFuture","TryFutureExt","TryStream","TryStreamExt","executor","future","io","join","lock","never","pending","pin_mut","poll","poll","prelude","ready","select","select_biased","sink","stream","stream_select","task","try_join","mpsc","oneshot","Receiver","SendError","Sender","TryRecvError","TrySendError","UnboundedReceiver","UnboundedSender","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","close","close_channel","close_channel","disconnect","disconnect","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash_receiver","hash_receiver","into","into","into","into","into","into","into","into_inner","into_send_error","is_closed","is_closed","is_connected_to","is_connected_to","is_disconnected","is_disconnected","is_empty","is_full","is_full","is_terminated","is_terminated","len","poll_close","poll_close","poll_close","poll_flush","poll_flush","poll_flush","poll_next","poll_next","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","same_receiver","same_receiver","size_hint","size_hint","start_send","start_send","start_send","start_send","start_send","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_next","try_poll_next","try_poll_next","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded","unbounded_send","Canceled","Cancellation","Receiver","Sender","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancellation","channel","clone","clone_into","close","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_future","into_future","is_canceled","is_connected_to","is_terminated","poll","poll","poll_canceled","send","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll","try_recv","type_id","type_id","type_id","type_id","BlockingStream","Enter","EnterError","LocalPool","LocalSpawner","block_on","block_on_stream","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","enter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_inner","into_iter","new","next","run","run_until","run_until_stalled","size_hint","spawn_local_obj","spawn_obj","spawner","status","status_local","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_run_one","type_id","type_id","type_id","type_id","type_id","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxFuture","CatchUnwind","Done","Done","Either","ErrInto","Error","Flatten","FlattenSink","FlattenStream","Fuse","FusedFuture","Future","Future","Future","FutureExt","FutureObj","Gone","Gone","Inspect","InspectErr","InspectOk","IntoFuture","IntoStream","Join","Join3","Join4","Join5","JoinAll","Lazy","Left","LocalBoxFuture","LocalFutureObj","Map","MapErr","MapInto","MapOk","MapOkOrElse","MaybeDone","NeverError","Ok","OkInto","OptionFuture","OrElse","Output","Pending","PollFn","PollImmediate","Ready","Remote","RemoteHandle","Right","Select","SelectAll","SelectOk","Shared","Then","TryFlatten","TryFlattenStream","TryFuture","TryFutureExt","TryJoin","TryJoin3","TryJoin4","TryJoin5","TryJoinAll","TryMaybeDone","TrySelect","UnitError","UnsafeFutureObj","UnwrapOrElse","WeakShared","abortable","and_then","as_pin_mut","as_pin_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed_local","catch_unwind","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consume","default","downgrade","drop","drop","drop","err","err_into","factor_first","factor_second","flatten","flatten_sink","flatten_stream","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","fuse","inspect","inspect_err","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_raw","into_raw","into_stream","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","join","join3","join4","join5","join_all","lazy","left_future","map","map_err","map_into","map_ok","map_ok_or_else","maybe_done","never_error","now_or_never","ok","ok_into","or_else","output_mut","output_mut","peek","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_read","poll_read_vectored","poll_ready","poll_ready","poll_ready","poll_ready","poll_seek","poll_unpin","poll_write","poll_write_vectored","ptr_eq","ptr_hash","ready","remote_handle","right_future","select","select_all","select_ok","shared","size_hint","size_hint","size_hint","size_hint","size_hint","start_send","start_send","start_send","start_send","strong_count","take_output","take_output","terminated","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_flatten","try_flatten_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_join","try_join3","try_join4","try_join5","try_join_all","try_maybe_done","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_unpin","try_select","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_error","unwrap_or_else","upgrade","weak_count","AddrInUse","AddrNotAvailable","AllowStdIo","AlreadyExists","ArgumentListTooLong","AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","BrokenPipe","BufReader","BufWriter","Chain","Close","ConnectionAborted","ConnectionRefused","ConnectionReset","Copy","CopyBuf","CopyBufAbortable","CrossesDevices","Current","Cursor","Deadlock","DirectoryNotEmpty","Empty","End","Error","ErrorKind","ExecutableFileBusy","FileTooLarge","FilesystemLoop","FilesystemQuotaExceeded","FillBuf","Flush","HostUnreachable","Interrupted","IntoSink","InvalidData","InvalidFilename","InvalidInput","IoSlice","IoSliceMut","IsADirectory","LineWriter","Lines","NetworkDown","NetworkUnreachable","NotADirectory","NotConnected","NotFound","NotSeekable","Other","OutOfMemory","PermissionDenied","Read","ReadExact","ReadHalf","ReadLine","ReadOnlyFilesystem","ReadToEnd","ReadToString","ReadUntil","ReadVectored","Repeat","ResourceBusy","Result","ReuniteError","SeeKRelative","Seek","SeekFrom","Sink","StaleNetworkFileHandle","Start","StorageFull","Take","TimedOut","TooManyLinks","UnexpectedEof","Unsupported","Window","WouldBlock","Write","WriteAll","WriteHalf","WriteVectored","WriteZero","advance","advance","advance_slices","advance_slices","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","cause","chain","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","consume","consume","consume","consume","consume","consume","consume","consume","consume","consume_unpin","copy","copy_buf","copy_buf_abortable","default","deref","deref","deref_mut","description","downcast","empty","end","eq","eq","eq","equivalent","equivalent","equivalent","fill_buf","fill_buf","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_os_error","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_sink","kind","last_os_error","limit","lines","new","new","new","new","new","new","new","new","new","other","partial_cmp","partial_cmp","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_next","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_ready","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek_relative","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","position","raw_os_error","read","read","read_exact","read_exact","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_until","read_vectored","read_vectored","repeat","reunite","reunite","seek","seek","seek_relative","set","set_limit","set_position","sink","source","split","start","start_send","stream_position","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity","with_capacity","write","write","write_all","write_all","write_fmt","write_vectored","write_vectored","MappedMutexGuard","Mutex","MutexGuard","MutexLockFuture","OwnedMutexGuard","OwnedMutexLockFuture","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_mut","into","into","into","into","into","into","into_future","into_future","into_inner","is_terminated","is_terminated","lock","lock_owned","map","map","new","poll","poll","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock_owned","type_id","type_id","type_id","type_id","type_id","type_id","Never","AsyncBufRead","AsyncRead","AsyncSeek","AsyncWrite","Error","Error","Error","Future","Item","Ok","Ok","Output","Sink","Stream","TryFuture","TryStream","_","_","_","_","_","_","_","_","_","consume","future","poll","poll_close","poll_close","poll_fill_buf","poll_flush","poll_flush","poll_next","poll_read","poll_read_vectored","poll_ready","poll_seek","poll_write","poll_write_vectored","sink","size_hint","start_send","stream","try_poll","try_poll_next","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxFuture","CatchUnwind","Done","Done","Either","ErrInto","Error","Flatten","FlattenSink","FlattenStream","Fuse","FusedFuture","Future","Future","Future","FutureExt","FutureObj","Gone","Gone","Inspect","InspectErr","InspectOk","IntoFuture","IntoStream","Join","Join3","Join4","Join5","JoinAll","Lazy","Left","LocalBoxFuture","LocalFutureObj","Map","MapErr","MapInto","MapOk","MapOkOrElse","MaybeDone","NeverError","Ok","OkInto","OptionFuture","OrElse","Output","Pending","PollFn","PollImmediate","Ready","Remote","RemoteHandle","Right","Select","SelectAll","SelectOk","Shared","Then","TryFlatten","TryFlattenStream","TryFuture","TryFutureExt","TryJoin","TryJoin3","TryJoin4","TryJoin5","TryJoinAll","TryMaybeDone","TrySelect","UnitError","UnsafeFutureObj","UnwrapOrElse","WeakShared","abortable","and_then","boxed","boxed_local","catch_unwind","drop","err","err_into","flatten","flatten_sink","flatten_stream","fuse","inspect","inspect_err","inspect_ok","into_future","into_raw","into_stream","is_terminated","join","join3","join4","join5","join_all","lazy","left_future","map","map_err","map_into","map_ok","map_ok_or_else","maybe_done","never_error","now_or_never","ok","ok_into","or_else","pending","poll","poll_fn","poll_immediate","poll_unpin","ready","remote_handle","right_future","select","select_all","select_ok","shared","then","try_flatten","try_flatten_stream","try_join","try_join3","try_join4","try_join5","try_join_all","try_maybe_done","try_poll","try_poll_unpin","try_select","unit_error","unwrap_or_else","Buffer","Close","Drain","Error","Fanout","Feed","Flush","Send","SendAll","Sink","SinkErrInto","SinkExt","SinkMapErr","Unfold","With","WithFlatMap","buffer","close","drain","fanout","feed","flush","left_sink","poll_close","poll_close_unpin","poll_flush","poll_flush_unpin","poll_ready","poll_ready_unpin","right_sink","send","send_all","sink_err_into","sink_map_err","start_send","start_send_unpin","unfold","with","with_flat_map","AbortHandle","AbortRegistration","Abortable","Aborted","All","AndThen","Any","BoxStream","BufferUnordered","Buffered","CatchUnwind","Chain","Chunks","Collect","Concat","Count","Cycle","Empty","Enumerate","ErrInto","Error","Filter","FilterMap","FlatMap","FlatMapUnordered","Flatten","FlattenUnordered","Fold","ForEach","ForEachConcurrent","Forward","Fuse","FusedStream","FuturesOrdered","FuturesUnordered","Inspect","InspectErr","InspectOk","IntoAsyncRead","IntoStream","Item","Iter","Left","LocalBoxStream","Map","MapErr","MapOk","Next","NextIf","NextIfEq","Ok","Once","OrElse","Peek","PeekMut","Peekable","Pending","PollFn","PollImmediate","PollNext","ReadyChunks","Repeat","RepeatWith","ReuniteError","Right","Scan","Select","SelectAll","SelectNextSome","SelectWithStrategy","Skip","SkipWhile","SplitSink","SplitStream","Stream","StreamExt","StreamFuture","Take","TakeUntil","TakeWhile","Then","TryBufferUnordered","TryBuffered","TryChunks","TryChunksError","TryCollect","TryConcat","TryFilter","TryFilterMap","TryFlatten","TryFlattenUnordered","TryFold","TryForEach","TryForEachConcurrent","TryNext","TryReadyChunks","TryReadyChunksError","TrySkipWhile","TryStream","TryStreamExt","TryTakeWhile","TryUnfold","Unfold","Unzip","Zip","abortable","all","and_then","any","boxed","boxed_local","buffer_unordered","buffered","by_ref","catch_unwind","chain","chunks","collect","concat","count","cycle","empty","enumerate","err_into","filter","filter_map","flat_map","flat_map_unordered","flatten","flatten_unordered","fold","for_each","for_each_concurrent","forward","fuse","futures_unordered","inspect","inspect_err","inspect_ok","into_async_read","into_future","into_stream","is_terminated","iter","left_stream","map","map_err","map_ok","next","once","or_else","peekable","pending","poll_fn","poll_immediate","poll_next","poll_next_unpin","ready_chunks","repeat","repeat_with","right_stream","scan","select","select_all","select_all","select_next_some","select_with_strategy","size_hint","skip","skip_while","split","take","take_until","take_while","then","try_all","try_any","try_buffer_unordered","try_buffered","try_chunks","try_collect","try_concat","try_filter","try_filter_map","try_flatten","try_flatten_unordered","try_fold","try_for_each","try_for_each_concurrent","try_next","try_poll_next","try_poll_next_unpin","try_ready_chunks","try_skip_while","try_take_while","try_unfold","unfold","unzip","zip","FuturesUnordered","IntoIter","Iter","IterMut","IterPinMut","IterPinRef","IntoIter","Iter","IterMut","SelectAll","select_all","Buffer","Close","Drain","Error","Fanout","Feed","Flush","Send","SendAll","Sink","SinkErrInto","SinkExt","SinkMapErr","Unfold","With","WithFlatMap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone","clone","clone_into","clone_into","clone_into","close","drain","fanout","feed","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","is_terminated","is_terminated","is_terminated","is_terminated","left_sink","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close_unpin","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush_unpin","poll_next","poll_next","poll_next","poll_next","poll_next","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready_unpin","right_sink","send","send_all","sink_err_into","sink_map_err","size_hint","size_hint","size_hint","size_hint","size_hint","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send_unpin","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","with","with_flat_map","AbortHandle","AbortRegistration","Abortable","Aborted","All","AndThen","Any","BoxStream","BufferUnordered","Buffered","CatchUnwind","Chain","Chunks","Collect","Concat","Count","Cycle","Empty","Enumerate","ErrInto","Error","Filter","FilterMap","FlatMap","FlatMapUnordered","Flatten","FlattenUnordered","Fold","ForEach","ForEachConcurrent","Forward","Fuse","FusedStream","FuturesOrdered","FuturesUnordered","Inspect","InspectErr","InspectOk","IntoAsyncRead","IntoStream","Item","Iter","Left","LocalBoxStream","Map","MapErr","MapOk","Next","NextIf","NextIfEq","Ok","Once","OrElse","Peek","PeekMut","Peekable","Pending","PollFn","PollImmediate","PollNext","ReadyChunks","Repeat","RepeatWith","ReuniteError","Right","Scan","Select","SelectAll","SelectNextSome","SelectWithStrategy","Skip","SkipWhile","SplitSink","SplitStream","Stream","StreamExt","StreamFuture","Take","TakeUntil","TakeWhile","Then","TryBufferUnordered","TryBuffered","TryChunks","TryChunksError","TryCollect","TryConcat","TryFilter","TryFilterMap","TryFlatten","TryFlattenUnordered","TryFold","TryForEach","TryForEachConcurrent","TryNext","TryReadyChunks","TryReadyChunksError","TrySkipWhile","TryStream","TryStreamExt","TryTakeWhile","TryUnfold","Unfold","Unzip","Zip","abort","abortable","all","and_then","any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed_local","buffer_unordered","buffered","by_ref","catch_unwind","chain","chunks","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect","concat","consume","count","cycle","default","default","default","default","drop","empty","enumerate","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","err_into","extend","extend","extend","filter","filter_map","flat_map","flat_map_unordered","flatten","flatten_unordered","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","for_each","for_each_concurrent","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","fuse","futures_unordered","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","handle","hash","inspect","inspect_err","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_async_read","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_stream","is_aborted","is_aborted","is_done","is_empty","is_empty","is_empty","is_stopped","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","iter","iter","iter","iter_mut","iter_mut","iter_pin_mut","iter_pin_ref","left_stream","len","len","len","map","map_err","map_ok","new","new","new","new","new_pair","next","next_if","next_if_eq","once","or_else","peek","peek_mut","peekable","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next_unpin","poll_peek","poll_peek_mut","poll_read","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_write","push","push","push","push_back","push_front","ready_chunks","repeat","repeat_with","reunite","reunite","right_stream","scan","select","select_all","select_all","select_next_some","select_with_strategy","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip_while","spawn_local_obj","spawn_obj","split","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","take","take_future","take_result","take_until","take_while","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","toggle","try_all","try_any","try_buffer_unordered","try_buffered","try_chunks","try_collect","try_concat","try_filter","try_filter_map","try_flatten","try_flatten_unordered","try_fold","try_for_each","try_for_each_concurrent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next_unpin","try_ready_chunks","try_skip_while","try_take_while","try_unfold","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","unzip","zip","FuturesUnordered","IntoIter","Iter","IterMut","IterPinMut","IterPinRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","IntoIter","Iter","IterMut","SelectAll","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","into_iter","next","next","next","select_all","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ArcWake","AtomicWaker","Context","FutureObj","LocalFutureObj","LocalSpawn","LocalSpawnExt","Pending","Poll","RawWaker","RawWakerVTable","Ready","Spawn","SpawnError","SpawnExt","UnsafeFutureObj","Waker","WakerRef","as_raw","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","branch","clone","clone","clone","clone_into","clone_into","clone_into","cmp","data","default","deref","drop","drop","drop","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_output","from_output","from_raw","from_residual","from_residual","from_waker","hash","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future_obj","into_raw","is_pending","is_ready","is_shutdown","map","map_err","map_err","map_ok","map_ok","new","new","new","new","new","new","new_unowned","noop","noop_waker","noop_waker_ref","partial_cmp","poll","poll","register","shutdown","spawn","spawn_local","spawn_local_obj","spawn_local_with_handle","spawn_obj","spawn_with_handle","status","status_local","take","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vtable","wake","wake","wake","wake_by_ref","wake_by_ref","waker","waker","waker_ref","will_wake"],"q":[[0,"futures"],[37,"futures::channel"],[39,"futures::channel::mpsc"],[178,"futures::channel::oneshot"],[237,"futures::executor"],[308,"futures::future"],[1124,"futures::io"],[1820,"futures::lock"],[1903,"futures::never"],[1904,"futures::prelude"],[1950,"futures::prelude::future"],[2090,"futures::prelude::sink"],[2129,"futures::prelude::stream"],[2328,"futures::prelude::stream::futures_unordered"],[2334,"futures::prelude::stream::select_all"],[2339,"futures::sink"],[2581,"futures::stream"],[4260,"futures::stream::futures_unordered"],[4321,"futures::stream::select_all"],[4359,"futures::task"]],"d":["","","","","","","","","","","","","","","","","","","Built-in executors and related tools.","Asynchronous values.","Asynchronous I/O.","Polls multiple futures simultaneously, returning a tuple …","Futures-powered synchronization primitives.","This module contains the <code>Never</code> type.","A macro which yields to the event loop once.","Pins a value on the stack.","A macro which returns the result of polling a future once …","A macro which returns the result of polling a future once …","A “prelude” for crates using the <code>futures</code> crate.","Extracts the successful type of a <code>Poll&lt;T&gt;</code>.","Polls multiple futures and streams simultaneously, …","Polls multiple futures and streams simultaneously, …","Asynchronous sinks.","Asynchronous streams.","Combines several streams, all producing the same <code>Item</code> …","Tools for working with tasks.","Polls multiple futures simultaneously, resolving to a …","A multi-producer, single-consumer queue for sending values …","A channel for sending a single message between …","The receiving end of a bounded mpsc channel.","The error type for <code>Sender</code>s used as <code>Sink</code>s.","The transmission end of a bounded mpsc channel.","The error type returned from <code>try_next</code>.","The error type returned from <code>try_send</code>.","The receiving end of an unbounded mpsc channel.","The transmission end of an unbounded mpsc channel.","","","","","","","","","","","","","","","Creates a bounded mpsc channel for communicating between …","","","","","","","","","Closes the receiving half of a channel, without dropping …","Closes the receiving half of a channel, without dropping …","Closes this channel from the sender side, preventing any …","Closes this channel from the sender side, preventing any …","Disconnects this sender from the channel, closing it if …","Disconnects this sender from the channel, closing it if …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Hashes the receiver into the provided hasher","Hashes the receiver into the provided hasher","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the message that was attempted to be sent but …","Drops the message and converts into a <code>SendError</code>.","Returns whether this channel is closed without needing a …","Returns whether this channel is closed without needing a …","Returns whether the sender send to this receiver.","Returns whether the sender send to this receiver.","Returns <code>true</code> if this error is a result of the receiver …","Returns <code>true</code> if this error is a result of the receiver …","Return false is channel has no queued messages, true …","Returns <code>true</code> if this error is a result of the channel …","Returns <code>true</code> if this error is a result of the channel …","","","Return the number of messages in the queue or 0 if channel …","","","","","","","","","","Polls the channel to determine if there is guaranteed …","Check if the channel is ready to receive a message.","","","Returns whether the senders send to the same receiver.","Returns whether the senders send to the same receiver.","","","","Send a message on the channel.","","","Send a message on the channel.","","","","","","","","","","","","","","","","","","","","","","Tries to receive the next message without notifying a …","Tries to receive the next message without notifying a …","","","Attempts to send a message on this <code>Sender</code>, returning the …","","","","","","","","Creates an unbounded mpsc channel for communicating …","Sends a message along this channel.","Error returned from a <code>Receiver</code> when the corresponding …","A future that resolves when the receiving end of a channel …","A future for a value that will be provided by another …","A means of transmitting a single value to another task.","","","","","","","","","Creates a future that resolves when this <code>Sender</code>’s …","Creates a new one-shot channel for sending a single value …","","","Gracefully close this receiver, preventing any subsequent …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Tests to see whether this <code>Sender</code>’s corresponding <code>Receiver</code>","Tests to see whether this <code>Sender</code> is connected to the given …","","","","Polls this <code>Sender</code> half to detect whether its associated …","Completes this oneshot with a successful result.","","","","","","","","","","","","Attempts to receive a message outside of the context of a …","","","","","An iterator which blocks on values from a stream until …","Represents an executor context.","An error returned by <code>enter</code> if an execution scope has …","A single-threaded task pool for polling futures to …","A handle to a <code>LocalPool</code> that implements <code>Spawn</code>.","Run a future to completion on the current thread.","Turn a stream into a blocking iterator.","","","","","","","","","","","","","","","","","Marks the current thread as being within the dynamic …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this <code>BlockingStream</code> into the inner <code>Stream</code> type.","","Create a new, empty pool of tasks.","","Run all tasks in the pool to completion.","Runs all the tasks in the pool until the given future …","Runs all tasks in the pool and returns if no more progress …","","","","Get a clonable handle to the pool as a <code>Spawn</code>.","","","","","","","","","","","","","","","Runs all tasks and returns after completing one future or …","","","","","","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>and_then</code> method.","An owned dynamically typed <code>Future</code> for use in cases where …","Future for the <code>catch_unwind</code> method.","The output of the completed future","The output of the completed future","Combines two different futures, streams, or sinks having …","Future for the <code>err_into</code> method.","The type of failures yielded by this future","Future for the <code>flatten</code> method.","Sink for the <code>flatten_sink</code> method.","Stream for the <code>flatten_stream</code> method.","Future for the <code>fuse</code> method.","A future which tracks whether or not the underlying future …","A future represents an asynchronous computation obtained …","A not-yet-completed future","A not-yet-completed future","An extension trait for <code>Future</code>s that provides a variety of …","A custom trait object for polling futures, roughly akin to …","The empty variant after the result of a <code>MaybeDone</code> has been …","The empty variant after the result of a <code>TryMaybeDone</code> has …","Future for the <code>inspect</code> method.","Future for the <code>inspect_err</code> method.","Future for the <code>inspect_ok</code> method.","Future for the <code>into_future</code> method.","Stream for the <code>into_stream</code> method.","Future for the <code>join</code> function.","Future for the <code>join3</code> function.","Future for the <code>join4</code> function.","Future for the <code>join5</code> function.","Future for the <code>join_all</code> function.","Future for the <code>lazy</code> function.","First branch of the type","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","A custom trait object for polling futures, roughly akin to …","Future for the <code>map</code> method.","Future for the <code>map_err</code> method.","Future for the <code>map_into</code> combinator.","Future for the <code>map_ok</code> method.","Future for the <code>map_ok_or_else</code> method.","A future that may have completed.","Future for the <code>never_error</code> combinator.","The type of successful values yielded by this future","Future for the <code>ok_into</code> method.","A future representing a value which may or may not be …","Future for the <code>or_else</code> method.","The type of value produced on completion.","Future for the <code>pending()</code> function.","Future for the <code>poll_fn</code> function.","Future for the <code>poll_immediate</code> function.","Future for the <code>ready</code> function.","A future which sends its output to the corresponding …","The handle to a remote future returned by <code>remote_handle</code>. …","Second branch of the type","Future for the <code>select()</code> function.","Future for the <code>select_all</code> function.","Future for the <code>select_ok</code> function.","Future for the <code>shared</code> method.","Future for the <code>then</code> method.","Future for the <code>try_flatten</code> method.","Future for the <code>try_flatten_stream</code> method.","A convenience for futures that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning futures","Future for the <code>try_join</code> function.","Future for the <code>try_join3</code> function.","Future for the <code>try_join4</code> function.","Future for the <code>try_join5</code> function.","Future for the <code>try_join_all</code> function.","A future that may have completed with an error.","Future for the <code>try_select()</code> function.","Future for the <code>unit_error</code> combinator.","A custom implementation of a future trait object for …","Future for the <code>unwrap_or_else</code> method.","A weak reference to a <code>Shared</code> that can be upgraded much …","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …","Executes another future after this one resolves …","Convert <code>Pin&lt;&amp;mut Either&lt;A, B&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;A, B&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;A&gt;, Pin&lt;&amp;B&gt;&gt;</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Catches unwinding panics while polling the future.","","","","","","","","","","","","","","","","","Creates a new <code>WeakShared</code> for this <code>Shared</code>.","Drops the future represented by the given fat pointer.","","","Create a future that is immediately ready with an error …","Maps this future’s <code>Error</code> to a new error type using the …","Factor out a homogeneous type from an either of pairs.","Factor out a homogeneous type from an either of pairs.","Flatten the execution of this future when the output of …","Flattens the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drops this handle <em>without</em> canceling the underlying future.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Fuse a future such that <code>poll</code> will never again be called …","Do something with the output of a future before passing it …","Do something with the error value of a future before …","Do something with the success value of a future before …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps the value from this immediately ready future.","Consumes this combinator, returning the underlying futures.","Extract the value of an either over two equivalent types.","Convert an owned instance into a (conceptually owned) fat …","","Convert this future into a single element stream.","Returns <code>true</code> if the underlying future should no longer be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Creates a future which represents a collection of the …","Creates a new future that allows delayed execution of a …","Wrap this future in an <code>Either</code> future, making it the …","Map this future’s output to a different type, returning …","Maps this future’s error value to a different value.","Map this future’s output to a different type, returning …","Maps this future’s success value to a different value.","Maps this future’s success value to a different value, …","Wraps a future into a <code>MaybeDone</code>","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Evaluates and consumes the future, returning the resulting …","Create a future that is immediately ready with a success …","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Executes another future if this one resolves to an error. …","Returns an <code>Option</code> containing a mutable reference to the …","Returns an <code>Option</code> containing a mutable reference to the …","Returns <code>Some</code> containing a reference to this <code>Shared</code>’s …","Creates a future which never resolves, representing a …","Attempt to resolve the future to a final value, registering","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new future wrapping around a function returning …","Creates a future that is immediately ready with an Option …","","","","","","","","","","","","","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","","","Returns <code>true</code> if the two <code>Shared</code>s point to the same future …","Hashes the internal state of this <code>Shared</code> in a way that’s …","Creates a future that is immediately ready with a value.","Turn this future into a future that yields <code>()</code> on …","Wrap this future in an <code>Either</code> future, making it the …","Waits for either one of two differently-typed futures to …","Creates a new future which will select over a list of …","Creates a new future which will select the first …","Create a cloneable handle to this future where all handles …","","","","","","","","","","Gets the number of strong pointers to this allocation.","Attempt to take the output of a <code>MaybeDone</code> without driving …","Attempt to take the output of a <code>TryMaybeDone</code> without …","Creates a new <code>Fuse</code>-wrapped future which is already …","Chain on a computation for when a future finished, passing …","","","","","","","","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Creates a future which represents either a collection of …","Wraps a future into a <code>TryMaybeDone</code>","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryFuture::try_poll</code> on …","Waits for either one of two differently-typed futures to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Unwraps this future’s output, producing a future with …","Attempts to upgrade this <code>WeakShared</code> into a <code>Shared</code>.","Gets the number of weak pointers to this allocation.","A socket address could not be bound because the address is …","A nonexistent interface was requested or the requested …","A simple wrapper type which allows types which implement …","An entity already exists, often a file.","Program argument list too long.","Read bytes asynchronously.","An extension trait which adds utility methods to …","Read bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncRead</code> …","Seek bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncSeek</code> …","Write bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncWrite</code>…","The operation failed because a pipe was closed.","The <code>BufReader</code> struct adds buffering to any reader.","Wraps a writer and buffers its output.","Reader for the <code>chain</code> method.","Future for the <code>close</code> method.","The connection was aborted (terminated) by the remote …","The connection was refused by the remote server.","The connection was reset by the remote server.","Future for the <code>copy()</code> function.","Future for the <code>copy_buf()</code> function.","Future for the [<code>copy_buf()</code>] function.","Cross-device or cross-filesystem (hard) link or rename.","Sets the offset to the current position plus the specified …","A <code>Cursor</code> wraps an in-memory buffer and provides it with a …","Deadlock (avoided).","A non-empty directory was specified where an empty …","Reader for the <code>empty()</code> function.","Sets the offset to the size of this object plus the …","The error type for I/O operations of the <code>Read</code>, <code>Write</code>, <code>Seek</code>…","A list specifying general categories of I/O error.","Executable file is busy.","File larger than allowed or supported.","Loop in the filesystem or IO subsystem; often, too many …","Filesystem quota was exceeded.","Future for the <code>fill_buf</code> method.","Future for the <code>flush</code> method.","The remote host is not reachable.","This operation was interrupted.","Sink for the <code>into_sink</code> method.","Data not valid for the operation were encountered.","A filename was invalid.","A parameter was incorrect.","A buffer type used with <code>Write::write_vectored</code>.","A buffer type used with <code>Read::read_vectored</code>.","The filesystem object is, unexpectedly, a directory.","Wrap a writer, like <code>BufWriter</code> does, but prioritizes …","Stream for the <code>lines</code> method.","The system’s networking is down.","The network containing the remote host is not reachable.","A filesystem object is, unexpectedly, not a directory.","The network operation failed because it was not connected …","An entity was not found, often a file.","Seek on unseekable file.","A custom error that does not fall under any other I/O …","An operation could not be completed, because it failed to …","The operation lacked the necessary privileges to complete.","Future for the <code>read</code> method.","Future for the <code>read_exact</code> method.","The readable half of an object returned from …","Future for the <code>read_line</code> method.","The filesystem or storage medium is read-only, but a write …","Future for the <code>read_to_end</code> method.","Future for the <code>read_to_string</code> method.","Future for the <code>read_until</code> method.","Future for the <code>read_vectored</code> method.","Reader for the <code>repeat()</code> function.","Resource is busy.","A specialized <code>Result</code> type for I/O operations.","Error indicating a <code>ReadHalf&lt;T&gt;</code> and <code>WriteHalf&lt;T&gt;</code> were not …","Future for the <code>BufReader::seek_relative</code> method.","Future for the <code>seek</code> method.","Enumeration of possible methods to seek within an I/O …","Writer for the <code>sink()</code> function.","Stale network file handle.","Sets the offset to the provided number of bytes.","The underlying storage (typically, a filesystem) is full.","Reader for the <code>take</code> method.","The I/O operation’s timeout expired, causing it to be …","Too many (hard) links to the same filesystem object.","An error returned when an operation could not be completed …","This operation is unsupported on this platform.","An owned window around an underlying buffer.","The operation needs to block to complete, but the blocking …","Future for the <code>write</code> method.","Future for the <code>write_all</code> method.","The writable half of an object returned from …","Future for the <code>write_vectored</code> method.","An error returned when an operation could not be completed …","Advance the internal cursor of the slice.","Advance the internal cursor of the slice.","Advance a slice of slices.","Advance a slice of slices.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the internally buffered data.","Returns a reference to the internally buffered data.","Returns a reference to <code>buf_writer</code>’s internally buffered …","","Creates an adaptor which will chain this stream with …","","","","","","","","","","","Creates a future which will entirely close this <code>AsyncWrite</code>.","","","Tells this buffer that <code>amt</code> bytes have been consumed from …","","","","","","","","","A convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …","Creates a future which copies all the bytes from one …","Creates a future which copies all the bytes from one …","Creates a future which copies all the bytes from one …","","","","","","Attempt to downgrade the inner error to <code>E</code> if any.","Constructs a new handle to an empty reader.","Returns the end index of this window into the underlying …","","","","","","","Creates a future which will wait for a non-empty buffer to …","","Creates a future which will entirely flush this <code>AsyncWrite</code>.","","","","","","","","","","Shows a human-readable description of the <code>ErrorKind</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>alloc::ffi::NulError</code> into a <code>Error</code>.","Returns the argument unchanged.","Converts an <code>ErrorKind</code> into an <code>Error</code>.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new instance of an <code>Error</code> from a particular OS …","Returns a mutable reference to the inner error wrapped by …","Returns a mutable reference to the contained IO object.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Gets mutable references to the underlying readers in this …","Gets a mutable reference to the underlying value in this …","Acquires a mutable reference to the underlying sink or …","Gets a mutable reference to the underlying buffer inside …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Gets pinned mutable references to the underlying readers …","Acquires a pinned mutable reference to the underlying sink …","Returns a reference to the inner error wrapped by this …","Returns a reference to the contained IO object.","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Gets references to the underlying readers in this <code>Chain</code>.","Gets a reference to the underlying value in this cursor.","Acquires a reference to the underlying sink or stream that …","Gets a shared reference to the underlying buffer inside of …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Consumes the <code>Error</code>, returning its inner error (if any).","Consumes self and returns the contained IO object.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes the <code>Chain</code>, returning the wrapped readers.","Consumes this cursor, returning the underlying value.","Consumes this combinator, returning the underlying sink or …","Consumes this <code>Window</code>, returning the underlying buffer.","Allow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.","Returns the corresponding <code>ErrorKind</code> for this error.","Returns an error representing the last OS error which …","Returns the remaining number of bytes that can be read …","Returns a stream over the lines of this reader. This …","Creates a new I/O error from a known kind of error as well …","Creates a new <code>IoSliceMut</code> wrapping a byte slice.","Creates a new <code>IoSlice</code> wrapping a byte slice.","Creates a new <code>AllowStdIo</code> from an existing IO object.","Creates a new <code>BufReader</code> with a default buffer capacity. …","Creates a new <code>BufWriter</code> with a default buffer capacity. …","Create a new <code>LineWriter</code> with default buffer capacity. The …","Creates a new cursor wrapping the provided underlying …","Creates a new window around the buffer <code>t</code> defaulting to the …","Creates a new I/O error from an arbitrary error payload.","","","","","","","","","","","","","","","","","","","","","Attempt to close the object.","","","","","Forward to <code>buf_writer</code> ’s <code>BufWriter::poll_close()</code>","","","","","","","Attempt to return the contents of the internal buffer, …","","","","","","","","Attempt to flush the object, ensuring that any buffered …","","","","","Forward to <code>buf_writer</code> ’s <code>BufWriter::poll_flush()</code>","","","","","","","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","","","","","","","","","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","","","","","","","","","Attempt to seek to an offset, in bytes, in a stream.","","Seek to an offset, in bytes, in the underlying reader.","Seek to the offset, in bytes, in the underlying writer.","","Attempts to seek relative to the current position. If the …","Attempt to write bytes from <code>buf</code> into the object.","","","","","","","","","","","Attempt to write bytes from <code>bufs</code> into the object using …","","","","","","","","","","","Returns the current position of this cursor.","Returns the OS error that this error represents (if any).","Tries to read some bytes directly into the given <code>buf</code> in …","","Creates a future which will read exactly enough bytes to …","","Creates a future which will read all the bytes associated …","Creates a future which will read all the bytes from this …","","Creates a future which will read all the bytes from this …","","Creates a future which will read all the bytes associated …","Creates a future which will read from the <code>AsyncRead</code> into …","","Creates an instance of a reader that infinitely repeats …","Attempts to put the two “halves” of a split …","Attempts to put the two “halves” of a split …","Creates a future which will seek an IO object, and then …","","Seeks relative to the current position. If the new …","Changes the range of this window to the range specified.","Sets the number of bytes that can be read before this …","Sets the position of this cursor.","Creates an instance of a writer which will successfully …","","Helper method for splitting this read/write object into …","Returns the starting index of this window into the …","","Creates a future which will return the current seek …","Creates an AsyncRead adapter which will read at most <code>limit</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>BufReader</code> with the specified buffer capacity.","Creates a new <code>BufWriter</code> with the specified buffer capacity.","Creates a new <code>LineWriter</code> with the specified buffer …","Creates a future which will write bytes from <code>buf</code> into the …","","Write data into this object.","","","Creates a future which will write bytes from <code>bufs</code> into the …","","An RAII guard returned by the <code>MutexGuard::map</code> and …","A futures-aware mutex.","An RAII guard returned by the <code>lock</code> and <code>try_lock</code> methods. …","A future which resolves when the target mutex has been …","An RAII guard returned by the <code>lock_owned</code> and <code>try_lock_owned</code>…","A future which resolves when the target mutex has been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Consumes this mutex, returning the underlying data.","","","Acquire the lock asynchronously.","Acquire the lock asynchronously.","Returns a locked view over a portion of the locked data.","Returns a locked view over a portion of the locked data.","Creates a new futures-aware mutex.","","","","","","","","","","","","","","","Attempt to acquire the lock immediately.","Attempt to acquire the lock immediately.","","","","","","","A type with no possible values.","Read bytes asynchronously.","Read bytes asynchronously.","Seek bytes asynchronously.","Write bytes asynchronously.","The type of value produced by the sink when an error …","The type of failures yielded by this future","The type of failures yielded by this future","A future represents an asynchronous computation obtained …","Values yielded by the stream.","The type of successful values yielded by this future","The type of successful values yielded by this future","The type of value produced on completion.","A <code>Sink</code> is a value into which other values can be sent, …","A stream of values produced asynchronously.","A convenience for futures that return <code>Result</code> values that …","A convenience for streams that return <code>Result</code> values that …","","","","","","","","","","Tells this buffer that <code>amt</code> bytes have been consumed from …","Asynchronous values.","Attempt to resolve the future to a final value, registering","Flush any remaining output and close this sink, if …","Attempt to close the object.","Attempt to return the contents of the internal buffer, …","Flush any remaining output from this sink.","Attempt to flush the object, ensuring that any buffered …","Attempt to pull out the next value of this stream, …","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempts to prepare the <code>Sink</code> to receive a value.","Attempt to seek to an offset, in bytes, in a stream.","Attempt to write bytes from <code>buf</code> into the object.","Attempt to write bytes from <code>bufs</code> into the object using …","Asynchronous sinks.","Returns the bounds on the remaining length of the stream.","Begin the process of sending a value to the sink. Each …","Asynchronous streams.","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>and_then</code> method.","An owned dynamically typed <code>Future</code> for use in cases where …","Future for the <code>catch_unwind</code> method.","The output of the completed future","The output of the completed future","Combines two different futures, streams, or sinks having …","Future for the <code>err_into</code> method.","The type of failures yielded by this future","Future for the <code>flatten</code> method.","Sink for the <code>flatten_sink</code> method.","Stream for the <code>flatten_stream</code> method.","Future for the <code>fuse</code> method.","A future which tracks whether or not the underlying future …","A future represents an asynchronous computation obtained …","A not-yet-completed future","A not-yet-completed future","An extension trait for <code>Future</code>s that provides a variety of …","A custom trait object for polling futures, roughly akin to …","The empty variant after the result of a <code>MaybeDone</code> has been …","The empty variant after the result of a <code>TryMaybeDone</code> has …","Future for the <code>inspect</code> method.","Future for the <code>inspect_err</code> method.","Future for the <code>inspect_ok</code> method.","Future for the <code>into_future</code> method.","Stream for the <code>into_stream</code> method.","Future for the <code>join</code> function.","Future for the <code>join3</code> function.","Future for the <code>join4</code> function.","Future for the <code>join5</code> function.","Future for the <code>join_all</code> function.","Future for the <code>lazy</code> function.","First branch of the type","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","A custom trait object for polling futures, roughly akin to …","Future for the <code>map</code> method.","Future for the <code>map_err</code> method.","Future for the <code>map_into</code> combinator.","Future for the <code>map_ok</code> method.","Future for the <code>map_ok_or_else</code> method.","A future that may have completed.","Future for the <code>never_error</code> combinator.","The type of successful values yielded by this future","Future for the <code>ok_into</code> method.","A future representing a value which may or may not be …","Future for the <code>or_else</code> method.","The type of value produced on completion.","Future for the <code>pending()</code> function.","Future for the <code>poll_fn</code> function.","Future for the <code>poll_immediate</code> function.","Future for the <code>ready</code> function.","A future which sends its output to the corresponding …","The handle to a remote future returned by <code>remote_handle</code>. …","Second branch of the type","Future for the <code>select()</code> function.","Future for the <code>select_all</code> function.","Future for the <code>select_ok</code> function.","Future for the <code>shared</code> method.","Future for the <code>then</code> method.","Future for the <code>try_flatten</code> method.","Future for the <code>try_flatten_stream</code> method.","A convenience for futures that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning futures","Future for the <code>try_join</code> function.","Future for the <code>try_join3</code> function.","Future for the <code>try_join4</code> function.","Future for the <code>try_join5</code> function.","Future for the <code>try_join_all</code> function.","A future that may have completed with an error.","Future for the <code>try_select()</code> function.","Future for the <code>unit_error</code> combinator.","A custom implementation of a future trait object for …","Future for the <code>unwrap_or_else</code> method.","A weak reference to a <code>Shared</code> that can be upgraded much …","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …","Executes another future after this one resolves …","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Catches unwinding panics while polling the future.","Drops the future represented by the given fat pointer.","Create a future that is immediately ready with an error …","Maps this future’s <code>Error</code> to a new error type using the …","Flatten the execution of this future when the output of …","Flattens the execution of this future when the successful …","Flatten the execution of this future when the successful …","Fuse a future such that <code>poll</code> will never again be called …","Do something with the output of a future before passing it …","Do something with the error value of a future before …","Do something with the success value of a future before …","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","Convert an owned instance into a (conceptually owned) fat …","Convert this future into a single element stream.","Returns <code>true</code> if the underlying future should no longer be …","Joins the result of two futures, waiting for them both to …","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Creates a future which represents a collection of the …","Creates a new future that allows delayed execution of a …","Wrap this future in an <code>Either</code> future, making it the …","Map this future’s output to a different type, returning …","Maps this future’s error value to a different value.","Map this future’s output to a different type, returning …","Maps this future’s success value to a different value.","Maps this future’s success value to a different value, …","Wraps a future into a <code>MaybeDone</code>","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Evaluates and consumes the future, returning the resulting …","Create a future that is immediately ready with a success …","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Executes another future if this one resolves to an error. …","Creates a future which never resolves, representing a …","Attempt to resolve the future to a final value, registering","Creates a new future wrapping around a function returning …","Creates a future that is immediately ready with an Option …","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","Creates a future that is immediately ready with a value.","Turn this future into a future that yields <code>()</code> on …","Wrap this future in an <code>Either</code> future, making it the …","Waits for either one of two differently-typed futures to …","Creates a new future which will select over a list of …","Creates a new future which will select the first …","Create a cloneable handle to this future where all handles …","Chain on a computation for when a future finished, passing …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","Joins the result of two futures, waiting for them both to …","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Creates a future which represents either a collection of …","Wraps a future into a <code>TryMaybeDone</code>","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","A convenience method for calling <code>TryFuture::try_poll</code> on …","Waits for either one of two differently-typed futures to …","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Unwraps this future’s output, producing a future with …","Sink for the <code>buffer</code> method.","Future for the <code>close</code> method.","Sink for the <code>drain</code> function.","The type of value produced by the sink when an error …","Sink that clones incoming items and forwards them to two …","Future for the <code>feed</code> method.","Future for the <code>flush</code> method.","Future for the <code>send</code> method.","Future for the <code>send_all</code> method.","A <code>Sink</code> is a value into which other values can be sent, …","Sink for the <code>sink_err_into</code> method.","An extension trait for <code>Sink</code>s that provides a variety of …","Sink for the <code>sink_map_err</code> method.","Sink for the <code>unfold</code> function.","Sink for the <code>with</code> method.","Sink for the <code>with_flat_map</code> method.","Adds a fixed-size buffer to the current sink.","Close the sink.","Create a sink that will just discard all items given to it.","Fanout items to multiple sinks.","A future that completes after the given item has been …","Flush the sink, processing all pending items.","Wrap this sink in an <code>Either</code> sink, making it the left-hand …","Flush any remaining output and close this sink, if …","A convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …","Flush any remaining output from this sink.","A convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …","Attempts to prepare the <code>Sink</code> to receive a value.","A convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …","Wrap this stream in an <code>Either</code> stream, making it the …","A future that completes after the given item has been …","A future that completes after the given stream has been …","Map this sink’s error to a different error type using …","Transforms the error returned by the sink.","Begin the process of sending a value to the sink. Each …","A convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …","Create a sink from a function which processes one item at …","Composes a function <em>in front of</em> the sink.","Composes a function <em>in front of</em> the sink.","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>all</code> method.","Stream for the <code>and_then</code> method.","Future for the <code>any</code> method.","An owned dynamically typed <code>Stream</code> for use in cases where …","Stream for the <code>buffer_unordered</code> method.","Stream for the <code>buffered</code> method.","Stream for the <code>catch_unwind</code> method.","Stream for the <code>chain</code> method.","Stream for the <code>chunks</code> method.","Future for the <code>collect</code> method.","Future for the <code>concat</code> method.","Future for the <code>count</code> method.","Stream for the <code>cycle</code> method.","Stream for the <code>empty</code> function.","Stream for the <code>enumerate</code> method.","Stream for the <code>err_into</code> method.","The type of failures yielded by this future","Stream for the <code>filter</code> method.","Stream for the <code>filter_map</code> method.","Stream for the <code>flat_map</code> method.","Stream for the <code>flat_map_unordered</code> method.","Stream for the <code>flatten</code> method.","Stream for the <code>flatten_unordered</code> method.","Future for the <code>fold</code> method.","Future for the <code>for_each</code> method.","Future for the <code>for_each_concurrent</code> method.","Future for the <code>forward</code> method.","Stream for the <code>fuse</code> method.","A stream which tracks whether or not the underlying stream …","An unbounded queue of futures.","A set of futures which may complete in any order.","Stream for the <code>inspect</code> method.","Stream for the <code>inspect_err</code> method.","Stream for the <code>inspect_ok</code> method.","Reader for the <code>into_async_read</code> method.","Stream for the <code>into_stream</code> method.","Values yielded by the stream.","Stream for the <code>iter</code> function.","Poll the first stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","Stream for the <code>map</code> method.","Stream for the <code>map_err</code> method.","Stream for the <code>map_ok</code> method.","Future for the <code>next</code> method.","Future for the <code>Peekable::next_if</code> method.","Future for the <code>Peekable::next_if_eq</code> method.","The type of successful values yielded by this future","A stream which emits single element and then EOF.","Stream for the <code>or_else</code> method.","Future for the <code>Peekable::peek</code> method.","Future for the <code>Peekable::peek_mut</code> method.","A <code>Stream</code> that implements a <code>peek</code> method.","Stream for the <code>pending()</code> function.","Stream for the <code>poll_fn</code> function.","Stream for the poll_immediate function.","Type to tell <code>SelectWithStrategy</code> which stream to poll next.","Stream for the <code>ready_chunks</code> method.","Stream for the <code>repeat</code> function.","An stream that repeats elements of type <code>A</code> endlessly by …","Error indicating a <code>SplitSink&lt;S&gt;</code> and <code>SplitStream&lt;S&gt;</code> were …","Poll the second stream.","Stream for the <code>scan</code> method.","Stream for the <code>select()</code> function.","An unbounded set of streams","Future for the <code>select_next_some</code> method.","Stream for the <code>select_with_strategy()</code> function. See …","Stream for the <code>skip</code> method.","Stream for the <code>skip_while</code> method.","A <code>Sink</code> part of the split pair","A <code>Stream</code> part of the split pair","A stream of values produced asynchronously.","An extension trait for <code>Stream</code>s that provides a variety of …","Future for the <code>into_future</code> method.","Stream for the <code>take</code> method.","Stream for the <code>take_until</code> method.","Stream for the <code>take_while</code> method.","Stream for the <code>then</code> method.","Stream for the <code>try_buffer_unordered</code> method.","Stream for the <code>try_buffered</code> method.","Stream for the <code>try_chunks</code> method.","Error indicating, that while chunk was collected inner …","Future for the <code>try_collect</code> method.","Future for the <code>try_concat</code> method.","Stream for the <code>try_filter</code> method.","Stream for the <code>try_filter_map</code> method.","Stream for the <code>try_flatten</code> method.","Stream for the <code>try_flatten_unordered</code> method.","Future for the <code>try_fold</code> method.","Future for the <code>try_for_each</code> method.","Future for the <code>try_for_each_concurrent</code> method.","Future for the <code>try_next</code> method.","Stream for the <code>try_ready_chunks</code> method.","Error indicating, that while chunk was collected inner …","Stream for the <code>try_skip_while</code> method.","A convenience for streams that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning streams","Stream for the <code>try_take_while</code> method.","Stream for the <code>try_unfold</code> function.","Stream for the <code>unfold</code> function.","Future for the <code>unzip</code> method.","Stream for the <code>zip</code> method.","Creates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …","Execute predicate over asynchronous stream, and return <code>true</code>…","Chain on a computation for when a value is ready, passing …","Execute predicate over asynchronous stream, and return <code>true</code>…","Wrap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","An adaptor for creating a buffered list of pending futures …","An adaptor for creating a buffered list of pending futures.","Borrows a stream, rather than consuming it.","Catches unwinding panics while polling the stream.","Adapter for chaining two streams.","An adaptor for chunking up items of the stream inside a …","Transforms a stream into a collection, returning a future …","Concatenate all items of a stream into a single extendable …","Drives the stream to completion, counting the number of …","Repeats a stream endlessly.","Creates a stream which contains no elements.","Creates a stream which gives the current iteration count …","Wraps the current stream in a new stream which converts …","Filters the values produced by this stream according to …","Filters the values produced by this stream while …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Execute an accumulating asynchronous computation over a …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","A future that completes after the given stream has been …","Fuse a stream such that <code>poll_next</code> will never again be …","An unbounded set of futures.","Do something with each item of this stream, afterwards …","Do something with the error value of this stream, …","Do something with the success value of this stream, …","Adapter that converts this stream into an <code>AsyncBufRead</code>.","Converts this stream into a future of …","Wraps a <code>TryStream</code> into a type that implements <code>Stream</code>","Returns <code>true</code> if the stream should no longer be polled.","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …","Wrap this stream in an <code>Either</code> stream, making it the …","Maps this stream’s items to a different type, returning …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Creates a future that resolves to the next item in the …","Creates a stream of a single element.","Chain on a computation for when an error happens, passing …","Creates a new stream which exposes a <code>peek</code> method.","Creates a stream which never returns any elements.","Creates a new stream wrapping a function returning …","Creates a new stream that always immediately returns …","Attempt to pull out the next value of this stream, …","A convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>","An adaptor for chunking up ready items of the stream …","Create a stream which produces the same item repeatedly.","Creates a new stream that repeats elements of type <code>A</code> …","Wrap this stream in an <code>Either</code> stream, making it the …","Combinator similar to <code>StreamExt::fold</code> that holds internal …","This function will attempt to pull items from both …","An unbounded set of streams","Convert a list of streams into a <code>Stream</code> of results from …","Returns a <code>Future</code> that resolves when the next item in this …","This function will attempt to pull items from both …","Returns the bounds on the remaining length of the stream.","Creates a new stream which skips <code>n</code> items of the underlying …","Skip elements on this stream while the provided …","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …","Creates a new stream of at most <code>n</code> items of the underlying …","Take elements from this stream until the provided future …","Take elements from this stream while the provided …","Computes from this stream’s items new items of a …","Attempt to execute a predicate over an asynchronous stream …","Attempt to execute a predicate over an asynchronous stream …","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","An adaptor for chunking up successful items of the stream …","Attempt to transform a stream into a collection, returning …","Attempt to concatenate all items of a stream into a single …","Attempt to filter the values produced by this stream …","Attempt to filter the values produced by this stream while …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Attempt to execute an accumulating asynchronous …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","Creates a future that attempts to resolve the next item in …","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","A convenience method for calling <code>TryStream::try_poll_next</code> …","An adaptor for chunking up successful, ready items of the …","Skip elements on this stream while the provided …","Take elements on this stream while the provided …","Creates a <code>TryStream</code> from a seed and a closure returning a …","Creates a <code>Stream</code> from a seed and a closure returning a …","Converts a stream of pairs into a future, which resolves …","An adapter for zipping two streams together.","A set of futures which may complete in any order.","Owned iterator over all futures in the unordered set.","Immutable iterator over all the futures in the unordered …","Mutable iterator over all futures in the unordered set.","Mutable iterator over all futures in the unordered set.","Immutable iterator over all futures in the unordered set.","Owned iterator over all streams in the unordered set.","Immutable iterator over all streams in the unordered set.","Mutable iterator over all streams in the unordered set.","An unbounded set of streams","Convert a list of streams into a <code>Stream</code> of results from …","Sink for the <code>buffer</code> method.","Future for the <code>close</code> method.","Sink for the <code>drain</code> function.","The type of value produced by the sink when an error …","Sink that clones incoming items and forwards them to two …","Future for the <code>feed</code> method.","Future for the <code>flush</code> method.","Future for the <code>send</code> method.","Future for the <code>send_all</code> method.","A <code>Sink</code> is a value into which other values can be sent, …","Sink for the <code>sink_err_into</code> method.","An extension trait for <code>Sink</code>s that provides a variety of …","Sink for the <code>sink_map_err</code> method.","Sink for the <code>unfold</code> function.","Sink for the <code>with</code> method.","Sink for the <code>with_flat_map</code> method.","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a fixed-size buffer to the current sink.","","","","","","","Close the sink.","Create a sink that will just discard all items given to it.","Fanout items to multiple sinks.","A future that completes after the given item has been …","Flush the sink, processing all pending items.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner sinks.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Get a pinned mutable reference to the inner sinks.","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Get a shared reference to the inner sinks.","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Consumes this combinator, returning the underlying sinks.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","","","","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …","","","","","","Flush any remaining output and close this sink, if …","","","","","","","","","A convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …","Flush any remaining output from this sink.","","","","","","","","","A convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …","","","","","","Attempts to prepare the <code>Sink</code> to receive a value.","","","","","","","","","A convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …","Wrap this stream in an <code>Either</code> stream, making it the …","A future that completes after the given item has been …","A future that completes after the given stream has been …","Map this sink’s error to a different error type using …","Transforms the error returned by the sink.","","","","","","Begin the process of sending a value to the sink. Each …","","","","","","","","","A convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a sink from a function which processes one item at …","Composes a function <em>in front of</em> the sink.","Composes a function <em>in front of</em> the sink.","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>all</code> method.","Stream for the <code>and_then</code> method.","Future for the <code>any</code> method.","An owned dynamically typed <code>Stream</code> for use in cases where …","Stream for the <code>buffer_unordered</code> method.","Stream for the <code>buffered</code> method.","Stream for the <code>catch_unwind</code> method.","Stream for the <code>chain</code> method.","Stream for the <code>chunks</code> method.","Future for the <code>collect</code> method.","Future for the <code>concat</code> method.","Future for the <code>count</code> method.","Stream for the <code>cycle</code> method.","Stream for the <code>empty</code> function.","Stream for the <code>enumerate</code> method.","Stream for the <code>err_into</code> method.","The type of failures yielded by this future","Stream for the <code>filter</code> method.","Stream for the <code>filter_map</code> method.","Stream for the <code>flat_map</code> method.","Stream for the <code>flat_map_unordered</code> method.","Stream for the <code>flatten</code> method.","Stream for the <code>flatten_unordered</code> method.","Future for the <code>fold</code> method.","Future for the <code>for_each</code> method.","Future for the <code>for_each_concurrent</code> method.","Future for the <code>forward</code> method.","Stream for the <code>fuse</code> method.","A stream which tracks whether or not the underlying stream …","An unbounded queue of futures.","A set of futures which may complete in any order.","Stream for the <code>inspect</code> method.","Stream for the <code>inspect_err</code> method.","Stream for the <code>inspect_ok</code> method.","Reader for the <code>into_async_read</code> method.","Stream for the <code>into_stream</code> method.","Values yielded by the stream.","Stream for the <code>iter</code> function.","Poll the first stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","Stream for the <code>map</code> method.","Stream for the <code>map_err</code> method.","Stream for the <code>map_ok</code> method.","Future for the <code>next</code> method.","Future for the <code>Peekable::next_if</code> method.","Future for the <code>Peekable::next_if_eq</code> method.","The type of successful values yielded by this future","A stream which emits single element and then EOF.","Stream for the <code>or_else</code> method.","Future for the <code>Peekable::peek</code> method.","Future for the <code>Peekable::peek_mut</code> method.","A <code>Stream</code> that implements a <code>peek</code> method.","Stream for the <code>pending()</code> function.","Stream for the <code>poll_fn</code> function.","Stream for the poll_immediate function.","Type to tell <code>SelectWithStrategy</code> which stream to poll next.","Stream for the <code>ready_chunks</code> method.","Stream for the <code>repeat</code> function.","An stream that repeats elements of type <code>A</code> endlessly by …","Error indicating a <code>SplitSink&lt;S&gt;</code> and <code>SplitStream&lt;S&gt;</code> were …","Poll the second stream.","Stream for the <code>scan</code> method.","Stream for the <code>select()</code> function.","An unbounded set of streams","Future for the <code>select_next_some</code> method.","Stream for the <code>select_with_strategy()</code> function. See …","Stream for the <code>skip</code> method.","Stream for the <code>skip_while</code> method.","A <code>Sink</code> part of the split pair","A <code>Stream</code> part of the split pair","A stream of values produced asynchronously.","An extension trait for <code>Stream</code>s that provides a variety of …","Future for the <code>into_future</code> method.","Stream for the <code>take</code> method.","Stream for the <code>take_until</code> method.","Stream for the <code>take_while</code> method.","Stream for the <code>then</code> method.","Stream for the <code>try_buffer_unordered</code> method.","Stream for the <code>try_buffered</code> method.","Stream for the <code>try_chunks</code> method.","Error indicating, that while chunk was collected inner …","Future for the <code>try_collect</code> method.","Future for the <code>try_concat</code> method.","Stream for the <code>try_filter</code> method.","Stream for the <code>try_filter_map</code> method.","Stream for the <code>try_flatten</code> method.","Stream for the <code>try_flatten_unordered</code> method.","Future for the <code>try_fold</code> method.","Future for the <code>try_for_each</code> method.","Future for the <code>try_for_each_concurrent</code> method.","Future for the <code>try_next</code> method.","Stream for the <code>try_ready_chunks</code> method.","Error indicating, that while chunk was collected inner …","Stream for the <code>try_skip_while</code> method.","A convenience for streams that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning streams","Stream for the <code>try_take_while</code> method.","Stream for the <code>try_unfold</code> function.","Stream for the <code>unfold</code> function.","Future for the <code>unzip</code> method.","Stream for the <code>zip</code> method.","Abort the <code>Abortable</code> stream/future associated with this …","Creates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …","Execute predicate over asynchronous stream, and return <code>true</code>…","Chain on a computation for when a value is ready, passing …","Execute predicate over asynchronous stream, and return <code>true</code>…rap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","An adaptor for creating a buffered list of pending futures …","An adaptor for creating a buffered list of pending futures.","Borrows a stream, rather than consuming it.","Catches unwinding panics while polling the stream.","Adapter for chaining two streams.","An adaptor for chunking up items of the stream inside a …","Clears the set, removing all futures.","Clears the set, removing all streams.","","","","","","","","","","","","","","","","","","","","","Transforms a stream into a collection, returning a future …","Concatenate all items of a stream into a single extendable …","","Drives the stream to completion, counting the number of …","Repeats a stream endlessly.","","","","","","Creates a stream which contains no elements.","Creates a stream which gives the current iteration count …","","","","","","","","","Wraps the current stream in a new stream which converts …","","","","Filters the values produced by this stream according to …","Filters the values produced by this stream while …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute an accumulating asynchronous computation over a …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","A future that completes after the given stream has been …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Fuse a stream such that <code>poll_next</code> will never again be …","An unbounded set of futures.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying stream that …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying streams …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying streams …","Acquires a mutable reference to the underlying streams …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying stream that this …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying streams that this …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying streams that this …","Acquires a reference to the underlying streams that this …","Create an <code>AbortHandle</code> from the given <code>AbortRegistration</code>.","","Do something with each item of this stream, afterwards …","Do something with the error value of this stream, …","Do something with the success value of this stream, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Adapter that converts this stream into an <code>AsyncBufRead</code>.","Converts this stream into a future of …","","","","","","","","","","","","","","","","","","","","","","","","","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying stream.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying streams.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying streams.","Consumes this combinator, returning the underlying streams.","","","","","","","Wraps a <code>TryStream</code> into a type that implements <code>Stream</code>","Checks whether the task has been aborted. Note that all …","Checks whether <code>AbortHandle::abort</code> was <em>called</em> on any …","Returns whether the underlying stream has finished or not.","Returns <code>true</code> if the queue contains no futures","Returns <code>true</code> if the set contains no futures.","Returns <code>true</code> if the set contains no streams","Whether the stream was stopped yet by the stopping future …","Returns <code>true</code> if the stream should no longer be polled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …","Returns an iterator that allows inspecting each future in …","Returns an iterator that allows inspecting each stream in …","Returns an iterator that allows modifying each future in …","Returns an iterator that allows modifying each stream in …","Returns an iterator that allows modifying each future in …","Returns an iterator that allows inspecting each future in …","Wrap this stream in an <code>Either</code> stream, making it the …","Returns the number of futures contained in the queue.","Returns the number of futures contained in the set.","Returns the number of streams contained in the set.","Maps this stream’s items to a different type, returning …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Constructs a new, empty <code>FuturesOrdered</code>","Constructs a new, empty <code>FuturesUnordered</code>.","Constructs a new, empty <code>SelectAll</code>","Creates a new <code>Abortable</code> future/stream using an existing …","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which can …","Creates a future that resolves to the next item in the …","Creates a future which will consume and return the next …","Creates a future which will consume and return the next …","Creates a stream of a single element.","Chain on a computation for when an error happens, passing …","Produces a future which retrieves a reference to the next …","Produces a future which retrieves a mutable reference to …","Creates a new stream which exposes a <code>peek</code> method.","Creates a stream which never returns any elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream wrapping a function returning …","Creates a new stream that always immediately returns …","Attempt to pull out the next value of this stream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>","Peek retrieves a reference to the next item in the stream.","Peek retrieves a mutable reference to the next item in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Push a future into the queue.","Push a future into the set.","Push a stream into the set.","Pushes a future to the back of the queue.","Pushes a future to the front of the queue.","An adaptor for chunking up ready items of the stream …","Create a stream which produces the same item repeatedly.","Creates a new stream that repeats elements of type <code>A</code> …","Attempts to put the two “halves” of a split …","Attempts to put the two “halves” of a split …","Wrap this stream in an <code>Either</code> stream, making it the …","Combinator similar to <code>StreamExt::fold</code> that holds internal …","This function will attempt to pull items from both …","An unbounded set of streams","Convert a list of streams into a <code>Stream</code> of results from …","Returns a <code>Future</code> that resolves when the next item in this …","This function will attempt to pull items from both …","Returns the bounds on the remaining length of the stream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream which skips <code>n</code> items of the underlying …","Skip elements on this stream while the provided …","","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream of at most <code>n</code> items of the underlying …","Extract the stopping future out of the combinator. The …","Once the stopping future is resolved, this method can be …","Take elements from this stream until the provided future …","Take elements from this stream while the provided …","Computes from this stream’s items new items of a …","","","","","","","","","","","","","","","Toggle the value and return the old one.","Attempt to execute a predicate over an asynchronous stream …","Attempt to execute a predicate over an asynchronous stream …","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","An adaptor for chunking up successful items of the stream …","Attempt to transform a stream into a collection, returning …","Attempt to concatenate all items of a stream into a single …","Attempt to filter the values produced by this stream …","Attempt to filter the values produced by this stream while …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Attempt to execute an accumulating asynchronous …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …reates a future that attempts to resolve the next item in …","","","","","","","","","","","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryStream::try_poll_next</code> …","An adaptor for chunking up successful, ready items of the …","Skip elements on this stream while the provided …","Take elements on this stream while the provided …","Creates a <code>TryStream</code> from a seed and a closure returning a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Stream</code> from a seed and a closure returning a …","Converts a stream of pairs into a future, which resolves …","An adapter for zipping two streams together.","A set of futures which may complete in any order.","Owned iterator over all futures in the unordered set.","Immutable iterator over all the futures in the unordered …","Mutable iterator over all futures in the unordered set.","Mutable iterator over all futures in the unordered set.","Immutable iterator over all futures in the unordered set.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Owned iterator over all streams in the unordered set.","Immutable iterator over all streams in the unordered set.","Mutable iterator over all streams in the unordered set.","An unbounded set of streams","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Convert a list of streams into a <code>Stream</code> of results from …","","","","","","","","","","","","","A way of waking up a specific task.","A synchronization primitive for task wakeup.","The context of an asynchronous task.","A custom trait object for polling futures, roughly akin to …","A custom trait object for polling futures, roughly akin to …","The <code>LocalSpawn</code> is similar to <code>Spawn</code>, but allows spawning …","Extension trait for <code>LocalSpawn</code>.","Represents that a value is not ready yet.","Indicates whether a value is available or if the current …","A <code>RawWaker</code> allows the implementor of a task executor to …","A virtual function pointer table (vtable) that specifies …","Represents that a value is immediately ready.","The <code>Spawn</code> trait allows for pushing futures onto an …","An error that occurred during spawning.","Extension trait for <code>Spawn</code>.","A custom implementation of a future trait object for …","A <code>Waker</code> is a handle for waking up a task by notifying its …","A <code>Waker</code> that is only valid for a given lifetime.","Get a reference to the underlying <code>RawWaker</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>data</code> pointer used to create this <code>RawWaker</code>.","","","Drops the future represented by the given fat pointer.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Use a <code>Wake</code>-able type as a <code>Waker</code>.","Returns the argument unchanged.","Returns the argument unchanged.","","Moves the value into a <code>Poll::Ready</code> to make a <code>Poll&lt;T&gt;</code>.","Returns the argument unchanged.","Use a <code>Wake</code>-able type as a <code>RawWaker</code>.","Returns the argument unchanged.","","","Creates a new <code>Waker</code> from <code>RawWaker</code>.","","","Create a new <code>Context</code> from a <code>&amp;Waker</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.","Convert an owned instance into a (conceptually owned) fat …","Returns <code>true</code> if the poll is a <code>Pending</code> value.","Returns <code>true</code> if the poll is a <code>Poll::Ready</code> value.","Check whether spawning failed to the executor being shut …","Maps a <code>Poll&lt;T&gt;</code> to <code>Poll&lt;U&gt;</code> by applying a function to a …","Maps a <code>Poll::Ready&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …","Maps a <code>Poll::Ready&lt;Result&lt;T, E&gt;&gt;</code> to …","Maps a <code>Poll&lt;Option&lt;Result&lt;T, E&gt;&gt;&gt;</code> to …","Maps a <code>Poll&lt;Result&lt;T, E&gt;&gt;</code> to <code>Poll&lt;Result&lt;U, E&gt;&gt;</code> by …","Create a <code>LocalFutureObj</code> from a custom trait object …","Create an <code>AtomicWaker</code>.","Create a <code>FutureObj</code> from a custom trait object …","Create a new <code>WakerRef</code> from a <code>Waker</code> reference.","Creates a new <code>RawWaker</code> from the provided <code>data</code> pointer and …","Creates a new <code>RawWakerVTable</code> from the provided <code>clone</code>, <code>wake</code>,","Create a new <code>WakerRef</code> from a <code>Waker</code> that must not be …","Creates a new <code>Waker</code> that does nothing when <code>wake</code> is called.","Create a new <code>Waker</code> which does nothing when <code>wake()</code> is …","Get a static reference to a <code>Waker</code> which does nothing when …","","","","Registers the waker to be notified on calls to <code>wake</code>.","Spawning failed because the executor has been shut down.","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a future that will be run to completion.","Spawns a task that polls the given future to completion …","Spawns a future that will be run to completion.","Spawns a task that polls the given future to completion …","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the <code>vtable</code> pointer used to create this <code>RawWaker</code>.","Indicates that the associated task is ready to make …","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.","Wake up the task associated with this <code>Waker</code>.","Indicates that the associated task is ready to make …","Wake up the task associated with this <code>Waker</code> without …","Creates a <code>Waker</code> from an <code>Arc&lt;impl ArcWake&gt;</code>.","Returns a reference to the <code>Waker</code> for the current task.","Creates a reference to a <code>Waker</code> from a reference to …","Returns <code>true</code> if this <code>Waker</code> and another <code>Waker</code> would awake …"],"if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2,2],[3,3],[4,4],[[[6,[5]]],[[6,[5]]]],[[]],[[]],[[]],[[]],[7],[8],[2],[3],[2],[3],[7],[8],[[4,4],9],[[[6,[[10,[[10,[[10,[10]]]]]]]],[6,[[10,[[10,[[10,[10]]]]]]]]],9],[[],9],[[],9],[[2,11],[[13,[12]]]],[[3,11],[[13,[12]]]],[[7,11],[[13,[12]]]],[[8,11],[[13,[12]]]],[[14,11],[[13,[12]]]],[[14,11],[[13,[12]]]],[[4,11],[[13,[12]]]],[[4,11],[[13,[12]]]],[[6,11],[[13,[12]]]],[[6,11],[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,15]],[[3,15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6,4],[2,9],[3,9],[[2,7],9],[[3,8],9],[4,9],[6,9],[3,9],[4,9],[6,9],[7,9],[8,9],[3,1],[[[16,[2]],17],[[18,[13]]]],[[[16,[3]],17],[[18,[13]]]],[[[16,[3]],17],[[18,[13]]]],[[[16,[2]],17],[[18,[13]]]],[[[16,[3]],17],[[18,[13]]]],[[[16,[3]],17],[[18,[13]]]],[[[16,[7]],17],[[18,[19]]]],[[[16,[8]],17],[[18,[19]]]],[[[16,[2]],17],[[18,[13]]]],[[2,17],[[18,[[13,[4]]]]]],[[3,17],[[18,[[13,[4]]]]]],[[[16,[3]],17],[[18,[13]]]],[[[16,[3]],17],[[18,[13]]]],[[2,2],9],[[3,3],9],[7],[8],[[[16,[2]]],13],[2,[[13,[4]]]],[[[16,[3]]],13],[[[16,[3]]],13],[3,[[13,[4]]]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[7,[[13,[19,14]]]],[8,[[13,[19,14]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[2,[[13,[6]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[3,[[13,[6]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,23],[[]],[24,24],[[]],[25],[25],[22],[[24,24],9],[[],9],[[25,11],[[13,[12]]]],[[22,11],[[13,[12]]]],[[[23,[26]],11],[[13,[12]]]],[[24,11],[[13,[12]]]],[[24,11],[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,9],[[22,25],9],[25,9],[[[16,[25]],17],[[18,[[13,[24]]]]]],[[[16,[23]],17],18],[[22,17],18],[22,13],[[]],[[],20],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[16,17],18],[25,[[13,[19,24]]]],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,[27],[[[0,[28,29]]],[[30,[[0,[28,29]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,31],[[]],[[],32],[[[30,[[0,[28,29]]]]]],[[[30,[[0,[28,29]]]]]],[33],[[],[[13,[33,34]]]],[[33,11],[[13,[12]]]],[[34,11],[[13,[12]]]],[[34,11],[[13,[12]]]],[[32,11],[[13,[12]]]],[[31,11],[[13,[12]]]],[[[30,[[0,[26,28,29]]]],11],[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[30,[[0,[28,29]]]]],[[0,[28,29]]]],[[]],[[],32],[[[30,[[0,[28,29]]]]],19],[32],[[32,27]],[32],[[[30,[[0,[28,29]]]]]],[[31,35],[[13,[36]]]],[[31,37],[[13,[36]]]],[32,31],[31,[[13,[36]]]],[31,[[13,[36]]]],[[]],[[],20],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[32,9],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[27],[[38,39],[[41,[38,40,39]]]],[[[16,[42]]],[[42,[16,16]]]],[[[16,[42]]],[[42,[16,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[38,43]]],[[16,[[45,[27,44]]]]]],[38,[[16,[[45,[27,44]]]]]],[[[0,[38,46]]],[[47,[[0,[38,46]]]]]],[[[48,[27]]],[[48,[27]]]],[[[49,[27]]],[[49,[27]]]],[50,50],[[[51,[5]]],[[51,[5]]]],[[[52,[5]]],[[52,[5]]]],[[[53,[5]]],[[53,[5]]]],[[[42,[5,5]]],[[42,[5,5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[[42,[54,54]]]],1]],[[],51],[[[48,[27]]],[[19,[[49,[27]]]]]],[27],[[[48,[27]]]],[27],[[],[[53,[13]]]],[38,[[55,[38]]]],[42],[42],[38,[[56,[38]]]],[38,[[57,[38]]]],[38,[[58,[38]]]],[[[48,[27]],11],[[13,[12]]]],[[[49,[27]],11],[[13,[12]]]],[[59,11],[[13,[12]]]],[[[60,[[0,[27,26]]]],11],[[13,[12]]]],[[[61,[[0,[40,26]]]],11],[[13,[12]]]],[[[62,[26]],11],[[13,[12]]]],[[[56,[27]],11],[[13,[12]]]],[[[58,[27]],11],[[13,[12]]]],[[63,11],[[13,[12]]]],[[64,11],[[13,[12]]]],[[65,11],[[13,[12]]]],[[66,11],[[13,[12]]]],[[67,11],[[13,[12]]]],[[68,11],[[13,[12]]]],[[69,11],[[13,[12]]]],[[[47,[26]],11],[[13,[12]]]],[[[70,[26]],11],[[13,[12]]]],[[[71,[[0,[27,26]]]],11],[[13,[12]]]],[[[72,[26]],11],[[13,[12]]]],[[73,11],[[13,[12]]]],[[[74,[40]],11],[[13,[12]]]],[[57,11],[[13,[12]]]],[[41,11],[[13,[12]]]],[[75,11],[[13,[12]]]],[[55,11],[[13,[12]]]],[[76,11],[[13,[12]]]],[[77,11],[[13,[12]]]],[[78,11],[[13,[12]]]],[[79,11],[[13,[12]]]],[[80,11],[[13,[12]]]],[[81,11],[[13,[12]]]],[[82,11],[[13,[12]]]],[[[83,[26]],11],[[13,[12]]]],[[[50,[26]],11],[[13,[12]]]],[[[84,[[0,[26,27]]]],11],[[13,[12]]]],[[[85,[[0,[26,40]]]],11],[[13,[12]]]],[[[51,[26]],11],[[13,[12]]]],[[[52,[26]],11],[[13,[12]]]],[[[53,[26]],11],[[13,[12]]]],[[[86,[[0,[27,26]],[0,[27,26]]]],11],[[13,[12]]]],[[[87,[[0,[27,26]],[0,[27,26]],[0,[27,26]]]],11],[[13,[12]]]],[[[88,[[0,[27,26]],[0,[27,26]],[0,[27,26]],[0,[27,26]]]],11],[[13,[12]]]],[[[89,[[0,[27,26]],[0,[27,26]],[0,[27,26]],[0,[27,26]],[0,[27,26]]]],11],[[13,[12]]]],[[[90,[26,26]],11],[[13,[12]]]],[[[91,[26]],11],[[13,[12]]]],[[[92,[[0,[40,26]],[0,[40,26]]]],11],[[13,[12]]]],[[[93,[[0,[40,26]],[0,[40,26]],[0,[40,26]]]],11],[[13,[12]]]],[[[94,[[0,[40,26]],[0,[40,26]],[0,[40,26]],[0,[40,26]]]],11],[[13,[12]]]],[[[95,[[0,[40,26]],[0,[40,26]],[0,[40,26]],[0,[40,26]],[0,[40,26]]]],11],[[13,[12]]]],[[[96,[26,26]],11],[[13,[12]]]],[[[97,[26]],11],[[13,[12]]]],[[[42,[26,26]],11],[[13,[12]]]],[70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[19,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,[[60,[27]]]],[98,[[61,[40]]]],[98,[[91,[[0,[27,29]]]]]],[98,[[97,[[0,[40,29]]]]]],[38,[[62,[38]]]],[[38,39],[[67,[38,39]]]],[[38,39],[[78,[38,39]]]],[[38,39],[[77,[38,39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,[[72,[38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53],[91,[[99,[44]]]],[42],[[],27],[27,27],[38,[[64,[38]]]],[[],9],[[[48,[27]]],9],[[[62,[27]]],9],[[[56,[27]]],9],[[[58,[27]]],9],[63,9],[64,9],[65,9],[66,9],[67,9],[68,9],[69,9],[[[72,[[0,[40,100]]]]],9],[73,9],[[[74,[40]]],9],[57,9],[41,9],[75,9],[55,9],[76,9],[77,9],[78,9],[79,9],[80,9],[81,9],[82,9],[[[83,[39]]],9],[50,9],[[[84,[27]]],9],[[[85,[40]]],9],[[[51,[100]]],9],[[[52,[27]]],9],[53,9],[[[86,[100,100]]],9],[[[87,[100,100,100]]],9],[[[88,[100,100,100,100]]],9],[[[89,[100,100,100,100,100]]],9],[[[90,[[0,[27,29]],[0,[27,29]]]]],9],[[[42,[101,101]]],9],[[[42,[100,100]]],9],[[27,27],[[86,[27,27]]]],[[27,27,27],[[87,[27,27,27]]]],[[27,27,27,27],[[88,[27,27,27,27]]]],[[27,27,27,27,27],[[89,[27,27,27,27,27]]]],[98,60],[39,[[83,[39]]]],[38,[[42,[38,27]]]],[[38,39],[[63,[38,39]]]],[[38,39],[[80,[38,39]]]],[38,[[65,[38]]]],[[38,39],[[79,[38,39]]]],[[38,39,39],[[81,[38,39,39]]]],[27,[[84,[27]]]],[38,[[68,[38]]]],[38,19],[[],[[53,[13]]]],[38,[[76,[38]]]],[[38,39],[[75,[38,40,39]]]],[[[16,[[84,[27]]]]],19],[[[16,[[85,[40]]]]],19],[[[48,[27]]],19],[[],50],[[16,17],18],[[[16,[[48,[27]]]],17],18],[[[16,[[59,[102]]]],17],18],[[[16,[[60,[27]]]],17],18],[[[16,[[61,[40]]]],17],18],[[[16,[[62,[27]]]],17],18],[[[16,[[56,[27]]]],17],18],[[[16,[63]],17],18],[[[16,[65]],17],18],[[[16,[66]],17],18],[[[16,[67]],17],18],[[[16,[68]],17],18],[[[16,[69]],17],18],[[[16,[[47,[[0,[27,46]]]]]],17],18],[[[16,[70]],17],18],[[[16,[[71,[27]]]],17],18],[[[16,[[72,[40]]]],17],18],[[[16,[73]],17],18],[[[16,[41]],17],18],[[[16,[75]],17],18],[[[16,[55]],17],18],[[[16,[76]],17],18],[[[16,[77]],17],18],[[[16,[78]],17],18],[[[16,[79]],17],18],[[[16,[80]],17],18],[[[16,[81]],17],18],[[[16,[82]],17],18],[[[16,[[83,[39]]]],17],18],[[[16,[50]],17],18],[[[16,[[84,[27]]]],17],18],[[[16,[[85,[40]]]],17],18],[[[16,[[51,[27]]]],17],18],[[[16,[[52,[27]]]],17],[[18,[19]]]],[[[16,[53]],17],18],[[[16,[[86,[27,27]]]],17],18],[[[16,[[87,[27,27,27]]]],17],18],[[[16,[[88,[27,27,27,27]]]],17],18],[[[16,[[89,[27,27,27,27,27]]]],17],18],[[[16,[[90,[[0,[27,29]],[0,[27,29]]]]]],17],18],[[[16,[[91,[[0,[27,29]]]]]],17],18],[[[16,[[92,[40,40]]]],17],18],[[[16,[[93,[40,40,40]]]],17],18],[[[16,[[94,[40,40,40,40]]]],17],18],[[[16,[[95,[40,40,40,40,40]]]],17],18],[[[16,[[96,[[0,[29,40]],[0,[29,40]]]]]],17],18],[[[16,[[97,[[0,[40,29]]]]]],17],18],[[[16,[[42,[27,27]]]],17],18],[[[16,[[58,[27]]]],17],[[18,[13]]]],[[[16,[[74,[40]]]],17],[[18,[13]]]],[[[16,[57]],17],[[18,[13]]]],[[[16,[[42,[103,103]]]],17],[[18,[[13,[104]]]]]],[[[16,[[42,[105,105]]]],17],[[18,[13]]]],[[[16,[[42,[54,54]]]],17],[[18,[[13,[[107,[106]],104]]]]]],[[[16,[[58,[27]]]],17],[[18,[13]]]],[[[16,[[74,[40]]]],17],[[18,[13]]]],[[[16,[57]],17],[[18,[13]]]],[[[16,[[42,[103,103]]]],17],[[18,[[13,[104]]]]]],[[[16,[[42,[105,105]]]],17],[[18,[13]]]],[102,[[59,[102]]]],[27,[[52,[27]]]],[[[16,[[58,[27]]]],17],[[18,[19]]]],[[[16,[64]],17],[[18,[19]]]],[[[16,[[74,[40]]]],17],[[18,[19]]]],[[[16,[57]],17],[[18,[19]]]],[[[16,[[52,[27]]]],17],[[18,[19]]]],[[[16,[[42,[28,28]]]],17],[[18,[19]]]],[[[16,[[42,[108,108]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[42,[108,108]]]],17,[107,[109]]],[[18,[[13,[1,104]]]]]],[[[16,[[58,[27]]]],17],[[18,[13]]]],[[[16,[[74,[40]]]],17],[[18,[13]]]],[[[16,[57]],17],[[18,[13]]]],[[[16,[[42,[105,105]]]],17],[[18,[13]]]],[[[16,[[42,[110,110]]]],17,111],[[18,[[13,[112,104]]]]]],[[29,17],18],[[[16,[[42,[103,103]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[42,[103,103]]]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[48,[27]],[48,[27]]],9],[[[48,[27]],15]],[[],53],[38],[38,[[42,[27,38]]]],[[[0,[27,29]],[0,[27,29]]],[[90,[[0,[27,29]],[0,[27,29]]]]]],[98,91],[98,97],[38,[[48,[38]]]],[[[58,[27]]]],[64],[[[74,[40]]]],[57],[[[42,[28,28]]]],[[[16,[[58,[27]]]]],13],[[[16,[[74,[40]]]]],13],[[[16,[57]]],13],[[[16,[[42,[105,105]]]]],13],[[[48,[27]]],[[19,[1]]]],[[[16,[[84,[27]]]]],19],[[[16,[[85,[40]]]]],19],[[],[[62,[27]]]],[[38,39],[[66,[38,27,39]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,[[73,[38]]]],[38,[[74,[38]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[40,40],[[92,[40,40]]]],[[40,40,40],[[93,[40,40,40]]]],[[40,40,40,40],[[94,[40,40,40,40]]]],[[40,40,40,40,40],[[95,[40,40,40,40,40]]]],[98,61],[40,[[85,[40]]]],[[16,17],[[18,[13]]]],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[29,17],[[18,[13]]]],[[[0,[40,29]],[0,[40,29]]],[[96,[[0,[40,29]],[0,[40,29]]]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[38,[[69,[38]]]],[[38,39],[[82,[38,39]]]],[[[49,[27]]],[[19,[[48,[27]]]]]],[[[48,[27]]],[[19,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[109,1]],[[113,1]],[[[107,[109]],1]],[[[107,[113]],1]],[[[115,[[114,[[107,[106]]]]]]],[[107,[106]]]],[[[115,[[116,[[107,[106]]]]]]],[[107,[106]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[117,[108]]],[[107,[106]]]],[[[118,[103]]],[[107,[106]]]],[[[119,[103]]],[[107,[106]]]],[104,[[19,[120]]]],[[38,108],[[121,[38,108]]]],[122,122],[113,113],[111,111],[[[123,[5]]],[[123,[5]]]],[[[124,[5]]],[[124,[5]]]],[[]],[[]],[[]],[[]],[[]],[29,[[125,[29]]]],[[122,122],126],[[[123,[127]],[123,[127]]],126],[[16,1]],[[[16,[128]],1]],[[[16,[[123,[129]]]],1]],[[[123,[129]],1]],[[[16,[[117,[108]]]],1]],[[[16,[[118,[54]]]],1]],[[[16,[[121,[54,54]]]],1]],[[[16,[[124,[[0,[[116,[[107,[106]]]],29]]]]]],1]],[[[16,[[130,[54]]]],1]],[[29,1]],[[108,[0,[103,29,38]]],[[131,[108,[0,[103,29,38]]]]]],[[54,[0,[103,29,38]]],[[132,[54,[0,[103,29,38]]]]]],[[54,[0,[103,29,38]]]],[[],[[124,[133]]]],[109,[[107,[106]]]],[113,[[107,[106]]]],[109,[[107,[106]]]],[104,134],[104,[[13,[[45,[[0,[120,43,135]],44]],104]]]],[[],128],[[[115,[[116,[[107,[106]]]]]]],1],[[122,122],9],[[111,111],9],[[[123,[[10,[[10,[[10,[10]]]]]]]],[123,[[10,[[10,[[10,[10]]]]]]]]],9],[[],9],[[],9],[[],9],[29,[[136,[29]]]],[[[123,[129]]],[[13,[[107,[106]],104]]]],[29,[[137,[29]]]],[[[123,[138]]],[[13,[104]]]],[[104,11],[[13,[12]]]],[[104,11],[[13,[12]]]],[[109,11],[[13,[12]]]],[[128,11],[[13,[12]]]],[[139,11],[[13,[12]]]],[[140,11],[[13,[12]]]],[[141,11],[[13,[12]]]],[[141,11],[[13,[12]]]],[[122,11],[[13,[12]]]],[[122,11],[[13,[12]]]],[[113,11],[[13,[12]]]],[[111,11],[[13,[12]]]],[[[123,[26]],11],[[13,[12]]]],[[[117,[26]],11],[[13,[12]]]],[[[142,[26]],11],[[13,[12]]]],[[[118,[26]],11],[[13,[12]]]],[[[119,[[0,[26,103]]]],11],[[13,[12]]]],[[[121,[26,26]],11],[[13,[12]]]],[[[125,[[0,[26,38]]]],11],[[13,[12]]]],[[[131,[26,[0,[26,38]]]],11],[[13,[12]]]],[[[132,[26,[0,[26,38]]]],11],[[13,[12]]]],[[[143,[26,[0,[26,38]]]],11],[[13,[12]]]],[[[124,[26]],11],[[13,[12]]]],[[[136,[[0,[26,38]]]],11],[[13,[12]]]],[[[137,[[0,[26,38]]]],11],[[13,[12]]]],[[[144,[26,26]],11],[[13,[12]]]],[[[145,[26]],11],[[13,[12]]]],[[[146,[[0,[26,38]]]],11],[[13,[12]]]],[[[147,[[0,[26,38]]]],11],[[13,[12]]]],[[[148,[[0,[26,38]]]],11],[[13,[12]]]],[[[149,[[0,[26,38]]]],11],[[13,[12]]]],[[[150,[[0,[26,38]]]],11],[[13,[12]]]],[[[151,[[0,[26,38]]]],11],[[13,[12]]]],[[[152,[[0,[26,38]]]],11],[[13,[12]]]],[[[153,[[0,[26,38]]]],11],[[13,[12]]]],[[[154,[26]],11],[[13,[12]]]],[[[155,[26]],11],[[13,[12]]]],[[[130,[26]],11],[[13,[12]]]],[[[115,[26]],11],[[13,[12]]]],[[[156,[[0,[26,38]]]],11],[[13,[12]]]],[[[157,[[0,[26,38]]]],11],[[13,[12]]]],[[[158,[[0,[26,38]]]],11],[[13,[12]]]],[159,104],[[]],[122,104],[160,104],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[161,104],[104,[[19,[120]]]],[123],[[[117,[108]]],108],[[[118,[103]]],103],[[[121,[108,108]]]],[124],[[[130,[108]]],108],[[[115,[[116,[[107,[106]]]]]]],[[116,[[107,[106]]]]]],[[[16,[[117,[108]]]]],[[16,[108]]]],[[[16,[[118,[103]]]]],[[16,[103]]]],[[[16,[[121,[108,108]]]]]],[[[16,[[130,[108]]]]],[[16,[108]]]],[104,[[19,[120]]]],[123],[[[117,[108]]],108],[[[118,[103]]],103],[[[119,[103]]],103],[[[121,[108,108]]]],[124],[[[130,[108]]],108],[[[115,[[116,[[107,[106]]]]]]],[[116,[[107,[106]]]]]],[[122,15]],[[[123,[162]],15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[104,[[19,[[45,[120,44]]]]]],[123],[[[117,[108]]],108],[[[118,[103]]],103],[[[121,[108,108]]]],[124],[[[130,[108]]],108],[[[115,[[116,[[107,[106]]]]]]],[[116,[[107,[106]]]]]],[38,[[144,[38,[116,[[107,[106]]]]]]]],[104,122],[[],104],[[[130,[108]]],112],[38,[[145,[38]]]],[[122,[163,[[45,[120,44]]]]],104],[[[107,[106]]],109],[[[107,[106]]],113],[[],123],[108,[[117,[108]]]],[103,[[118,[103]]]],[103,[[119,[103]]]],[[],124],[[[116,[[107,[106]]]]],[[115,[[116,[[107,[106]]]]]]]],[[[163,[[45,[120,44]]]]],104],[[122,122],[[19,[126]]]],[[[123,[[164,[[164,[[164,[164]]]]]]]],[123,[[164,[[164,[[164,[164]]]]]]]]],[[19,[126]]]],[[[16,[[142,[[0,[108,110]]]]]],17],18],[[[16,[[125,[[0,[103,29,38]]]]]],17],18],[[[16,[[131,[108,[0,[103,29,38]]]]]],17],18],[[[16,[[132,[54,[0,[103,29,38]]]]]],17],18],[[[16,[[143,[54,[0,[103,29]]]]]],17],18],[[[16,[[136,[[0,[54,29,38]]]]]],17],18],[[[16,[[137,[[0,[103,29,38]]]]]],17],18],[[[16,[[146,[[0,[108,29,38]]]]]],17],18],[[[16,[[147,[[0,[108,29,38]]]]]],17],18],[[[16,[[148,[[0,[108,29,38]]]]]],17],18],[[[16,[[149,[[0,[54,29,38]]]]]],17],18],[[[16,[[150,[[0,[108,29,38]]]]]],17],18],[[[16,[[151,[[0,[108,29,38]]]]]],17],18],[[[16,[[152,[[0,[54,29,38]]]]]],17],18],[[[16,[[153,[[0,[110,29,38]]]]]],17],18],[[[16,[[156,[[0,[103,29,38]]]]]],17],18],[[[16,[[157,[[0,[103,29,38]]]]]],17],18],[[[16,[[158,[[0,[103,29,38]]]]]],17],[[18,[[13,[104]]]]]],[[16,17],[[18,[[13,[104]]]]]],[[[16,[140]],17],[[18,[[13,[104]]]]]],[[[16,[[123,[138]]]],17],[[18,[[13,[104]]]]]],[[[16,[[117,[103]]]],17],[[18,[[13,[104]]]]]],[[[16,[[118,[103]]]],17],[[18,[[13,[104]]]]]],[[[16,[[119,[103]]]],17],[[18,[[13,[104]]]]]],[[[16,[[124,[[99,[106,44]]]]]],17],[[18,[[13,[104]]]]]],[[[16,[[124,[[107,[106]]]]]],17],[[18,[[13,[104]]]]]],[[[16,[[124,[[45,[[107,[106]],44]]]]]],17],[[18,[[13,[104]]]]]],[[[16,[[124,[[99,[106,44]]]]]],17],[[18,[[13,[104]]]]]],[[[16,[[144,[103,[116,[[107,[106]]]]]]]],17],[[18,[13]]]],[[[16,[[155,[103]]]],17],[[18,[[13,[104]]]]]],[[16,17],[[18,[[13,[[107,[106]],104]]]]]],[[[16,[128]],17],[[18,[[13,[[107,[106]],104]]]]]],[[[16,[[123,[129]]]],17],[[18,[[13,[[107,[106]],104]]]]]],[[[16,[[117,[108]]]],17],[[18,[[13,[[107,[106]],104]]]]]],[[[16,[[118,[54]]]],17],[[18,[[13,[[107,[106]],104]]]]]],[[[16,[[121,[54,54]]]],17],[[18,[[13,[[107,[106]],104]]]]]],[[[16,[[124,[[0,[[116,[[107,[106]]]],29]]]]]],17],[[18,[[13,[[107,[106]],104]]]]]],[[[16,[[130,[54]]]],17],[[18,[[13,[[107,[106]],104]]]]]],[[16,17],[[18,[[13,[104]]]]]],[[[16,[140]],17],[[18,[[13,[104]]]]]],[[[16,[[123,[138]]]],17],[[18,[[13,[104]]]]]],[[[16,[[117,[103]]]],17],[[18,[[13,[104]]]]]],[[[16,[[118,[103]]]],17],[[18,[[13,[104]]]]]],[[[16,[[119,[103]]]],17],[[18,[[13,[104]]]]]],[[[16,[[124,[[99,[106,44]]]]]],17],[[18,[[13,[104]]]]]],[[[16,[[124,[[99,[106,44]]]]]],17],[[18,[[13,[104]]]]]],[[[16,[[124,[[45,[[107,[106]],44]]]]]],17],[[18,[[13,[104]]]]]],[[[16,[[124,[[107,[106]]]]]],17],[[18,[[13,[104]]]]]],[[[16,[[144,[103,[116,[[107,[106]]]]]]]],17],[[18,[13]]]],[[[16,[[155,[103]]]],17],[[18,[[13,[104]]]]]],[[[16,[[145,[54]]]],17],[[18,[19]]]],[[16,17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[128]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[139]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[123,[165]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[117,[108]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[118,[108]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[121,[108,108]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[124,[[0,[[116,[[107,[106]]]],29]]]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[154,[108]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[130,[108]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[16,17,[107,[109]]],[[18,[[13,[1,104]]]]]],[[[16,[139]],17,[107,[109]]],[[18,[[13,[1,104]]]]]],[[[16,[[123,[165]]]],17,[107,[109]]],[[18,[[13,[1,104]]]]]],[[[16,[[117,[108]]]],17,[107,[109]]],[[18,[[13,[1,104]]]]]],[[[16,[[118,[108]]]],17,[107,[109]]],[[18,[[13,[1,104]]]]]],[[[16,[[121,[108,108]]]],17,[107,[109]]],[[18,[[13,[1,104]]]]]],[[[16,[[124,[[0,[[116,[[107,[106]]]],29]]]]]],17,[107,[109]]],[[18,[[13,[1,104]]]]]],[[[16,[[154,[108]]]],17,[107,[109]]],[[18,[[13,[1,104]]]]]],[[[16,[[144,[103,[116,[[107,[106]]]]]]]],17],[[18,[13]]]],[[16,17,111],[[18,[[13,[112,104]]]]]],[[[16,[[123,[166]]]],17,111],[[18,[[13,[112,104]]]]]],[[[16,[[117,[[0,[108,110]]]]]],17,111],[[18,[[13,[112,104]]]]]],[[[16,[[118,[[0,[103,110]]]]]],17,111],[[18,[[13,[112,104]]]]]],[[[16,[[124,[[0,[[116,[[107,[106]]]],29]]]]]],17,111],[[18,[[13,[112,104]]]]]],[[[16,[[117,[[0,[108,110]]]]]],17,167],[[18,[[13,[104]]]]]],[[16,17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[140]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[123,[138]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[117,[103]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[118,[103]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[119,[103]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[124,[[45,[[107,[106]],44]]]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[124,[[99,[106,44]]]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[124,[[99,[106,44]]]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[124,[[107,[106]]]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[155,[103]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[16,17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[16,[140]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[16,[[123,[138]]]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[16,[[117,[103]]]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[16,[[118,[103]]]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[16,[[119,[103]]]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[16,[[124,[[107,[106]]]]]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[16,[[124,[[99,[106,44]]]]]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[16,[[124,[[99,[106,44]]]]]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[16,[[124,[[45,[[107,[106]],44]]]]]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[[[16,[[155,[103]]]],17,[107,[113]]],[[18,[[13,[1,104]]]]]],[124,112],[104,[[19,[161]]]],[[29,[107,[106]]],[[146,[29]]]],[[[123,[165]],[107,[106]]],[[13,[1,104]]]],[[29,[107,[106]]],[[148,[29]]]],[[[123,[165]],[107,[106]]],[[13,[104]]]],[[29,20],[[149,[29]]]],[[29,[99,[106,44]]],[[150,[29]]]],[[[123,[165]],[99,[106,44]]],[[13,[1,104]]]],[[29,20],[[151,[29]]]],[[[123,[165]],20],[[13,[1,104]]]],[[29,106,[99,[106,44]]],[[152,[29]]]],[[29,[107,[109]]],[[147,[29]]]],[[[123,[165]],[107,[109]]],[[13,[1,104]]]],[106,139],[[[154,[29]],[155,[29]]],[[13,[29,[141,[29]]]]]],[[[155,[29]],[154,[29]]],[[13,[29,[141,[29]]]]]],[[29,111],[[153,[29]]]],[[[123,[166]],111],[[13,[112,104]]]],[[[16,[[117,[[0,[108,110]]]]]],167],[[142,[[0,[108,110]]]]]],[[[115,[[116,[[107,[106]]]]]],[168,[1]]]],[[[130,[108]],112]],[[124,112]],[[],140],[104,[[19,[120]]]],[[[0,[103,38]]]],[[[115,[[116,[[107,[106]]]]]]],1],[[[16,[[144,[103,[116,[[107,[106]]]]]]]],[116,[[107,[106]]]]],13],[29,[[153,[29]]]],[[38,112],[[130,[38]]]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],[[18,[[19,[13]]]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[1,108],[[117,[108]]]],[[1,103],[[118,[103]]]],[[1,103],[[119,[103]]]],[[29,[107,[106]]],[[156,[29]]]],[[[123,[138]],[107,[106]]],[[13,[1,104]]]],[[29,[107,[106]]],[[158,[29]]]],[[[123,[138]],[107,[106]]],[[13,[104]]]],[[[123,[138]],169],[[13,[104]]]],[[29,[107,[113]]],[[157,[29]]]],[[[123,[138]],[107,[113]]],[[13,[1,104]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[170,[133]]]],[[[171,[38]]],38],[[[172,[38]]],38],[[[173,[38,38]]],38],[[[171,[38]]],38],[[[172,[38]]],38],[[[173,[38,38]]],38],[[[174,[38]]]],[[[171,[38]]]],[[[175,[38]]]],[[[172,[38]]]],[[[173,[38,38]]]],[[[170,[38]],11],[[13,[12]]]],[[[174,[38]],11],[[13,[12]]]],[[[171,[[0,[26,38]]]],11],[[13,[12]]]],[[[175,[38]],11],[[13,[12]]]],[[[172,[[0,[26,38]]]],11],[[13,[12]]]],[[[173,[38,[0,[26,38]]]],11],[[13,[12]]]],[[]],[176],[[],170],[[]],[[]],[[]],[[]],[[]],[[[170,[38]]],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[170],[[[174,[38]]],9],[[[175,[38]]],9],[[[170,[38]]],[[175,[38]]]],[[[177,[[170,[38]],44]]],[[174,[38]]]],[[[172,[38]],39],[[173,[38,38]]]],[[[173,[38,38]],39],[[173,[38,38]]]],[[],170],[[[16,[[174,[38]]]],17],18],[[[16,[[175,[38]]]],17],18],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[[170,[38]]],[[19,[[172,[38]]]]]],[[[177,[[170,[38]],44]]],[[19,[[171,[38]]]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,1]],0,[[16,17],18],[[16,17],[[18,[13]]]],[[16,17],[[18,[[13,[104]]]]]],[[16,17],[[18,[[13,[[107,[106]],104]]]]]],[[16,17],[[18,[13]]]],[[16,17],[[18,[[13,[104]]]]]],[[16,17],[[18,[19]]]],[[16,17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[16,17,[107,[109]]],[[18,[[13,[1,104]]]]]],[[16,17],[[18,[13]]]],[[16,17,111],[[18,[[13,[112,104]]]]]],[[16,17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[16,17,[107,[113]]],[[18,[[13,[1,104]]]]]],0,[[]],[16,13],0,[[16,17],[[18,[13]]]],[[16,17],[[18,[[19,[13]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[27],[[38,39],[[41,[38,40,39]]]],[[[0,[38,43]]],[[16,[[45,[27,44]]]]]],[38,[[16,[[45,[27,44]]]]]],[[[0,[38,46]]],[[47,[[0,[38,46]]]]]],[27],[[],[[53,[13]]]],[38,[[55,[38]]]],[38,[[56,[38]]]],[38,[[57,[38]]]],[38,[[58,[38]]]],[38,[[62,[38]]]],[[38,39],[[67,[38,39]]]],[[38,39],[[78,[38,39]]]],[[38,39],[[77,[38,39]]]],[38,[[72,[38]]]],[[],27],[38,[[64,[38]]]],[[],9],[[27,27],[[86,[27,27]]]],[[27,27,27],[[87,[27,27,27]]]],[[27,27,27,27],[[88,[27,27,27,27]]]],[[27,27,27,27,27],[[89,[27,27,27,27,27]]]],[98,60],[39,[[83,[39]]]],[38,[[42,[38,27]]]],[[38,39],[[63,[38,39]]]],[[38,39],[[80,[38,39]]]],[38,[[65,[38]]]],[[38,39],[[79,[38,39]]]],[[38,39,39],[[81,[38,39,39]]]],[27,[[84,[27]]]],[38,[[68,[38]]]],[38,19],[[],[[53,[13]]]],[38,[[76,[38]]]],[[38,39],[[75,[38,40,39]]]],[[],50],[[16,17],18],[102,[[59,[102]]]],[27,[[52,[27]]]],[[29,17],18],[[],53],[38],[38,[[42,[27,38]]]],[[[0,[27,29]],[0,[27,29]]],[[90,[[0,[27,29]],[0,[27,29]]]]]],[98,91],[98,97],[38,[[48,[38]]]],[[38,39],[[66,[38,27,39]]]],[38,[[73,[38]]]],[38,[[74,[38]]]],[[40,40],[[92,[40,40]]]],[[40,40,40],[[93,[40,40,40]]]],[[40,40,40,40],[[94,[40,40,40,40]]]],[[40,40,40,40,40],[[95,[40,40,40,40,40]]]],[98,61],[40,[[85,[40]]]],[[16,17],[[18,[13]]]],[[29,17],[[18,[13]]]],[[[0,[40,29]],[0,[40,29]]],[[96,[[0,[40,29]],[0,[40,29]]]]]],[38,[[69,[38]]]],[[38,39],[[82,[38,39]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[38,1],[[178,[38]]]],[29,[[179,[29]]]],[[],180],[[38,[105,[5]]],[[181,[38,[105,[5]]]]]],[29,[[182,[29]]]],[29,[[183,[29]]]],[38,[[42,[38,105]]]],[[16,17],[[18,[13]]]],[[29,17],[[18,[13]]]],[[16,17],[[18,[13]]]],[[29,17],[[18,[13]]]],[[16,17],[[18,[13]]]],[[29,17],[[18,[13]]]],[38,[[42,[105,38]]]],[29,[[184,[29]]]],[[29,[0,[185,28,29,38]]],[[186,[29,[0,[185,28,29,38]]]]]],[38,[[187,[38]]]],[[38,39],[[188,[38,39]]]],[16,13],[29,13],[102,[[189,[102,27]]]],[[38,102],[[190,[38,27,102]]]],[[38,102],[[191,[38,28,102]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[28],[[38,102],[[192,[38,27,102]]]],[[38,102],[[193,[38,40,102]]]],[[38,102],[[194,[38,27,102]]]],[[[0,[38,43]]],[[16,[[45,[28,44]]]]]],[38,[[16,[[45,[28,44]]]]]],[[38,1],[[195,[38]]]],[[38,1],[[196,[38]]]],[[]],[[[0,[38,46]]],[[197,[[0,[38,46]]]]]],[[38,28],[[198,[38,28]]]],[[38,1],[[199,[38]]]],[38,[[201,[38,[0,[133,200]]]]]],[38,[[202,[38]]]],[38,[[203,[38]]]],[[[0,[38,5]]],[[204,[[0,[38,5]]]]]],[[],205],[38,[[206,[38]]]],[38,[[207,[38]]]],[[38,102],[[208,[38,27,102]]]],[[38,102],[[209,[38,27,102]]]],[[38,102],[[210,[38,28,102]]]],[[38,[163,[[19,[1]]]],102],[[211,[38,[0,[28,29]],102]]]],[38,[[212,[38]]]],[[38,[163,[[19,[1]]]]],[[213,[38]]]],[[38,102],[[214,[38,27,102]]]],[[38,102],[[215,[38,27,102]]]],[[38,[163,[[19,[1]]]],102],[[216,[38,27,102]]]],[[[0,[185,38]],105],[[217,[[0,[185,38]],105]]]],[38,[[218,[38]]]],0,[[38,102],[[219,[38,102]]]],[[38,102],[[220,[38,102]]]],[[38,102],[[221,[38,102]]]],[[[0,[38,222]]],[[223,[[0,[38,222]]]]]],[[[0,[38,29]]],[[224,[[0,[38,29]]]]]],[38,[[225,[38]]]],[[],9],[98,226],[38,[[42,[38,28]]]],[[38,102],[[227,[38,102]]]],[[38,102],[[228,[38,102]]]],[[38,102],[[229,[38,102]]]],[29,[[230,[29]]]],[27,[[231,[27]]]],[[38,102],[[232,[38,40,102]]]],[38,[[233,[38]]]],[[],234],[102,[[235,[102]]]],[28,[[236,[28]]]],[[16,17],[[18,[19]]]],[[29,17],[[18,[19]]]],[[38,1],[[237,[38]]]],[5,[[238,[5]]]],[102,[[239,[102]]]],[38,[[42,[28,38]]]],[[38,102],[[240,[38,27,102]]]],[[28,28],[[241,[28,28]]]],0,[98,242],[[[0,[29,101]]],[[243,[[0,[29,101]]]]]],[[28,28,102],[[244,[28,28,102,133]]]],[[]],[[38,1],[[245,[38]]]],[[38,102],[[246,[38,27,102]]]],[[[0,[105,38]]]],[[38,1],[[247,[38]]]],[[38,27],[[248,[38,27]]]],[[38,102],[[249,[38,27,102]]]],[[38,102],[[250,[38,27,102]]]],[[38,102],[[251,[38,27,102]]]],[[38,102],[[252,[38,27,102]]]],[[38,1],[[253,[38]]]],[[38,1],[[254,[38]]]],[[38,1],[[255,[38]]]],[38,[[256,[38,[0,[133,200]]]]]],[38,[[257,[38]]]],[[38,102],[[258,[38,27,102]]]],[[38,102],[[259,[38,40,102]]]],[38,[[260,[38]]]],[[38,[163,[[19,[1]]]]],[[261,[38]]]],[[38,102],[[262,[38,40,102]]]],[[38,102],[[263,[38,40,102]]]],[[38,[163,[[19,[1]]]],102],[[264,[38,27,102]]]],[29,[[265,[29]]]],[[16,17],[[18,[[19,[13]]]]]],[[29,17],[[18,[[19,[13]]]]]],[[38,1],[[266,[38]]]],[[38,102],[[267,[38,40,102]]]],[[38,102],[[268,[38,40,102]]]],[102,[[269,[102,40]]]],[102,[[270,[102,27]]]],[[[0,[38,28]]],[[271,[[0,[38,28]],[0,[133,200]],[0,[133,200]]]]]],[[38,28],[[272,[38,28]]]],0,0,0,0,0,0,0,0,0,0,[98,242],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[38,1],[[178,[38]]]],[180,180],[[[188,[5,5]]],[[188,[5,5]]]],[[[190,[5,5,5]]],[[190,[5,5,5]]]],[[]],[[]],[[]],[29,[[179,[29]]]],[[],180],[[38,[105,[5]]],[[181,[38,[105,[5]]]]]],[29,[[182,[29]]]],[29,[[183,[29]]]],[[[186,[[0,[26,38]],[0,[26,185,38]]]],11],[[13,[12]]]],[[[179,[[0,[26,38]],26]],11],[[13,[12]]]],[[[180,[26]],11],[[13,[12]]]],[[[181,[26,26]],11],[[13,[12]]]],[[[182,[[0,[26,38]],26]],11],[[13,[12]]]],[[[183,[[0,[26,38]],26]],11],[[13,[12]]]],[[[187,[[0,[26,[105,[26]]]],26,26]],11],[[13,[12]]]],[[[188,[26,26]],11],[[13,[12]]]],[[[184,[[0,[26,38]],26]],11],[[13,[12]]]],[[[189,[26,26,26]],11],[[13,[12]]]],[[[190,[26,26]],11],[[13,[12]]]],[[[191,[26,26,26]],11],[[13,[12]]]],[[[178,[26,26]],11],[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[181],[[[187,[105]]],105],[188],[[[190,[105,27,102]]],105],[[[191,[105,28,102]]],105],[[[178,[105]]],105],[[[16,[181]]]],[[[16,[[187,[105]]]]],[[16,[105]]]],[[[16,[188]]],16],[[[16,[[190,[105,27,102]]]]],[[16,[105]]]],[[[16,[[191,[105,28,102]]]]],[[16,[105]]]],[[[16,[[178,[105]]]]],[[16,[105]]]],[181],[[[187,[105]]],105],[188],[[[190,[105,27,102]]],105],[[[191,[105,28,102]]],105],[[[178,[105]]],105],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[181],[[[187,[105]]],105],[188],[[[190,[105,27,102]]],105],[[[191,[105,28,102]]],105],[[[178,[105]]],105],[[[187,[[0,[105,101]]]]],9],[[[188,[101]]],9],[[[191,[[0,[101,105]],28,102]]],9],[[[178,[[0,[105,101]]]]],9],[38,[[42,[38,105]]]],[[[16,[[186,[[0,[105,29,38]],[0,[28,29,38]]]]]],17],18],[[[16,[[179,[[0,[105,29,38]]]]]],17],18],[[[16,[[182,[[0,[105,29,38]]]]]],17],18],[[[16,[[183,[[0,[105,29,38]]]]]],17],18],[[[16,[[184,[[0,[105,29,38]]]]]],17],18],[[16,17],[[18,[13]]]],[[[16,[180]],17],[[18,[13]]]],[[[16,[[181,[[105,[5]],[105,[5]]]]]],17],[[18,[13]]]],[[[16,[[187,[105]]]],17],[[18,[13]]]],[[[16,[[188,[105,39]]]],17],[[18,[13]]]],[[[16,[[189,[102,27]]]],17],[[18,[13]]]],[[[16,[[190,[105,27,102]]]],17],[[18,[13]]]],[[[16,[[191,[105,28,102]]]],17],[[18,[13]]]],[[[16,[[178,[105]]]],17],[[18,[13]]]],[[29,17],[[18,[13]]]],[[16,17],[[18,[13]]]],[[[16,[180]],17],[[18,[13]]]],[[[16,[[181,[[105,[5]],[105,[5]]]]]],17],[[18,[13]]]],[[[16,[[187,[105]]]],17],[[18,[13]]]],[[[16,[[188,[105,39]]]],17],[[18,[13]]]],[[[16,[[189,[102,27]]]],17],[[18,[13]]]],[[[16,[[190,[105,27,102]]]],17],[[18,[13]]]],[[[16,[[191,[105,28,102]]]],17],[[18,[13]]]],[[[16,[[178,[105]]]],17],[[18,[13]]]],[[29,17],[[18,[13]]]],[[[16,[[187,[[0,[105,28]]]]]],17],[[18,[19]]]],[[[16,[[188,[28]]]],17],[[18,[19]]]],[[[16,[[190,[[0,[28,105]],27,102]]]],17],[[18,[19]]]],[[[16,[[191,[[0,[28,105]],28,102]]]],17],[[18,[19]]]],[[[16,[[178,[[0,[105,28]]]]]],17],[[18,[19]]]],[[16,17],[[18,[13]]]],[[[16,[180]],17],[[18,[13]]]],[[[16,[[181,[[105,[5]],[105,[5]]]]]],17],[[18,[13]]]],[[[16,[[187,[105]]]],17],[[18,[13]]]],[[[16,[[188,[105,39]]]],17],[[18,[13]]]],[[[16,[[189,[102,27]]]],17],[[18,[13]]]],[[[16,[[190,[105,27,102]]]],17],[[18,[13]]]],[[[16,[[191,[105,28,102]]]],17],[[18,[13]]]],[[[16,[[178,[105]]]],17],[[18,[13]]]],[[29,17],[[18,[13]]]],[38,[[42,[105,38]]]],[29,[[184,[29]]]],[[29,[0,[185,28,29,38]]],[[186,[29,[0,[185,28,29,38]]]]]],[38,[[187,[38]]]],[[38,39],[[188,[38,39]]]],[[[187,[[0,[105,28]]]]]],[[[188,[28]]]],[[[190,[[0,[28,105]],27,102]]]],[[[191,[[0,[28,105]],28,102]]]],[[[178,[[0,[105,28]]]]]],[16,13],[[[16,[180]]],13],[[[16,[[181,[[105,[5]],[105,[5]]]]]],5],13],[[[16,[[187,[105]]]]],13],[[[16,[[188,[105,39]]]]],13],[[[16,[[189,[102,27]]]]],13],[[[16,[[190,[105,27,102]]]]],13],[[[16,[[191,[105,28,102]]]]],13],[[[16,[[178,[105]]]]],13],[29,13],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[102,[[189,[102,27]]]],[[38,102],[[190,[38,27,102]]]],[[38,102],[[191,[38,28,102]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[273],[28],[[38,102],[[192,[38,27,102]]]],[[38,102],[[193,[38,40,102]]]],[[38,102],[[194,[38,27,102]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[38,43]]],[[16,[[45,[28,44]]]]]],[38,[[16,[[45,[28,44]]]]]],[[38,1],[[195,[38]]]],[[38,1],[[196,[38]]]],[[]],[[[0,[38,46]]],[[197,[[0,[38,46]]]]]],[[38,28],[[198,[38,28]]]],[[38,1],[[199,[38]]]],[274],[[[242,[[0,[28,29]]]]]],[[[226,[5]]],[[226,[5]]]],[[[238,[5]]],[[238,[5]]]],[[[239,[5]]],[[239,[5]]]],[205,205],[234,234],[[[236,[5]]],[[236,[5]]]],[275,275],[[[276,[5]]],[[276,[5]]]],[273,273],[277,277],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[38,[[201,[38,[0,[133,200]]]]]],[38,[[202,[38]]]],[[[16,[[223,[185]]]],1]],[38,[[203,[38]]]],[[[0,[38,5]]],[[204,[[0,[38,5]]]]]],[[],[[278,[27]]]],[[],274],[[],[[242,[[0,[28,29]]]]]],[[],275],[274],[[],205],[38,[[206,[38]]]],[[[279,[[10,[[10,[[10,[10]]]]]],[10,[[10,[[10,[10]]]]]]]],[279,[[10,[[10,[[10,[10]]]]]],[10,[[10,[[10,[10]]]]]]]]],9],[[[280,[[10,[[10,[[10,[10]]]]]],[10,[[10,[[10,[10]]]]]]]],[280,[[10,[[10,[[10,[10]]]]]],[10,[[10,[[10,[10]]]]]]]]],9],[[275,275],9],[[277,277],9],[[],9],[[],9],[[],9],[[],9],[38,[[207,[38]]]],[[[278,[27]],98]],[[274,98]],[[[242,[[0,[28,29]]]],98]],[[38,102],[[208,[38,27,102]]]],[[38,102],[[209,[38,27,102]]]],[[38,102],[[210,[38,28,102]]]],[[38,[163,[[19,[1]]]],102],[[211,[38,[0,[28,29]],102]]]],[38,[[212,[38]]]],[[38,[163,[[19,[1]]]]],[[213,[38]]]],[[281,11],[[13,[12]]]],[[281,11],[[13,[12]]]],[[235,11],[[13,[12]]]],[[[278,[27]],11],[[13,[12]]]],[[274,11],[[13,[12]]]],[[[242,[26]],11],[[13,[12]]]],[[[198,[26,26]],11],[[13,[12]]]],[[[201,[26,26]],11],[[13,[12]]]],[[[271,[26,26,26]],11],[[13,[12]]]],[[[202,[[0,[26,28]]]],11],[[13,[12]]]],[[[203,[26]],11],[[13,[12]]]],[[[204,[26]],11],[[13,[12]]]],[[[206,[26]],11],[[13,[12]]]],[[[208,[[0,[28,26]],26]],11],[[13,[12]]]],[[[209,[26,26]],11],[[13,[12]]]],[[[212,[28]],11],[[13,[12]]]],[[[214,[26,26,26]],11],[[13,[12]]]],[[[194,[26,26]],11],[[13,[12]]]],[[[192,[26,26]],11],[[13,[12]]]],[[[217,[185]],11],[[13,[12]]]],[[[215,[26,26]],11],[[13,[12]]]],[[[218,[26]],11],[[13,[12]]]],[[[224,[26]],11],[[13,[12]]]],[[219,11],[[13,[12]]]],[[[227,[26]],11],[[13,[12]]]],[[210,11],[[13,[12]]]],[[[230,[[0,[26,38]]]],11],[[13,[12]]]],[[[243,[[0,[26,38]]]],11],[[13,[12]]]],[[[233,[[0,[26,28]]]],11],[[13,[12]]]],[[[282,[[0,[28,26]]]],11],[[13,[12]]]],[[[283,[[0,[28,26]]]],11],[[13,[12]]]],[[[284,[[0,[28,26]]]],11],[[13,[12]]]],[[[285,[[0,[28,26]],38]],11],[[13,[12]]]],[[[245,[26]],11],[[13,[12]]]],[[[246,[[0,[28,26]],26]],11],[[13,[12]]]],[[[247,[26]],11],[[13,[12]]]],[[[249,[[0,[28,26]],26]],11],[[13,[12]]]],[[[248,[[0,[28,26]],[0,[27,26]]]],11],[[13,[12]]]],[[[250,[26,26]],11],[[13,[12]]]],[[[272,[[0,[26,28]],[0,[26,28]]]],11],[[13,[12]]]],[[[199,[[0,[26,28]]]],11],[[13,[12]]]],[[[237,[[0,[26,28]]]],11],[[13,[12]]]],[[[240,[[0,[28,26]],26,26]],11],[[13,[12]]]],[[[195,[[0,[28,26]]]],11],[[13,[12]]]],[[[196,[[0,[28,26]]]],11],[[13,[12]]]],[[[211,[28,[0,[28,29]],102]],11],[[13,[12]]]],[[[216,[26,26]],11],[[13,[12]]]],[[[286,[26]],11],[[13,[12]]]],[[[287,[26,26]],11],[[13,[12]]]],[[[197,[26]],11],[[13,[12]]]],[[[193,[26,26]],11],[[13,[12]]]],[[207,11],[[13,[12]]]],[[221,11],[[13,[12]]]],[[220,11],[[13,[12]]]],[[[225,[26]],11],[[13,[12]]]],[[229,11],[[13,[12]]]],[[228,11],[[13,[12]]]],[[[232,[26,26]],11],[[13,[12]]]],[[[265,[[0,[26,38]]]],11],[[13,[12]]]],[[[263,[26,26]],11],[[13,[12]]]],[[[258,[[0,[185,26]],26]],11],[[13,[12]]]],[[[259,[26,26]],11],[[13,[12]]]],[[[260,[[0,[26,185]]]],11],[[13,[12]]]],[[[261,[185]],11],[[13,[12]]]],[[[256,[26,26]],11],[[13,[12]]]],[[[257,[[0,[26,185]]]],11],[[13,[12]]]],[[[255,[[0,[26,185]]]],11],[[13,[12]]]],[[[279,[26]],11],[[13,[12]]]],[[[279,[288]],11],[[13,[12]]]],[[[266,[[0,[26,185]]]],11],[[13,[12]]]],[[[280,[26]],11],[[13,[12]]]],[[[280,[288]],11],[[13,[12]]]],[[[262,[26,26,26]],11],[[13,[12]]]],[[[269,[26,26]],11],[[13,[12]]]],[[[267,[[0,[185,26]],26]],11],[[13,[12]]]],[[[268,[[0,[185,26]],26]],11],[[13,[12]]]],[[[253,[[0,[26,185]]]],11],[[13,[12]]]],[[[254,[[0,[26,185]]]],11],[[13,[12]]]],[[[264,[26,26]],11],[[13,[12]]]],[[[223,[[0,[26,185]]]],11],[[13,[12]]]],[[[226,[26]],11],[[13,[12]]]],[[[238,[26]],11],[[13,[12]]]],[[[239,[26]],11],[[13,[12]]]],[[[205,[26]],11],[[13,[12]]]],[[[231,[26]],11],[[13,[12]]]],[[[234,[26]],11],[[13,[12]]]],[[[236,[26]],11],[[13,[12]]]],[[[241,[26,26]],11],[[13,[12]]]],[[275,11],[[13,[12]]]],[[[244,[26,26,26]],11],[[13,[12]]]],[[[270,[26,26]],11],[[13,[12]]]],[[[276,[26]],11],[[13,[12]]]],[[289,11],[[13,[12]]]],[[273,11],[[13,[12]]]],[[277,11],[[13,[12]]]],[[277,11],[[13,[12]]]],[[38,102],[[214,[38,27,102]]]],[[38,102],[[215,[38,27,102]]]],[[38,[163,[[19,[1]]]],102],[[216,[38,27,102]]]],[[[0,[185,38]],105],[[217,[[0,[185,38]],105]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,[[278,[27]]]],[98,274],[98,[[242,[[0,[28,29]]]]]],[38,[[218,[38]]]],0,[[[206,[28]]],28],[[[208,[28,27,290]]],28],[[[209,[28,27,102]]],28],[[[212,[28]]],28],[218],[[[224,[[0,[28,29]]]]],[[19,[[0,[28,29]]]]]],[219],[227],[210],[[[233,[28]]],28],[[[245,[28]]],28],[[[246,[28,27,102]]],28],[[[247,[28]]],28],[[[249,[28,27,102]]],28],[[[248,[28,27]]],28],[[[250,[28,102]]],28],[[[272,[28,28]]]],[[[199,[28]]],28],[[[237,[28]]],28],[[[240,[28,27,102]]],28],[[[195,[28]]],28],[[[196,[28]]],28],[[[211,[28,[0,[28,29]],102]]],28],[[[197,[[0,[28,46]]]]],[[0,[28,46]]]],[[[193,[185,40,102]]],185],[207],[221],[220],[225],[229],[228],[[[232,[185,40,102]]],185],[[[258,[185]]],185],[259],[[[260,[185]]],185],[[[261,[185]]],185],[[[255,[185]]],185],[[[266,[185]]],185],[[[267,[185,40,102]]],185],[[[268,[185,40,102]]],185],[[[253,[185]]],185],[[[254,[185]]],185],[241],[244],[[[16,[[206,[28]]]]],[[16,[28]]]],[[[16,[[208,[28,27,290]]]]],[[16,[28]]]],[[[16,[[209,[28,27,102]]]]],[[16,[28]]]],[[[16,[[212,[28]]]]],[[16,[28]]]],[[[16,[218]]],16],[[[16,[[224,[[0,[28,29]]]]]]],[[19,[[16,[[0,[28,29]]]]]]]],[[[16,[219]]],16],[[[16,[227]]],16],[[[16,[210]]],16],[[[16,[[233,[28]]]]],[[16,[28]]]],[[[16,[[245,[28]]]]],[[16,[28]]]],[[[16,[[246,[28,27,102]]]]],[[16,[28]]]],[[[16,[[247,[28]]]]],[[16,[28]]]],[[[16,[[249,[28,27,102]]]]],[[16,[28]]]],[[[16,[[248,[28,27]]]]],[[16,[28]]]],[[[16,[[250,[28,102]]]]],[[16,[28]]]],[[[16,[[272,[28,28]]]]]],[[[16,[[199,[28]]]]],[[16,[28]]]],[[[16,[[237,[28]]]]],[[16,[28]]]],[[[16,[[240,[28,27,102]]]]],[[16,[28]]]],[[[16,[[195,[28]]]]],[[16,[28]]]],[[[16,[[196,[28]]]]],[[16,[28]]]],[[[16,[[211,[28,[0,[28,29]],102]]]]],[[16,[28]]]],[[[16,[[197,[[0,[28,46]]]]]]],[[16,[[0,[28,46]]]]]],[[[16,[[193,[185,40,102]]]]],[[16,[185]]]],[[[16,[207]]],16],[[[16,[221]]],16],[[[16,[220]]],16],[[[16,[225]]],16],[[[16,[229]]],16],[[[16,[228]]],16],[[[16,[[232,[185,40,102]]]]],[[16,[185]]]],[[[16,[[258,[185]]]]],[[16,[185]]]],[[[16,[259]]],16],[[[16,[[260,[185]]]]],[[16,[185]]]],[[[16,[[261,[185]]]]],[[16,[185]]]],[[[16,[[255,[185]]]]],[[16,[185]]]],[[[16,[[266,[185]]]]],[[16,[185]]]],[[[16,[[267,[185,40,102]]]]],[[16,[185]]]],[[[16,[[268,[185,40,102]]]]],[[16,[185]]]],[[[16,[[253,[185]]]]],[[16,[185]]]],[[[16,[[254,[185]]]]],[[16,[185]]]],[[[16,[241]]]],[[[16,[244]]]],[[[206,[28]]],28],[[[208,[28,27,290]]],28],[[[209,[28,27,102]]],28],[[[212,[28]]],28],[218],[[[224,[[0,[28,29]]]]],[[19,[[0,[28,29]]]]]],[219],[227],[210],[[[233,[28]]],28],[[[245,[28]]],28],[[[246,[28,27,102]]],28],[[[247,[28]]],28],[[[249,[28,27,102]]],28],[[[248,[28,27]]],28],[[[250,[28,102]]],28],[[[272,[28,28]]]],[[[199,[28]]],28],[[[237,[28]]],28],[[[240,[28,27,102]]],28],[[[195,[28]]],28],[[[196,[28]]],28],[[[211,[28,[0,[28,29]],102]]],28],[[[197,[[0,[28,46]]]]],[[0,[28,46]]]],[[[193,[185,40,102]]],185],[207],[221],[220],[225],[229],[228],[[[232,[185,40,102]]],185],[[[258,[185]]],185],[259],[[[260,[185]]],185],[[[261,[185]]],185],[[[255,[185]]],185],[[[266,[185]]],185],[[[267,[185,40,102]]],185],[[[268,[185,40,102]]],185],[[[253,[185]]],185],[[[254,[185]]],185],[241],[244],[289,273],[[275,15]],[[38,102],[[219,[38,102]]]],[[38,102],[[220,[38,102]]]],[[38,102],[[221,[38,102]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[38,222]]],[[223,[[0,[38,222]]]]]],[[[0,[38,29]]],[[224,[[0,[38,29]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[206,[28]]],28],[[[208,[28,27,290]]],28],[[[209,[28,27,102]]],28],[[[212,[28]]],28],[218],[[[224,[[0,[28,29]]]]],[[19,[[0,[28,29]]]]]],[219],[227],[210],[[[233,[28]]],28],[[[245,[28]]],28],[[[246,[28,27,102]]],28],[[[247,[28]]],28],[[[249,[28,27,102]]],28],[[[248,[28,27]]],28],[[[250,[28,102]]],28],[[[272,[28,28]]]],[[[199,[28]]],28],[[[237,[28]]],28],[[[240,[28,27,102]]],28],[[[195,[28]]],28],[[[196,[28]]],28],[[[211,[28,[0,[28,29]],102]]],28],[[[197,[[0,[28,46]]]]],[[0,[28,46]]]],[[[193,[185,40,102]]],185],[207],[221],[220],[225],[229],[228],[[[232,[185,40,102]]],185],[[[258,[185]]],185],[259],[[[260,[185]]],185],[[[261,[185]]],185],[[[255,[185]]],185],[[[266,[185]]],185],[[[267,[185,40,102]]],185],[[[268,[185,40,102]]],185],[[[253,[185]]],185],[[[254,[185]]],185],[241],[244],[[[274,[29]]]],[[[274,[29]]]],[[[274,[29]]]],[[[242,[[0,[28,29]]]]]],[[[242,[[0,[28,29]]]]]],[[[242,[[0,[28,29]]]]]],[38,[[225,[38]]]],[276,9],[273,9],[218,9],[[[278,[27]]],9],[274,9],[[[242,[[0,[28,29]]]]],9],[[[248,[28,27]]],9],[[],9],[[[278,[27]]],9],[[[274,[27]]],9],[[[242,[[0,[28,29]]]]],9],[[[198,[28,101]]],9],[[[201,[101,[0,[133,200]]]]],9],[[[271,[101,[0,[133,200]],[0,[133,200]]]]],9],[[[202,[101]]],9],[[[203,[101]]],9],[[[204,[[0,[5,28]]]]],9],[[[206,[[0,[28,101]]]]],9],[[[208,[[0,[28,101]],27,102]]],9],[[[209,[[0,[28,101]],27,290]]],9],[[[212,[28]]],9],[[[214,[28,27,102]]],9],[[[194,[28,27,102]]],9],[[[192,[28,27,102]]],9],[[[217,[185]]],9],[[[215,[101,27,102]]],9],[[[218,[28]]],9],[[[224,[[0,[28,29]]]]],9],[219,9],[[[227,[101,290]]],9],[210,9],[[[230,[[0,[101,29,38]]]]],9],[[[243,[[0,[101,29,38]]]]],9],[[[233,[28]]],9],[[[282,[28]]],9],[[[283,[28]]],9],[[[284,[28,291]]],9],[[[285,[28,38]]],9],[[[245,[101]]],9],[[[246,[101,27,102]]],9],[[[247,[101]]],9],[[[249,[101,27,102]]],9],[[[248,[28,27]]],9],[[[250,[101,27,102]]],9],[[[272,[28,28]]],9],[[[199,[101]]],9],[[[237,[28]]],9],[[[240,[101,27,102]]],9],[[[195,[28]]],9],[[[196,[28]]],9],[[[211,[28,[0,[28,29]],102]]],9],[[[216,[28,27,102]]],9],[[[197,[[0,[101,46]]]]],9],[[[193,[[0,[185,101]],40,102]]],9],[207,9],[221,9],[220,9],[[[225,[[0,[185,101]]]]],9],[229,9],[228,9],[[[232,[[0,[185,101]],40,102]]],9],[[[265,[[0,[185,29,101,38]]]]],9],[[[258,[[0,[185,101]],27,102]]],9],[[[259,[[0,[185,101]],40,102]]],9],[[[260,[[0,[185,101]]]]],9],[[[261,[185]]],9],[[[256,[[0,[185,101]],[0,[133,200]]]]],9],[[[255,[[0,[185,101]]]]],9],[[[266,[[0,[185,101]]]]],9],[[[262,[185,40,102]]],9],[[[267,[[0,[185,101]],40,102]]],9],[[[268,[[0,[185,101]],40,102]]],9],[[[264,[185,27,102]]],9],[[[238,[5]]],9],[[[239,[102]]],9],[205,9],[[[231,[27]]],9],[234,9],[[[236,[28]]],9],[[[241,[28,28]]],9],[[[244,[28,28,102]]],9],[[[270,[102,27]]],9],[98,226],[[[274,[29]]],[[292,[29]]]],[[[242,[[0,[28,29]]]]],[[293,[[0,[28,29]]]]]],[[[274,[29]]],[[294,[29]]]],[[[242,[[0,[28,29]]]]],[[295,[[0,[28,29]]]]]],[[[16,[274]]],296],[[[16,[274]]],297],[38,[[42,[38,28]]]],[[[278,[27]]],1],[274,1],[[[242,[[0,[28,29]]]]],1],[[38,102],[[227,[38,102]]]],[[38,102],[[228,[38,102]]]],[[38,102],[[229,[38,102]]]],[[],[[278,[27]]]],[[],274],[[],[[242,[[0,[28,29]]]]]],[289,276],[[]],[29,[[230,[29]]]],[[[16,[[233,[28]]]],39],[[284,[28,39]]]],[[[16,[[233,[28]]]],38],[[285,[28,38]]]],[27,[[231,[27]]]],[[38,102],[[232,[38,40,102]]]],[[[16,[[233,[28]]]]],[[282,[28]]]],[[[16,[[233,[28]]]]],[[283,[28]]]],[38,[[233,[38]]]],[[],234],[[[16,[[201,[28,[0,[133,200]]]]]],17],[[18,[[0,[133,200]]]]]],[[[16,[[271,[28,[0,[133,200]],[0,[133,200]]]]]],17],18],[[[16,[[202,[28]]]],17],18],[[[16,[[203,[28]]]],17],18],[[[16,[[214,[28,27,102]]]],17],18],[[[16,[[194,[28,27,102]]]],17],[[18,[9]]]],[[[16,[[192,[28,27,102]]]],17],[[18,[9]]]],[[[16,[[217,[185]]]],17],18],[[[16,[[215,[28,27,102]]]],17],18],[[[16,[[224,[[0,[28,29]]]]]],17],18],[[[16,[[230,[[0,[28,29,38]]]]]],17],18],[[[16,[[243,[[0,[101,29,38]]]]]],17],18],[[[16,[[282,[28]]]],17],18],[[[16,[[283,[28]]]],17],18],[[[16,[[284,[28,291]]]],17],18],[[[16,[[285,[28,38]]]],17],18],[[[16,[[216,[28,27,102]]]],17],18],[[[16,[[265,[[0,[185,29,38]]]]]],17],18],[[[16,[[263,[185,40,102]]]],17],18],[[[16,[[256,[185,[0,[133,200]]]]]],17],18],[[[16,[[257,[185]]]],17],18],[[[16,[[262,[185,40,102]]]],17],18],[[[16,[[264,[185,27,102]]]],17],18],[[[16,[[276,[27]]]],17],18],[[[16,[[206,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[208,[[0,[28,105]],27,102]]]],17],[[18,[13]]]],[[[16,[[209,[[0,[28,105]],27,290]]]],17],[[18,[13]]]],[[[16,[[212,[28]]]],17],[[18,[13]]]],[[[16,[[218,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[219]],17],[[18,[13]]]],[[[16,[[227,[[0,[28,105]],290]]]],17],[[18,[13]]]],[[[16,[210]],17],[[18,[13]]]],[[[16,[[233,[[0,[105,28]]]]]],17],[[18,[13]]]],[[[16,[[245,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[246,[[0,[28,105]],27,102]]]],17],[[18,[13]]]],[[[16,[[247,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[249,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[248,[[0,[28,105]],27]]]],17],[[18,[13]]]],[[[16,[[250,[105]]]],17],[[18,[13]]]],[[[16,[[199,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[237,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[240,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[195,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[196,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[211,[28,[0,[28,29]],102]]]],17],[[18,[13]]]],[[[16,[[287,[105]]]],17],[[18,[13]]]],[[[16,[[193,[105]]]],17],[[18,[13]]]],[[[16,[207]],17],[[18,[13]]]],[[[16,[221]],17],[[18,[13]]]],[[[16,[220]],17],[[18,[13]]]],[[[16,[[225,[105]]]],17],[[18,[13]]]],[[[16,[229]],17],[[18,[13]]]],[[[16,[228]],17],[[18,[13]]]],[[[16,[[232,[105]]]],17],[[18,[13]]]],[[[16,[[258,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[259,[105]]]],17],[[18,[13]]]],[[[16,[[260,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[261,[185]]]],17],[[18,[13]]]],[[[16,[[255,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[266,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[267,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[268,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[253,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[254,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[223,[[0,[185,103]]]]]],17],[[18,[[13,[104]]]]]],[[[16,[[223,[185]]]],17],[[18,[[13,[[107,[106]],104]]]]]],[[[16,[[206,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[208,[[0,[28,105]],27,102]]]],17],[[18,[13]]]],[[[16,[[209,[[0,[28,105]],27,290]]]],17],[[18,[13]]]],[[[16,[[212,[28]]]],17],[[18,[13]]]],[[[16,[[218,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[219]],17],[[18,[13]]]],[[[16,[[227,[[0,[28,105]],290]]]],17],[[18,[13]]]],[[[16,[210]],17],[[18,[13]]]],[[[16,[[233,[[0,[105,28]]]]]],17],[[18,[13]]]],[[[16,[[245,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[246,[[0,[28,105]],27,102]]]],17],[[18,[13]]]],[[[16,[[247,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[249,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[248,[[0,[28,105]],27]]]],17],[[18,[13]]]],[[[16,[[250,[105]]]],17],[[18,[13]]]],[[[16,[[199,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[237,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[240,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[195,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[196,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[211,[28,[0,[28,29]],102]]]],17],[[18,[13]]]],[[[16,[[287,[105]]]],17],[[18,[13]]]],[[[16,[[193,[105]]]],17],[[18,[13]]]],[[[16,[207]],17],[[18,[13]]]],[[[16,[221]],17],[[18,[13]]]],[[[16,[220]],17],[[18,[13]]]],[[[16,[[225,[105]]]],17],[[18,[13]]]],[[[16,[229]],17],[[18,[13]]]],[[[16,[228]],17],[[18,[13]]]],[[[16,[[232,[105]]]],17],[[18,[13]]]],[[[16,[[258,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[259,[105]]]],17],[[18,[13]]]],[[[16,[[260,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[261,[185]]]],17],[[18,[13]]]],[[[16,[[255,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[266,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[267,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[268,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[253,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[254,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[223,[[0,[185,103]]]]]],17],[[18,[[13,[104]]]]]],[102,[[235,[102]]]],[28,[[236,[28]]]],[[16,17],[[18,[19]]]],[[[16,[[235,[102]]]],17],[[18,[19]]]],[[[16,[[278,[27]]]],17],[[18,[19]]]],[[[16,[[274,[27]]]],17],[[18,[19]]]],[[[16,[[242,[[0,[28,29]]]]]],17],[[18,[19]]]],[[[16,[[198,[28,28]]]],17],[[18,[19]]]],[[[16,[[204,[[0,[5,28]]]]]],17],[[18,[19]]]],[[[16,[[206,[28]]]],17],[[18,[19]]]],[[[16,[[208,[28,27,290]]]],17],[[18,[19]]]],[[[16,[[209,[28,27,290]]]],17],[[18,[19]]]],[[[16,[[212,[28]]]],17],[[18,[19]]]],[[[16,[[218,[28]]]],17],[[18,[19]]]],[[[16,[219]],17],[[18,[19]]]],[[[16,[[227,[28,290]]]],17],[[18,[19]]]],[[[16,[210]],17],[[18,[19]]]],[[[16,[[233,[28]]]],17],[[18,[19]]]],[[[16,[[245,[28]]]],17],[[18,[19]]]],[[[16,[[246,[28,27,102]]]],17],[[18,[19]]]],[[[16,[[247,[28]]]],17],[[18,[19]]]],[[[16,[[249,[28,27,102]]]],17],[[18,[19]]]],[[[16,[[248,[28,27]]]],17],[[18,[19]]]],[[[16,[[250,[28,27,102]]]],17],[[18,[19]]]],[[[16,[[272,[28,28]]]],17],[[18,[19]]]],[[[16,[[199,[28]]]],17],[[18,[19]]]],[[[16,[[237,[28]]]],17],[[18,[19]]]],[[[16,[[240,[28,27,102]]]],17],[[18,[19]]]],[[[16,[[195,[28]]]],17],[[18,[19]]]],[[[16,[[196,[28]]]],17],[[18,[19]]]],[[[16,[[211,[28,[0,[28,29]],102]]]],17],[[18,[19]]]],[[[16,[[286,[28]]]],17],[[18,[19]]]],[[[16,[[197,[[0,[28,46]]]]]],17],[[18,[19]]]],[[[16,[[193,[185,40,102]]]],17],[[18,[19]]]],[[[16,[207]],17],[[18,[19]]]],[[[16,[221]],17],[[18,[19]]]],[[[16,[220]],17],[[18,[19]]]],[[[16,[[225,[185]]]],17],[[18,[19]]]],[[[16,[229]],17],[[18,[19]]]],[[[16,[228]],17],[[18,[19]]]],[[[16,[[232,[185,40,102]]]],17],[[18,[19]]]],[[[16,[[258,[185,27,102]]]],17],[[18,[19]]]],[[[16,[[259,[185,40,102]]]],17],[[18,[19]]]],[[[16,[[260,[185]]]],17],[[18,[19]]]],[[[16,[[261,[185]]]],17],[[18,[19]]]],[[[16,[[255,[185]]]],17],[[18,[19]]]],[[[16,[[266,[185]]]],17],[[18,[19]]]],[[[16,[[269,[102,40]]]],17],[[18,[19]]]],[[[16,[[267,[185,40,102]]]],17],[[18,[19]]]],[[[16,[[268,[185,40,102]]]],17],[[18,[19]]]],[[[16,[[253,[185]]]],17],[[18,[19]]]],[[[16,[[254,[185]]]],17],[[18,[19]]]],[[[16,[[226,[298]]]],17],[[18,[19]]]],[[[16,[[238,[5]]]],17],[[18,[19]]]],[[[16,[[239,[102]]]],17],[[18,[19]]]],[[[16,[205]],17],[[18,[19]]]],[[[16,[[231,[27]]]],17],[[18,[19]]]],[[[16,[234]],17],[[18,[19]]]],[[[16,[[236,[28]]]],17],[[18,[19]]]],[[[16,[[241,[28,28]]]],17],[[18,[19]]]],[[[16,[[244,[28,28,102]]]],17],[[18,[19]]]],[[[16,[[270,[102,27]]]],17],[[18,[19]]]],[[[16,[[276,[28]]]],17],[[18,[19]]]],[[29,17],[[18,[19]]]],[[[16,[[233,[28]]]],17],[[18,[19]]]],[[[16,[[233,[28]]]],17],[[18,[19]]]],[[[16,[[223,[185]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[16,[[206,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[208,[[0,[28,105]],27,102]]]],17],[[18,[13]]]],[[[16,[[209,[[0,[28,105]],27,290]]]],17],[[18,[13]]]],[[[16,[[212,[28]]]],17],[[18,[13]]]],[[[16,[[218,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[219]],17],[[18,[13]]]],[[[16,[[227,[[0,[28,105]],290]]]],17],[[18,[13]]]],[[[16,[210]],17],[[18,[13]]]],[[[16,[[233,[[0,[105,28]]]]]],17],[[18,[13]]]],[[[16,[[245,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[246,[[0,[28,105]],27,102]]]],17],[[18,[13]]]],[[[16,[[247,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[249,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[248,[[0,[28,105]],27]]]],17],[[18,[13]]]],[[[16,[[250,[105]]]],17],[[18,[13]]]],[[[16,[[199,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[237,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[240,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[195,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[196,[[0,[28,105]]]]]],17],[[18,[13]]]],[[[16,[[211,[28,[0,[28,29]],102]]]],17],[[18,[13]]]],[[[16,[[287,[105]]]],17],[[18,[13]]]],[[[16,[[193,[105]]]],17],[[18,[13]]]],[[[16,[207]],17],[[18,[13]]]],[[[16,[221]],17],[[18,[13]]]],[[[16,[220]],17],[[18,[13]]]],[[[16,[[225,[105]]]],17],[[18,[13]]]],[[[16,[229]],17],[[18,[13]]]],[[[16,[228]],17],[[18,[13]]]],[[[16,[[232,[105]]]],17],[[18,[13]]]],[[[16,[[258,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[259,[105]]]],17],[[18,[13]]]],[[[16,[[260,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[261,[185]]]],17],[[18,[13]]]],[[[16,[[255,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[266,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[267,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[268,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[253,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[254,[[0,[185,105]]]]]],17],[[18,[13]]]],[[[16,[[223,[[0,[185,103]]]]]],17,[107,[106]]],[[18,[[13,[1,104]]]]]],[[[278,[27]],27]],[274],[[[242,[[0,[28,29]]]],[0,[28,29]]]],[[[278,[27]],27]],[[[278,[27]],27]],[[38,1],[[237,[38]]]],[5,[[238,[5]]]],[102,[[239,[102]]]],[[[286,[105,29]],[287,[105,29]]],[[13,[105,29,[281,[105,29]]]]]],[[[287,[[0,[105,29]]]],[286,[[0,[105,29]]]]],[[13,[[0,[105,29]],[281,[[0,[105,29]]]]]]]],[38,[[42,[28,38]]]],[[38,102],[[240,[38,27,102]]]],[[28,28],[[241,[28,28]]]],0,[98,242],[[[0,[29,101]]],[[243,[[0,[29,101]]]]]],[[28,28,102],[[244,[28,28,102,133]]]],[[]],[[[278,[27]]]],[[[274,[27]]]],[[[198,[28,28]]]],[[[204,[[0,[5,28]]]]]],[[[206,[28]]]],[[[208,[28,27,290]]]],[[[209,[28,27,290]]]],[[[212,[28]]]],[[[218,[28]]]],[219],[[[227,[28,290]]]],[210],[[[233,[28]]]],[[[245,[28]]]],[[[246,[28,27,102]]]],[[[247,[28]]]],[[[249,[28,27,102]]]],[[[248,[28,27]]]],[[[250,[28,27,102]]]],[[[272,[28,28]]]],[[[199,[28]]]],[[[237,[28]]]],[[[240,[28,27,102]]]],[[[195,[28]]]],[[[196,[28]]]],[[[211,[28,[0,[28,29]],102]]]],[[[197,[[0,[28,46]]]]]],[[[193,[185,40,102]]]],[207],[221],[220],[[[225,[185]]]],[229],[228],[[[232,[185,40,102]]]],[[[258,[185,27,102]]]],[[[259,[185,40,102]]]],[[[261,[185]]]],[[[255,[185]]]],[[[266,[185]]]],[[[267,[185,40,102]]]],[[[268,[185,40,102]]]],[[[226,[298]]]],[[[238,[5]]]],[[[239,[102]]]],[205],[[[231,[27]]]],[234],[[[236,[28]]]],[[38,1],[[245,[38]]]],[[38,102],[[246,[38,27,102]]]],[[[274,[35]],35],[[13,[36]]]],[[[274,[37]],37],[[13,[36]]]],[[[0,[105,38]]]],[[[16,[[206,[[0,[28,105]]]]]]],13],[[[16,[[208,[[0,[28,105]],27,102]]]]],13],[[[16,[[209,[[0,[28,105]],27,290]]]]],13],[[[16,[[212,[28]]]]],13],[[[16,[[218,[[0,[28,105]]]]]]],13],[[[16,[219]]],13],[[[16,[[227,[[0,[28,105]],290]]]]],13],[[[16,[210]]],13],[[[16,[[233,[[0,[105,28]]]]]]],13],[[[16,[[245,[[0,[28,105]]]]]]],13],[[[16,[[246,[[0,[28,105]],27,102]]]]],13],[[[16,[[247,[[0,[28,105]]]]]]],13],[[[16,[[249,[[0,[28,105]]]]]]],13],[[[16,[[248,[[0,[28,105]],27]]]]],13],[[[16,[[250,[105]]]]],13],[[[16,[[199,[[0,[28,105]]]]]]],13],[[[16,[[237,[[0,[28,105]]]]]]],13],[[[16,[[240,[[0,[28,105]]]]]]],13],[[[16,[[195,[[0,[28,105]]]]]]],13],[[[16,[[196,[[0,[28,105]]]]]]],13],[[[16,[[211,[28,[0,[28,29]],102]]]]],13],[[[16,[[287,[105]]]]],13],[[[16,[[193,[105]]]]],13],[[[16,[207]]],13],[[[16,[221]]],13],[[[16,[220]]],13],[[[16,[[225,[105]]]]],13],[[[16,[229]]],13],[[[16,[228]]],13],[[[16,[[232,[105]]]]],13],[[[16,[[258,[[0,[185,105]]]]]]],13],[[[16,[[259,[105]]]]],13],[[[16,[[260,[[0,[185,105]]]]]]],13],[[[16,[[261,[185]]]]],13],[[[16,[[255,[[0,[185,105]]]]]]],13],[[[16,[[266,[[0,[185,105]]]]]]],13],[[[16,[[267,[[0,[185,105]]]]]]],13],[[[16,[[268,[[0,[185,105]]]]]]],13],[[[16,[[253,[[0,[185,105]]]]]]],13],[[[16,[[254,[[0,[185,105]]]]]]],13],[[38,1],[[247,[38]]]],[[[248,[28,27]]],[[19,[27]]]],[[[248,[28,27]]],19],[[38,27],[[248,[38,27]]]],[[38,102],[[249,[38,27,102]]]],[[38,102],[[250,[38,27,102]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],20],[275,275],[[38,102],[[251,[38,27,102]]]],[[38,102],[[252,[38,27,102]]]],[[38,1],[[253,[38]]]],[[38,1],[[254,[38]]]],[[38,1],[[255,[38]]]],[38,[[256,[38,[0,[133,200]]]]]],[38,[[257,[38]]]],[[38,102],[[258,[38,27,102]]]],[[38,102],[[259,[38,40,102]]]],[38,[[260,[38]]]],[[38,[163,[[19,[1]]]]],[[261,[38]]]],[[38,102],[[262,[38,40,102]]]],[[38,102],[[263,[38,40,102]]]],[[38,[163,[[19,[1]]]],102],[[264,[38,27,102]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[29,[[265,[29]]]],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],18],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[16,17],[[18,[[19,[13]]]]]],[[29,17],[[18,[[19,[13]]]]]],[[38,1],[[266,[38]]]],[[38,102],[[267,[38,40,102]]]],[[38,102],[[268,[38,40,102]]]],[102,[[269,[102,40]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[102,[[270,[102,27]]]],[[[0,[38,28]]],[[271,[[0,[38,28]],[0,[133,200]],[0,[133,200]]]]]],[[38,28],[[272,[38,28]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[296,[26]],11],[[13,[12]]]],[[[294,[[0,[26,29]]]],11],[[13,[12]]]],[[[297,[26]],11],[[13,[12]]]],[[[292,[[0,[26,29]]]],11],[[13,[12]]]],[[[299,[[0,[26,29]]]],11],[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[296,19],[[[294,[29]]],19],[297,19],[[[292,[29]]],19],[[[299,[29]]],19],[296],[[[294,[29]]]],[297],[[[292,[29]]]],[[[299,[29]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[293,[[0,[26,29]]]],11],[[13,[12]]]],[[[295,[[0,[26,29]]]],11],[[13,[12]]]],[[[300,[[0,[26,29]]]],11],[[13,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[293,[[0,[28,29]]]]],19],[[[295,[[0,[28,29]]]]],19],[[[300,[[0,[28,29]]]]],19],[98,242],[[[293,[[0,[28,29]]]]]],[[[295,[[0,[28,29]]]]]],[[[300,[[0,[28,29]]]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],21],[[],21],[[],21],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[301,302],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[18,[13]]],303],[[[18,[[19,[13]]]]],303],[301,301],[[[18,[5]]],[[18,[5]]]],[304,304],[[]],[[]],[[]],[[[18,[127]],[18,[127]]],126],[302],[[],305],[306,301],[27],[35],[301],[[[18,[[10,[[10,[[10,[10]]]]]]]],[18,[[10,[[10,[[10,[10]]]]]]]]],9],[[302,302],9],[[304,304],9],[[],9],[[36,11],[[13,[12]]]],[[36,11],[[13,[12]]]],[[35,11],[[13,[12]]]],[[305,11],[[13,[12]]]],[[37,11],[[13,[12]]]],[[306,11],[[13,[12]]]],[[17,11],[[13,[12]]]],[[301,11],[[13,[12]]]],[[[18,[26]],11],[[13,[12]]]],[[302,11],[[13,[12]]]],[[304,11],[[13,[12]]]],[[]],[[[16,[[45,[27,44]]]]],35],[[[16,[[45,[27,44]]]]],35],[[]],[[[45,[27,44]]],35],[[[45,[27,44]]],35],[37,35],[[]],[[]],[[[16,[[45,[27,44]]]]],37],[[[45,[[0,[27,43]],44]]],37],[[[45,[27,44]]],37],[[[16,[[45,[[0,[27,43]],44]]]]],37],[[]],[[]],[[[177,[[0,[307,43,135]],44]]],301],[[]],[[]],[176],[[],18],[[]],[[[177,[[0,[307,43,135]],44]]],302],[[]],[[],[[18,[13]]]],[[],[[18,[[19,[13]]]]]],[302,301],[[[13,[308]]],[[18,[[19,[[13,[309]]]]]]]],[[[13,[308]]],[[18,[[13,[309]]]]]],[301,17],[[[18,[162]],15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,37],[[],27],[18,9],[18,9],[36,9],[[18,39],18],[[[18,[[19,[13]]]],39],[[18,[[19,[13]]]]]],[[[18,[13]],39],[[18,[13]]]],[[[18,[[19,[13]]]],39],[[18,[[19,[13]]]]]],[[[18,[13]],39],[[18,[13]]]],[310,35],[[],305],[[[0,[310,43]]],37],[301,306],[304,302],[[],304],[[[311,[301]]],306],[[],301],[[],301],[[],301],[[[18,[[164,[[164,[[164,[164]]]]]]]],[18,[[164,[[164,[[164,[164]]]]]]]]],[[19,[126]]]],[[[16,[35]],17],18],[[[16,[37]],17],18],[[305,301]],[[],36],[[[0,[27,43]]],[[13,[36]]]],[27,[[13,[36]]]],[35,[[13,[36]]]],[27,[[13,[70,36]]]],[37,[[13,[36]]]],[[[0,[27,43]]],[[13,[70,36]]]],[[],[[13,[36]]]],[[],[[13,[36]]]],[305,[[19,[301]]]],[[]],[[]],[[]],[[],20],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[16,17],18],[[16,17],18],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[302,304],[[[177,[44]]]],[305],[301],[[[177,[44]]]],[301],[[[177,[312,44]]],301],[17,301],[[[177,[312,44]]],306],[[301,301],9]],"c":[3763],"p":[[15,"usize"],[3,"Sender"],[3,"UnboundedSender"],[3,"SendError"],[8,"Clone"],[3,"TrySendError"],[3,"Receiver"],[3,"UnboundedReceiver"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"TryRecvError"],[8,"Hasher"],[3,"Pin"],[3,"Context"],[4,"Poll"],[4,"Option"],[3,"String"],[3,"TypeId"],[3,"Sender"],[3,"Cancellation"],[3,"Canceled"],[3,"Receiver"],[8,"Debug"],[8,"Future"],[8,"Stream"],[8,"Unpin"],[3,"BlockingStream"],[3,"LocalSpawner"],[3,"LocalPool"],[3,"Enter"],[3,"EnterError"],[3,"LocalFutureObj"],[3,"SpawnError"],[3,"FutureObj"],[8,"Sized"],[8,"FnOnce"],[8,"TryFuture"],[3,"AndThen"],[4,"Either"],[8,"Send"],[3,"Global"],[3,"Box"],[8,"UnwindSafe"],[3,"CatchUnwind"],[3,"Shared"],[3,"WeakShared"],[3,"Pending"],[3,"OptionFuture"],[3,"PollImmediate"],[3,"Ready"],[8,"AsyncBufRead"],[3,"ErrInto"],[3,"Flatten"],[3,"FlattenSink"],[3,"FlattenStream"],[3,"PollFn"],[3,"JoinAll"],[3,"TryJoinAll"],[3,"Fuse"],[3,"Map"],[3,"IntoStream"],[3,"MapInto"],[3,"Then"],[3,"Inspect"],[3,"NeverError"],[3,"UnitError"],[3,"RemoteHandle"],[3,"Remote"],[3,"IntoFuture"],[3,"TryFlatten"],[3,"TryFlattenStream"],[3,"OrElse"],[3,"OkInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"MapOkOrElse"],[3,"UnwrapOrElse"],[3,"Lazy"],[4,"MaybeDone"],[4,"TryMaybeDone"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TrySelect"],[3,"SelectOk"],[8,"IntoIterator"],[3,"Vec"],[8,"FusedFuture"],[8,"FusedStream"],[8,"FnMut"],[8,"AsyncWrite"],[3,"Error"],[8,"Sink"],[15,"u8"],[15,"slice"],[8,"AsyncRead"],[3,"IoSliceMut"],[8,"AsyncSeek"],[4,"SeekFrom"],[15,"u64"],[3,"IoSlice"],[8,"AsMut"],[3,"Window"],[8,"AsRef"],[3,"BufReader"],[3,"BufWriter"],[3,"LineWriter"],[8,"Error"],[3,"Chain"],[4,"ErrorKind"],[3,"AllowStdIo"],[3,"Cursor"],[3,"Close"],[4,"Ordering"],[8,"Ord"],[3,"Empty"],[8,"BufRead"],[3,"Take"],[3,"Copy"],[3,"CopyBuf"],[8,"Default"],[15,"str"],[8,"Sync"],[3,"FillBuf"],[3,"Flush"],[8,"Write"],[3,"Repeat"],[3,"Sink"],[3,"ReuniteError"],[3,"SeeKRelative"],[3,"CopyBufAbortable"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadVectored"],[3,"ReadExact"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"Seek"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Write"],[3,"WriteVectored"],[3,"WriteAll"],[3,"NulError"],[3,"IntoInnerError"],[15,"i32"],[8,"Hash"],[8,"Into"],[8,"PartialOrd"],[8,"Read"],[8,"Seek"],[15,"i64"],[8,"RangeBounds"],[3,"Arguments"],[3,"Mutex"],[3,"OwnedMutexGuard"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"OwnedMutexLockFuture"],[3,"MutexLockFuture"],[15,"never"],[3,"Arc"],[3,"Buffer"],[3,"Close"],[3,"Drain"],[3,"Fanout"],[3,"Feed"],[3,"Flush"],[3,"Send"],[8,"TryStream"],[3,"SendAll"],[3,"SinkErrInto"],[3,"SinkMapErr"],[3,"Unfold"],[3,"With"],[3,"WithFlatMap"],[3,"All"],[3,"AndThen"],[3,"Any"],[3,"BufferUnordered"],[3,"Buffered"],[3,"CatchUnwind"],[3,"Chain"],[3,"Chunks"],[8,"Extend"],[3,"Collect"],[3,"Concat"],[3,"Count"],[3,"Cycle"],[3,"Empty"],[3,"Enumerate"],[3,"ErrInto"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"FlatMapUnordered"],[3,"Flatten"],[3,"FlattenUnorderedWithFlowController"],[3,"Fold"],[3,"ForEach"],[3,"ForEachConcurrent"],[3,"Forward"],[3,"Fuse"],[3,"Inspect"],[3,"InspectErr"],[3,"InspectOk"],[8,"TryStreamExt"],[3,"IntoAsyncRead"],[3,"StreamFuture"],[3,"IntoStream"],[3,"Iter"],[3,"Map"],[3,"MapErr"],[3,"MapOk"],[3,"Next"],[3,"Once"],[3,"OrElse"],[3,"Peekable"],[3,"Pending"],[3,"PollFn"],[3,"PollImmediate"],[3,"ReadyChunks"],[3,"Repeat"],[3,"RepeatWith"],[3,"Scan"],[3,"Select"],[3,"SelectAll"],[3,"SelectNextSome"],[3,"SelectWithStrategy"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeUntil"],[3,"TakeWhile"],[3,"Then"],[3,"TryAll"],[3,"TryAny"],[3,"TryBufferUnordered"],[3,"TryBuffered"],[3,"TryChunks"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryFlattenUnordered"],[3,"TryFold"],[3,"TryForEach"],[3,"TryForEachConcurrent"],[3,"TryNext"],[3,"TryReadyChunks"],[3,"TrySkipWhile"],[3,"TryTakeWhile"],[3,"TryUnfold"],[3,"Unfold"],[3,"Unzip"],[3,"Zip"],[3,"AbortHandle"],[3,"FuturesUnordered"],[4,"PollNext"],[3,"Abortable"],[3,"Aborted"],[3,"FuturesOrdered"],[3,"TryChunksError"],[3,"TryReadyChunksError"],[3,"ReuniteError"],[3,"Peek"],[3,"PeekMut"],[3,"NextIf"],[3,"NextIfEq"],[3,"SplitStream"],[3,"SplitSink"],[8,"Display"],[3,"AbortRegistration"],[8,"FnMut1"],[8,"FnOnce1"],[3,"Iter"],[3,"Iter"],[3,"IterMut"],[3,"IterMut"],[3,"IterPinMut"],[3,"IterPinRef"],[8,"Iterator"],[3,"IntoIter"],[3,"IntoIter"],[3,"Waker"],[3,"RawWaker"],[4,"ControlFlow"],[3,"RawWakerVTable"],[3,"AtomicWaker"],[3,"WakerRef"],[8,"Wake"],[4,"Infallible"],[8,"From"],[8,"UnsafeFutureObj"],[3,"ManuallyDrop"],[8,"ArcWake"],[8,"TryFutureExt"],[8,"FutureExt"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncBufReadExt"],[8,"AsyncSeekExt"],[8,"SinkExt"],[8,"StreamExt"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"LocalSpawn"],[8,"Spawn"]],"a":{"errno":[1523],"getlasterror":[1523]}},\
"futures_channel":{"doc":"Asynchronous channels.","t":"AADDDDDDDLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLDDDDLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["mpsc","oneshot","Receiver","SendError","Sender","TryRecvError","TrySendError","UnboundedReceiver","UnboundedSender","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","close","close_channel","close_channel","disconnect","disconnect","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash_receiver","hash_receiver","into","into","into","into","into","into","into","into_inner","into_send_error","is_closed","is_closed","is_connected_to","is_connected_to","is_disconnected","is_disconnected","is_empty","is_full","is_full","is_terminated","is_terminated","len","poll_close","poll_close","poll_close","poll_flush","poll_flush","poll_flush","poll_next","poll_next","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","same_receiver","same_receiver","size_hint","size_hint","start_send","start_send","start_send","start_send","start_send","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_next","try_poll_next","try_poll_next","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded","unbounded_send","Canceled","Cancellation","Receiver","Sender","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancellation","channel","clone","clone_into","close","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_future","into_future","is_canceled","is_connected_to","is_terminated","poll","poll","poll_canceled","send","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_poll","try_recv","type_id","type_id","type_id","type_id"],"q":[[0,"futures_channel"],[2,"futures_channel::mpsc"],[141,"futures_channel::oneshot"]],"d":["A multi-producer, single-consumer queue for sending values …","A channel for sending a single message between …","The receiving end of a bounded mpsc channel.","The error type for <code>Sender</code>s used as <code>Sink</code>s.","The transmission end of a bounded mpsc channel.","The error type returned from <code>try_next</code>.","The error type returned from <code>try_send</code>.","The receiving end of an unbounded mpsc channel.","The transmission end of an unbounded mpsc channel.","","","","","","","","","","","","","","","Creates a bounded mpsc channel for communicating between …","","","","","","","","","Closes the receiving half of a channel, without dropping …","Closes the receiving half of a channel, without dropping …","Closes this channel from the sender side, preventing any …","Closes this channel from the sender side, preventing any …","Disconnects this sender from the channel, closing it if …","Disconnects this sender from the channel, closing it if …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Hashes the receiver into the provided hasher","Hashes the receiver into the provided hasher","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the message that was attempted to be sent but …","Drops the message and converts into a <code>SendError</code>.","Returns whether this channel is closed without needing a …","Returns whether this channel is closed without needing a …","Returns whether the sender send to this receiver.","Returns whether the sender send to this receiver.","Returns <code>true</code> if this error is a result of the receiver …","Returns <code>true</code> if this error is a result of the receiver …","Return false is channel has no queued messages, true …","Returns <code>true</code> if this error is a result of the channel …","Returns <code>true</code> if this error is a result of the channel …","","","Return the number of messages in the queue or 0 if channel …","","","","","","","","","Polls the channel to determine if there is guaranteed …","","","Check if the channel is ready to receive a message.","","Returns whether the senders send to the same receiver.","Returns whether the senders send to the same receiver.","","","","Send a message on the channel.","","","Send a message on the channel.","","","","","","","","","","","","","","","","","","","","","","Tries to receive the next message without notifying a …","Tries to receive the next message without notifying a …","","","Attempts to send a message on this <code>Sender</code>, returning the …","","","","","","","","Creates an unbounded mpsc channel for communicating …","Sends a message along this channel.","Error returned from a <code>Receiver</code> when the corresponding …","A future that resolves when the receiving end of a channel …","A future for a value that will be provided by another …","A means of transmitting a single value to another task.","","","","","","","","","Creates a future that resolves when this <code>Sender</code>’s …","Creates a new one-shot channel for sending a single value …","","","Gracefully close this receiver, preventing any subsequent …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Tests to see whether this <code>Sender</code>’s corresponding <code>Receiver</code>","Tests to see whether this <code>Sender</code> is connected to the given …","","","","Polls this <code>Sender</code> half to detect whether its associated …","Completes this oneshot with a successful result.","","","","","","","","","","","","Attempts to receive a message outside of the context of a …","","","",""],"i":[0,0,0,0,0,0,0,0,0,2,3,7,8,13,4,6,2,3,7,8,13,4,6,0,2,3,4,6,2,3,4,6,7,8,2,3,2,3,7,8,4,6,4,6,2,3,7,8,13,13,4,4,6,6,2,3,7,8,13,4,6,2,3,2,3,7,8,13,4,6,6,6,2,3,2,3,4,6,3,4,6,7,8,3,2,3,3,2,3,3,7,8,2,2,3,3,3,2,3,7,8,2,2,3,3,3,2,3,4,6,13,4,6,2,3,7,8,13,4,6,2,3,7,8,13,4,6,7,8,7,8,2,2,3,7,8,13,4,6,0,3,0,0,0,0,25,22,23,24,25,22,23,24,22,0,24,24,25,25,22,24,24,25,22,23,24,24,25,22,23,24,25,22,23,24,25,23,22,22,25,25,23,22,22,24,24,25,22,23,24,25,22,23,24,25,25,25,22,23,24],"f":[0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2,2],[3,3],[4,4],[[[6,[5]]],[[6,[5]]]],[[]],[[]],[[]],[[]],[7],[8],[2],[3],[2],[3],[7],[8],[[4,4],9],[[[6,[10]],[6,[10]]],9],[[],9],[[],9],[[2,11],12],[[3,11],12],[[7,11],12],[[8,11],12],[[13,11],12],[[13,11],12],[[4,11],12],[[4,11],12],[[6,11],12],[[6,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,14]],[[3,14]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6],[6,4],[2,9],[3,9],[[2,7],9],[[3,8],9],[4,9],[6,9],[3,9],[4,9],[6,9],[7,9],[8,9],[3,1],[[[15,[2]],16],[[18,[17]]]],[[[15,[3]],16],[[18,[17]]]],[[[15,[3]],16],[[18,[17]]]],[[[15,[2]],16],[[18,[17]]]],[[[15,[3]],16],[[18,[17]]]],[[[15,[3]],16],[[18,[17]]]],[[[15,[7]],16],[[18,[19]]]],[[[15,[8]],16],[[18,[19]]]],[[2,16],[[18,[[17,[4]]]]]],[[[15,[2]],16],[[18,[17]]]],[[[15,[3]],16],[[18,[17]]]],[[3,16],[[18,[[17,[4]]]]]],[[[15,[3]],16],[[18,[17]]]],[[2,2],9],[[3,3],9],[7],[8],[[[15,[2]]],17],[2,[[17,[4]]]],[[[15,[3]]],17],[[[15,[3]]],17],[3,[[17,[4]]]],[[]],[[]],[[]],[[]],[[],20],[[],20],[[],20],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[7,[[17,[19,13]]]],[8,[[17,[19,13]]]],[[15,16],[[18,[[19,[17]]]]]],[[15,16],[[18,[[19,[17]]]]]],[2,[[17,[6]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[3,[[17,[6]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,23],[[]],[24,24],[[]],[25],[25],[22],[[24,24],9],[[],9],[[25,11],12],[[22,11],12],[[[23,[26]],11],12],[[24,11],12],[[24,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,9],[[22,25],9],[25,9],[[[15,[25]],16],[[18,[[17,[24]]]]]],[[[15,[23]],16],18],[[22,16],18],[22,17],[[]],[[],20],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[15,16],18],[25,[[17,[19,24]]]],[[],21],[[],21],[[],21],[[],21]],"c":[],"p":[[15,"usize"],[3,"Sender"],[3,"UnboundedSender"],[3,"SendError"],[8,"Clone"],[3,"TrySendError"],[3,"Receiver"],[3,"UnboundedReceiver"],[15,"bool"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[3,"TryRecvError"],[8,"Hasher"],[3,"Pin"],[3,"Context"],[4,"Result"],[4,"Poll"],[4,"Option"],[3,"String"],[3,"TypeId"],[3,"Sender"],[3,"Cancellation"],[3,"Canceled"],[3,"Receiver"],[8,"Debug"]]},\
"futures_core":{"doc":"Core traits and types for asynchronous operations in Rust.","t":"CCCCCCAOAAGQICGQIKKGQIQGQIIKKLKCCCCC","n":["FusedFuture","FusedStream","Future","Stream","TryFuture","TryStream","future","ready","stream","task","BoxFuture","Error","FusedFuture","Future","LocalBoxFuture","Ok","TryFuture","is_terminated","try_poll","BoxStream","Error","FusedStream","Item","LocalBoxStream","Ok","Stream","TryStream","is_terminated","poll_next","size_hint","try_poll_next","Context","Poll","RawWaker","RawWakerVTable","Waker"],"q":[[0,"futures_core"],[10,"futures_core::future"],[19,"futures_core::stream"],[31,"futures_core::task"]],"d":["","","","","","","Futures.","Extracts the successful type of a <code>Poll&lt;T&gt;</code>.","Asynchronous streams.","Task notification.","An owned dynamically typed <code>Future</code> for use in cases where …","The type of failures yielded by this future","A future which tracks whether or not the underlying future …","","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","The type of successful values yielded by this future","A convenience for futures that return <code>Result</code> values that …","Returns <code>true</code> if the underlying future should no longer be …","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","An owned dynamically typed <code>Stream</code> for use in cases where …","The type of failures yielded by this future","A stream which tracks whether or not the underlying stream …","Values yielded by the stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","The type of successful values yielded by this future","A stream of values produced asynchronously.","A convenience for streams that return <code>Result</code> values that …","Returns <code>true</code> if the stream should no longer be polled.","Attempt to pull out the next value of this stream, …","Returns the bounds on the remaining length of the stream.","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,7,0,8,7,0,9,0,10,0,9,0,0,11,10,10,9,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[2,3],[[5,[4]]]],0,0,0,0,0,0,0,0,[[],1],[[2,3],[[5,[6]]]],[[]],[[2,3],[[5,[[6,[4]]]]]],0,0,0,0,0],"c":[],"p":[[15,"bool"],[3,"Pin"],[3,"Context"],[4,"Result"],[4,"Poll"],[4,"Option"],[8,"TryFuture"],[8,"FusedFuture"],[8,"TryStream"],[8,"Stream"],[8,"FusedStream"]]},\
"futures_executor":{"doc":"Built-in executors and related tools.","t":"DDDDDFFLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BlockingStream","Enter","EnterError","LocalPool","LocalSpawner","block_on","block_on_stream","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","enter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_inner","into_iter","new","next","run","run_until","run_until_stalled","size_hint","spawn_local_obj","spawn_obj","spawner","status","status_local","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_run_one","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"futures_executor"]],"d":["An iterator which blocks on values from a stream until …","Represents an executor context.","An error returned by <code>enter</code> if an execution scope has …","A single-threaded task pool for polling futures to …","A handle to a <code>LocalPool</code> that implements <code>Spawn</code>.","Run a future to completion on the current thread.","Turn a stream into a blocking iterator.","","","","","","","","","","","","","","","","","Marks the current thread as being within the dynamic …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this <code>BlockingStream</code> into the inner <code>Stream</code> type.","","Create a new, empty pool of tasks.","","Run all tasks in the pool to completion.","Runs all the tasks in the pool until the given future …","Runs all tasks in the pool and returns if no more progress …","","","","Get a clonable handle to the pool as a <code>Spawn</code>.","","","","","","","","","","","","","","","Runs all tasks and returns after completing one future or …","","","","",""],"i":[0,0,0,0,0,0,0,7,8,6,5,4,7,8,6,5,4,5,5,6,4,4,7,0,7,8,8,6,5,4,7,8,6,5,4,7,8,6,5,4,4,4,6,4,6,6,6,4,5,5,6,5,5,5,8,7,8,6,5,4,7,8,6,5,4,6,7,8,6,5,4],"f":[0,0,0,0,0,[1],[[[0,[2,3]]],[[4,[[0,[2,3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[[]],[[],6],[[[4,[[0,[2,3]]]]]],[[[4,[[0,[2,3]]]]]],[7],[[],[[9,[7,8]]]],[[7,10],11],[[8,10],11],[[8,10],11],[[6,10],11],[[5,10],11],[[[4,[[0,[12,2,3]]]],10],11],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[[0,[2,3]]]]],[[0,[2,3]]]],[[]],[[],6],[[[4,[[0,[2,3]]]]],13],[6],[[6,1]],[6],[[[4,[[0,[2,3]]]]]],[[5,14],[[9,[15]]]],[[5,16],[[9,[15]]]],[6,5],[5,[[9,[15]]]],[5,[[9,[15]]]],[[]],[[],17],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[6,18],[[],19],[[],19],[[],19],[[],19],[[],19]],"c":[],"p":[[8,"Future"],[8,"Stream"],[8,"Unpin"],[3,"BlockingStream"],[3,"LocalSpawner"],[3,"LocalPool"],[3,"Enter"],[3,"EnterError"],[4,"Result"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[4,"Option"],[3,"LocalFutureObj"],[3,"SpawnError"],[3,"FutureObj"],[3,"String"],[15,"bool"],[3,"TypeId"]]},\
"futures_io":{"doc":"Asynchronous I/O","t":"IIIICCCCCCKKKKKLLKKLL","n":["AsyncBufRead","AsyncRead","AsyncSeek","AsyncWrite","Error","ErrorKind","IoSlice","IoSliceMut","Result","SeekFrom","consume","poll_close","poll_fill_buf","poll_flush","poll_read","poll_read_vectored","poll_read_vectored","poll_seek","poll_write","poll_write_vectored","poll_write_vectored"],"q":[[0,"futures_io"]],"d":["Read bytes asynchronously.","Read bytes asynchronously.","Seek bytes asynchronously.","Write bytes asynchronously.","","","","","","","Tells this buffer that <code>amt</code> bytes have been consumed from …","Attempt to close the object.","Attempt to return the contents of the internal buffer, …","Attempt to flush the object, ensuring that any buffered …","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","Attempt to seek to an offset, in bytes, in a stream.","Attempt to write bytes from <code>buf</code> into the object.","Attempt to write bytes from <code>bufs</code> into the object using …","Attempt to write bytes from <code>bufs</code> into the object using …"],"i":[0,0,0,0,0,0,0,0,0,0,12,13,12,13,14,14,14,15,13,13,13],"f":[0,0,0,0,0,0,0,0,0,0,[[1,2]],[[1,3],[[5,[4]]]],[[1,3],[[5,[[4,[[7,[6]]]]]]]],[[1,3],[[5,[4]]]],[[1,3,[7,[6]]],[[5,[[4,[2]]]]]],[[1,3,[7,[8]]],[[5,[[4,[2]]]]]],[[1,3,[7,[8]]],[[5,[[4,[2]]]]]],[[1,3,9],[[5,[[4,[10]]]]]],[[1,3,[7,[6]]],[[5,[[4,[2]]]]]],[[1,3,[7,[11]]],[[5,[[4,[2]]]]]],[[1,3,[7,[11]]],[[5,[[4,[2]]]]]]],"c":[],"p":[[3,"Pin"],[15,"usize"],[3,"Context"],[6,"Result"],[4,"Poll"],[15,"u8"],[15,"slice"],[3,"IoSliceMut"],[4,"SeekFrom"],[15,"u64"],[3,"IoSlice"],[8,"AsyncBufRead"],[8,"AsyncWrite"],[8,"AsyncRead"],[8,"AsyncSeek"]]},\
"futures_macro":{"doc":"The futures-rs procedural macro implementations.","t":"OOOOXO","n":["join_internal","select_biased_internal","select_internal","stream_select_internal","test_internal","try_join_internal"],"q":[[0,"futures_macro"]],"d":["The <code>join!</code> macro.","The <code>select_biased!</code> macro.","The <code>select!</code> macro.","The <code>stream_select!</code> macro.","","The <code>try_join!</code> macro."],"i":[0,0,0,0,0,0],"f":[0,0,0,0,0,0],"c":[],"p":[]},\
"futures_sink":{"doc":"Asynchronous sinks","t":"QIKKKK","n":["Error","Sink","poll_close","poll_flush","poll_ready","start_send"],"q":[[0,"futures_sink"]],"d":["The type of value produced by the sink when an error …","A <code>Sink</code> is a value into which other values can be sent, …","Flush any remaining output and close this sink, if …","Flush any remaining output from this sink.","Attempts to prepare the <code>Sink</code> to receive a value.","Begin the process of sending a value to the sink. Each …"],"i":[5,0,5,5,5,5],"f":[0,0,[[1,2],[[4,[3]]]],[[1,2],[[4,[3]]]],[[1,2],[[4,[3]]]],[1,3]],"c":[],"p":[[3,"Pin"],[3,"Context"],[4,"Result"],[4,"Poll"],[8,"Sink"]]},\
"futures_task":{"doc":"Tools for working with tasks.","t":"ICDDICCCIDICDLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLFFLLLKKLLLLLLLLLLLLLLLLLLLKFF","n":["ArcWake","Context","FutureObj","LocalFutureObj","LocalSpawn","Poll","RawWaker","RawWakerVTable","Spawn","SpawnError","UnsafeFutureObj","Waker","WakerRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into_future","into_future","into_future_obj","into_raw","is_shutdown","new","new","new","new_unowned","noop_waker","noop_waker_ref","poll","poll","shutdown","spawn_local_obj","spawn_obj","status","status","status_local","status_local","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wake","wake","wake_by_ref","waker","waker_ref"],"q":[[0,"futures_task"]],"d":["A way of waking up a specific task.","","A custom trait object for polling futures, roughly akin to …","A custom trait object for polling futures, roughly akin to …","The <code>LocalSpawn</code> is similar to <code>Spawn</code>, but allows spawning …","","","","The <code>Spawn</code> trait allows for pushing futures onto an …","An error that occurred during spawning.","A custom implementation of a future trait object for …","","A <code>Waker</code> that is only valid for a given lifetime.","","","","","","","","","","Drops the future represented by the given fat pointer.","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.","Convert an owned instance into a (conceptually owned) fat …","Check whether spawning failed to the executor being shut …","Create a <code>LocalFutureObj</code> from a custom trait object …","Create a <code>FutureObj</code> from a custom trait object …","Create a new <code>WakerRef</code> from a <code>Waker</code> reference.","Create a new <code>WakerRef</code> from a <code>Waker</code> that must not be …","Create a new <code>Waker</code> which does nothing when <code>wake()</code> is …","Get a static reference to a <code>Waker</code> which does nothing when …","","","Spawning failed because the executor has been shut down.","Spawns a future that will be run to completion.","Spawns a future that will be run to completion.","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","","","","","","","","","","","","","","Indicates that the associated task is ready to make …","Indicates that the associated task is ready to make …","Indicates that the associated task is ready to make …","Creates a <code>Waker</code> from an <code>Arc&lt;impl ArcWake&gt;</code>.","Creates a reference to a <code>Waker</code> from a reference to …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,5,4,8,1,5,4,8,1,1,13,4,5,5,4,8,1,5,4,4,4,4,4,4,8,8,8,8,8,1,5,4,8,1,4,8,4,13,5,4,8,1,1,0,0,4,8,5,22,23,23,23,22,22,5,5,4,8,1,5,4,8,1,5,4,8,1,21,21,21,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[3],[4],[[5,6],7],[[5,6],7],[[4,6],7],[[8,6],7],[[1,6],7],[[]],[[[10,[[9,[3]]]]],4],[[[9,[3]]],4],[8,4],[[[9,[3]]],4],[[]],[[[10,[[9,[3]]]]],4],[[]],[[[9,[3]]],8],[[[10,[[9,[[0,[3,11]]]]]]],8],[[[9,[[0,[3,11]]]]],8],[[[10,[[9,[3]]]]],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4,8],[[],3],[5,12],[13,4],[[[0,[13,11]]],8],[2,1],[[[14,[2]]],1],[[],2],[[],2],[[[10,[4]],15],16],[[[10,[8]],15],16],[[],5],[4,[[17,[5]]]],[8,[[17,[5]]]],[[],[[17,[5]]]],[[],[[17,[5]]]],[[],[[17,[5]]]],[[],[[17,[5]]]],[[],18],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],19],[[],19],[[],19],[[],19],[20],[20],[20],[[[20,[21]]],2],[[[20,[21]]],1]],"c":[],"p":[[3,"WakerRef"],[3,"Waker"],[8,"Future"],[3,"LocalFutureObj"],[3,"SpawnError"],[3,"Formatter"],[6,"Result"],[3,"FutureObj"],[3,"Box"],[3,"Pin"],[8,"Send"],[15,"bool"],[8,"UnsafeFutureObj"],[3,"ManuallyDrop"],[3,"Context"],[4,"Poll"],[4,"Result"],[3,"String"],[3,"TypeId"],[3,"Arc"],[8,"ArcWake"],[8,"LocalSpawn"],[8,"Spawn"]]},\
"futures_util":{"doc":"Combinators and utilities for working with <code>Future</code>s, <code>Stream</code>…","t":"CCCCCCCCCCCCCCCCCCAAOOAAOOOOOOOOOOAAOOAOODDDDDGDNNEDQDDDDICNNIDNNDDDDDDDDDDDNGDDDDDDEDQDDDDDDDDDNDDDDDDDIIDDDDDEDDIDDLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLFLLLLLLFLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLFLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIIIIIIIIDDDDDDDDDCCDDDCCDDDDDDDDDDDCDDDCDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLFFFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDDDQDDDDDIDIDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLDDDDDDDGDDDDDDDDDDDDQDDDDDGDDDDDIDDDDDDDQDNGDDDDDDQDDDDDDDDEDDDDNDDDDDDDDDIIDDDDDDDDDDDDDDDDDDDDDDIIDDDDDFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLFAFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLIDCDDIICCCIDIICDLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLFFLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLKFF","n":["AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","Future","FutureExt","Sink","SinkExt","Stream","StreamExt","TryFuture","TryFutureExt","TryStream","TryStreamExt","future","io","join","join","lock","never","pending","pending","pin_mut","poll","poll","ready","select","select","select_biased","select_biased","sink","stream","stream_select","stream_select","task","try_join","try_join","AbortHandle","AbortRegistration","Abortable","Aborted","AndThen","BoxFuture","CatchUnwind","Done","Done","Either","ErrInto","Error","Flatten","FlattenSink","FlattenStream","Fuse","FusedFuture","Future","Future","Future","FutureExt","FutureObj","Gone","Gone","Inspect","InspectErr","InspectOk","IntoFuture","IntoStream","Join","Join3","Join4","Join5","JoinAll","Lazy","Left","LocalBoxFuture","LocalFutureObj","Map","MapErr","MapInto","MapOk","MapOkOrElse","MaybeDone","NeverError","Ok","OkInto","OptionFuture","OrElse","Pending","PollFn","PollImmediate","Ready","Remote","RemoteHandle","Right","Select","SelectAll","SelectOk","Shared","Then","TryFlatten","TryFlattenStream","TryFuture","TryFutureExt","TryJoin","TryJoin3","TryJoin4","TryJoin5","TryJoinAll","TryMaybeDone","TrySelect","UnitError","UnsafeFutureObj","UnwrapOrElse","WeakShared","abort","abortable","and_then","and_then","as_pin_mut","as_pin_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed_local","boxed_local","catch_unwind","catch_unwind","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consume","default","downgrade","drop","drop","eq","equivalent","err","err_into","err_into","factor_first","factor_second","flatten","flatten","flatten_sink","flatten_sink","flatten_stream","flatten_stream","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","from_iter","fuse","fuse","handle","inspect","inspect","inspect_err","inspect_err","inspect_ok","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_raw","into_stream","into_stream","is_aborted","is_aborted","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","join","join3","join4","join5","join_all","lazy","left_future","left_future","map","map","map_err","map_err","map_into","map_into","map_ok","map_ok","map_ok_or_else","map_ok_or_else","maybe_done","never_error","never_error","new","new_pair","now_or_never","now_or_never","ok","ok_into","ok_into","or_else","or_else","output_mut","output_mut","peek","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_read","poll_read_vectored","poll_ready","poll_ready","poll_ready","poll_ready","poll_seek","poll_unpin","poll_unpin","poll_write","poll_write_vectored","ptr_eq","ptr_hash","ready","remote_handle","remote_handle","right_future","right_future","select","select_all","select_ok","shared","shared","size_hint","size_hint","size_hint","size_hint","size_hint","start_send","start_send","start_send","start_send","strong_count","take_output","take_output","terminated","then","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_flatten","try_flatten","try_flatten_stream","try_flatten_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_join","try_join3","try_join4","try_join5","try_join_all","try_maybe_done","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_unpin","try_poll_unpin","try_select","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unit_error","unit_error","unwrap_or_else","unwrap_or_else","upgrade","weak_count","AllowStdIo","AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","BufReader","BufWriter","Chain","Close","Copy","CopyBuf","CopyBufAbortable","Cursor","Empty","Error","ErrorKind","FillBuf","Flush","IntoSink","IoSlice","IoSliceMut","LineWriter","Lines","Read","ReadExact","ReadHalf","ReadLine","ReadToEnd","ReadToString","ReadUntil","ReadVectored","Repeat","Result","ReuniteError","SeeKRelative","Seek","SeekFrom","Sink","Take","Window","Write","WriteAll","WriteHalf","WriteVectored","as_mut","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","buffer","chain","clone","clone","clone_into","clone_into","close","cmp","consume","consume","consume","consume","consume","consume","consume","consume","consume","consume_unpin","copy","copy_buf","copy_buf_abortable","default","empty","end","eq","equivalent","fill_buf","fill_buf","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_sink","limit","lines","new","new","new","new","new","new","partial_cmp","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_next","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_read_vectored","poll_ready","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek","poll_seek_relative","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","position","read","read","read_exact","read_exact","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_until","read_vectored","read_vectored","repeat","reunite","reunite","seek","seek","seek_relative","set","set_limit","set_position","sink","split","start","start_send","stream_position","take","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity","with_capacity","write","write","write_all","write_all","write_fmt","write_vectored","write_vectored","MappedMutexGuard","Mutex","MutexGuard","MutexLockFuture","OwnedMutexGuard","OwnedMutexLockFuture","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_mut","into","into","into","into","into","into","into_future","into_future","into_inner","is_terminated","is_terminated","lock","lock_owned","map","map","new","poll","poll","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock_owned","type_id","type_id","type_id","type_id","type_id","type_id","Never","Buffer","Close","Drain","Error","Fanout","Feed","Flush","Send","SendAll","Sink","SinkErrInto","SinkExt","SinkMapErr","Unfold","With","WithFlatMap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone","clone","clone_into","clone_into","clone_into","close","drain","fanout","feed","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","is_terminated","is_terminated","is_terminated","is_terminated","left_sink","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close_unpin","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush_unpin","poll_next","poll_next","poll_next","poll_next","poll_next","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready_unpin","right_sink","send","send_all","sink_err_into","sink_map_err","size_hint","size_hint","size_hint","size_hint","size_hint","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send_unpin","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","with","with_flat_map","AbortHandle","AbortRegistration","Abortable","Aborted","All","AndThen","Any","BoxStream","BufferUnordered","Buffered","CatchUnwind","Chain","Chunks","Collect","Concat","Count","Cycle","Empty","Enumerate","ErrInto","Error","Filter","FilterMap","FlatMap","FlatMapUnordered","Flatten","FlattenUnordered","Fold","ForEach","ForEachConcurrent","Forward","Fuse","FusedStream","FuturesOrdered","FuturesUnordered","Inspect","InspectErr","InspectOk","IntoAsyncRead","IntoStream","Item","Iter","Left","LocalBoxStream","Map","MapErr","MapOk","Next","NextIf","NextIfEq","Ok","Once","OrElse","Peek","PeekMut","Peekable","Pending","PollFn","PollImmediate","PollNext","ReadyChunks","Repeat","RepeatWith","ReuniteError","Right","Scan","Select","SelectAll","SelectNextSome","SelectWithStrategy","Skip","SkipWhile","SplitSink","SplitStream","Stream","StreamExt","StreamFuture","Take","TakeUntil","TakeWhile","Then","TryBufferUnordered","TryBuffered","TryChunks","TryChunksError","TryCollect","TryConcat","TryFilter","TryFilterMap","TryFlatten","TryFlattenUnordered","TryFold","TryForEach","TryForEachConcurrent","TryNext","TryReadyChunks","TryReadyChunksError","TrySkipWhile","TryStream","TryStreamExt","TryTakeWhile","TryUnfold","Unfold","Unzip","Zip","abortable","all","all","and_then","and_then","any","any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","boxed","boxed_local","boxed_local","buffer_unordered","buffer_unordered","buffered","buffered","by_ref","by_ref","catch_unwind","catch_unwind","chain","chain","chunks","chunks","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect","collect","concat","concat","consume","count","count","cycle","cycle","default","default","default","default","drop","empty","enumerate","enumerate","eq","eq","eq","equivalent","equivalent","equivalent","err_into","err_into","extend","extend","extend","filter","filter","filter_map","filter_map","flat_map","flat_map","flat_map_unordered","flat_map_unordered","flatten","flatten","flatten_unordered","flatten_unordered","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","for_each","for_each","for_each_concurrent","for_each_concurrent","forward","forward","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_iter","fuse","fuse","futures_unordered","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","get_ref","hash","inspect","inspect","inspect_err","inspect_err","inspect_ok","inspect_ok","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_async_read","into_async_read","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_future","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_stream","into_stream","is_done","is_empty","is_stopped","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","is_terminated","iter","left_stream","left_stream","len","map","map","map_err","map_err","map_ok","map_ok","new","next","next","next_if","next_if_eq","once","or_else","or_else","peek","peek_mut","peekable","peekable","pending","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_close","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_fn","poll_immediate","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next","poll_next_unpin","poll_next_unpin","poll_peek","poll_peek_mut","poll_read","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_ready","poll_write","push","push_back","push_front","ready_chunks","ready_chunks","repeat","repeat_with","reunite","reunite","right_stream","right_stream","scan","scan","select","select_all","select_all","select_next_some","select_next_some","select_with_strategy","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","skip","skip","skip_while","skip_while","spawn_local_obj","spawn_obj","split","split","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","start_send","take","take","take_future","take_result","take_until","take_until","take_while","take_while","then","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","toggle","try_all","try_all","try_any","try_any","try_buffer_unordered","try_buffer_unordered","try_buffered","try_buffered","try_chunks","try_chunks","try_collect","try_collect","try_concat","try_concat","try_filter","try_filter","try_filter_map","try_filter_map","try_flatten","try_flatten","try_flatten_unordered","try_flatten_unordered","try_fold","try_fold","try_for_each","try_for_each","try_for_each_concurrent","try_for_each_concurrent","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_next","try_next","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next","try_poll_next_unpin","try_poll_next_unpin","try_ready_chunks","try_ready_chunks","try_skip_while","try_skip_while","try_take_while","try_take_while","try_unfold","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfold","unzip","unzip","zip","zip","FuturesUnordered","IntoIter","Iter","IterMut","IterPinMut","IterPinRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","iter_pin_mut","iter_pin_ref","len","new","next","next","next","next","next","push","size_hint","size_hint","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","IntoIter","Iter","IterMut","SelectAll","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","len","new","next","next","next","push","select_all","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ArcWake","AtomicWaker","Context","FutureObj","LocalFutureObj","LocalSpawn","LocalSpawnExt","Poll","RawWaker","RawWakerVTable","Spawn","SpawnError","SpawnExt","UnsafeFutureObj","Waker","WakerRef","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","deref","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into_future","into_future","into_future_obj","into_raw","is_shutdown","new","new","new","new","new_unowned","noop_waker","noop_waker_ref","poll","poll","register","shutdown","spawn","spawn","spawn_local","spawn_local","spawn_local_obj","spawn_local_with_handle","spawn_local_with_handle","spawn_obj","spawn_with_handle","spawn_with_handle","status","status_local","take","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","try_poll","type_id","type_id","type_id","type_id","type_id","wake","wake","wake_by_ref","waker","waker_ref"],"q":[[0,"futures_util"],[41,"futures_util::future"],[943,"futures_util::io"],[1511,"futures_util::lock"],[1594,"futures_util::never"],[1595,"futures_util::sink"],[1837,"futures_util::stream"],[3518,"futures_util::stream::futures_unordered"],[3588,"futures_util::stream::select_all"],[3633,"futures_util::task"]],"d":["","","","","","","","","","","","","","","","","","","Asynchronous values.","Asynchronous I/O.","Polls multiple futures simultaneously, returning a tuple …","Polls multiple futures simultaneously, returning a tuple …","Futures-powered synchronization primitives.","This module contains the <code>Never</code> type.","A macro which yields to the event loop once.","A macro which yields to the event loop once.","Pins a value on the stack.","A macro which returns the result of polling a future once …","A macro which returns the result of polling a future once …","Extracts the successful type of a <code>Poll&lt;T&gt;</code>.","Polls multiple futures and streams simultaneously, …","Polls multiple futures and streams simultaneously, …","Polls multiple futures and streams simultaneously, …","Polls multiple futures and streams simultaneously, …","Asynchronous sinks.","Asynchronous streams.","Combines several streams, all producing the same <code>Item</code> …","Combines several streams, all producing the same <code>Item</code> …","Tools for working with tasks.","Polls multiple futures simultaneously, resolving to a …","Polls multiple futures simultaneously, resolving to a …","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>and_then</code> method.","An owned dynamically typed <code>Future</code> for use in cases where …","Future for the <code>catch_unwind</code> method.","The output of the completed future","The output of the completed future","Combines two different futures, streams, or sinks having …","Future for the <code>err_into</code> method.","The type of failures yielded by this future","Future for the <code>flatten</code> method.","Sink for the <code>flatten_sink</code> method.","Stream for the <code>flatten_stream</code> method.","Future for the <code>fuse</code> method.","A future which tracks whether or not the underlying future …","","A not-yet-completed future","A not-yet-completed future","An extension trait for <code>Future</code>s that provides a variety of …","A custom trait object for polling futures, roughly akin to …","The empty variant after the result of a <code>MaybeDone</code> has been …","The empty variant after the result of a <code>TryMaybeDone</code> has …","Future for the <code>inspect</code> method.","Future for the <code>inspect_err</code> method.","Future for the <code>inspect_ok</code> method.","Future for the <code>into_future</code> method.","Stream for the <code>into_stream</code> method.","Future for the <code>join</code> function.","Future for the <code>join3</code> function.","Future for the <code>join4</code> function.","Future for the <code>join5</code> function.","Future for the <code>join_all</code> function.","Future for the <code>lazy</code> function.","First branch of the type","<code>BoxFuture</code>, but without the <code>Send</code> requirement.","A custom trait object for polling futures, roughly akin to …","Future for the <code>map</code> method.","Future for the <code>map_err</code> method.","Future for the <code>map_into</code> combinator.","Future for the <code>map_ok</code> method.","Future for the <code>map_ok_or_else</code> method.","A future that may have completed.","Future for the <code>never_error</code> combinator.","The type of successful values yielded by this future","Future for the <code>ok_into</code> method.","A future representing a value which may or may not be …","Future for the <code>or_else</code> method.","Future for the <code>pending()</code> function.","Future for the <code>poll_fn</code> function.","Future for the <code>poll_immediate</code> function.","Future for the <code>ready</code> function.","A future which sends its output to the corresponding …","The handle to a remote future returned by <code>remote_handle</code>. …","Second branch of the type","Future for the <code>select()</code> function.","Future for the <code>select_all</code> function.","Future for the <code>select_ok</code> function.","Future for the <code>shared</code> method.","Future for the <code>then</code> method.","Future for the <code>try_flatten</code> method.","Future for the <code>try_flatten_stream</code> method.","A convenience for futures that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning futures","Future for the <code>try_join</code> function.","Future for the <code>try_join3</code> function.","Future for the <code>try_join4</code> function.","Future for the <code>try_join5</code> function.","Future for the <code>try_join_all</code> function.","A future that may have completed with an error.","Future for the <code>try_select()</code> function.","Future for the <code>unit_error</code> combinator.","A custom implementation of a future trait object for …","Future for the <code>unwrap_or_else</code> method.","A weak reference to a <code>Shared</code> that can be upgraded much …","Abort the <code>Abortable</code> stream/future associated with this …","Creates a new <code>Abortable</code> future and an <code>AbortHandle</code> which …","Executes another future after this one resolves …","Executes another future after this one resolves …","Convert <code>Pin&lt;&amp;mut Either&lt;A, B&gt;&gt;</code> to …","Convert <code>Pin&lt;&amp;Either&lt;A, B&gt;&gt;</code> to <code>Either&lt;Pin&lt;&amp;A&gt;, Pin&lt;&amp;B&gt;&gt;</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Wrap the future in a Box, pinning it.","Catches unwinding panics while polling the future.","Catches unwinding panics while polling the future.","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>WeakShared</code> for this <code>Shared</code>.","Drops the future represented by the given fat pointer.","","","","Create a future that is immediately ready with an error …","Maps this future’s <code>Error</code> to a new error type using the …","Maps this future’s <code>Error</code> to a new error type using the …","Factor out a homogeneous type from an either of pairs.","Factor out a homogeneous type from an either of pairs.","Flatten the execution of this future when the output of …","Flatten the execution of this future when the output of …","Flattens the execution of this future when the successful …","Flattens the execution of this future when the successful …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Drops this handle <em>without</em> canceling the underlying future.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Fuse a future such that <code>poll</code> will never again be called …","Fuse a future such that <code>poll</code> will never again be called …","Create an <code>AbortHandle</code> from the given <code>AbortRegistration</code>.","Do something with the output of a future before passing it …","Do something with the output of a future before passing it …","Do something with the error value of a future before …","Do something with the error value of a future before …","Do something with the success value of a future before …","Do something with the success value of a future before …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","Wraps a <code>TryFuture</code> into a type that implements <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps the value from this immediately ready future.","Consumes this combinator, returning the underlying futures.","Extract the value of an either over two equivalent types.","Convert an owned instance into a (conceptually owned) fat …","Convert this future into a single element stream.","Convert this future into a single element stream.","Checks whether the task has been aborted. Note that all …","Checks whether <code>AbortHandle::abort</code> was <em>called</em> on any …","Returns <code>true</code> if the underlying future should no longer be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Same as <code>join</code>, but with more futures.","Creates a future which represents a collection of the …","Creates a new future that allows delayed execution of a …","Wrap this future in an <code>Either</code> future, making it the …","Wrap this future in an <code>Either</code> future, making it the …","Map this future’s output to a different type, returning …","Map this future’s output to a different type, returning …","Maps this future’s error value to a different value.","Maps this future’s error value to a different value.","Map this future’s output to a different type, returning …","Map this future’s output to a different type, returning …","Maps this future’s success value to a different value.","Maps this future’s success value to a different value.","Maps this future’s success value to a different value, …","Maps this future’s success value to a different value, …","Wraps a future into a <code>MaybeDone</code>","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Creates a new <code>Abortable</code> future/stream using an existing …","Creates an (<code>AbortHandle</code>, <code>AbortRegistration</code>) pair which can …","Evaluates and consumes the future, returning the resulting …","Evaluates and consumes the future, returning the resulting …","Create a future that is immediately ready with a success …","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Maps this future’s <code>Ok</code> to a new type using the <code>Into</code> trait.","Executes another future if this one resolves to an error. …","Executes another future if this one resolves to an error. …","Returns an <code>Option</code> containing a mutable reference to the …","Returns an <code>Option</code> containing a mutable reference to the …","Returns <code>Some</code> containing a reference to this <code>Shared</code>’s …","Creates a future which never resolves, representing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new future wrapping around a function returning …","Creates a future that is immediately ready with an Option …","","","","","","","","","","","","","","","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","A convenience for calling <code>Future::poll</code> on <code>Unpin</code> future …","","","Returns <code>true</code> if the two <code>Shared</code>s point to the same future …","Hashes the internal state of this <code>Shared</code> in a way that’s …","Creates a future that is immediately ready with a value.","Turn this future into a future that yields <code>()</code> on …","Turn this future into a future that yields <code>()</code> on …","Wrap this future in an <code>Either</code> future, making it the …","Wrap this future in an <code>Either</code> future, making it the …","Waits for either one of two differently-typed futures to …","Creates a new future which will select over a list of …","Creates a new future which will select the first …","Create a cloneable handle to this future where all handles …","Create a cloneable handle to this future where all handles …","","","","","","","","","","Gets the number of strong pointers to this allocation.","Attempt to take the output of a <code>MaybeDone</code> without driving …","Attempt to take the output of a <code>TryMaybeDone</code> without …","Creates a new <code>Fuse</code>-wrapped future which is already …","Chain on a computation for when a future finished, passing …","Chain on a computation for when a future finished, passing …","","","","","","","","","","","","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","Flatten the execution of this future when the successful …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Joins the result of two futures, waiting for them both to …","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Same as <code>try_join</code>, but with more futures.","Creates a future which represents either a collection of …","Wraps a future into a <code>TryMaybeDone</code>","Poll this <code>TryFuture</code> as if it were a <code>Future</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryFuture::try_poll</code> on …","A convenience method for calling <code>TryFuture::try_poll</code> on …","Waits for either one of two differently-typed futures to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Turns a <code>Future&lt;Output = T&gt;</code> into a …","Unwraps this future’s output, producing a future with …","Unwraps this future’s output, producing a future with …","Attempts to upgrade this <code>WeakShared</code> into a <code>Shared</code>.","Gets the number of weak pointers to this allocation.","A simple wrapper type which allows types which implement …","Read bytes asynchronously.","An extension trait which adds utility methods to …","Read bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncRead</code> …","Seek bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncSeek</code> …","Write bytes asynchronously.","An extension trait which adds utility methods to <code>AsyncWrite</code>…","The <code>BufReader</code> struct adds buffering to any reader.","Wraps a writer and buffers its output.","Reader for the <code>chain</code> method.","Future for the <code>close</code> method.","Future for the <code>copy()</code> function.","Future for the <code>copy_buf()</code> function.","Future for the [<code>copy_buf()</code>] function.","A <code>Cursor</code> wraps an in-memory buffer and provides it with a …","Reader for the <code>empty()</code> function.","","","Future for the <code>fill_buf</code> method.","Future for the <code>flush</code> method.","Sink for the <code>into_sink</code> method.","","","Wrap a writer, like <code>BufWriter</code> does, but prioritizes …","Stream for the <code>lines</code> method.","Future for the <code>read</code> method.","Future for the <code>read_exact</code> method.","The readable half of an object returned from …","Future for the <code>read_line</code> method.","Future for the <code>read_to_end</code> method.","Future for the <code>read_to_string</code> method.","Future for the <code>read_until</code> method.","Future for the <code>read_vectored</code> method.","Reader for the <code>repeat()</code> function.","","Error indicating a <code>ReadHalf&lt;T&gt;</code> and <code>WriteHalf&lt;T&gt;</code> were not …","Future for the <code>BufReader::seek_relative</code> method.","Future for the <code>seek</code> method.","","Writer for the <code>sink()</code> function.","Reader for the <code>take</code> method.","An owned window around an underlying buffer.","Future for the <code>write</code> method.","Future for the <code>write_all</code> method.","The writable half of an object returned from …","Future for the <code>write_vectored</code> method.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the internally buffered data.","Returns a reference to the internally buffered data.","Returns a reference to <code>buf_writer</code>’s internally buffered …","Creates an adaptor which will chain this stream with …","","","","","Creates a future which will entirely close this <code>AsyncWrite</code>.","","Tells this buffer that <code>amt</code> bytes have been consumed from …","","","","","","","","","A convenience for calling <code>AsyncBufRead::consume</code> on <code>Unpin</code> …","Creates a future which copies all the bytes from one …","Creates a future which copies all the bytes from one …","Creates a future which copies all the bytes from one …","","Constructs a new handle to an empty reader.","Returns the end index of this window into the underlying …","","","Creates a future which will wait for a non-empty buffer to …","","Creates a future which will entirely flush this <code>AsyncWrite</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the contained IO object.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Gets mutable references to the underlying readers in this …","Gets a mutable reference to the underlying value in this …","Acquires a mutable reference to the underlying sink or …","Gets a mutable reference to the underlying buffer inside …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Gets pinned mutable references to the underlying readers …","Acquires a pinned mutable reference to the underlying sink …","Returns a reference to the contained IO object.","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Gets references to the underlying readers in this <code>Chain</code>.","Gets a reference to the underlying value in this cursor.","Acquires a reference to the underlying sink or stream that …","Gets a shared reference to the underlying buffer inside of …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","Consumes self and returns the contained IO object.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes the <code>Chain</code>, returning the wrapped readers.","Consumes this cursor, returning the underlying value.","Consumes this combinator, returning the underlying sink or …","Consumes this <code>Window</code>, returning the underlying buffer.","Allow using an <code>AsyncWrite</code> as a <code>Sink</code><code>&lt;Item: AsRef&lt;[u8]&gt;&gt;</code>.","Returns the remaining number of bytes that can be read …","Returns a stream over the lines of this reader. This …","Creates a new <code>AllowStdIo</code> from an existing IO object.","Creates a new <code>BufReader</code> with a default buffer capacity. …","Creates a new <code>BufWriter</code> with a default buffer capacity. …","Create a new <code>LineWriter</code> with default buffer capacity. The …","Creates a new cursor wrapping the provided underlying …","Creates a new window around the buffer <code>t</code> defaulting to the …","","","","","","","","","","","","","","","","","","","","Attempt to close the object.","","","","","Forward to <code>buf_writer</code> ’s <code>BufWriter::poll_close()</code>","","","","","","","Attempt to return the contents of the internal buffer, …","","","","","","","","Attempt to flush the object, ensuring that any buffered …","","","","","Forward to <code>buf_writer</code> ’s <code>BufWriter::poll_flush()</code>","","","","","","","","Attempt to read from the <code>AsyncRead</code> into <code>buf</code>.","","","","","","","","","","Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored","","","","","","","","","Attempt to seek to an offset, in bytes, in a stream.","","Seek to an offset, in bytes, in the underlying reader.","Seek to the offset, in bytes, in the underlying writer.","","Attempts to seek relative to the current position. If the …","Attempt to write bytes from <code>buf</code> into the object.","","","","","","","","","","","Attempt to write bytes from <code>bufs</code> into the object using …","","","","","","","","","","","Returns the current position of this cursor.","Tries to read some bytes directly into the given <code>buf</code> in …","","Creates a future which will read exactly enough bytes to …","","Creates a future which will read all the bytes associated …","Creates a future which will read all the bytes from this …","","Creates a future which will read all the bytes from this …","","Creates a future which will read all the bytes associated …","Creates a future which will read from the <code>AsyncRead</code> into …","","Creates an instance of a reader that infinitely repeats …","Attempts to put the two “halves” of a split …","Attempts to put the two “halves” of a split …","Creates a future which will seek an IO object, and then …","","Seeks relative to the current position. If the new …","Changes the range of this window to the range specified.","Sets the number of bytes that can be read before this …","Sets the position of this cursor.","Creates an instance of a writer which will successfully …","Helper method for splitting this read/write object into …","Returns the starting index of this window into the …","","Creates a future which will return the current seek …","Creates an AsyncRead adapter which will read at most <code>limit</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new <code>BufReader</code> with the specified buffer capacity.","Creates a new <code>BufWriter</code> with the specified buffer capacity.","Creates a new <code>LineWriter</code> with the specified buffer …","Creates a future which will write bytes from <code>buf</code> into the …","","Write data into this object.","","","Creates a future which will write bytes from <code>bufs</code> into the …","","An RAII guard returned by the <code>MutexGuard::map</code> and …","A futures-aware mutex.","An RAII guard returned by the <code>lock</code> and <code>try_lock</code> methods. …","A future which resolves when the target mutex has been …","An RAII guard returned by the <code>lock_owned</code> and <code>try_lock_owned</code>…","A future which resolves when the target mutex has been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Consumes this mutex, returning the underlying data.","","","Acquire the lock asynchronously.","Acquire the lock asynchronously.","Returns a locked view over a portion of the locked data.","Returns a locked view over a portion of the locked data.","Creates a new futures-aware mutex.","","","","","","","","","","","","","","","Attempt to acquire the lock immediately.","Attempt to acquire the lock immediately.","","","","","","","A type with no possible values.","Sink for the <code>buffer</code> method.","Future for the <code>close</code> method.","Sink for the <code>drain</code> function.","The type of value produced by the sink when an error …","Sink that clones incoming items and forwards them to two …","Future for the <code>feed</code> method.","Future for the <code>flush</code> method.","Future for the <code>send</code> method.","Future for the <code>send_all</code> method.","A <code>Sink</code> is a value into which other values can be sent, …","Sink for the <code>sink_err_into</code> method.","An extension trait for <code>Sink</code>s that provides a variety of …","Sink for the <code>sink_map_err</code> method.","Sink for the <code>unfold</code> function.","Sink for the <code>with</code> method.","Sink for the <code>with_flat_map</code> method.","","","","","","","","","","","","","","","","","","","","","","","","","","","Adds a fixed-size buffer to the current sink.","","","","","","","Close the sink.","Create a sink that will just discard all items given to it.","Fanout items to multiple sinks.","A future that completes after the given item has been …","Flush the sink, processing all pending items.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to the inner sinks.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Get a pinned mutable reference to the inner sinks.","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Get a shared reference to the inner sinks.","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Consumes this combinator, returning the underlying sinks.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","","","","","Wrap this sink in an <code>Either</code> sink, making it the left-hand …","","","","","","Flush any remaining output and close this sink, if …","","","","","","","","","A convenience method for calling <code>Sink::poll_close</code> on <code>Unpin</code> …","Flush any remaining output from this sink.","","","","","","","","","A convenience method for calling <code>Sink::poll_flush</code> on <code>Unpin</code> …","","","","","","Attempts to prepare the <code>Sink</code> to receive a value.","","","","","","","","","A convenience method for calling <code>Sink::poll_ready</code> on <code>Unpin</code> …","Wrap this stream in an <code>Either</code> stream, making it the …","A future that completes after the given item has been …","A future that completes after the given stream has been …","Map this sink’s error to a different error type using …","Transforms the error returned by the sink.","","","","","","Begin the process of sending a value to the sink. Each …","","","","","","","","","A convenience method for calling <code>Sink::start_send</code> on <code>Unpin</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a sink from a function which processes one item at …","Composes a function <em>in front of</em> the sink.","Composes a function <em>in front of</em> the sink.","A handle to an <code>Abortable</code> task.","A registration handle for an <code>Abortable</code> task. Values of …","A future/stream which can be remotely short-circuited …","Indicator that the <code>Abortable</code> task was aborted.","Future for the <code>all</code> method.","Stream for the <code>and_then</code> method.","Future for the <code>any</code> method.","An owned dynamically typed <code>Stream</code> for use in cases where …","Stream for the <code>buffer_unordered</code> method.","Stream for the <code>buffered</code> method.","Stream for the <code>catch_unwind</code> method.","Stream for the <code>chain</code> method.","Stream for the <code>chunks</code> method.","Future for the <code>collect</code> method.","Future for the <code>concat</code> method.","Future for the <code>count</code> method.","Stream for the <code>cycle</code> method.","Stream for the <code>empty</code> function.","Stream for the <code>enumerate</code> method.","Stream for the <code>err_into</code> method.","The type of failures yielded by this future","Stream for the <code>filter</code> method.","Stream for the <code>filter_map</code> method.","Stream for the <code>flat_map</code> method.","Stream for the <code>flat_map_unordered</code> method.","Stream for the <code>flatten</code> method.","Stream for the <code>flatten_unordered</code> method.","Future for the <code>fold</code> method.","Future for the <code>for_each</code> method.","Future for the <code>for_each_concurrent</code> method.","Future for the <code>forward</code> method.","Stream for the <code>fuse</code> method.","A stream which tracks whether or not the underlying stream …","An unbounded queue of futures.","A set of futures which may complete in any order.","Stream for the <code>inspect</code> method.","Stream for the <code>inspect_err</code> method.","Stream for the <code>inspect_ok</code> method.","Reader for the <code>into_async_read</code> method.","Stream for the <code>into_stream</code> method.","Values yielded by the stream.","Stream for the <code>iter</code> function.","Poll the first stream.","<code>BoxStream</code>, but without the <code>Send</code> requirement.","Stream for the <code>map</code> method.","Stream for the <code>map_err</code> method.","Stream for the <code>map_ok</code> method.","Future for the <code>next</code> method.","Future for the <code>Peekable::next_if</code> method.","Future for the <code>Peekable::next_if_eq</code> method.","The type of successful values yielded by this future","A stream which emits single element and then EOF.","Stream for the <code>or_else</code> method.","Future for the <code>Peekable::peek</code> method.","Future for the <code>Peekable::peek_mut</code> method.","A <code>Stream</code> that implements a <code>peek</code> method.","Stream for the <code>pending()</code> function.","Stream for the <code>poll_fn</code> function.","Stream for the poll_immediate function.","Type to tell <code>SelectWithStrategy</code> which stream to poll next.","Stream for the <code>ready_chunks</code> method.","Stream for the <code>repeat</code> function.","An stream that repeats elements of type <code>A</code> endlessly by …","Error indicating a <code>SplitSink&lt;S&gt;</code> and <code>SplitStream&lt;S&gt;</code> were …","Poll the second stream.","Stream for the <code>scan</code> method.","Stream for the <code>select()</code> function.","An unbounded set of streams","Future for the <code>select_next_some</code> method.","Stream for the <code>select_with_strategy()</code> function. See …","Stream for the <code>skip</code> method.","Stream for the <code>skip_while</code> method.","A <code>Sink</code> part of the split pair","A <code>Stream</code> part of the split pair","A stream of values produced asynchronously.","An extension trait for <code>Stream</code>s that provides a variety of …","Future for the <code>into_future</code> method.","Stream for the <code>take</code> method.","Stream for the <code>take_until</code> method.","Stream for the <code>take_while</code> method.","Stream for the <code>then</code> method.","Stream for the <code>try_buffer_unordered</code> method.","Stream for the <code>try_buffered</code> method.","Stream for the <code>try_chunks</code> method.","Error indicating, that while chunk was collected inner …","Future for the <code>try_collect</code> method.","Future for the <code>try_concat</code> method.","Stream for the <code>try_filter</code> method.","Stream for the <code>try_filter_map</code> method.","Stream for the <code>try_flatten</code> method.","Stream for the <code>try_flatten_unordered</code> method.","Future for the <code>try_fold</code> method.","Future for the <code>try_for_each</code> method.","Future for the <code>try_for_each_concurrent</code> method.","Future for the <code>try_next</code> method.","Stream for the <code>try_ready_chunks</code> method.","Error indicating, that while chunk was collected inner …","Stream for the <code>try_skip_while</code> method.","A convenience for streams that return <code>Result</code> values that …","Adapters specific to <code>Result</code>-returning streams","Stream for the <code>try_take_while</code> method.","Stream for the <code>try_unfold</code> function.","Stream for the <code>unfold</code> function.","Future for the <code>unzip</code> method.","Stream for the <code>zip</code> method.","Creates a new <code>Abortable</code> stream and an <code>AbortHandle</code> which …","Execute predicate over asynchronous stream, and return <code>true</code>…","Execute predicate over asynchronous stream, and return <code>true</code>…","Chain on a computation for when a value is ready, passing …","Chain on a computation for when a value is ready, passing …","Execute predicate over asynchronous stream, and return <code>true</code>…","Execute predicate over asynchronous stream, and return <code>true</code>…rap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","Wrap the stream in a Box, pinning it.","An adaptor for creating a buffered list of pending futures …","An adaptor for creating a buffered list of pending futures …","An adaptor for creating a buffered list of pending futures.","An adaptor for creating a buffered list of pending futures.","Borrows a stream, rather than consuming it.","Borrows a stream, rather than consuming it.","Catches unwinding panics while polling the stream.","Catches unwinding panics while polling the stream.","Adapter for chaining two streams.","Adapter for chaining two streams.","An adaptor for chunking up items of the stream inside a …","An adaptor for chunking up items of the stream inside a …","","","","","","","","","","","","","","","Transforms a stream into a collection, returning a future …","Transforms a stream into a collection, returning a future …","Concatenate all items of a stream into a single extendable …","Concatenate all items of a stream into a single extendable …","","Drives the stream to completion, counting the number of …","Drives the stream to completion, counting the number of …","Repeats a stream endlessly.","Repeats a stream endlessly.","","","","","","Creates a stream which contains no elements.","Creates a stream which gives the current iteration count …","Creates a stream which gives the current iteration count …","","","","","","","Wraps the current stream in a new stream which converts …","Wraps the current stream in a new stream which converts …","","","","Filters the values produced by this stream according to …","Filters the values produced by this stream according to …","Filters the values produced by this stream while …","Filters the values produced by this stream while …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Maps a stream like <code>StreamExt::map</code> but flattens nested …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Execute an accumulating asynchronous computation over a …","Execute an accumulating asynchronous computation over a …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","Runs this stream to completion, executing the provided …","A future that completes after the given stream has been …","A future that completes after the given stream has been …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Fuse a stream such that <code>poll_next</code> will never again be …","Fuse a stream such that <code>poll_next</code> will never again be …","An unbounded set of futures.","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying stream that …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying streams …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying sink or …","Acquires a mutable reference to the underlying streams …","Acquires a mutable reference to the underlying streams …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying sink …","Acquires a pinned mutable reference to the underlying …","Acquires a pinned mutable reference to the underlying …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying stream that this …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying streams that this …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying sink or stream that …","Acquires a reference to the underlying streams that this …","Acquires a reference to the underlying streams that this …","","Do something with each item of this stream, afterwards …","Do something with each item of this stream, afterwards …","Do something with the error value of this stream, …","Do something with the error value of this stream, …","Do something with the success value of this stream, …","Do something with the success value of this stream, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Adapter that converts this stream into an <code>AsyncBufRead</code>.","Adapter that converts this stream into an <code>AsyncBufRead</code>.","Converts this stream into a future of …","Converts this stream into a future of …","","","","","","","","","","","","","","","","","","","","","","","","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying stream.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying streams.","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying sink or …","Consumes this combinator, returning the underlying streams.","Consumes this combinator, returning the underlying streams.","","","","","","","Wraps a <code>TryStream</code> into a type that implements <code>Stream</code>","Wraps a <code>TryStream</code> into a type that implements <code>Stream</code>","Returns whether the underlying stream has finished or not.","Returns <code>true</code> if the queue contains no futures","Whether the stream was stopped yet by the stopping future …","Returns <code>true</code> if the stream should no longer be polled.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>Iterator</code> into a <code>Stream</code> which is always ready …","Wrap this stream in an <code>Either</code> stream, making it the …","Wrap this stream in an <code>Either</code> stream, making it the …","Returns the number of futures contained in the queue.","Maps this stream’s items to a different type, returning …","Maps this stream’s items to a different type, returning …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Wraps the current stream in a new stream which maps the …","Constructs a new, empty <code>FuturesOrdered</code>","Creates a future that resolves to the next item in the …","Creates a future that resolves to the next item in the …","Creates a future which will consume and return the next …","Creates a future which will consume and return the next …","Creates a stream of a single element.","Chain on a computation for when an error happens, passing …","Chain on a computation for when an error happens, passing …","Produces a future which retrieves a reference to the next …","Produces a future which retrieves a mutable reference to …","Creates a new stream which exposes a <code>peek</code> method.","Creates a new stream which exposes a <code>peek</code> method.","Creates a stream which never returns any elements.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream wrapping a function returning …","Creates a new stream that always immediately returns …","Attempt to pull out the next value of this stream, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>","A convenience method for calling <code>Stream::poll_next</code> on <code>Unpin</code>","Peek retrieves a reference to the next item in the stream.","Peek retrieves a mutable reference to the next item in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Push a future into the queue.","Pushes a future to the back of the queue.","Pushes a future to the front of the queue.","An adaptor for chunking up ready items of the stream …","An adaptor for chunking up ready items of the stream …","Create a stream which produces the same item repeatedly.","Creates a new stream that repeats elements of type <code>A</code> …","Attempts to put the two “halves” of a split …","Attempts to put the two “halves” of a split …","Wrap this stream in an <code>Either</code> stream, making it the …","Wrap this stream in an <code>Either</code> stream, making it the …","Combinator similar to <code>StreamExt::fold</code> that holds internal …","Combinator similar to <code>StreamExt::fold</code> that holds internal …","This function will attempt to pull items from both …","An unbounded set of streams","Convert a list of streams into a <code>Stream</code> of results from …","Returns a <code>Future</code> that resolves when the next item in this …","Returns a <code>Future</code> that resolves when the next item in this …","This function will attempt to pull items from both …","Returns the bounds on the remaining length of the stream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream which skips <code>n</code> items of the underlying …","Creates a new stream which skips <code>n</code> items of the underlying …","Skip elements on this stream while the provided …","Skip elements on this stream while the provided …","","","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …","Splits this <code>Stream + Sink</code> object into separate <code>Sink</code> and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new stream of at most <code>n</code> items of the underlying …","Creates a new stream of at most <code>n</code> items of the underlying …","Extract the stopping future out of the combinator. The …","Once the stopping future is resolved, this method can be …","Take elements from this stream until the provided future …","Take elements from this stream until the provided future …","Take elements from this stream while the provided …","Take elements from this stream while the provided …","Computes from this stream’s items new items of a …","Computes from this stream’s items new items of a …","","","","","","","","","","","Toggle the value and return the old one.","Attempt to execute a predicate over an asynchronous stream …","Attempt to execute a predicate over an asynchronous stream …","Attempt to execute a predicate over an asynchronous stream …","Attempt to execute a predicate over an asynchronous stream …","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","Attempt to execute several futures from a stream …","An adaptor for chunking up successful items of the stream …","An adaptor for chunking up successful items of the stream …","Attempt to transform a stream into a collection, returning …","Attempt to transform a stream into a collection, returning …","Attempt to concatenate all items of a stream into a single …","Attempt to concatenate all items of a stream into a single …","Attempt to filter the values produced by this stream …","Attempt to filter the values produced by this stream …","Attempt to filter the values produced by this stream while …","Attempt to filter the values produced by this stream while …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Flattens a stream of streams into just one continuous …","Attempt to execute an accumulating asynchronous …","Attempt to execute an accumulating asynchronous …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","Attempts to run this stream to completion, executing the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a future that attempts to resolve the next item in …","Creates a future that attempts to resolve the next item in …","","","","","","","","","","","Poll this <code>TryStream</code> as if it were a <code>Stream</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A convenience method for calling <code>TryStream::try_poll_next</code> …","A convenience method for calling <code>TryStream::try_poll_next</code> …","An adaptor for chunking up successful, ready items of the …","An adaptor for chunking up successful, ready items of the …","Skip elements on this stream while the provided …","Skip elements on this stream while the provided …","Take elements on this stream while the provided …","Take elements on this stream while the provided …","Creates a <code>TryStream</code> from a seed and a closure returning a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Stream</code> from a seed and a closure returning a …","Converts a stream of pairs into a future, which resolves …","Converts a stream of pairs into a future, which resolves …","An adapter for zipping two streams together.","An adapter for zipping two streams together.","A set of futures which may complete in any order.","Owned iterator over all futures in the unordered set.","Immutable iterator over all the futures in the unordered …","Mutable iterator over all futures in the unordered set.","Mutable iterator over all futures in the unordered set.","Immutable iterator over all futures in the unordered set.","","","","","","","","","","","Clears the set, removing all futures.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns <code>true</code> if the set contains no futures.","Returns an iterator that allows inspecting each future in …","Returns an iterator that allows modifying each future in …","Returns an iterator that allows modifying each future in …","Returns an iterator that allows inspecting each future in …","Returns the number of futures contained in the set.","Constructs a new, empty <code>FuturesUnordered</code>.","","","","","","Push a future into the set.","","","","","","","","","","","","","","","","","","","","","Owned iterator over all streams in the unordered set.","Immutable iterator over all streams in the unordered set.","Mutable iterator over all streams in the unordered set.","An unbounded set of streams","","","","","","","Clears the set, removing all streams.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if the set contains no streams","Returns an iterator that allows inspecting each stream in …","Returns an iterator that allows modifying each stream in …","Returns the number of streams contained in the set.","Constructs a new, empty <code>SelectAll</code>","","","","Push a stream into the set.","Convert a list of streams into a <code>Stream</code> of results from …","","","","","","","","","","","","","A way of waking up a specific task.","A synchronization primitive for task wakeup.","","A custom trait object for polling futures, roughly akin to …","A custom trait object for polling futures, roughly akin to …","The <code>LocalSpawn</code> is similar to <code>Spawn</code>, but allows spawning …","Extension trait for <code>LocalSpawn</code>.","","","","The <code>Spawn</code> trait allows for pushing futures onto an …","An error that occurred during spawning.","Extension trait for <code>Spawn</code>.","A custom implementation of a future trait object for …","","A <code>Waker</code> that is only valid for a given lifetime.","","","","","","","","","","","","","Drops the future represented by the given fat pointer.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Converts the <code>LocalFutureObj</code> into a <code>FutureObj</code>.","Convert an owned instance into a (conceptually owned) fat …","Check whether spawning failed to the executor being shut …","Create a <code>LocalFutureObj</code> from a custom trait object …","Create an <code>AtomicWaker</code>.","Create a <code>FutureObj</code> from a custom trait object …","Create a new <code>WakerRef</code> from a <code>Waker</code> reference.","Create a new <code>WakerRef</code> from a <code>Waker</code> that must not be …","Create a new <code>Waker</code> which does nothing when <code>wake()</code> is …","Get a static reference to a <code>Waker</code> which does nothing when …","","","Registers the waker to be notified on calls to <code>wake</code>.","Spawning failed because the executor has been shut down.","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a task that polls the given future with output <code>()</code> to","Spawns a future that will be run to completion.","Spawns a task that polls the given future to completion …","Spawns a task that polls the given future to completion …","Spawns a future that will be run to completion.","Spawns a task that polls the given future to completion …","Spawns a task that polls the given future to completion …","Determines whether the executor is able to spawn new tasks.","Determines whether the executor is able to spawn new tasks.","Returns the last <code>Waker</code> passed to <code>register</code>, so that the …","","","","","","","","","","","","","","","","","","","Indicates that the associated task is ready to make …","Calls <code>wake</code> on the last <code>Waker</code> passed to <code>register</code>.","Indicates that the associated task is ready to make …","Creates a <code>Waker</code> from an <code>Arc&lt;impl ArcWake&gt;</code>.","Creates a reference to a <code>Waker</code> from a reference to …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,61,0,0,5,0,0,0,0,0,0,60,61,0,0,60,61,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,286,286,7,7,14,15,34,36,37,38,29,31,39,40,41,42,43,44,45,13,46,47,48,49,50,30,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,19,20,62,63,64,65,66,67,68,69,70,71,72,73,7,21,74,1,22,14,15,34,36,37,38,29,31,39,40,41,42,43,44,45,13,46,47,48,49,50,30,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,19,20,62,63,64,65,66,67,68,69,70,71,72,73,7,21,74,1,22,287,287,287,287,287,287,14,15,16,18,19,20,7,21,1,22,14,15,16,18,19,20,7,21,1,22,7,18,14,283,14,22,22,0,286,286,7,7,287,287,286,286,287,287,14,15,34,36,37,38,29,31,39,40,41,42,43,44,45,13,46,47,48,49,50,30,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,19,20,62,63,64,65,66,67,68,69,70,71,72,73,7,21,74,1,22,22,46,14,15,34,36,37,38,29,31,39,40,41,42,43,44,45,13,46,47,48,49,50,30,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,18,19,20,62,63,64,65,66,67,68,69,70,71,72,73,7,21,74,1,22,36,37,67,73,287,287,74,287,287,286,286,286,286,14,15,34,36,37,38,29,31,39,40,41,42,43,44,45,13,46,47,48,49,50,30,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,19,20,62,63,64,65,66,67,68,69,70,71,72,73,7,21,74,1,22,14,286,286,34,36,37,38,29,39,41,42,43,44,45,13,46,47,48,49,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,19,20,62,63,64,65,66,67,68,69,70,71,72,73,7,21,20,67,7,283,287,287,21,1,78,14,38,29,31,39,40,41,42,43,44,45,48,49,50,30,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,19,20,62,63,64,65,66,7,7,0,0,0,0,0,0,287,287,287,287,286,286,287,287,286,286,286,286,0,287,287,21,1,287,287,0,286,286,286,286,60,61,14,0,14,34,36,37,38,29,39,41,42,43,44,45,13,46,47,48,49,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,19,20,62,63,64,65,66,67,68,69,70,71,72,73,7,21,31,50,30,7,7,7,31,50,30,7,7,0,0,31,40,50,30,19,7,21,7,7,31,50,30,7,7,287,287,7,7,14,14,0,287,287,287,287,0,0,0,287,287,31,40,50,30,7,31,50,30,7,14,60,61,38,287,287,14,15,16,18,19,20,7,21,1,22,22,286,286,286,286,14,15,34,36,37,38,29,31,39,40,41,42,43,44,45,13,46,47,48,49,50,30,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,19,20,62,63,64,65,66,67,68,69,70,71,72,73,7,21,74,1,22,14,15,34,36,37,38,29,31,39,40,41,42,43,44,45,13,46,47,48,49,50,30,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,19,20,62,63,64,65,66,67,68,69,70,71,72,73,7,21,74,1,22,0,0,0,0,0,0,5,14,34,37,38,29,39,41,42,43,44,45,13,46,48,49,6,51,28,52,53,54,55,56,57,58,59,16,61,20,68,69,70,71,72,73,7,21,31,40,50,30,7,21,286,286,0,14,15,34,36,37,38,29,31,39,40,41,42,43,44,45,13,46,47,48,49,50,30,6,51,28,52,53,54,55,56,57,58,59,16,60,61,18,19,20,62,63,64,65,66,67,68,69,70,71,72,73,7,21,74,1,22,287,287,286,286,15,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,99,99,110,120,121,122,105,101,123,102,103,104,107,113,114,124,106,117,118,125,126,127,128,129,130,131,132,133,134,135,136,112,99,137,138,139,110,120,121,122,105,101,123,102,103,104,107,113,114,124,106,117,118,125,126,127,128,129,130,131,132,133,134,135,136,112,99,137,138,139,101,102,103,288,105,106,105,106,289,105,23,110,105,105,101,102,104,106,112,290,0,0,0,106,0,99,105,105,290,105,289,105,110,120,121,122,122,105,101,123,102,103,104,107,113,114,124,106,117,118,125,126,127,128,129,130,131,132,133,134,135,136,112,99,137,138,139,110,120,121,122,105,101,123,102,103,104,107,113,114,124,106,117,118,125,126,127,128,129,130,131,132,133,134,135,136,112,99,137,138,139,105,101,102,104,106,112,99,101,102,104,112,105,101,102,103,104,106,112,99,105,110,120,121,122,105,101,123,102,103,104,107,113,114,124,106,117,118,125,126,127,128,129,130,131,132,133,134,135,136,112,99,137,138,139,123,107,113,114,124,117,118,127,128,129,130,131,132,133,134,137,138,139,105,101,102,104,106,112,99,289,112,290,105,101,102,103,106,99,105,123,107,113,114,124,117,118,127,128,129,130,131,132,133,134,137,138,139,83,121,105,101,102,103,106,106,106,106,125,136,23,110,105,101,102,104,106,112,83,121,105,101,102,103,106,106,106,106,125,136,126,89,110,120,105,101,102,104,106,135,112,89,120,105,101,102,104,106,135,125,91,105,101,102,106,101,83,121,105,101,102,103,106,106,106,106,136,83,121,105,101,102,103,106,106,106,106,136,106,288,105,288,105,290,288,105,288,105,290,288,105,0,135,136,291,105,101,99,112,106,0,288,99,125,291,288,105,106,122,110,120,121,122,105,101,123,102,103,104,107,113,114,124,106,117,118,125,126,127,128,129,130,131,132,133,134,135,136,112,99,137,138,139,110,120,121,122,105,101,123,102,103,104,107,113,114,124,106,117,118,125,126,127,128,129,130,131,132,133,134,135,136,112,99,137,138,139,123,107,113,114,124,117,118,127,128,129,130,131,132,133,134,137,138,139,126,110,120,121,122,105,101,123,102,103,104,107,113,114,124,106,117,118,125,126,127,128,129,130,131,132,133,134,135,136,112,99,137,138,139,101,102,103,289,105,289,105,105,289,105,0,0,0,0,0,0,149,153,150,154,151,152,149,153,150,154,151,152,149,150,151,152,150,151,152,153,150,154,151,152,149,153,150,154,151,152,149,149,149,153,150,154,151,152,149,149,153,150,154,151,152,153,154,149,153,154,149,149,151,152,149,153,154,149,153,150,154,151,152,149,153,150,154,151,152,149,149,149,153,150,154,151,152,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0,0,166,161,158,162,163,164,167,159,168,169,160,170,157,166,161,158,162,163,164,167,159,168,169,160,170,157,292,158,159,160,158,159,160,292,0,292,292,292,166,161,158,162,163,164,167,159,168,169,160,170,157,166,161,158,162,163,164,167,159,168,169,160,170,157,162,167,159,160,170,157,162,167,159,160,170,157,162,167,159,160,170,157,166,161,158,162,163,164,167,159,168,169,160,170,157,166,161,163,164,168,162,167,159,160,170,157,167,159,170,157,292,166,161,163,164,168,85,158,162,167,159,169,160,170,157,292,85,158,162,167,159,169,160,170,157,292,167,159,160,170,157,85,158,162,167,159,169,160,170,157,292,292,292,292,292,292,167,159,160,170,157,85,158,162,167,159,169,160,170,157,292,158,159,160,166,161,158,162,163,164,167,159,168,169,160,170,157,166,161,158,162,163,164,167,159,168,169,160,170,157,166,161,163,164,168,167,159,160,170,157,166,161,158,162,163,164,167,159,168,169,160,170,157,0,292,292,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,0,187,0,0,0,0,0,0,0,165,0,0,0,0,0,0,0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,293,293,265,265,293,293,208,209,194,195,196,179,189,210,190,192,193,197,201,202,206,211,173,171,212,213,214,215,216,217,203,218,219,220,221,222,223,224,225,226,227,228,229,230,231,180,232,233,176,177,205,234,235,236,178,172,200,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,198,253,199,254,255,256,257,258,259,260,191,181,182,183,184,261,185,186,262,187,263,264,208,209,194,195,196,179,189,210,190,192,193,197,201,202,206,211,173,171,212,213,214,215,216,217,203,218,219,220,221,222,223,224,225,226,227,228,229,230,231,180,232,233,176,177,205,234,235,236,178,172,200,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,198,253,199,254,255,256,257,258,259,260,191,181,182,183,184,261,185,186,262,187,263,264,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,181,182,183,184,185,186,187,181,182,183,184,185,186,187,293,293,293,293,191,293,293,293,293,194,195,196,187,195,0,293,293,198,199,187,198,199,187,265,265,194,195,196,293,293,293,293,293,293,293,293,293,293,293,293,208,208,209,194,195,196,179,189,210,190,192,193,197,201,202,206,211,173,171,212,213,214,215,216,217,203,218,219,220,221,222,223,224,225,226,227,228,229,230,231,180,232,233,176,177,205,234,235,236,178,172,200,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,198,198,253,199,199,254,255,256,257,258,259,260,191,181,182,183,184,261,185,186,262,187,263,264,293,293,293,293,293,293,293,293,208,209,194,195,196,179,189,210,190,192,193,197,201,202,206,211,173,171,212,213,214,215,216,217,203,218,219,220,221,222,223,224,225,226,227,228,229,230,231,180,232,233,176,177,205,234,235,236,178,172,200,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,198,253,199,254,255,256,257,258,259,260,191,181,182,183,184,261,185,186,262,187,263,264,194,195,196,293,293,0,197,201,202,206,214,215,216,217,203,220,225,226,227,228,229,230,231,180,232,233,176,177,205,178,172,200,237,238,239,240,241,242,245,246,247,248,251,253,256,257,258,259,262,263,197,201,202,206,214,215,216,217,203,220,225,226,227,228,229,230,231,180,232,233,176,177,205,178,172,200,237,238,239,240,241,242,245,246,247,248,251,253,256,257,258,259,262,263,197,201,202,206,214,215,216,217,203,220,225,226,227,228,229,230,231,180,232,233,176,177,205,178,172,200,237,238,239,240,241,242,245,246,247,248,251,253,256,257,258,259,262,263,187,293,293,265,265,265,265,208,209,194,195,196,179,189,210,190,192,193,197,201,202,206,211,173,171,212,213,214,215,216,217,203,218,219,220,221,222,223,224,225,226,227,228,229,230,231,180,232,233,176,177,205,234,235,236,178,172,200,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,198,253,199,254,255,256,257,258,259,260,191,181,182,183,184,261,185,186,262,187,263,264,265,265,293,293,189,210,190,192,211,173,171,212,213,215,218,219,221,222,223,224,234,243,244,249,250,254,260,197,201,202,206,214,215,216,217,203,220,225,226,227,228,229,230,231,180,232,233,176,177,205,178,172,200,237,238,239,240,241,242,245,246,247,248,251,253,256,257,258,259,262,263,195,195,195,196,196,196,265,265,214,194,229,79,194,195,196,179,189,210,190,192,193,197,201,202,206,211,173,171,212,213,214,215,216,217,203,218,219,220,221,222,223,224,225,226,227,228,229,230,231,180,232,233,176,177,205,234,178,172,200,237,238,239,240,241,242,243,245,246,247,248,249,251,253,254,256,257,260,182,183,184,261,185,186,262,263,264,0,293,293,194,293,293,265,265,265,265,194,293,293,220,220,0,265,265,220,220,293,293,0,189,210,190,192,211,173,171,212,213,215,218,219,221,222,223,224,234,243,244,249,250,254,260,197,201,202,206,214,216,217,203,220,225,226,227,228,229,230,180,232,233,176,177,205,236,172,200,237,238,239,240,241,242,245,246,247,248,251,253,256,257,258,259,191,191,197,201,202,206,214,216,217,203,220,225,226,227,228,229,230,180,232,233,176,177,205,236,172,200,237,238,239,240,241,242,245,246,247,248,251,253,256,257,258,259,191,0,0,88,209,194,195,196,179,193,197,201,202,206,214,216,217,203,220,225,226,227,228,229,230,231,180,232,233,176,177,205,235,178,172,200,237,238,239,240,241,242,245,246,247,248,251,253,255,256,257,258,259,181,182,183,184,261,185,186,262,263,264,293,293,220,220,191,197,201,202,206,214,216,217,203,220,225,226,227,228,229,230,180,232,233,176,177,205,236,172,200,237,238,239,240,241,242,245,246,247,248,251,253,256,257,258,259,191,194,194,194,293,293,0,0,235,236,293,293,293,293,0,0,0,293,293,0,88,194,195,179,193,197,201,202,206,214,216,217,203,220,225,226,227,228,229,230,231,180,232,233,176,177,205,178,172,200,237,238,239,240,241,242,245,246,248,251,253,256,257,181,182,183,184,261,185,186,293,293,293,293,195,195,293,293,197,201,202,206,214,216,217,203,220,225,226,227,228,229,230,180,232,233,176,177,205,236,172,200,237,238,239,240,241,242,245,246,247,248,251,253,256,257,258,259,293,293,229,229,293,293,293,293,293,293,181,182,183,184,185,186,187,208,198,199,187,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,208,209,194,195,196,179,189,210,190,192,193,197,201,202,206,211,173,171,212,213,214,215,216,217,203,218,219,220,221,222,223,224,225,226,227,228,229,230,231,180,232,233,176,177,205,234,235,236,178,172,200,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,198,253,199,254,255,256,257,258,259,260,191,181,182,183,184,261,185,186,262,187,263,264,208,209,194,195,196,179,189,210,190,192,193,197,201,202,206,211,173,171,212,213,214,215,216,217,203,218,219,220,221,222,223,224,225,226,227,228,229,230,231,180,232,233,176,177,205,234,235,236,178,172,200,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,198,253,199,254,255,256,257,258,259,260,191,181,182,183,184,261,185,186,262,187,263,264,265,265,190,211,212,219,243,244,249,250,254,260,165,209,194,195,196,179,193,201,202,206,214,216,217,203,220,225,226,227,228,229,230,233,176,177,235,178,172,200,237,238,239,240,241,242,245,246,247,251,253,255,256,257,258,259,181,182,183,184,261,185,262,263,264,265,265,265,265,265,265,265,265,0,208,209,194,195,196,179,189,210,190,192,193,197,201,202,206,211,173,171,212,213,214,215,216,217,203,218,219,220,221,222,223,224,225,226,227,228,229,230,231,180,232,233,176,177,205,234,235,236,178,172,200,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,198,253,199,254,255,256,257,258,259,260,191,181,182,183,184,261,185,186,262,187,263,264,0,293,293,293,293,0,0,0,0,0,0,270,271,272,273,274,270,271,272,273,274,195,270,271,272,273,274,270,271,272,273,274,270,271,272,273,274,270,271,272,273,274,195,195,195,195,195,195,195,270,271,272,273,274,195,270,271,272,273,274,270,271,272,273,274,270,271,272,273,274,270,271,272,273,274,0,0,0,0,275,276,277,275,276,277,196,275,276,277,275,276,277,275,276,277,275,276,277,196,196,196,196,196,275,276,277,196,0,275,276,277,275,276,277,275,276,277,275,276,277,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,268,267,278,269,279,268,267,278,269,279,278,279,283,267,268,268,267,278,269,279,268,267,267,267,267,267,267,278,269,269,269,269,269,279,268,267,278,269,279,267,269,267,283,268,267,278,269,279,279,0,0,267,269,278,268,294,294,295,295,296,295,295,297,294,294,297,296,278,268,268,267,278,269,279,268,267,278,269,279,267,269,268,267,278,269,279,285,278,285,0,0],"fc":[3009],"p":[[3,"AbortHandle"],[8,"Future"],[8,"Sized"],[8,"FnOnce"],[8,"TryFuture"],[3,"AndThen"],[4,"Either"],[3,"Pin"],[8,"Send"],[6,"BoxFuture"],[6,"LocalBoxFuture"],[8,"UnwindSafe"],[3,"CatchUnwind"],[3,"Shared"],[3,"WeakShared"],[3,"Pending"],[8,"Clone"],[3,"OptionFuture"],[3,"PollImmediate"],[3,"Ready"],[3,"Abortable"],[3,"Aborted"],[8,"AsyncBufRead"],[15,"usize"],[4,"Option"],[15,"bool"],[4,"Result"],[3,"ErrInto"],[3,"Flatten"],[3,"FlattenSink"],[3,"FlattenStream"],[3,"Formatter"],[6,"Result"],[3,"PollFn"],[8,"Debug"],[3,"JoinAll"],[3,"TryJoinAll"],[3,"Fuse"],[3,"Map"],[3,"IntoStream"],[3,"MapInto"],[3,"Then"],[3,"Inspect"],[3,"NeverError"],[3,"UnitError"],[3,"RemoteHandle"],[3,"Remote"],[3,"IntoFuture"],[3,"TryFlatten"],[3,"TryFlattenStream"],[3,"OrElse"],[3,"OkInto"],[3,"InspectOk"],[3,"InspectErr"],[3,"MapOk"],[3,"MapErr"],[3,"MapOkOrElse"],[3,"UnwrapOrElse"],[3,"Lazy"],[4,"MaybeDone"],[4,"TryMaybeDone"],[3,"Join"],[3,"Join3"],[3,"Join4"],[3,"Join5"],[3,"Select"],[3,"SelectAll"],[3,"TryJoin"],[3,"TryJoin3"],[3,"TryJoin4"],[3,"TryJoin5"],[3,"TrySelect"],[3,"SelectOk"],[3,"AbortRegistration"],[8,"IntoIterator"],[8,"Unpin"],[3,"Vec"],[8,"FusedFuture"],[8,"FusedStream"],[3,"Context"],[4,"Poll"],[8,"FnMut"],[8,"AsyncWrite"],[6,"Result"],[8,"Sink"],[15,"u8"],[15,"slice"],[8,"Stream"],[8,"AsyncRead"],[3,"IoSliceMut"],[8,"AsyncSeek"],[4,"SeekFrom"],[15,"u64"],[3,"IoSlice"],[8,"Hasher"],[3,"String"],[3,"TypeId"],[8,"AsMut"],[3,"Window"],[8,"AsRef"],[3,"BufReader"],[3,"BufWriter"],[3,"LineWriter"],[3,"Chain"],[3,"AllowStdIo"],[3,"Cursor"],[3,"Close"],[8,"Ord"],[4,"Ordering"],[3,"Empty"],[8,"BufRead"],[3,"Take"],[3,"Copy"],[3,"CopyBuf"],[8,"Default"],[8,"PartialEq"],[3,"FillBuf"],[3,"Flush"],[8,"Write"],[3,"Repeat"],[3,"Sink"],[3,"ReuniteError"],[3,"SeeKRelative"],[3,"CopyBufAbortable"],[3,"IntoSink"],[3,"Lines"],[3,"Read"],[3,"ReadVectored"],[3,"ReadExact"],[3,"ReadLine"],[3,"ReadToEnd"],[3,"ReadToString"],[3,"ReadUntil"],[3,"Seek"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Write"],[3,"WriteVectored"],[3,"WriteAll"],[8,"Hash"],[8,"PartialOrd"],[3,"Error"],[3,"Box"],[8,"Read"],[8,"Seek"],[15,"i64"],[8,"RangeBounds"],[3,"Arguments"],[3,"Mutex"],[3,"OwnedMutexGuard"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"OwnedMutexLockFuture"],[3,"MutexLockFuture"],[15,"never"],[3,"Arc"],[3,"Buffer"],[3,"Drain"],[3,"SinkMapErr"],[3,"With"],[3,"Close"],[3,"Fanout"],[3,"Feed"],[3,"Flush"],[8,"TryStream"],[3,"SendAll"],[3,"SinkErrInto"],[3,"Send"],[3,"Unfold"],[3,"WithFlatMap"],[3,"All"],[3,"AndThen"],[3,"Any"],[6,"BoxStream"],[6,"LocalBoxStream"],[3,"BufferUnordered"],[3,"Buffered"],[3,"CatchUnwind"],[3,"Chain"],[3,"Chunks"],[3,"Iter"],[3,"Repeat"],[3,"RepeatWith"],[3,"Empty"],[3,"Pending"],[3,"PollImmediate"],[4,"PollNext"],[8,"Extend"],[3,"Collect"],[3,"Concat"],[3,"IntoAsyncRead"],[3,"Count"],[3,"Cycle"],[3,"FuturesOrdered"],[3,"FuturesUnordered"],[3,"SelectAll"],[3,"Enumerate"],[3,"TryChunksError"],[3,"TryReadyChunksError"],[3,"ErrInto"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[8,"Into"],[3,"FlatMapUnordered"],[3,"Flatten"],[6,"FlattenUnordered"],[3,"ReuniteError"],[3,"PollFn"],[3,"Unzip"],[3,"Fold"],[3,"Forward"],[3,"ForEach"],[3,"Fuse"],[3,"StreamFuture"],[3,"Inspect"],[3,"Map"],[3,"Next"],[3,"SelectNextSome"],[3,"Peekable"],[3,"Peek"],[3,"PeekMut"],[3,"NextIf"],[3,"NextIfEq"],[3,"Skip"],[3,"SkipWhile"],[3,"Take"],[3,"TakeWhile"],[3,"TakeUntil"],[3,"Then"],[3,"Zip"],[3,"ReadyChunks"],[3,"Scan"],[3,"ForEachConcurrent"],[3,"SplitStream"],[3,"SplitSink"],[3,"InspectOk"],[3,"InspectErr"],[3,"IntoStream"],[3,"MapOk"],[3,"MapErr"],[3,"OrElse"],[3,"TryNext"],[3,"TryForEach"],[3,"TryFilter"],[3,"TryFilterMap"],[3,"TryFlatten"],[3,"TryFlattenUnordered"],[3,"TryCollect"],[3,"TryConcat"],[3,"TryChunks"],[8,"Display"],[3,"TryReadyChunks"],[3,"TryFold"],[3,"TryUnfold"],[3,"TrySkipWhile"],[3,"TryTakeWhile"],[3,"TryBufferUnordered"],[3,"TryBuffered"],[3,"TryForEachConcurrent"],[3,"Once"],[3,"Select"],[3,"SelectWithStrategy"],[3,"Unfold"],[8,"TryStreamExt"],[8,"Iterator"],[3,"LocalFutureObj"],[3,"SpawnError"],[3,"FutureObj"],[3,"IterPinMut"],[3,"IterMut"],[3,"IterPinRef"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"AtomicWaker"],[3,"WakerRef"],[3,"Waker"],[3,"Error"],[3,"Global"],[8,"UnsafeFutureObj"],[3,"ManuallyDrop"],[8,"ArcWake"],[8,"TryFutureExt"],[8,"FutureExt"],[8,"AsyncReadExt"],[8,"AsyncWriteExt"],[8,"AsyncBufReadExt"],[8,"AsyncSeekExt"],[8,"SinkExt"],[8,"StreamExt"],[8,"SpawnExt"],[8,"LocalSpawnExt"],[8,"LocalSpawn"],[8,"Spawn"]]},\
"gardiz":{"doc":"Library for 2D geometric spaces (AKA “the plane”). …","t":"AAAAAAAASEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIIIIQIQQKKKKLKKLNENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLSDDENDNNNLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLMLLLLLLLLLLLLLLLLLLLLLLMDDDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIIDIDDIIIIILLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLKLLLKLLLMMLLLLLLLLLLLLLLLKLLLKKDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["axis","bits","coord","direc","graph","map","rect","set","ALL","Axis","Iter","X","Y","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deserialize","eq","equivalent","fmt","fmt","fmt","from","from","hash","into","into","into_iter","iter","next","next_back","not","partial_cmp","serialize","size_hint","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","CastSigned","CastUnsigned","Distance","ExcessToSigned","HalfExcess","Output","SignedToExcess","Target","Target","cast_signed","cast_unsigned","distance","excess_to_signed","half_exc_to_signed","half_excess","signed_to_excess","signed_to_half_exc","BadCoord","FromStrRadixErr","MissingSep","Vec2","abs","abs_sub","add","add","add","add","add_assign","add_assign","as_mut","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_signed","cast_unsigned","center_origin","center_origin_at","checked_add","checked_div","checked_dot","checked_int_mag","checked_mag","checked_move","checked_move_by","checked_mul","checked_neg","checked_rem","checked_sqr_mag","checked_sub","clone","clone","clone_into","clone_into","cloned","cmp","copied","default","deserialize","direction_to","distance","div","div","div","div","div_assign","div_assign","dot","dot_ref","eq","equivalent","excess_to_signed","flip_y","fmt","fmt","fmt","fmt","fold","fold_rev","from","from","from","from","from_axes","from_str_radix","half_excess","hash","index","index_mut","int_magnitude","int_magnitude_ref","into","into","into_borrow","into_borrow_mut","is_negative","is_positive","is_zero","magnitude","magnitude_ref","map","map_with_axes","max_value","max_value","min_value","min_value","move_by","move_one","mul","mul","mul","mul","mul_assign","mul_assign","neg","neg","not","one","partial_cmp","pow","pow","pow","pow","rem","rem","rem","rem","rem_assign","rem_assign","saturating_add","saturating_dot","saturating_int_mag","saturating_mag","saturating_move","saturating_move_by","saturating_mul","saturating_sqr_mag","saturating_sub","serialize","set_one","set_zero","signum","sqr_magnitude","sqr_magnitude_ref","sub","sub","sub","sub","sub_assign","sub_assign","to_owned","to_owned","to_string","to_string","transpose","transpose_err_x","transpose_err_y","try_from","try_from","try_into","try_into","type_id","type_id","wrapping_add","wrapping_dot","wrapping_int_mag","wrapping_mag","wrapping_move","wrapping_move_by","wrapping_mul","wrapping_neg","wrapping_sqr_mag","wrapping_sub","x","y","zero","zip","zip_with","ALL","DirecMap","DirecVector","Direction","Down","Iter","Left","Right","Up","axis","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","deserialize","deserialize","deserialize","direction","down","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_axis_neg","from_axis_pos","from_direcs","hash","hash","hash","index","index_mut","into","into","into","into","into_iter","iter","left","magnitude","next","next_back","not","partial_cmp","partial_cmp","right","rotate_clockwise","rotate_countercw","serialize","serialize","serialize","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","up","Components","Connections","Graph","PathMakerBuf","VertexEdges","are_connected","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","components","connect","connected_at","connections","create_vertex","default","default","deserialize","disconnect","eq","equivalent","extend_edges","extend_vertices","fmt","fmt","fmt","fmt","from","from","from","from","from_vertices","from_verts_and_edges","into","into","into","into","into_iter","into_iter","make_path","make_path","new","new","next","next","remove_vertex","remove_with_edges","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vertex_edges","vertices_edges","Columns","Map","Neighbours","Rows","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","columns","contains","create","default","deserialize","eq","equivalent","extend","first_neighbour","first_neighbour_data","fmt","fmt","fmt","fmt","from","from","from","from","from_iter","get","insert","into","into","into","into","into_iter","into_iter","into_iter","is_empty","last_neighbour","last_neighbour_data","len","neighbours","neighbours_incl","new","next","next","next","next_back","next_back","next_back","remove","rows","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","Borders","CheckedAdd","CheckedSub","Columns","One","Rect","Rows","SaturatingAdd","SaturatingSub","WrappingAdd","WrappingSub","Zero","borders","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_end","checked_end_incl","checked_overlapped","checked_sub","clone","clone_into","cmp","columns","default","deserialize","end","end_incl_ref","end_inclusive","end_non_empty","end_non_empty_ref","end_ref","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from_range","from_range_incl","has_point","hash","into","into","into","into","into_iter","into_iter","into_iter","is_empty","is_one","is_zero","next","next","next","next_back","next_back","one","overlapped","overlaps","partial_cmp","rows","saturating_add","saturating_end","saturating_end_incl","saturating_overlapped","saturating_sub","serialize","set_one","set_zero","size","start","to_owned","try_from","try_from","try_from","try_from","try_from_range","try_from_range_incl","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wrapping_add","wrapping_end","wrapping_end_incl","wrapping_overlapped","wrapping_sub","zero","Columns","Neighbours","Rows","Set","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","columns","contains","default","deserialize","eq","equivalent","extend","first_neighbour","fmt","fmt","fmt","fmt","from","from","from","from","from_iter","insert","into","into","into","into","into_iter","into_iter","into_iter","is_empty","last_neighbour","len","neighbours","neighbours_incl","new","next","next","next","next_back","next_back","next_back","remove","rows","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":[[0,"gardiz"],[8,"gardiz::axis"],[50,"gardiz::bits"],[67,"gardiz::coord"],[231,"gardiz::direc"],[323,"gardiz::graph"],[401,"gardiz::map"],[482,"gardiz::rect"],[585,"gardiz::set"]],"d":["Utilites related to the axes of a plane.","A collection of traits related to manipulating integer …","Utilites related to coordinates.","Utilities related to directions in the plane.","A simple graph of points in a plane.","A map from coordinates/vectors to arbitrary data, …","This module exports rectangle utilities.","A set of coordinates/vectors in a plane optimized for the …","List of all possible axes. Please note that this requires …","The axes of a plane.","Iterator over all axes. See <code>Axis::iter</code>.","The X axis (changes horizontally).","The Y axis (changes vertically).","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterator over all axes.","","","","","","","","","","","","","","","","Trait for bit-casts from unsigned integers to 2’s …","Trait for bit-casts from 2’s complement signed integers …","Trait for computing absolute distance between two numbers. …","Trait for converting unsigned numbers into signed numbers, …","Trait for getting the “excess” that is the half of an …","Output number type.","Trait for converting signed numbers into unsigned numbers, …","Type of the target signed version.","Type of the target unsigned version.","Bit-casts the given (<code>self</code>) unsigned number into a signed …","Bit-casts the given (<code>self</code>) signed number into an unsigned …","Computes the absolute (without sign) distance between the …","Performs a conversion from an “excess of N” number to …","Performs a conversion from an “excess of N” number to …","Gets the “excess” that is the half of the maximum …","Performs a conversion from a 2’s complement number into …","Performs a conversion from a 2’s complement number into …","A coordinate could not be parsed correctly as an internal …","Error when parsing from string.","Thrown when a missing comma is found.","Generic 2D vector. It could be a coordinate, it could be …","","","","","","","","","Maps coordinates to mutable references.","Maps coordinates to references.","Borrows each coordinate.","","","","Borrows each coordinate as mutable references.","","","","Useful for showing unsigned coordinates to humans, when …","Useful for showing unsigned coordinates to humans, when …","","","Computes the dot product of the vector, returning <code>None</code> if …","Computes the magnitude of the vector truncated (as an …","Computes the magnitude of a float vector returning <code>None</code> on …","Moves this vector in the given direction by one, returning …","Moves this vector in the given direction by the given …","","","","Computes the square of the magnitude of the vector, …","","","","","","Clones every coordinate.","","Copies every coordinate.","","","Returns a “straight” direction into another point. …","","","","","","","","Computes the dot product of the vector, i.e. …","Computes the dot product of the vector, by reference.","","","","Useful for showing signed coordinates to humans, when the …","","","","","Performs a fold/reduce: i.e. accumulates the coordinates …","Performs a fold/reduce: i.e. accumulates the coordinates …","Returns the argument unchanged.","","","Returns the argument unchanged.","Creates a vector from a function over axis to data.","","","","","","Computes the magnitude of the vector truncated (as an …","Computes the magnitude of the vector truncated (as an …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Borrows each coordinate.","Borrows each coordinate as mutable references.","","","","Computes the magnitude of a float vector. The formula is …","Computes the magnitude of a float vector by reference.","Maps each coordinate to a given value and builds a new …","Maps each coordinate to a given value in a new vector, but …","","","","","Moves this vector in the given direction by the given …","Moves this vector in the given direction by one.","","","","","","","","","","","","","","","","","","","","","","","Computes the dot product of the vector, saturating when it …","Computes the magnitude of the vector truncated (as an …","Computes the magnitude of a float vector saturating on …","Moves this vector in the given direction by one, …","Moves this vector in the given direction by the given …","","Computes the square of the magnitude of the vector, …","","","","","","Computes the square of the magnitude of the vector. The …","Computes the square of the magnitude of the vector by …","","","","","","","","","","","Transpose a vector of options into an option of vectors: a …","Transpose a vector of <code>Result</code> into a <code>Result</code> of vectors: a …","Transpose a vector of <code>Result</code> into a <code>Result</code> of vectors: a …","","","","","","","","Computes the dot product of the vector, wrapping around …","Computes the magnitude of the vector truncated (as an …","Computes the magnitude of a float vector wrapping around …","Moves this vector in the given direction by one, wrapping …","Moves this vector in the given direction by the given …","","","Computes the square of the magnitude of the vector, …","","Value of the X-coordinate.","Value of the Y-coordinate.","","Zips two vectors into a vector of tuples. The result is:","Zips two vectors using a zipper function <code>f</code>. The result is:","List of all possible directions. Please note that this …","A mapping from all directions to the given data.","A vector written as a magnitude and a direction.","Basic direction in a plane.","Direction down (towards positive Y).","Iterator over all “straight” 2D directions. See …","Direction left (towards negative X).","Direction right (towards positive X).","Direction up (towards negative Y).","Axis on which the direciton varies.","","","","","","","","","","","","","","","","","","","","","","Direction of the vector.","Data associated with <code>Direction::Down</code>.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a direction from the given axis in the negative …","Creates a direction from the given axis in the positive …","Creates a mapping from a function.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Iterator over all directions.","Data associated with <code>Direction::Left</code>.","Mangitude, should be numeric.","","","","","","Data associated with <code>Direction::Right</code>.","Rotates the direction clockwise.","Rotates the direction counter-clockwise.","","","","","","","","","","","","","","","","","","","","","Data associated with <code>Direction::Up</code>.","Iterator over connected components of the graph. See …","Iterator over the connections of this graph pairs of …","A simple graph of points in a plane. Being simple means …","A buffer for an A* search algorithm useful for saving a …","The vertices_edges of a vertex. More specifically, at …","Tests if the given two vertices are connected.","","","","","","","","","","","","","","","","","Creates iterator over connected components of the graph. …","Connects the given two vertices and returns if they were …","Gets the vertex connected with the given vertex in the …","Iterator over the connections of this graph: pairs of …","Creates a new vertex in the graph (without creating …","","","","Disconnects the given two vertices and returns if they …","","","Extends the graph edge list from a list of vertices-pair …","Extend the set of vertices from a given list of vertices, …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates the graph from a list of vertices (and no …","Creates the graph from a list of vertices (and list of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Makes a path from the given starting point till the “goal…","Performs the A* search algorithm using this buffer. See …","Creates a new empty graph.","Creates a new empty path maker buffer.","","","Removes a vertex but attempts to connect vertices_edges …","Removes a vertex and all its vertices_edges. Returns if …","","","","","","","","","","","","","","","","","","Gets the edge flags of the given vertex, the vertex is in …","Returns the underlying map of vertices to edge flags.","Iterator over entries of a map in the direction of …","Map of coordinates in a plane to arbitrary data. Optimized …","Iterator over the neighbours of a point in a map. See …","Iterator over entries of a map in the direction of rows. …","","","","","","","","","","","","","","","","","Returns an iterator over all entries, by running through …","Tests if the map contains the given point.","Creates an entry at the given point with its associated …","","","","","","Returns the nearest neighbour in a straight line of a …","Returns the nearest neighbour in a straight line of a …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Attempts to get the data associated with the given point.","Inserts the given point with its associated data. A …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns whether the map is empty.","Returns the furthest neighbour in a straight line of a …","Returns the furthest neighbour in a straight line of a …","Returns the length of the map, i.e. how many <code>Vec2</code> (keys) …","Returns an iterator to the neighbours of a given point in …","Returns an iterator to the neighbours of a given point in …","Creates a new empty coordinate map.","","","","","","","Removes the given point entry from the from the map. …","Returns an iterator over all entries, by running through …","","","","","","","","","","","","","","","","","","Updates an existing point’s entry with the given value. …","Iterator over inner borders of the rectangle. See …","Performs addition that returns <code>None</code> instead of wrapping …","Performs subtraction that returns <code>None</code> instead of wrapping …","Iterator over columns of the rectangle. See <code>Rect::columns</code>.","Defines a multiplicative identity element for <code>Self</code>.","A rectangle in a plane.","Iterator over rows of the rectangle. See <code>Rect::rows</code>.","Performs addition that saturates at the numeric bounds …","Performs subtraction that saturates at the numeric bounds …","Performs addition that wraps around on overflow.","Performs subtraction that wraps around on overflow.","Defines an additive identity element for <code>Self</code>.","Iterator over the inner borders of this rectangle.","","","","","","","","","Adds two numbers, checking for overflow. If overflow …","Returns coordinates one unit past the end (bottom-right), …","Returns the last coordinates (bottom-right) of the …","Computes overlapped area between two rectangles, returning …","Subtracts two numbers, checking for underflow. If …","","","","Iterator over all coordinates of this rectangle in the …","","","Returns coordinates one unit past the end (bottom-right) …","Returns the last coordinates (bottom-right) of the …","Returns the last coordinates (bottom-right) of the …","Returns last included coordinates of the rectangle …","Returns last included coordinates of the rectangle …","Returns coordinates one unit past the end (bottom-right), …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Builds the rectangle from the given range <code>start .. end</code> …","Builds the rectangle from the given inclusive range …","Tests whether a given point is inside the rectangle.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns whether the rectangle is empty (i.e. size is zero).","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","","","","","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Computes the overlapped area between two rectangles. An …","Tests whether two rectangles overlap in area.","","Iterator over all coordinates of this rectangle in the …","Saturating addition. Computes <code>self + other</code>, saturating at …","Returns coordinates one unit past the end (bottom-right), …","Returns the last coordinates (bottom-right) of the …","Computes overlapped area between two rectangles, …","Saturating subtraction. Computes <code>self - other</code>, saturating …","","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Size at each dimension.","Starting top-left point.","","","","","","Tries to make a rectangle from a given range (end …","Tries to make a rectangle from a given range (end …","","","","","","","","","Wrapping (modular) addition. Computes <code>self + other</code>, …","Returns coordinates one unit past the end (bottom-right), …","Returns the last coordinates (bottom-right) of the …","Computes overlapped area between two rectangles, wrapping …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Iterator over the points of a set in the direction of …","Iterator over the neighbours of a given point in a given …","Iterator over the points of a set in the direction of rows …","The set of coordinates/vectors in a plane, optimized for …","","","","","","","","","","","","","","","","","Returns an iterator over all the points in the set, in the …","Tests if the set contains a given point.","","","","","","Returns the nearest neighbour in a straight line of a …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Inserts the given point in the set. Returns whether the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Tests if the set is emtpy.","Returns the furthest neighbour in a straight line of a …","Returns the length of the set, i.e. how many <code>Vec2</code> are …","Returns an iterator to the neighbours of a given point in …","Returns an iterator to the neighbours of a given point in …","Creates a new empty set.","","","","","","","Removes a point from the set. Returns whether the removal …","Returns an iterator over all the points in the set, in the …","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,0,0,1,1,1,2,1,2,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,2,2,1,2,2,1,1,1,2,1,2,1,1,2,1,2,1,2,0,0,0,0,0,91,0,21,22,21,22,91,92,92,14,93,93,37,0,37,0,16,16,16,16,16,16,16,16,16,16,16,16,37,16,16,37,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,37,16,37,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,37,37,16,16,16,16,16,37,16,16,16,16,16,16,16,16,16,37,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,37,16,37,16,16,16,16,37,16,37,16,37,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,32,0,0,0,32,0,32,32,32,32,32,69,33,70,32,69,33,70,32,69,33,70,32,69,33,70,32,33,32,33,70,33,70,32,33,70,32,33,70,32,69,33,70,32,69,33,70,32,32,70,32,33,70,70,70,32,69,33,70,69,32,70,33,69,69,32,32,33,70,32,32,32,33,70,69,32,69,33,70,32,69,33,70,32,69,33,70,32,69,33,70,70,0,0,0,0,0,71,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,71,71,71,71,71,71,72,71,71,71,71,71,71,71,72,73,74,71,72,73,74,71,71,71,72,73,74,73,74,71,72,71,72,73,74,71,71,71,71,72,73,74,71,72,73,74,71,72,73,74,71,72,73,74,71,71,0,0,0,0,78,79,80,81,78,79,80,81,78,79,80,81,78,79,80,81,78,78,78,78,78,78,78,78,78,78,78,79,80,81,78,79,80,81,78,78,78,78,79,80,81,79,80,81,78,78,78,78,78,78,78,79,80,81,79,80,81,78,78,78,78,79,80,81,78,79,80,81,78,79,80,81,78,79,80,81,78,0,0,0,0,0,0,0,0,0,0,0,0,83,83,85,86,84,83,85,86,84,26,83,83,83,31,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,85,86,84,83,85,86,84,83,83,83,83,83,85,86,84,85,86,84,83,25,53,85,86,84,85,86,25,83,83,83,83,60,83,83,83,62,83,25,53,83,83,83,83,85,86,84,83,83,83,85,86,84,83,85,86,84,65,83,83,83,67,53,0,0,0,0,87,88,89,90,87,88,89,90,87,88,89,90,87,88,89,90,87,87,87,87,87,87,87,87,87,88,89,90,87,88,89,90,87,87,87,88,89,90,88,89,90,87,87,87,87,87,87,88,89,90,88,89,90,87,87,87,87,88,89,90,87,88,89,90,87,88,89,90,87,88,89,90],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[1,1],[2,2],[[]],[[]],[[1,1],3],[4,[[5,[1]]]],[[1,1],6],[[],6],[[1,7],8],[[1,7],8],[[2,7],8],[[]],[[]],[[1,9]],[[]],[[]],[[]],[[],2],[2,10],[2,10],[1],[[1,1],[[10,[3]]]],[[1,11],5],[2],[[]],[[]],[[],12],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[14],[[]],[[]],[[]],0,0,0,0,[[[16,[15]]],[[16,[15]]]],[[[16,[15]],[16,[15]]],[[16,[15]]]],[[16,16]],[[[16,[17]],16]],[[16,16]],[[[16,[17]],16]],[[[16,[18]],16]],[[[16,[18]],16]],[16,16],[16,16],[[[16,[19]]],16],[[]],[[]],[[]],[[[16,[20]]],16],[[]],[[[16,[21]]]],[[[16,[22]]]],[16,[[16,[[0,[23,24,25]]]]]],[[16,16],[[16,[[0,[23,24,25]]]]]],[[[16,[26]],[16,[26]]],[[10,[[16,[26]]]]]],[[[16,[27]],[16,[27]]],[[10,[[16,[27]]]]]],[[[16,[[0,[26,28]]]],[16,[[0,[26,28]]]]],[[10,[[0,[26,28]]]]]],[[[16,[[0,[26,28,29]]]]],[[10,[[0,[26,28,29]]]]]],[[[16,[[0,[26,28,30]]]]],[[10,[[0,[26,28,30]]]]]],[[[16,[[0,[26,31,25]]]],32],[[10,[[16,[[0,[26,31,25]]]]]]]],[[[16,[[0,[26,31]]]],[33,[[0,[26,31]]]]],[[10,[[16,[[0,[26,31]]]]]]]],[[[16,[28]],[16,[28]]],[[10,[[16,[28]]]]]],[[[16,[34]]],[[10,[[16,[34]]]]]],[[[16,[35]],[16,[35]]],[[10,[[16,[35]]]]]],[[[16,[[0,[28,26]]]]],[[10,[[0,[28,26]]]]]],[[[16,[31]],[16,[31]]],[[10,[[16,[31]]]]]],[[[16,[36]]],[[16,[36]]]],[[[37,[36]]],[[37,[36]]]],[[]],[[]],[[[16,[36]]],[[16,[36]]]],[[[16,[38]],[16,[38]]],3],[[[16,[39]]],[[16,[39]]]],[[],[[16,[40]]]],[4,[[5,[[16,[41]]]]]],[[[16,[38]],[16,[38]]],[[10,[32]]]],[[]],[[[16,[42]],16]],[[16,16]],[[16,16]],[[[16,[42]],16]],[[[16,[43]],16]],[[[16,[43]],16]],[[[16,[44]],16]],[[16,16]],[[[16,[45]],[16,[45]]],6],[[],6],[[]],[[[16,[[0,[23,24,25]]]]],[[16,[[0,[23,24,25]]]]]],[[[16,[46]],7],8],[[[16,[47]],7],8],[[[37,[46]],7],8],[[[37,[47]],7],8],[[16,48]],[[16,48]],[[]],[16,16],[16,16],[[]],[48,16],[[49,50],[[5,[[16,[51]]]]]],[[]],[[[16,[52]],9]],[[16,1]],[[16,1]],[[[16,[[0,[36,44]]]]]],[16],[[]],[[]],[[[16,[19]]],16],[[[16,[20]]],16],[[[16,[15]]],6],[[[16,[15]]],6],[[[16,[53]]],6],[[[16,[[0,[36,44]]]]]],[16],[[16,48],16],[[16,48],16],[[]],[[],[[16,[54]]]],[[]],[[],[[16,[54]]]],[[[16,[[0,[17,23]]]],33],[[16,[[0,[17,23]]]]]],[[[16,[[0,[17,23,25]]]],32],[[16,[[0,[17,23,25]]]]]],[[[16,[44]],16]],[[16,16]],[[[16,[44]],16]],[[16,16]],[[[16,[55]],16]],[[[16,[55]],16]],[[[16,[24]]]],[16],[16],[[],[[16,[25]]]],[[[16,[56]],[16,[56]]],[[10,[3]]]],[[[16,[57]],16]],[[16,16]],[[[16,[57]],16]],[[16,16]],[[[16,[58]],16]],[[16,16]],[[16,16]],[[[16,[58]],16]],[[[16,[59]],16]],[[[16,[59]],16]],[[[16,[60]],[16,[60]]],[[16,[60]]]],[[[16,[[0,[60,61]]]],[16,[[0,[60,61]]]]],[[0,[60,61]]]],[[[16,[[0,[60,61,29]]]]],[[0,[60,61,29]]]],[[[16,[[0,[60,61,30]]]]],[[0,[60,61,30]]]],[[[16,[[0,[60,62,25]]]],32],[[16,[[0,[60,62,25]]]]]],[[[16,[[0,[60,62]]]],[33,[[0,[60,62]]]]],[[16,[[0,[60,62]]]]]],[[[16,[61]],[16,[61]]],[[16,[61]]]],[[[16,[[0,[61,60]]]]],[[0,[61,60]]]],[[[16,[62]],[16,[62]]],[[16,[62]]]],[[[16,[63]],11],5],[[[16,[25]]]],[[[16,[53]]]],[[[16,[15]]],[[16,[15]]]],[[[16,[[0,[36,44]]]]]],[16],[[16,16]],[[[16,[23]],16]],[[[16,[23]],16]],[[16,16]],[[[16,[64]],16]],[[[16,[64]],16]],[[]],[[]],[[],12],[[],12],[[[16,[10]]],[[10,[16]]]],[[[16,[5]]],[[5,[16]]]],[[[16,[5]]],[[5,[16]]]],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[[16,[65]],[16,[65]]],[[16,[65]]]],[[[16,[[0,[65,66]]]],[16,[[0,[65,66]]]]],[[0,[65,66]]]],[[[16,[[0,[65,66,29]]]]],[[0,[65,66,29]]]],[[[16,[[0,[65,66,30]]]]],[[0,[65,66,30]]]],[[[16,[[0,[65,67,25]]]],32],[[16,[[0,[65,67,25]]]]]],[[[16,[[0,[65,67]]]],[33,[[0,[65,67]]]]],[[16,[[0,[65,67]]]]]],[[[16,[66]],[16,[66]]],[[16,[66]]]],[[[16,[68]]],[[16,[68]]]],[[[16,[[0,[65,66]]]]],[[0,[65,66]]]],[[[16,[67]],[16,[67]]],[[16,[67]]]],0,0,[[],[[16,[53]]]],[[16,16],16],[[16,16,48],16],0,0,0,0,0,0,0,0,0,[32,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[32,32],[69,69],[[[33,[36]]],[[33,[36]]]],[[[70,[36]]],[[70,[36]]]],[[]],[[]],[[]],[[]],[[32,32],3],[[[33,[38]],[33,[38]]],3],[4,[[5,[32]]]],[4,[[5,[[33,[41]]]]]],[4,[[5,[[70,[41]]]]]],0,0,[[32,32],6],[[[33,[45]],[33,[45]]],6],[[[70,[45]],[70,[45]]],6],[[],6],[[],6],[[],6],[[32,7],8],[[69,7],8],[[[33,[47]],7],8],[[[70,[47]],7],8],[[]],[[]],[[]],[[]],[1,32],[1,32],[48,70],[[32,9]],[[[33,[52]],9]],[[[70,[52]],9]],[[70,32]],[[70,32]],[[]],[[]],[[]],[[]],[[]],[[],69],0,0,[69,10],[69,10],[32],[[32,32],[[10,[3]]]],[[[33,[56]],[33,[56]]],[[10,[3]]]],0,[32,32],[32,32],[[32,11],5],[[[33,[63]],11],5],[[[70,[63]],11],5],[69],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,[[[71,[[19,[38]],38]],[16,[38]],[16,[38]]],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[71,[[0,[38,36]]]]],[[71,[[0,[38,36]]]]]],[[[72,[[0,[36,52,38,53,25,18,26,31,36]]]]],[[72,[[0,[36,52,38,53,25,18,26,31,36]]]]]],[[[73,[[0,[38,36]]]]],[[73,[[0,[38,36]]]]]],[[[74,[[0,[38,36]]]]],[[74,[[0,[38,36]]]]]],[[]],[[]],[[]],[[]],[[[71,[38]]],[[74,[38]]]],[[[71,[[19,[38]],38]],[16,[38]],[16,[38]]],6],[[[71,[[19,[38]],38]],[16,[38]],32],[[10,[[16,[[19,[38]],38]]]]]],[[[71,[38]]],[[73,[38]]]],[[[71,[36,38]],[16,[36,38]]],6],[[],[[71,[38]]]],[[],[[72,[[0,[36,52,38,53,25,18,26,31]]]]]],[4,[[5,[[71,[[0,[38,41,36]]]]]]]],[[[71,[[19,[38]],38]],[16,[38]],[16,[38]]],6],[[[71,[[0,[38,45]]]],[71,[[0,[38,45]]]]],6],[[],6],[[[71,[[19,[38]],38]],75]],[[[71,[36,38]],75]],[[[71,[[0,[38,47]]]],7],8],[[[72,[[0,[36,52,38,53,25,18,26,31,47]]]],7],8],[[[73,[[0,[38,47]]]],7],8],[[[74,[[0,[38,47]]]],7],8],[[]],[[]],[[]],[[]],[75,[[71,[36,38]]]],[[75,75],[[71,[[0,[[19,[38]],36]],38]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[71,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,18]],38]]]],38]]]],38]]]],38]],[16,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,18]],38]]]],38]]]],38]]]],38]],[16,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,18]],38]]]],38]]]],38]]]],38]],[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,18]],38]]]],38]]]],38]]]],38]]]],38,48],[[10,[[76,[[33,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,[18,[[0,[36,52,53,25,18,26,31,18]],38]]]],38]]]],38]]]]]]]],[[[72,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,18]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]],[71,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,18]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]],[16,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,18]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]],[16,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,18]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]],[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,18]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]],48],[[10,[[76,[[33,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,[18,[[0,[36,53,25,18,18]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]],[0,[36,52,38,53,25,18,26,31]]]]]]]]]],[[],[[71,[38]]]],[[],[[72,[[0,[36,52,38,53,25,18,26,31]]]]]],[[[73,[38]]],10],[[[74,[[0,[38,36]]]]],10],[[[71,[[0,[[19,[38]],36]],38]],[16,[38]]],6],[[[71,[[0,[[19,[38]],36,47]],38]],[16,[38]]],6],[[[71,[[0,[38,63]]]],11],5],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],[[],13],[[[71,[[19,[38]],38]],[16,[38]]],[[10,[77]]]],[[[71,[38]]],[[78,[38,77]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[78,[[0,[38,36]],36]]],[[78,[[0,[38,36]],36]]]],[[[79,[[0,[38,36]],36]]],[[79,[[0,[38,36]],36]]]],[[[80,[[0,[38,36]],36]]],[[80,[[0,[38,36]],36]]]],[[[81,[[0,[38,36]],36]]],[[81,[[0,[38,36]],36]]]],[[]],[[]],[[]],[[]],[[[78,[38]]],[[81,[38]]]],[[[78,[[19,[38]],38]],[16,[38]]],6],[[[78,[36,38,36]],[16,[36,38]],36],6],[[],[[78,[38]]]],[4,[[5,[[78,[[0,[41,38,36]],[0,[41,36]]]]]]]],[[[78,[38,45]],[78,[38,45]]],6],[[],6],[[[78,[[0,[38,36]],36]],75]],[[[78,[[19,[38]],38]],[16,[38]],32],[[10,[[16,[[19,[38]],38]]]]]],[[[78,[[19,[38]],38]],[16,[38]],32],10],[[[78,[[0,[38,47]],47]],7],8],[[[79,[[0,[38,47]],47]],7],8],[[[80,[[0,[38,47]],47]],7],8],[[[81,[[0,[38,47]],47]],7],8],[[]],[[]],[[]],[[]],[75,[[78,[[0,[38,36]],36]]]],[[[78,[[19,[38]],38]],[16,[38]]],10],[[[78,[36,38,36]],[16,[36,38]],36],[[10,[36]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[78,[38]]],6],[[[78,[[19,[38]],38]],[16,[38]],32],[[10,[[16,[[19,[38]],38]]]]]],[[[78,[[19,[38]],38]],[16,[38]],32],10],[[[78,[38]]],82],[[[78,[[19,[38]],38]],[16,[38]],32],[[79,[[19,[38]],38]]]],[[[78,[[19,[38]],38]],[16,[38]],32],[[79,[[19,[38]],38]]]],[[],[[78,[38]]]],[[[79,[38]]],10],[[[80,[38]]],10],[[[81,[38]]],10],[[[79,[38]]],10],[[[80,[38]]],10],[[[81,[38]]],10],[[[78,[[19,[38]],38]],[16,[38]]],10],[[[78,[38]]],[[80,[38]]]],[[[78,[[0,[63,38]],63]],11],5],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],[[],13],[[[78,[[19,[38]],38,36]],[16,[38]],36],[[5,[36,36]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[83,[[0,[18,25,38,36]],[0,[25,53]]]]],[[84,[[0,[18,25,38,36]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[[83,[26]]],[[10,[[16,[26]]]]]],[[[83,[[0,[26,31,25,53]]]]],[[10,[[16,[[0,[26,31,25,53]]]]]]]],[[[83,[[0,[26,31,25,53,38,36]]]],[83,[[0,[26,31,25,53,38,36]]]]],[[10,[[83,[[0,[26,31,25,53,38,36]]]]]]]],[[],10],[[[83,[36,36]]],[[83,[36,36]]]],[[]],[[[83,[38,38]],[83,[38,38]]],3],[[[83,[[0,[25,18,38,36]],[0,[25,53]]]]],[[85,[[0,[25,18,38,36]]]]]],[[],[[83,[40,40]]]],[4,[[5,[[83,[41,41]]]]]],[[[83,[17]]],16],[[[83,[25,[0,[25,53]]]]],16],[[[83,[[0,[17,23,25]],[0,[23,25,53]]]]],16],[[[83,[[0,[17,23,25]],[0,[23,25,53]]]]],[[10,[16]]]],[[[83,[25,[0,[25,53]]]]],[[10,[16]]]],[83,16],[[[83,[45,45]],[83,[45,45]]],6],[[],6],[[[83,[47,47]],7],8],[[[85,[47]],7],8],[[[86,[47]],7],8],[[[84,[47]],7],8],[[]],[[]],[[]],[[]],[[[16,[36]],[16,[[23,[36]]]]],[[83,[36]]]],[[[16,[[0,[23,36,38]]]],[16,[[0,[23,36,38]]]]],[[83,[[0,[23,36,38]],53]]]],[[[83,[[0,[[23,[[0,[[23,[[0,[[23,[[0,[23,25,38]]]],25,38]]]],25,38]]]],25,38]],[0,[25,53]]]],[16,[[0,[[23,[[0,[[23,[[0,[[23,[[0,[23,25,38]]]],25,38]]]],25,38]]]],25,38]]]]],6],[[[83,[52,52]],9]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[53]]],6],[[[45,[[45,[[45,[[45,[45]]]]]]]]],6],[[],6],[[[85,[[0,[25,18,38,36]]]]],10],[[[86,[[0,[25,18,38,36]]]]],10],[[[84,[[0,[18,25,38,36]]]]],10],[[[85,[[0,[25,18,64,38,36]]]]],10],[[[86,[[0,[25,18,64,38,36]]]]],10],[[]],[[[83,[[0,[[23,[[0,[[23,[[0,[[23,[[0,[23,25,38,36]]]],25,38,36]]]],25,38,36]]]],25,38,36]],[0,[25,53]]]],[83,[[0,[[23,[[0,[[23,[[0,[[23,[[0,[23,25,38,36]]]],25,38,36]]]],25,38,36]]]],25,38,36]],[0,[25,53]]]]],[[83,[[0,[[23,[[0,[[23,[[0,[[23,[[0,[23,25,38,36]]]],25,38,36]]]],25,38,36]]]],25,38,36]]]]]],[[[83,[[0,[[23,[[0,[[23,[[0,[[23,[[0,[23,25,38]]]],25,38]]]],25,38]]]],25,38]],[0,[25,53]]]],[83,[[0,[[23,[[0,[[23,[[0,[[23,[[0,[23,25,38]]]],25,38]]]],25,38]]]],25,38]],[0,[25,53]]]]],6],[[[83,[56,56]],[83,[56,56]]],[[10,[3]]]],[[[83,[[0,[25,18,38,36]],[0,[25,53]]]]],[[86,[[0,[25,18,38,36]]]]]],[[]],[[[83,[60]]],[[16,[60]]]],[[[83,[[0,[60,62,25,53]]]]],[[16,[[0,[60,62,25,53]]]]]],[[[83,[[0,[60,62,25,53,38,36]]]],[83,[[0,[60,62,25,53,38,36]]]]],[[83,[[0,[60,62,25,53,38,36]]]]]],[[]],[[[83,[63,63]],11],5],[[]],[[]],0,0,[[]],[[],5],[[],5],[[],5],[[],5],[[[16,[[0,[36,31]]]],[16,[[0,[36,31]]]]],[[10,[[83,[[0,[36,31]]]]]]]],[[[16,[[0,[26,31,25,53,38,36]]]],[16,[[0,[26,31,25,53,38,36]]]]],[[10,[[83,[[0,[26,31,25,53,38,36]]]]]]]],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],[[],13],[[]],[[[83,[65]]],[[16,[65]]]],[[[83,[[0,[65,67,25]]]]],[[16,[[0,[65,67,25]]]]]],[[[83,[[0,[65,67,38,36]]]],[83,[[0,[65,67,38,36]]]]],[[83,[[0,[65,67,38,36]]]]]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[87,[[0,[38,36]]]]],[[87,[[0,[38,36]]]]]],[[[88,[[0,[38,36]]]]],[[88,[[0,[38,36]]]]]],[[[89,[[0,[38,36]]]]],[[89,[[0,[38,36]]]]]],[[[90,[[0,[38,36]]]]],[[90,[[0,[38,36]]]]]],[[]],[[]],[[]],[[]],[[[87,[38]]],[[90,[38]]]],[[[87,[[19,[38]],38]],[16,[38]]],6],[[],[[87,[38]]]],[4,[[5,[[87,[[0,[38,41,36]]]]]]]],[[[87,[[0,[38,45]]]],[87,[[0,[38,45]]]]],6],[[],6],[[[87,[[0,[38,36]]]],75]],[[[87,[[19,[38]],38]],[16,[38]],32],[[10,[[16,[[19,[38]],38]]]]]],[[[87,[[0,[38,47]]]],7],8],[[[88,[[0,[38,47]]]],7],8],[[[89,[[0,[38,47]]]],7],8],[[[90,[[0,[38,47]]]],7],8],[[]],[[]],[[]],[[]],[75,[[87,[[0,[38,36]]]]]],[[[87,[36,38]],[16,[36,38]]],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[87,[38]]],6],[[[87,[[19,[38]],38]],[16,[38]],32],[[10,[[16,[[19,[38]],38]]]]]],[[[87,[38]]],82],[[[87,[[19,[38]],38]],[16,[38]],32],[[88,[[19,[38]],38]]]],[[[87,[[19,[38]],38]],[16,[38]],32],[[88,[[19,[38]],38]]]],[[],[[87,[38]]]],[[[88,[38]]],10],[[[89,[38]]],10],[[[90,[38]]],10],[[[88,[38]]],10],[[[89,[38]]],10],[[[90,[38]]],10],[[[87,[[19,[38]],38]],[16,[38]]],6],[[[87,[38]]],[[89,[38]]]],[[[87,[[0,[38,63]]]],11],5],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],13],[[],13],[[],13],[[],13]],"c":[],"p":[[4,"Axis"],[3,"Iter"],[4,"Ordering"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[4,"Option"],[8,"Serializer"],[3,"String"],[3,"TypeId"],[8,"HalfExcess"],[8,"Signed"],[3,"Vec2"],[8,"Add"],[8,"AddAssign"],[8,"Borrow"],[8,"BorrowMut"],[8,"CastSigned"],[8,"CastUnsigned"],[8,"Sub"],[8,"Neg"],[8,"One"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedMul"],[8,"Roots"],[8,"Float"],[8,"CheckedSub"],[4,"Direction"],[3,"DirecVector"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"Clone"],[4,"FromStrRadixErr"],[8,"Ord"],[8,"Copy"],[8,"Default"],[8,"Deserialize"],[8,"Div"],[8,"DivAssign"],[8,"Mul"],[8,"PartialEq"],[8,"Display"],[8,"Debug"],[8,"FnMut"],[15,"str"],[15,"u32"],[8,"Num"],[8,"Hash"],[8,"Zero"],[8,"Bounded"],[8,"MulAssign"],[8,"PartialOrd"],[8,"Pow"],[8,"Rem"],[8,"RemAssign"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"Serialize"],[8,"SubAssign"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingSub"],[8,"WrappingNeg"],[3,"Iter"],[3,"DirecMap"],[3,"Graph"],[3,"PathMakerBuf"],[3,"Connections"],[3,"Components"],[8,"IntoIterator"],[3,"Vec"],[6,"VertexEdges"],[3,"Map"],[3,"Neighbours"],[3,"Rows"],[3,"Columns"],[15,"usize"],[3,"Rect"],[3,"Borders"],[3,"Columns"],[3,"Rows"],[3,"Set"],[3,"Neighbours"],[3,"Rows"],[3,"Columns"],[8,"Distance"],[8,"ExcessToSigned"],[8,"SignedToExcess"]]},\
"gethostname":{"doc":"gethostname() for all platforms.","t":"F","n":["gethostname"],"q":[[0,"gethostname"]],"d":["Get the standard host name for the current machine."],"i":[0],"f":[[[],1]],"c":[],"p":[[3,"OsString"]]},\
"hashbrown":{"doc":"This crate is a Rust port of Google’s high-performance …","t":"NNIDDDELLLLLKLLLAAALALLLLMEDEEDDDDDDDDNNNDDDDDEDDNNNDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLDDEDDDDDNDDDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDEDDDDDNDNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AllocError","CapacityOverflow","Equivalent","HashMap","HashSet","HashTable","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","fmt","from","hash_map","hash_set","hash_table","into","raw","to_owned","try_from","try_into","type_id","layout","DefaultHashBuilder","Drain","Entry","EntryRef","ExtractIf","HashMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Keys","Occupied","Occupied","Occupied","OccupiedEntry","OccupiedEntryRef","OccupiedError","RawEntryBuilder","RawEntryBuilderMut","RawEntryMut","RawOccupiedEntryMut","RawVacantEntryMut","Vacant","Vacant","Vacant","VacantEntry","VacantEntryRef","Values","ValuesMut","allocator","and_modify","and_modify","and_modify","and_replace_entry_with","and_replace_entry_with","and_replace_entry_with","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","contains_key","default","drain","entry","entry","entry_ref","eq","equivalent","extend","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_hash","from_hash","from_iter","from_key","from_key","from_key_hashed_nocheck","from_key_hashed_nocheck","get","get","get","get","get_key_value","get_key_value","get_key_value_mut","get_key_value_mut","get_many_key_value_mut","get_many_key_value_unchecked_mut","get_many_mut","get_many_unchecked_mut","get_mut","get_mut","get_mut","get_mut","hasher","index","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert_hashed_nocheck","insert_key","insert_unique_unchecked","insert_with_hasher","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_key","into_key","into_key_value","into_keys","into_mut","into_mut","into_mut","into_values","is_empty","iter","iter_mut","key","key","key","key","key","key","key","key_mut","keys","len","len","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next","next","or_default","or_default","or_insert","or_insert","or_insert","or_insert_with","or_insert_with","or_insert_with","or_insert_with_key","or_insert_with_key","raw_entry","raw_entry_mut","raw_table","raw_table_mut","remove","remove","remove","remove","remove_entry","remove_entry","remove_entry","remove_entry","replace_entry","replace_entry","replace_entry_with","replace_entry_with","replace_entry_with","replace_key","replace_key","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","values","values_mut","with_capacity_and_hasher","with_capacity_and_hasher_in","with_hasher","with_hasher_in","Difference","Drain","Entry","ExtractIf","HashSet","Intersection","IntoIter","Iter","Occupied","OccupiedEntry","SymmetricDifference","Union","Vacant","VacantEntry","allocator","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains","default","difference","drain","entry","eq","equivalent","extend","extend","extract_if","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get","get","get_or_insert","get_or_insert_owned","get_or_insert_with","hasher","insert","insert","insert","insert_unique_unchecked","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_value","is_disjoint","is_empty","is_subset","is_superset","iter","len","len","len","len","next","next","next","next","next","next","next","next","or_insert","raw_table","raw_table_mut","remove","remove","replace","replace","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sub","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity_and_hasher","with_capacity_and_hasher_in","with_hasher","with_hasher_in","AbsentEntry","Drain","Entry","ExtractIf","HashTable","IntoIter","Iter","IterMut","Occupied","OccupiedEntry","Vacant","VacantEntry","allocator","and_modify","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone_into","default","drain","entry","extract_if","find","find_entry","find_mut","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get","get_many_mut","get_many_unchecked_mut","get_mut","insert","insert","insert_unique","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_mut","into_table","into_table","into_table","is_empty","iter","iter_mut","len","len","len","len","len","new","new_in","next","next","next","next","next","or_insert","or_insert_with","remove","reserve","retain","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity_in","Bucket","InsertSlot","RawDrain","RawIntoIter","RawIter","RawIterHash","RawTable","allocation_info","allocator","as_mut","as_ptr","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","bucket_index","buckets","capacity","clear","clear_no_drop","clone","clone","clone","clone_from","clone_from_with_hasher","clone_into","clone_into","clone_into","copy_from_nonoverlapping","data_end","data_start","default","drain","drain_iter_from","drop","drop","drop","erase","erase_entry","find","find_or_find_insert_slot","from","from","from","from","from","from","from","get","get_many_mut","get_many_unchecked_mut","get_mut","insert","insert_entry","insert_in_slot","insert_no_grow","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter_from","is_bucket_full","is_empty","iter","iter","iter","iter_hash","len","new","new_in","next","next","next","next","reflect_insert","reflect_remove","remove","remove_entry","replace_bucket_with","reserve","shrink_to","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_insert_no_grow","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_with_capacity","try_with_capacity_in","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","with_capacity_in"],"q":[[0,"hashbrown"],[25,"hashbrown::TryReserveError"],[26,"hashbrown::hash_map"],[427,"hashbrown::hash_set"],[642,"hashbrown::hash_table"],[793,"hashbrown::raw"]],"d":["The memory allocator returned an error","Error due to the computed capacity exceeding the collection…","Key equivalence trait.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","Low-level hash table with explicit hashing.","The error type for <code>try_reserve</code> methods.","","","","","","Checks if this value is equivalent to the given key.","","","Returns the argument unchanged.","A hash map implemented with quadratic probing and SIMD …","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A hash table implemented with quadratic probing and SIMD …","Calls <code>U::from(self)</code>.","Experimental and unsafe <code>RawTable</code> API. This module is only …","","","","","The layout of the allocation request that failed.","Dummy default hasher for <code>HashMap</code>.","A draining iterator over the entries of a <code>HashMap</code> in …","A view into a single entry in a map, which may either be …","A view into a single entry in a map, which may either be …","A draining iterator over entries of a <code>HashMap</code> which don’…","A hash map implemented with quadratic probing and SIMD …","An owning iterator over the entries of a <code>HashMap</code> in …","An owning iterator over the keys of a <code>HashMap</code> in arbitrary …","An owning iterator over the values of a <code>HashMap</code> in …","An iterator over the entries of a <code>HashMap</code> in arbitrary …","A mutable iterator over the entries of a <code>HashMap</code> in …","An iterator over the keys of a <code>HashMap</code> in arbitrary order. …","An occupied entry.","An occupied entry.","An occupied entry.","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","The error returned by <code>try_insert</code> when the key already …","A builder for computing where in a <code>HashMap</code> a key-value …","A builder for computing where in a <code>HashMap</code> a key-value …","A view into a single entry in a map, which may either be …","A view into an occupied entry in a <code>HashMap</code>. It is part of …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A vacant entry.","A vacant entry.","A vacant entry.","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","A view into a vacant entry in a <code>HashMap</code>. It is part of the …","An iterator over the values of a <code>HashMap</code> in arbitrary …","A mutable iterator over the values of a <code>HashMap</code> in …","Returns a reference to the underlying allocator.","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides in-place mutable access to an occupied entry …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the map can hold without …","Clears the map, removing all key-value pairs. Keeps the …","","","","","","","","","","Returns <code>true</code> if the map contains a value for the specified …","Creates an empty <code>HashMap&lt;K, V, S, A&gt;</code>, with the <code>Default</code> …","Clears the map, returning all key-value pairs as an …","Gets the given key’s corresponding entry in the map for …","The entry in the map that was already occupied.","Gets the given key’s corresponding entry by reference in …","","","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Inserts all new key-values from the iterator to existing …","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>RawEntryMut</code> from the given hash and matching …","Access an immutable entry by hash and matching function.","","Creates a <code>RawEntryMut</code> from the given key.","Access an immutable entry by key.","Creates a <code>RawEntryMut</code> from the given key and its hash.","Access an immutable entry by a key and its hash.","Returns a reference to the value corresponding to the key.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Gets a reference to the value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a reference to the key and value in the entry.","Returns the key-value pair corresponding to the supplied …","Gets a mutable reference to the key and value in the entry.","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Returns a mutable reference to the value corresponding to …","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Gets a mutable reference to the value in the entry.","Returns a reference to the map’s <code>BuildHasher</code>.","Returns a reference to the value corresponding to the …","Inserts a key-value pair into the map.","Sets the value of the entry, and returns a …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns an …","Sets the value of the entry, and returns the entry’s old …","Sets the value of the entry with the VacantEntryRef’s …","Sets the value of the entry with the VacantEntry’s key, …","Sets the value of the entry, and returns the entry’s old …","Insert a key-value pair into the map without checking if …","Set the value of an entry with a custom hasher function.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a consuming iterator, that is, one that moves each …","Creates an iterator over the entries of a <code>HashMap</code> in …","Creates an iterator over the entries of a <code>HashMap</code> in …","","","","","","","","","","","Converts the entry into a mutable reference to the key in …","Take ownership of the key.","Take ownership of the key.","Converts the OccupiedEntry into a mutable reference to the …","Creates a consuming iterator visiting all the keys in …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntryRef into a mutable reference to …","Creates a consuming iterator visiting all the values in …","Returns <code>true</code> if the map contains no elements.","An iterator visiting all key-value pairs in arbitrary …","An iterator visiting all key-value pairs in arbitrary …","Gets a reference to the key in the entry.","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Returns a reference to this entry’s key.","Gets a reference to the key in the entry.","Gets a reference to the key that would be used when …","Gets a mutable reference to the key in the entry.","An iterator visiting all keys in arbitrary order. The …","Returns the number of elements in the map.","","","","","","","","","","","","","","","","","","","","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the default …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting the result of …","Ensures a value is in the entry by inserting, if empty, …","Ensures a value is in the entry by inserting, if empty, …","Creates a raw immutable entry builder for the HashMap.","Creates a raw entry builder for the HashMap.","Returns a reference to the <code>RawTable</code> used underneath <code>HashMap</code>…","Returns a mutable reference to the <code>RawTable</code> used …","Removes a key from the map, returning the value at the key …","Takes the value out of the entry, and returns it.","Takes the value out of the entry, and returns it. Keeps …","Takes the value out of the entry, and returns it. Keeps …","Removes a key from the map, returning the stored key and …","Take the ownership of the key and value from the map.","Take the ownership of the key and value from the map. …","Take the ownership of the key and value from the map. …","Replaces the entry, returning the old key and value. The …","Replaces the entry, returning the old key and value. The …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Provides shared access to the key and owned access to the …","Replaces the key in the hash map with the key used to …","Replaces the key in the hash map with the key used to …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate. …","Shrinks the capacity of the map with a lower limit. It …","Shrinks the capacity of the map as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to insert a key-value pair into the map, and returns …","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","","","","","","","","","","","","","The value which was not inserted, because the entry was …","An iterator visiting all values in arbitrary order. The …","An iterator visiting all values mutably in arbitrary order.","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> with the specified capacity, …","Creates an empty <code>HashMap</code> which will use the given hash …","Creates an empty <code>HashMap</code> which will use the given hash …","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>HashSet</code>.","A view into a single entry in a set, which may either be …","A draining iterator over entries of a <code>HashSet</code> which don’…","A hash set implemented as a <code>HashMap</code> where the value is <code>()</code>.","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>HashSet</code>.","An iterator over the items of a <code>HashSet</code>.","An occupied entry.","A view into an occupied entry in a <code>HashSet</code>. It is part of …","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>HashSet</code>…","A vacant entry.","A view into a vacant entry in a <code>HashSet</code>. It is part of the …","Returns a reference to the underlying allocator.","Returns the intersection of <code>self</code> and <code>rhs</code> as a new …","Returns the union of <code>self</code> and <code>rhs</code> as a new <code>HashSet&lt;T, S&gt;</code>.","Returns the symmetric difference of <code>self</code> and <code>rhs</code> as a new …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the set can hold without …","Clears the set, removing all values.","","","","","","","","","","","","","","Returns <code>true</code> if the set contains a value.","Creates an empty <code>HashSet&lt;T, S&gt;</code> with the <code>Default</code> value for …","Visits the values representing the difference, i.e., the …","Clears the set, returning all elements in an iterator.","Gets the given value’s corresponding entry in the set …","","","","","Drains elements which are true under the given predicate, …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a reference to the value in the set, if any, that …","Returns a reference to this entry’s value.","Gets a reference to the value in the entry.","Gets a reference to the value that would be used when …","Inserts the given <code>value</code> into the set if it is not present, …","Inserts an owned copy of the given <code>value</code> into the set if …","Inserts a value computed from <code>f</code> into the set if the given …","Returns a reference to the set’s <code>BuildHasher</code>.","Adds a value to the set.","Sets the value of the entry, and returns an OccupiedEntry.","Sets the value of the entry with the VacantEntry’s value.","Insert a value the set without checking if the value …","Visits the values representing the intersection, i.e., the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates a consuming iterator, that is, one that moves each …","","","","","","","","","Take ownership of the value.","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>. …","Returns <code>true</code> if the set contains no elements.","Returns <code>true</code> if the set is a subset of another, i.e., <code>other</code>…","Returns <code>true</code> if the set is a superset of another, i.e., …","An iterator visiting all elements in arbitrary order. The …","Returns the number of elements in the set.","","","","","","","","","","","","Ensures a value is in the entry by inserting if it was …","Returns a reference to the <code>RawTable</code> used underneath <code>HashSet</code>…","Returns a mutable reference to the <code>RawTable</code> used …","Removes a value from the set. Returns whether the value was","Takes the value out of the entry, and returns it. Keeps …","Adds a value to the set, replacing the existing value, if …","Replaces the entry, returning the old value. The new value …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the set with a lower limit. It …","Shrinks the capacity of the set as much as possible. It …","","","","","","","","","Returns the difference of <code>self</code> and <code>rhs</code> as a new …","Visits the values representing the symmetric difference, …","Removes and returns the value in the set, if any, that is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","","","Visits the values representing the union, i.e., all the …","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates an empty <code>HashSet</code> with the specified capacity, using","Creates a new empty hash set which will use the given …","Creates a new empty hash set which will use the given …","Type representing the absence of an entry, as returned by …","A draining iterator over the items of a <code>HashTable</code>.","A view into a single entry in a table, which may either be …","A draining iterator over entries of a <code>HashTable</code> which don…","Low-level hash table with explicit hashing.","An owning iterator over the entries of a <code>HashTable</code> in …","An iterator over the entries of a <code>HashTable</code> in arbitrary …","A mutable iterator over the entries of a <code>HashTable</code> in …","An occupied entry.","A view into an occupied entry in a <code>HashTable</code>. It is part …","A vacant entry.","A view into a vacant entry in a <code>HashTable</code>. It is part of …","Returns a reference to the underlying allocator.","Provides in-place mutable access to an occupied entry …","","","","","","","","","","","","","","","","","","","","","Returns the number of elements the table can hold without …","Clears the table, removing all values.","","","","Clears the set, returning all elements in an iterator.","Returns an <code>Entry</code> for an entry in the table with the given …","Drains elements which are true under the given predicate, …","Returns a reference to an entry in the table with the …","Returns an <code>OccupiedEntry</code> for an entry in the table with …","Returns a mutable reference to an entry in the table with …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the value in the entry.","Attempts to get mutable references to <code>N</code> values in the map …","Attempts to get mutable references to <code>N</code> values in the map …","Gets a mutable reference to the value in the entry.","Sets the value of the entry, replacing any existing value …","Inserts a new element into the table with the hash that …","Inserts an element into the <code>HashTable</code> with the given hash …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Converts the OccupiedEntry into a mutable reference to the …","Converts the OccupiedEntry into a mutable reference to the …","Converts the VacantEntry into a mutable reference to the …","Converts the AbsentEntry into a mutable reference to the …","Returns <code>true</code> if the set contains no elements.","An iterator visiting all elements in arbitrary order. The …","An iterator visiting all elements in arbitrary order, with …","Returns the number of elements in the table.","","","","","Creates an empty <code>HashTable</code>.","Creates an empty <code>HashTable</code> using the given allocator.","","","","","","Ensures a value is in the entry by inserting if it was …","Ensures a value is in the entry by inserting the result of …","Takes the value out of the entry, and returns it along …","Reserves capacity for at least <code>additional</code> more elements to …","Retains only the elements specified by the predicate.","Shrinks the capacity of the table with a lower limit. It …","Shrinks the capacity of the table as much as possible. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to reserve capacity for at least <code>additional</code> more …","","","","","","","","","","","Creates an empty <code>HashTable</code> with the specified capacity.","Creates an empty <code>HashTable</code> with the specified capacity …","A reference to a hash table bucket containing a <code>T</code>.","A reference to an empty bucket into which an can be …","Iterator which consumes elements without freeing the table …","Iterator which consumes a table and returns elements.","Iterator which returns a raw pointer to every full bucket …","Iterator over occupied buckets that could match a given …","A raw hash table with an unsafe API.","Return the information about memory allocated by the table.","Returns a reference to the underlying allocator.","Returns a unique mutable reference to the <code>value</code>.","Acquires the underlying raw pointer <code>*mut T</code> to <code>data</code>.","Returns a shared immutable reference to the <code>value</code>.","","","","","","","","","","","","","","","Returns a pointer to an element in the table.","Returns the index of a bucket from a <code>Bucket</code>.","Returns the number of buckets in the table.","Returns the number of elements the map can hold without …","Removes all elements from the table without freeing the …","Marks all table buckets as empty without dropping their …","","","","","Variant of <code>clone_from</code> to use when a hasher is available.","","","","Copies <code>size_of&lt;T&gt;</code> bytes from <code>other</code> to <code>self</code>. The source and …","Returns pointer to one past last <code>data</code> element in the the …","Returns pointer to start of data table.","","Returns an iterator which removes all elements from the …","Returns an iterator which removes all elements from the …","","","","Erases an element from the table, dropping it in place.","Finds and erases an element from the table, dropping it in …","Searches for an element in the table.","Searches for an element in the table. If the element is …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to an element in the table.","Attempts to get mutable references to <code>N</code> entries in the …","","Gets a mutable reference to an element in the table.","Inserts a new element into the table, and returns its raw …","Inserts a new element into the table, and returns a …","Inserts a new element into the table in the given slot, …","Inserts a new element into the table, without growing the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns an iterator which consumes all elements from the …","Checks whether the bucket at <code>index</code> is full.","Returns <code>true</code> if the table contains no elements.","Returns an iterator over every element in the table. It is …","","","Returns an iterator over occupied buckets that could match …","Returns the number of elements in the table.","Creates a new empty hash table without allocating any …","Creates a new empty hash table without allocating any …","","","","","Refresh the iterator so that it reflects an insertion into …","Refresh the iterator so that it reflects a removal from …","Removes an element from the table, returning it.","Finds and removes an element from the table, returning it.","Temporary removes a bucket, applying the given function to …","Ensures that at least <code>additional</code> items can be inserted …","Shrinks the table to fit <code>max(self.len(), min_size)</code> …","","","","","","","","","","","","","","Attempts to insert a new element without growing the table …","","","","","","","","Tries to ensure that at least <code>additional</code> items can be …","Attempts to allocate a new hash table with at least enough …","Attempts to allocate a new hash table using the given …","","","","","","","","Allocates a new hash table with at least enough capacity …","Allocates a new hash table using the given allocator, with …"],"i":[1,1,0,0,0,0,0,1,1,1,1,1,21,1,1,1,0,0,0,1,0,1,1,1,1,82,0,0,0,0,0,0,0,0,0,0,0,0,8,10,12,0,0,0,0,0,0,0,0,8,10,12,0,0,0,0,7,8,10,12,8,10,12,83,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,83,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,7,7,15,16,17,7,7,15,16,17,7,7,7,7,44,7,7,7,7,7,7,7,7,15,30,31,32,33,16,17,23,34,35,8,36,37,38,10,39,40,12,42,43,44,44,83,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,35,38,7,35,38,35,38,7,36,39,42,7,36,7,36,7,7,7,7,7,36,39,42,7,7,7,8,36,37,10,39,40,12,42,43,37,36,7,37,83,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,7,7,15,30,31,32,33,16,17,23,28,34,36,40,43,36,7,36,39,42,7,7,7,7,36,10,39,40,12,42,43,36,7,7,15,30,31,32,33,16,17,23,34,15,30,31,32,33,16,17,23,28,34,10,12,8,10,12,8,10,12,10,12,7,7,7,7,7,36,39,42,7,36,39,42,39,42,36,39,42,39,42,7,7,7,7,15,30,31,32,33,16,17,23,28,34,7,15,16,17,44,83,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,83,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,7,83,7,15,30,31,32,33,16,17,23,28,34,35,8,36,37,38,10,39,40,12,42,43,44,44,7,7,7,7,7,7,0,0,0,0,0,0,0,0,59,0,0,0,59,0,52,52,52,52,52,53,61,58,60,54,55,56,57,59,62,63,52,53,61,58,60,54,55,56,57,59,62,63,52,52,52,53,54,55,56,57,52,52,53,54,55,56,57,52,52,52,52,52,52,52,52,52,52,52,53,61,58,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,59,62,63,52,52,52,52,52,59,63,52,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,63,52,52,52,52,52,52,53,61,58,53,61,58,60,54,55,56,57,59,52,52,52,62,52,62,52,52,52,52,53,61,58,60,54,55,56,57,52,52,52,52,53,54,55,56,57,52,53,61,58,60,54,55,56,57,59,62,63,52,53,61,58,60,54,55,56,57,59,62,63,52,52,53,61,58,60,54,55,56,57,59,62,63,52,52,52,52,52,0,0,0,0,0,0,0,0,66,0,66,0,65,66,65,66,69,71,70,73,74,72,67,68,65,66,69,71,70,73,74,72,67,68,65,65,65,65,65,65,65,65,65,65,65,65,66,69,71,70,67,65,66,69,71,70,73,74,72,67,68,69,65,65,69,66,71,65,65,66,69,71,70,73,74,72,67,68,65,65,65,73,74,72,67,68,69,69,71,70,65,65,65,65,73,74,72,67,65,65,73,74,72,67,68,66,66,69,65,65,65,65,73,74,72,67,68,65,65,66,69,71,70,73,74,72,67,68,65,66,69,71,70,73,74,72,67,68,65,65,66,69,71,70,73,74,72,67,68,65,65,0,0,0,0,0,0,0,50,50,75,75,75,80,75,50,76,79,78,81,80,75,50,76,79,78,81,50,50,50,50,50,50,75,50,76,50,50,75,50,76,75,50,50,50,50,50,50,79,78,50,50,50,50,80,75,50,76,79,78,81,50,50,50,50,50,50,50,50,80,75,50,76,79,78,81,50,76,79,78,81,50,50,50,50,79,78,50,50,50,50,76,79,78,81,76,76,50,50,50,50,50,76,79,78,75,50,76,80,75,50,76,79,78,81,50,80,75,50,76,79,78,81,50,50,50,80,75,50,76,79,78,81,50,50],"f":[0,0,0,0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[],2],[[1,3],4],[[]],0,0,0,[[]],0,[[]],[[],5],[[],5],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[8,[0]],9],[[8,[0]]]],[[[10,[0]],9],[[10,[0]]]],[[[12,[11,0]],9],[[12,[11,0]]]],[[[8,[0]],9],[[8,[0]]]],[[[10,[0]],9],[[10,[0]]]],[[[12,[11,0]],9],[[12,[11,0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[0]]],13],[[[7,[0]]]],[[[7,[14,14,14,[0,[0,14]]]]],[[7,[14,14,14,[0,[0,14]]]]]],[15,15],[16,16],[17,17],[[[7,[14,14,14,[0,[0,14]]]],[7,[14,14,14,[0,[0,14]]]]]],[[]],[[]],[[]],[[]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],2],[[],[[7,[22,[0,[22,0]]]]]],[[[7,[0]]],[[23,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]],[[10,[[0,[18,19]],20,0]]]],0,[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],[[12,[[0,[18,19]],[0,[19,[21,[[0,[18,19]]]],11]],20,0]]]],[[[7,[[0,[18,19]],24,20,0]],[7,[[0,[18,19]],24,20,0]]],2],[[],2],[[[7,[[0,[18,19]],20,0]],25]],[[[7,[[0,[18,19,26]],26,20,0]],25]],[[[7,[[0,[18,19,26]],26,20,0]],25]],[[[7,[0]],27],[[28,[27,0]]]],[[[7,[29,29,0]],3],4],[[[15,[29,29]],3],4],[[[30,[29,29]],3],4],[[[31,[29,29,0]],3],4],[[[32,[29,29,0]],3],4],[[[33,[29,0]],3],4],[[[16,[29]],3],4],[[[17,[29]],3],4],[[[23,[29,29,0]],3],4],[[[34,[29]],3],4],[[[35,[0]],3],4],[[[8,[29,29,0]],3],4],[[[36,[29,29,0]],3],4],[[[37,[0]],3],4],[[[38,[0]],3],4],[[[10,[29,29,0]],3],4],[[[39,[29,29,0]],3],4],[[[40,[29,0]],3],4],[[[12,[[41,[[0,[11,29]]]],[0,[11,29]],29,0]],3],4],[[[42,[[41,[[0,[11,29]]]],[0,[11,29]],29,0]],3],4],[[[43,[[41,[[0,[11,29]]]],[0,[11,29]],0]],3],4],[[[44,[29,29,0]],3],4],[[[44,[29,29,0]],3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[35,[0]],45,27],[[8,[0]]]],[[[38,[0]],45,27],46],[25,[[7,[[0,[18,19]],[0,[20,22]],[0,[22,0]]]]]],[[[35,[20,0]],[0,[19,21,11]]],[[8,[20,0]]]],[[[38,[20,0]],[0,[19,21,11]]],46],[[[35,[0]],45,[0,[21,11]]],[[8,[0]]]],[[[38,[0]],45,[0,[21,11]]],46],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[47,[[0,[19,[21,[[0,[18,19]]]],11]]]]],[[46,[47]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]]],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]],46],[[[8,[19,20,0]],19],[[36,[19,20,0]]]],[[[36,[0]]]],[[[37,[19,20,0]],19]],[[[10,[19,20,0]]],[[39,[19,20,0]]]],[[[39,[0]]]],[[[40,[19,20,0]]]],[[[12,[[0,[19,[48,[11]]]],11,20,0]]],[[42,[[0,[19,[48,[11]]]],11,20,0]]]],[[[42,[11,0]]]],[[[43,[[0,[19,[48,[11]]]],11,20,0]]]],[[[37,[19,20,0]],45,19]],[[[36,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]]],[[[37,[0]],45,49]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[0]]],[[31,[0]]]],[[[7,[0]]],30],[[[7,[0]]],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[0]]]],[[[40,[0]]]],[[[43,[[48,[11]],11,0]]],[[48,[11]]]],[[[36,[0]]]],[[[7,[0]]],[[32,[0]]]],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[0]]],[[33,[0]]]],[[[7,[0]]],2],[[[7,[0]]],15],[[[7,[0]]],30],[[[36,[0]]]],[[[10,[0]]]],[[[39,[0]]]],[[[40,[0]]]],[[[12,[[41,[11]],11,0]]],11],[[[42,[11,0]]]],[[[43,[[41,[11]],11,0]]],11],[[[36,[0]]]],[[[7,[0]]],16],[[[7,[0]]],13],[15,13],[30,13],[[[31,[0]]],13],[[[32,[0]]],13],[[[33,[0]]],13],[16,13],[17,13],[[[23,[0]]],13],[34,13],[15,46],[30,46],[[[31,[0]]],46],[[[32,[0]]],46],[[[33,[0]]],46],[16,46],[17,46],[[[23,[0]]],46],[[[28,[27,0]]],46],[34,46],[[[10,[19,22,20,0]]],22],[[[12,[[0,[19,[48,[11]]]],11,22,20,0]]],22],[[[8,[19,20,0]],19]],[[[10,[19,20,0]]]],[[[12,[[0,[19,[48,[11]]]],11,20,0]]]],[[[8,[19,20,0]],9]],[[[10,[19,20,0]],9]],[[[12,[[0,[19,[48,[11]]]],11,20,0]],9]],[[[10,[19,20,0]],9]],[[[12,[[0,[19,[41,[11]],[48,[11]]]],11,20,0]],9]],[[[7,[0]]],[[38,[0]]]],[[[7,[0]]],[[35,[0]]]],[[[7,[0]]],[[50,[0]]]],[[[7,[0]]],[[50,[0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[7,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],46],[[[36,[0]]]],[[[39,[0]]]],[[[42,[11,0]]]],[[[39,[0]]]],[[[42,[[48,[11]],11,0]]]],[[[36,[0]],9],[[8,[0]]]],[[[39,[0]],9],[[10,[0]]]],[[[42,[11,0]],9],[[12,[11,0]]]],[[[39,[0]]]],[[[42,[[48,[11]],11,0]]],[[48,[11]]]],[[[7,[[0,[18,19]],20,0]],13]],[[[7,[0]],27]],[[[7,[[0,[18,19]],20,0]],13]],[[[7,[[0,[18,19]],20,0]]]],[15],[30],[[[31,[0]]]],[[[32,[0]]]],[[[33,[0]]]],[16],[17],[[[23,[0]]]],[[[28,[27,0]]]],[34],[[]],[[]],[[]],[[]],[[],51],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[7,[[0,[18,19]],20,0]],[0,[18,19]]],[[5,[[44,[[0,[18,19]],20,0]]]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[7,[[0,[18,19]],20,0]],13],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,[[[7,[0]]],17],[[[7,[0]]],34],[13,7],0,[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[52,[[0,[18,19,14]],[0,[20,22]],0]],[52,[[0,[18,19,14]],[0,[20,22]],0]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[[52,[[0,[18,19,14]],[0,[20,22]],0]],[52,[[0,[18,19,14]],[0,[20,22]],0]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[[52,[[0,[18,19,14]],[0,[20,22]]]],[52,[[0,[18,19,14]],[0,[20,22]]]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[0]]],13],[[[52,[0]]]],[[[52,[14,14,[0,[0,14]]]]],[[52,[14,14,[0,[0,14]]]]]],[53,53],[[[54,[0]]],[[54,[0]]]],[[[55,[0]]],[[55,[0]]]],[[[56,[0]]],[[56,[0]]]],[[[57,[0]]],[[57,[0]]]],[[[52,[14,14,[0,[0,14]]]],[52,[14,14,[0,[0,14]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],2],[[],[[52,[22,[0,[22,0]]]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[55,[[0,[18,19]],20,0]]]],[[[52,[0]]],[[58,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[59,[[0,[18,19]],20,0]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[],2],[[[52,[[0,[18,19]],20,0]],25]],[[[52,[[0,[18,19,26]],20,0]],25]],[[[52,[0]],27],[[60,[27,0]]]],[[[52,[29,0]],3],4],[[[53,[29]],3],4],[[[61,[29,0]],3],4],[[[58,[29,0]],3],4],[[[54,[[0,[29,18,19]],20,0]],3],4],[[[55,[[0,[29,18,19]],20,0]],3],4],[[[56,[[0,[29,18,19]],20,0]],3],4],[[[57,[[0,[29,18,19]],20,0]],3],4],[[[59,[29,0]],3],4],[[[62,[29,0]],3],4],[[[63,[29,0]],3],4],[[[7,[0]]],[[52,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,[[52,[[0,[18,19]],[0,[20,22]],[0,[22,0]]]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],[[46,[[0,[18,19]]]]]],[[[59,[0]]]],[[[62,[0]]]],[[[63,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],64,11]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]],9],[[0,[18,19]]]],[[[52,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],2],[[[59,[19,20,0]]],[[62,[19,20,0]]]],[[[63,[19,20,0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[0,[18,19]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[54,[[0,[18,19]],20,0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[0]]],53],[[[52,[0]]],[[61,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[63,[0]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[[52,[0]]],2],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],2],[[[52,[0]]],53],[[[52,[0]]],13],[53,13],[[[61,[0]]],13],[[[58,[0]]],13],[53,46],[[[61,[0]]],46],[[[58,[0]]],46],[[[60,[27,0]]],46],[[[54,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[55,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[56,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[57,[[0,[18,19]],20,0]]],[[46,[[0,[18,19]]]]]],[[[59,[19,20,0]]]],[[[52,[0]]],[[50,[0]]]],[[[52,[0]]],[[50,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],2],[[[62,[0]]]],[[[52,[[0,[18,19]],20,0]],[0,[18,19]]],[[46,[[0,[18,19]]]]]],[[[62,[0]]]],[[[52,[[0,[18,19]],20,0]],13]],[[[52,[0]],27]],[[[52,[[0,[18,19]],20,0]],13]],[[[52,[[0,[18,19]],20,0]]]],[53],[[[61,[0]]]],[[[58,[0]]]],[[[60,[27,0]]]],[[[54,[[0,[18,19]],20,0]]]],[[[55,[[0,[18,19]],20,0]]]],[[[56,[[0,[18,19]],20,0]]]],[[[57,[[0,[18,19]],20,0]]]],[[[52,[[0,[18,19,14]],[0,[20,22]]]],[52,[[0,[18,19,14]],[0,[20,22]]]]],[[52,[[0,[18,19,14]],[0,[20,22]]]]]],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[56,[[0,[18,19]],20,0]]]],[[[52,[[0,[18,19]],20,0]],[0,[19,[21,[[0,[18,19]]]],11]]],[[46,[[0,[18,19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[52,[[0,[18,19]],20,0]],13],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[52,[[0,[18,19]],20,0]],[52,[[0,[18,19]],20,0]]],[[57,[[0,[18,19]],20,0]]]],[13,[[52,[0]]]],0,[[],[[52,[0]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[66,[0]],9],[[66,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[65,[0]]],13],[[[65,[0]]]],[[[65,[14,[0,[0,14]]]]],[[65,[14,[0,[0,14]]]]]],[[]],[[],[[65,[[0,[0,22]]]]]],[[[65,[0]]],[[67,[0]]]],[[[65,[0]],45,27,49],[[66,[0]]]],[[[65,[0]],27],[[68,[27,0]]]],[[[65,[0]],45,27],46],[[[65,[0]],45,27],[[5,[[69,[0]],[70,[0]]]]]],[[[65,[0]],45,27],46],[[[65,[29,0]],3],4],[[[66,[29,0]],3],4],[[[69,[29,0]],3],4],[[[71,[29,0]],3],4],[[[70,[29,0]],3],4],[[[67,[29,0]],3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[69,[0]]]],[[[65,[0]],[47,[45]],27],[[46,[47]]]],[[[65,[0]],[47,[45]],27],[[46,[47]]]],[[[69,[0]]]],[[[66,[0]]],[[69,[0]]]],[[[71,[0]]],[[69,[0]]]],[[[65,[0]],45,49],[[69,[0]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[65,[0]]],[[72,[0]]]],[[[65,[0]]],73],[[[65,[0]]],74],[[]],[[]],[[]],[[]],[[]],[[[69,[0]]]],[[[69,[0]]],[[65,[0]]]],[[[71,[0]]],[[65,[0]]]],[[[70,[0]]],[[65,[0]]]],[[[65,[0]]],2],[[[65,[0]]],73],[[[65,[0]]],74],[[[65,[0]]],13],[73,13],[74,13],[[[72,[0]]],13],[[[67,[0]]],13],[[],[[65,[0]]]],0,[73,46],[74,46],[[[72,[0]]],46],[[[67,[0]]],46],[[[68,[27,0]]],46],[[[66,[0]]],[[69,[0]]]],[[[66,[0]],9],[[69,[0]]]],[[[69,[0]]]],[[[65,[0]],13,49]],[[[65,[0]],27]],[[[65,[0]],13,49]],[[[65,[0]],49]],[73],[74],[[[72,[0]]]],[[[67,[0]]]],[[[68,[27,0]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[65,[0]],13,49],[[5,[1]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[13,[[65,[0]]]],0,0,0,0,0,0,0,0,[[[50,[0]]]],0,[75],[75],[75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[0]],13],75],[[[50,[0]],75],13],[[[50,[0]]],13],[[[50,[0]]],13],[[[50,[0]]]],[[[50,[0]]]],[75,75],[[[50,[14,[0,[0,14]]]]],[[50,[14,[0,[0,14]]]]]],[76,76],[[[50,[14,[0,[0,14]]]],[50,[14,[0,[0,14]]]]]],[[[50,[14,[0,[0,14]]]],[50,[14,[0,[0,14]]]],49]],[[]],[[]],[[]],[[75,75]],[[[50,[0]]],77],[[[50,[0]]],77],[[],[[50,[[0,[0,22]]]]]],[[[50,[0]]],[[78,[0]]]],[[[50,[0]],76],[[78,[0]]]],[[[50,[0]]]],[[[79,[0]]]],[[[78,[0]]]],[[[50,[0]],75]],[[[50,[0]],45,27],2],[[[50,[0]],45,27],[[46,[75]]]],[[[50,[0]],45,27,49],[[5,[75,80]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[0]],45,27],46],[[[50,[0]],[47,[45]],27],[[46,[47]]]],[[[50,[0]],[47,[45]],27],[[46,[47]]]],[[[50,[0]],45,27],46],[[[50,[0]],45,49],75],[[[50,[0]],45,49]],[[[50,[0]],45,80],75],[[[50,[0]],45],75],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[50,[0]]],[[79,[0]]]],[[]],[[]],[[]],[[]],[[[50,[0]],76],[[79,[0]]]],[[[50,[0]],13],2],[[[50,[0]]],2],[[[50,[0]]],76],[[[79,[0]]],76],[[[78,[0]]],76],[[[50,[0]],45],81],[[[50,[0]]],13],[[],[[50,[0]]]],0,[76,[[46,[75]]]],[[[79,[0]]],46],[[[78,[0]]],46],[81,[[46,[75]]]],[[76,75]],[[76,75]],[[[50,[0]],75]],[[[50,[0]],45,27],46],[[[50,[0]],75,9],2],[[[50,[0]],13,49]],[[[50,[0]],13,49]],[76],[[[79,[0]]]],[[[78,[0]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[50,[0]],45],[[5,[75]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[50,[0]],13,49],[[5,[1]]]],[13,[[5,[[50,[0]],1]]]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[13,[[50,[0]]]],0],"c":[],"p":[[4,"TryReserveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"TypeId"],[3,"HashMap"],[4,"RawEntryMut"],[8,"FnOnce"],[4,"Entry"],[8,"Sized"],[4,"EntryRef"],[15,"usize"],[8,"Clone"],[3,"Iter"],[3,"Keys"],[3,"Values"],[8,"Eq"],[8,"Hash"],[8,"BuildHasher"],[8,"Equivalent"],[8,"Default"],[3,"Drain"],[8,"PartialEq"],[8,"IntoIterator"],[8,"Copy"],[8,"FnMut"],[3,"ExtractIf"],[8,"Debug"],[3,"IterMut"],[3,"IntoIter"],[3,"IntoKeys"],[3,"IntoValues"],[3,"ValuesMut"],[3,"RawEntryBuilderMut"],[3,"RawOccupiedEntryMut"],[3,"RawVacantEntryMut"],[3,"RawEntryBuilder"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"Borrow"],[3,"OccupiedEntryRef"],[3,"VacantEntryRef"],[3,"OccupiedError"],[15,"u64"],[4,"Option"],[15,"array"],[8,"From"],[8,"Fn"],[3,"RawTable"],[3,"String"],[3,"HashSet"],[3,"Iter"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"Drain"],[4,"Entry"],[3,"ExtractIf"],[3,"IntoIter"],[3,"OccupiedEntry"],[3,"VacantEntry"],[8,"ToOwned"],[3,"HashTable"],[4,"Entry"],[3,"Drain"],[3,"ExtractIf"],[3,"OccupiedEntry"],[3,"AbsentEntry"],[3,"VacantEntry"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Bucket"],[3,"RawIter"],[3,"NonNull"],[3,"RawDrain"],[3,"RawIntoIter"],[3,"InsertSlot"],[3,"RawIterHash"],[13,"AllocError"],[4,"DefaultHashBuilder"]]},\
"indexmap":{"doc":"<code>IndexMap</code> is a hash table where the iteration order of the …","t":"ICCDLLLLLKLLLLLLOOLAALLLLLDEDDDDDDQDINDDNDQDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Equivalent","IndexMap","IndexSet","TryReserveError","borrow","borrow_mut","clone","clone_into","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","indexmap","indexset","into","map","set","to_owned","to_string","try_from","try_into","type_id","Drain","Entry","IndexMap","IntoIter","IntoKeys","IntoValues","Iter","IterMut","Key","Keys","MutableKeys","Occupied","OccupiedEntry","Slice","Vacant","VacantEntry","Value","Values","ValuesMut","and_modify","as_mut_slice","as_mut_slice","as_slice","as_slice","as_slice","as_slice","as_slice","binary_search_by","binary_search_by","binary_search_by_key","binary_search_by_key","binary_search_keys","binary_search_keys","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","cmp","collect","collect","collect","collect","collect","collect","collect","collect","collect","compare","contains_key","count","count","count","count","count","count","count","count","count","default","default","default","default","default","default","default","default","default","default","default","drain","entry","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","first","first","first_mut","first_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","get","get","get_full","get_full_mut","get_full_mut2","get_full_mut2","get_index","get_index","get_index_mut","get_index_mut","get_index_mut2","get_index_mut2","get_index_of","get_key_value","get_mut","get_mut","get_range","get_range","get_range_mut","get_range_mut","hash","hasher","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","insert","insert","insert","insert_full","into","into","into","into","into","into","into","into","into","into","into","into","into","into_boxed_slice","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_key","into_keys","into_keys","into_mut","into_slice","into_values","into_values","is_empty","is_empty","iter","iter","iter_mut","iter_mut","key","key","key","keys","keys","last","last","last","last","last","last","last","last","last","last","last","last_mut","last_mut","len","len","len","len","len","len","len","len","len","len","len","move_index","new","new","new_mut","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth","nth","nth","nth","nth","nth","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","nth_back","or_default","or_insert","or_insert_with","or_insert_with_key","partial_cmp","partition_point","partition_point","pop","remove","remove","remove_entry","remove_entry","reserve","reserve_exact","retain","retain2","retain2","reverse","shift_remove","shift_remove","shift_remove_entry","shift_remove_entry","shift_remove_full","shift_remove_index","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort_by","sort_by_cached_key","sort_keys","sort_unstable_by","sort_unstable_keys","sorted_by","sorted_unstable_by","split_at","split_at_mut","split_first","split_first_mut","split_last","split_last_mut","split_off","swap_indices","swap_remove","swap_remove","swap_remove_entry","swap_remove_entry","swap_remove_full","swap_remove_index","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","values","values_mut","values_mut","with_capacity","with_capacity_and_hasher","with_hasher","Difference","Drain","IndexSet","Intersection","IntoIter","Iter","Slice","SymmetricDifference","Union","as_slice","as_slice","as_slice","as_slice","binary_search","binary_search","binary_search_by","binary_search_by","binary_search_by_key","binary_search_by_key","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect","collect","collect","compare","contains","count","count","count","default","default","default","default","difference","drain","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","first","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","from","from","from","from","from","from","from","from","from","from_iter","get","get_full","get_index","get_index","get_index_of","get_range","get_range","hash","hasher","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","index","insert","insert_full","intersection","into","into","into","into","into","into","into","into","into_boxed_slice","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_disjoint","is_empty","is_empty","is_subset","is_superset","iter","iter","last","last","last","last","last","len","len","len","len","len","move_index","new","new","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_back","nth","nth","nth","nth_back","nth_back","nth_back","partial_cmp","partition_point","partition_point","pop","remove","replace","replace_full","reserve","reserve_exact","retain","reverse","rfold","rfold","shift_remove","shift_remove_full","shift_remove_index","shift_take","shrink_to","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","sort","sort_by","sort_by_cached_key","sort_unstable","sort_unstable_by","sorted_by","sorted_unstable_by","split_at","split_first","split_last","split_off","sub","swap_indices","swap_remove","swap_remove_full","swap_remove_index","swap_take","symmetric_difference","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","with_capacity","with_capacity_and_hasher","with_hasher"],"q":[[0,"indexmap"],[26,"indexmap::map"],[458,"indexmap::set"]],"d":["Key equivalence trait.","","","The error type for <code>try_reserve</code> methods.","","","","","","Compare self to <code>key</code> and return <code>true</code> if they are equal.","","","","","","Returns the argument unchanged.","Create an <code>IndexMap</code> from a list of key-value pairs","Create an <code>IndexSet</code> from a list of values","Calls <code>U::from(self)</code>.","<code>IndexMap</code> is a hash table where the iteration order of the …","A hash set implemented using <code>IndexMap</code>","","","","","","A draining iterator over the entries of a <code>IndexMap</code>.","Entry for an existing key-value pair or a vacant location …","A hash table where the iteration order of the key-value …","An owning iterator over the entries of a <code>IndexMap</code>.","An owning iterator over the keys of a <code>IndexMap</code>.","An owning iterator over the values of a <code>IndexMap</code>.","An iterator over the entries of a <code>IndexMap</code>.","A mutable iterator over the entries of a <code>IndexMap</code>.","","An iterator over the keys of a <code>IndexMap</code>.","Opt-in mutable access to keys.","Existing slot with equivalent key.","A view into an occupied entry in a <code>IndexMap</code>. It is part of …","A dynamically-sized slice of key-value pairs in an <code>IndexMap</code>…","Vacant slot (no equivalent key in the map).","A view into a vacant entry in a <code>IndexMap</code>. It is part of …","","An iterator over the values of a <code>IndexMap</code>.","A mutable iterator over the values of a <code>IndexMap</code>.","Modifies the entry if it is occupied.","Returns a mutable slice of the remaining entries in the …","Returns a mutable slice of all the key-value pairs in the …","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of all the key-value pairs in the map.","Search over a sorted map with a comparator function.","Search over a sorted map with a comparator function.","Search over a sorted map with an extraction function.","Search over a sorted map with an extraction function.","Search over a sorted map for a key.","Search over a sorted map for a key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the number of elements the map can hold without …","Remove all key-value pairs in the map, while preserving …","","","","","","","","","","","","","","","","","","","","","Return <code>true</code> if an equivalent to <code>key</code> exists in the map.","","","","","","","","","","","","","","","","","","","","Return an empty <code>IndexMap</code>","Clears the <code>IndexMap</code> in the given index range, returning …","Get the given key’s corresponding entry in the map for …","","","","","","","","","Extend the map with all key-value pairs in the iterable.","Extend the map with all key-value pairs in the iterable.","Get the first key-value pair.","Get the first key-value pair","Get the first key-value pair, with mutable access to the …","Get the first key-value pair, with mutable access to the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples","Returns the argument unchanged.","Create an <code>IndexMap</code> from the sequence of key-value pairs in …","Gets a reference to the entry’s value in the map.","Return a reference to the value stored for <code>key</code>, if it is …","Return item index, key and value","","Return item index, mutable reference to key and value","","Get a key-value pair by index.","Get a key-value pair by index","Get a key-value pair by index, with mutable access to the …","Get a key-value pair by index","Return mutable reference to key and value at an index.","","Return item index, if it exists in the map","Return references to the key-value pair stored for <code>key</code>, if …","Gets a mutable reference to the entry’s value in the map.","","Returns a slice of key-value pairs in the given range of …","Returns a slice of key-value pairs in the given range of …","Returns a mutable slice of key-value pairs in the given …","Returns a mutable slice of key-value pairs in the given …","","Return a reference to the map’s <code>BuildHasher</code>.","Return the index of the key-value pair","Return the index where the key-value pair exists or will …","Return the index where the key-value pair will be inserted.","","","","","","","","","Returns a reference to the value corresponding to the …","","","","","","","","Returns a reference to the value at the supplied <code>index</code>.","","","","","","","","","","","Returns a mutable reference to the value at the supplied …","","","","","Returns a mutable reference to the value corresponding to …","","Sets the value of the entry to <code>value</code>, and returns the entry…","Inserts the entry’s key and the given value into the …","Insert a key-value pair in the map.","Insert a key-value pair in the map, and get their index.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts into a boxed slice of all the key-value pairs in …","","","","","","","","","","","","","","","Takes ownership of the key, leaving the entry vacant.","Return an owning iterator over the keys of the map slice.","Return an owning iterator over the keys of the map, in …","Converts into a mutable reference to the entry’s value …","Returns a mutable slice of the remaining entries in the …","Return an owning iterator over the values of the map slice.","Return an owning iterator over the values of the map, in …","Returns true if the map slice contains no elements.","Returns true if the map contains no elements.","Return an iterator over the key-value pairs of the map …","Return an iterator over the key-value pairs of the map, in …","Return an iterator over the key-value pairs of the map …","Return an iterator over the key-value pairs of the map, in …","Gets a reference to the entry’s key in the map.","Gets a reference to the entry’s key, either within the …","Gets a reference to the key that was used to find the …","Return an iterator over the keys of the map slice.","Return an iterator over the keys of the map, in their order","","","","","","","","","","Get the last key-value pair.","Get the last key-value pair","Get the last key-value pair, with mutable access to the …","Get the last key-value pair, with mutable access to the …","","","","","","","","","","Return the number of key-value pairs in the map slice.","Return the number of key-value pairs in the map.","Moves the position of a key-value pair from one index to …","Returns an empty slice.","Create a new map. (Does not allocate.)","Returns an empty mutable slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts a default-constructed value in the entry if it is …","Inserts the given default value in the entry if it is …","Inserts the result of the <code>call</code> function in the entry if it …","Inserts the result of the <code>call</code> function with a reference …","","Returns the index of the partition point of a sorted map …","Returns the index of the partition point of a sorted map …","Remove the last key-value pair","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Reserve capacity for <code>additional</code> more key-value pairs.","Reserve capacity for <code>additional</code> more key-value pairs, …","Scan through each key-value pair in the map and keep those …","Scan through each key-value pair in the map and keep those …","","Reverses the order of the map’s key-value pairs in place.","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair by index","Shrink the capacity of the map with a lower limit.","Shrink the capacity of the map as much as possible.","","","","","","","","","","Sort the map’s key-value pairs in place using the …","Sort the map’s key-value pairs in place using a sort-key …","Sort the map’s key-value pairs by the default ordering …","Sort the map’s key-value pairs in place using the …","Sort the map’s key-value pairs by the default ordering …","Sort the key-value pairs of the map and return a by-value …","Sort the key-value pairs of the map and return a by-value …","Divides one slice into two at an index.","Divides one mutable slice into two at an index.","Returns the first key-value pair and the rest of the slice,","Returns the first key-value pair and the rest of the slice,","Returns the last key-value pair and the rest of the slice, …","Returns the last key-value pair and the rest of the slice, …","Splits the collection into two at the given index.","Swaps the position of two key-value pairs in the map.","Remove the key, value pair stored in the map for this …","Remove the key-value pair equivalent to <code>key</code> and return its …","Remove and return the key, value pair stored in the map …","Remove and return the key-value pair equivalent to <code>key</code>.","Remove the key-value pair equivalent to <code>key</code> and return it …","Remove the key-value pair by index","","","","","Shortens the map, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","","","","","","","","","","","Try to reserve capacity for <code>additional</code> more key-value …","Try to reserve capacity for <code>additional</code> more key-value …","","","","","","","","","","","","","","","Return an iterator over the values of the map slice.","Return an iterator over the values of the map, in their …","Return an iterator over mutable references to the the …","Return an iterator over mutable references to the values …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with capacity for <code>n</code> key-value pairs. …","Create a new map with <code>hash_builder</code>.","A lazy iterator producing elements in the difference of …","A draining iterator over the items of a <code>IndexSet</code>.","A hash set where the iteration order of the values is …","A lazy iterator producing elements in the intersection of …","An owning iterator over the items of a <code>IndexSet</code>.","An iterator over the items of a <code>IndexSet</code>.","A dynamically-sized slice of values in an <code>IndexSet</code>.","A lazy iterator producing elements in the symmetric …","A lazy iterator producing elements in the union of <code>IndexSet</code>…","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of the remaining entries in the iterator.","Returns a slice of all the values in the set.","Search over a sorted set for a value.","Search over a sorted set for a value.","Search over a sorted set with a comparator function.","Search over a sorted set with a comparator function.","Search over a sorted set with an extraction function.","Search over a sorted set with an extraction function.","Returns the set intersection, cloned into a new set.","Returns the set union, cloned into a new set.","Returns the set symmetric-difference, cloned into a new …","","","","","","","","","","","","","","","","","","","Return the number of elements the set can hold without …","Remove all elements in the set, while preserving its …","","","","","","","","","","","","","","","","","","","Return <code>true</code> if an equivalent to <code>value</code> exists in the set.","","","","","","","Return an empty <code>IndexSet</code>","Return an iterator over the values that are in <code>self</code> but …","Clears the <code>IndexSet</code> in the given index range, returning …","","","","","","","","","","","Get the first value.","Get the first value","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples","","Return a reference to the value stored in the set, if it …","Return item index and value","Get a value by index.","Get a value by index","Return item index, if it exists in the set","Returns a slice of values in the given range of indices.","Returns a slice of values in the given range of indices.","","Return a reference to the set’s <code>BuildHasher</code>.","","","","","","","","","","","","","","","Returns a reference to the value at the supplied <code>index</code>.","","Insert the value into the set.","Insert the value into the set, and get its index.","Return an iterator over the values that are in both <code>self</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts into a boxed slice of all the values in the set.","","","","","","","","","","","Returns <code>true</code> if <code>self</code> has no elements in common with <code>other</code>.","Returns true if the set slice contains no elements.","Returns true if the set contains no elements.","Returns <code>true</code> if all elements of <code>self</code> are contained in <code>other</code>…","Returns <code>true</code> if all elements of <code>other</code> are contained in <code>self</code>…","Return an iterator over the values of the set slice.","Return an iterator over the values of the set, in their …","","","","Get the last value.","Get the last value","","","","Return the number of elements in the set slice.","Return the number of elements in the set.","Moves the position of a value from one index to another by …","Returns an empty slice.","Create a new set. (Does not allocate.)","","","","","","","","","","","","","","","","","","","","","","Returns the index of the partition point of a sorted set …","Returns the index of the partition point of a sorted set …","Remove the last value","Remove the value from the set, and return <code>true</code> if it was …","Adds a value to the set, replacing the existing value, if …","Adds a value to the set, replacing the existing value, if …","Reserve capacity for <code>additional</code> more values.","Reserve capacity for <code>additional</code> more values, without …","Scan through each value in the set and keep those where the","Reverses the order of the set’s values in place.","","","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set return it and the index it …","Remove the value by index","Removes and returns the value in the set, if any, that is …","Shrink the capacity of the set with a lower limit.","Shrink the capacity of the set as much as possible.","","","","","","","","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the set’s values in place using a key extraction …","Sort the set’s values by their default ordering.","Sort the set’s values in place using the comparison …","Sort the values of the set and return a by-value iterator …","Sort the values of the set and return a by-value iterator …","Divides one slice into two at an index.","Returns the first value and the rest of the slice, or <code>None</code> …","Returns the last value and the rest of the slice, or <code>None</code> …","Splits the collection into two at the given index.","Returns the set difference, cloned into a new set.","Swaps the position of two values in the set.","Remove the value from the set, and return <code>true</code> if it was …","Remove the value from the set return it and the index it …","Remove the value by index","Removes and returns the value in the set, if any, that is …","Return an iterator over the values that are in <code>self</code> or …","Removes and returns the value in the set, if any, that is …","","","","","","","Shortens the set, keeping the first <code>len</code> elements and …","","","","","","","","","","","","","","","","","Try to reserve capacity for <code>additional</code> more values.","Try to reserve capacity for <code>additional</code> more values, …","","","","","","","","","","Return an iterator over all values that are in <code>self</code> or …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with capacity for <code>n</code> elements. (Does not …","Create a new set with <code>hash_builder</code>."],"i":[0,0,0,0,1,1,1,1,1,30,1,1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,61,0,0,8,0,0,8,0,61,0,0,8,10,12,13,14,10,15,12,11,12,11,12,11,12,39,8,40,13,14,10,15,22,27,23,28,29,11,12,39,8,40,13,14,10,15,22,27,23,28,29,11,12,12,12,13,22,23,12,12,13,22,23,12,11,13,14,10,15,22,27,23,28,29,11,12,13,14,10,15,22,27,23,28,29,13,14,10,22,27,23,28,29,11,11,12,12,12,11,12,11,11,11,12,12,12,12,12,11,12,11,12,39,8,40,13,14,10,15,22,27,23,28,29,11,12,39,8,40,13,14,10,15,22,27,23,28,29,12,12,12,39,12,12,12,61,12,11,12,11,12,61,12,12,12,39,12,11,12,11,12,11,12,39,8,40,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,39,40,12,12,39,8,40,13,14,10,15,22,27,23,28,29,12,12,13,14,10,15,22,27,23,28,29,11,11,12,12,12,40,11,12,39,14,11,12,11,12,11,12,11,12,39,8,40,11,12,13,14,10,15,22,27,23,28,29,11,12,11,12,13,14,10,15,22,27,23,28,29,11,12,12,11,12,11,13,14,10,15,22,27,23,28,29,13,14,10,15,22,27,23,28,29,13,14,10,15,22,27,23,28,29,13,14,10,15,22,27,23,28,29,8,8,8,8,11,11,12,12,39,12,39,12,12,12,12,61,12,12,39,12,39,12,12,12,12,12,13,14,10,15,22,27,23,28,29,12,12,12,12,12,12,12,11,11,11,11,11,11,12,12,39,12,39,12,12,12,13,22,23,12,12,39,8,40,13,14,10,15,22,27,23,28,29,12,39,8,40,13,14,10,15,22,27,23,28,29,12,12,12,39,8,40,13,14,10,15,22,27,23,28,29,11,12,11,12,11,12,12,12,12,0,0,0,0,0,0,0,0,0,52,54,55,56,53,56,53,56,53,56,56,56,56,52,54,55,57,58,59,60,53,56,52,54,55,57,58,59,60,53,56,56,56,52,57,58,59,60,56,56,52,57,58,59,60,56,53,52,54,55,53,56,52,54,55,52,54,53,56,56,56,53,56,53,53,53,56,56,56,56,56,53,56,52,54,55,57,58,59,60,53,56,59,60,52,54,55,57,58,59,60,56,56,56,56,56,53,56,56,53,56,53,56,53,53,53,53,53,53,53,53,56,56,56,56,56,56,56,56,56,56,56,52,54,55,57,58,59,60,56,56,52,54,55,57,58,59,60,53,56,56,56,53,56,56,56,53,56,52,54,55,53,56,52,54,55,53,56,56,53,56,52,54,55,57,58,59,60,52,54,55,57,58,59,60,52,54,55,52,54,55,53,53,56,56,56,56,56,56,56,56,56,59,60,56,56,56,56,56,56,52,54,55,57,58,59,60,56,56,56,56,56,56,56,53,53,53,56,56,56,56,56,56,56,56,56,52,57,58,59,60,56,56,52,54,55,57,58,59,60,56,52,54,55,57,58,59,60,56,56,56,52,54,55,57,58,59,60,53,56,56,56,56,56],"f":[0,0,0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[],2],[[],2],[[],2],[[],2],[[1,3],4],[[1,3],4],[[]],0,0,[[]],0,0,[[]],[[],5],[[],6],[[],6],[[],7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[8,9],8],[10,11],[12,11],[13,11],[14,11],[10,11],[15,11],[12,11],[[11,16],[[6,[17,17]]]],[[[12,[[0,[18,19]],20]],16],[[6,[17,17]]]],[[11,21,16],[[6,[17,17]]]],[[[12,[[0,[18,19]],20]],21,16],[[6,[17,17]]]],[[[11,[21]],21],[[6,[17,17]]]],[[[12,[21,[0,[18,19]],20]],21,[0,[18,19]]],[[6,[17,17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,17],[12],[13,13],[22,22],[23,23],[[[12,[24,24,24]]],[[12,[24,24,24]]]],[[[12,[24,24,24]],[12,[24,24,24]]]],[[]],[[]],[[]],[[]],[[[11,[21,21]],[11,[21,21]]],25],[13,26],[14,26],[10,26],[15,26],[22,26],[27,26],[23,26],[28,26],[29,26],[[],25],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],2],[13,17],[14,17],[10,17],[15,17],[22,17],[27,17],[23,17],[28,17],[29,17],[[],13],[[],14],[[],10],[[],22],[[],27],[[],23],[[],28],[[],29],[[],11],[[],11],[[],[[12,[32]]]],[[12,[33,[17]]],15],[[[12,[[0,[18,19]],20]],[0,[18,19]]],[[8,[[0,[18,19]]]]]],[[[11,[34,34]],[11,[34,34]]],2],[[[12,[[0,[18,19]],34,20]],[12,[[0,[18,19]],20]]],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[12,[[0,[18,19,35]],35,20]],36]],[[[12,[[0,[18,19]],20]],36]],[11,37],[12,37],[11,37],[12,37],[[[39,[38,38]],3],4],[[[8,[38,38]],3],4],[[[40,[38]],3],4],[[[13,[38,38]],3],4],[[[14,[38,38]],3],4],[[[10,[38,38]],3],4],[[[15,[38,38]],3],4],[[[22,[38]],3],4],[[[27,[38]],3],4],[[[23,[38]],3],4],[[[28,[38]],3],4],[[[29,[38]],3],4],[[[11,[38,38]],3],4],[[[12,[38,38]],3],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,[[12,[[0,[18,19]],42]]]],[[]],[36,[[12,[[0,[18,19]],[0,[20,32]]]]]],[39],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[[0,[18,30,31]]],37],[[[12,[[0,[19,18]],20]],[0,[18,[30,[[0,[19,18]]]],31]]],37],[[11,17],37],[[12,17],37],[[11,17],37],[[12,17],37],[17,37],[[[12,[[0,[19,18]],20]],17],37],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],[[37,[17]]]],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[39],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[11,[33,[17]]],[[37,[11]]]],[[12,[33,[17]]],[[37,[11]]]],[[11,[33,[17]]],[[37,[11]]]],[[12,[33,[17]]],[[37,[11]]]],[[[11,[18,18]],43]],[12],[39,17],[8,17],[40,17],[[11,[44,[17]]],11],[[11,[45,[17]]],11],[[11,17]],[[11,[46,[17]]],11],[[11,47],11],[[11,[48,[17]]],11],[11,11],[[11,[49,[17]]],11],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]]],[[12,[45,[17]]]],[12],[[12,[48,[17]]]],[[12,47]],[[12,[46,[17]]]],[[12,[49,[17]]]],[[12,[44,[17]]]],[[12,17]],[[11,17]],[[11,[44,[17]]],11],[[11,[45,[17]]],11],[[11,47],11],[[11,[49,[17]]],11],[11,11],[[11,[46,[17]]],11],[[11,[48,[17]]],11],[[12,47]],[[12,[49,[17]]]],[[12,17]],[[12,[45,[17]]]],[[12,[48,[17]]]],[[12,[44,[17]]]],[12],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]]],[[12,[46,[17]]]],[39],[40],[[[12,[[0,[18,19]],20]],[0,[18,19]]],37],[[[12,[[0,[18,19]],20]],[0,[18,19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,[[50,[11]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[11],[11],[12],[12],[12],[40],[[[50,[11]]],27],[12,27],[39],[14,11],[[[50,[11]]],29],[12,29],[11,2],[12,2],[11,13],[12,13],[11,14],[12,14],[39],[8],[40],[11,22],[12,22],[13,37],[14,37],[10,37],[15,37],[22,37],[27,37],[23,37],[28,37],[29,37],[11,37],[12,37],[11,37],[12,37],[13,17],[14,17],[10,17],[15,17],[22,17],[27,17],[23,17],[28,17],[29,17],[11,17],[12,17],[[12,17,17]],[[],11],[[],12],[[],11],[13,37],[14,37],[10,37],[15,37],[22,37],[27,37],[23,37],[28,37],[29,37],[13,37],[14,37],[10,37],[15,37],[22,37],[27,37],[23,37],[28,37],[29,37],[[13,17],37],[[14,17],37],[[10,17],37],[[15,17],37],[[22,17],37],[[27,17],37],[[23,17],37],[[28,17],37],[[29,17],37],[[13,17],37],[[14,17],37],[[10,17],37],[[15,17],37],[[22,17],37],[[27,17],37],[[23,17],37],[[28,17],37],[[29,17],37],[[[8,[32]]],32],[8],[[8,9]],[[8,9]],[[[11,[51,51]],[11,[51,51]]],[[37,[25]]]],[[11,16],17],[[[12,[[0,[18,19]],20]],16],17],[[[12,[[0,[18,19]],20]]],37],[39],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[39],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[[12,[[0,[18,19]],20]],17]],[[[12,[[0,[18,19]],20]],17]],[[[12,[[0,[18,19]],20]],16]],[16],[[[12,[[0,[19,18]],20]],16]],[[[12,[[0,[18,19]],20]]]],[39],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[39],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[12,17],37],[[[12,[[0,[18,19]],20]],17]],[[[12,[[0,[18,19]],20]]]],[13],[14],[10],[15],[22],[27],[23],[28],[29],[[[12,[[0,[18,19]],20]],16]],[[[12,[[0,[18,19]],20]],16]],[[[12,[21,[0,[18,19]],20]]]],[[[12,[[0,[18,19]],20]],16]],[[[12,[21,[0,[18,19]],20]]]],[[[12,[[0,[18,19]],20]],16],[[10,[[0,[18,19]]]]]],[[[12,[[0,[18,19]],20]],16],[[10,[[0,[18,19]]]]]],[[11,17]],[[11,17]],[11,37],[11,37],[11,37],[11,37],[[[12,[24]],17],[[12,[24]]]],[[12,17,17]],[39],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[39],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[[12,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[12,17],37],[[]],[[]],[[]],[[]],[[12,17]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[12,[[0,[18,19]],20]],17],[[6,[1]]]],[[[12,[[0,[18,19]],20]],17],[[6,[1]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[11,23],[12,23],[11,28],[12,28],[17,12],[17,12],[[],12],0,0,0,0,0,0,0,0,0,[52,53],[54,53],[55,53],[56,53],[[[53,[21]],21],[[6,[17,17]]]],[[[56,[21,[0,[18,19]],20]],21,[0,[18,19]]],[[6,[17,17]]]],[[53,16],[[6,[17,17]]]],[[[56,[[0,[18,19]],20]],16],[[6,[17,17]]]],[[53,21,16],[[6,[17,17]]]],[[[56,[[0,[18,19]],20]],21,16],[[6,[17,17]]]],[[[56,[[0,[19,18,24]],[0,[20,32]]]],[56,[[0,[19,18,24]],20]]]],[[[56,[[0,[19,18,24]],[0,[20,32]]]],[56,[[0,[19,18,24]],20]]]],[[[56,[[0,[19,18,24]],[0,[20,32]]]],[56,[[0,[19,18,24]],20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,17],[56],[52,52],[57,57],[58,58],[59,59],[60,60],[[[56,[24,24]]],[[56,[24,24]]]],[[[56,[24,24]],[56,[24,24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[53,[21]],[53,[21]]],25],[52,26],[54,26],[55,26],[[],25],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],2],[52,17],[54,17],[55,17],[[],52],[[],54],[[],53],[[],[[56,[32]]]],[[[56,[[0,[18,19]],20]],[56,[[0,[18,19]],20]]],[[57,[[0,[18,19]],20]]]],[[56,[33,[17]]],55],[[[53,[34]],[53,[34]]],2],[[[56,[[0,[18,19]],20]],[56,[[0,[18,19]],20]]],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[56,[[0,[18,19]],20]],36]],[[[56,[[0,[18,19,35]],20]],36]],[53,37],[56,37],[[[52,[38]],3],4],[[[54,[38]],3],4],[[[55,[38]],3],4],[[[57,[[0,[38,19,18]],20]],3],4],[[[58,[[0,[38,19,18]],20]],3],4],[[[59,[[0,[38,19,18]],20,20]],3],4],[[[60,[[0,[38,19,18]],20]],3],4],[[[53,[38]],3],4],[[[56,[38]],3],4],[[[59,[[0,[19,18]],20,20]],16]],[[[60,[[0,[19,18]],20]],16]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[[0,[19,18]]]]],[[56,[[0,[19,18]],42]]]],[36,[[56,[[0,[18,19]],[0,[20,32]]]]]],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],[[37,[[0,[18,19]]]]]],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[53,17],37],[[56,17],37],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],[[37,[17]]]],[[53,[33,[17]]],[[37,[53]]]],[[56,[33,[17]]],[[37,[53]]]],[[[53,[18]],43]],[56],[[53,17]],[[53,[49,[17]]]],[[53,47]],[[53,[44,[17]]]],[[53,[45,[17]]]],[[53,[48,[17]]]],[[53,[46,[17]]]],[53],[[56,[46,[17]]]],[[56,[45,[17]]]],[[56,[49,[17]]]],[56],[[56,47]],[[56,[44,[17]]]],[[56,17]],[[56,[48,[17]]]],[[[56,[[0,[18,19]],20]],[0,[18,19]]],2],[[[56,[[0,[18,19]],20]],[0,[18,19]]]],[[[56,[[0,[18,19]],20]],[56,[[0,[18,19]],20]]],[[58,[[0,[18,19]],20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,[[50,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53],[56],[56],[[[56,[[0,[19,18]],20]],[56,[[0,[19,18]],20]]],2],[53,2],[56,2],[[[56,[[0,[19,18]],20]],[56,[[0,[19,18]],20]]],2],[[[56,[[0,[19,18]],20]],[56,[[0,[19,18]],20]]],2],[53,52],[56,52],[52,37],[54,37],[55,37],[53,37],[56,37],[52,17],[54,17],[55,17],[53,17],[56,17],[[56,17,17]],[[],53],[[],56],[52,37],[54,37],[55,37],[[[57,[[0,[19,18]],20]]],37],[[[58,[[0,[19,18]],20]]],37],[[[59,[[0,[19,18]],20,20]]],37],[[[60,[[0,[19,18]],20]]],37],[52,37],[54,37],[55,37],[[[57,[[0,[19,18]],20]]],37],[[[58,[[0,[19,18]],20]]],37],[[[59,[[0,[19,18]],20,20]]],37],[[[60,[[0,[19,18]],20]]],37],[[52,17],37],[[54,17],37],[[55,17],37],[[52,17],37],[[54,17],37],[[55,17],37],[[[53,[51]],[53,[51]]],[[37,[25]]]],[[53,16],17],[[[56,[[0,[18,19]],20]],16],17],[[[56,[[0,[18,19]],20]]],[[37,[[0,[18,19]]]]]],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],2],[[[56,[[0,[18,19]],20]],[0,[18,19]]],[[37,[[0,[18,19]]]]]],[[[56,[[0,[18,19]],20]],[0,[18,19]]]],[[[56,[[0,[18,19]],20]],17]],[[[56,[[0,[18,19]],20]],17]],[[[56,[[0,[18,19]],20]],16]],[[[56,[[0,[18,19]],20]]]],[[[59,[[0,[19,18]],20,20]],16]],[[[60,[[0,[19,18]],20]],16]],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],2],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[56,17],37],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],[[37,[[0,[18,19]]]]]],[[[56,[[0,[18,19]],20]],17]],[[[56,[[0,[18,19]],20]]]],[52],[54],[55],[[[57,[[0,[19,18]],20]]]],[[[58,[[0,[19,18]],20]]]],[[[59,[[0,[19,18]],20,20]]]],[[[60,[[0,[19,18]],20]]]],[[[56,[21,[0,[18,19]],20]]]],[[[56,[[0,[18,19]],20]],16]],[[[56,[[0,[18,19]],20]],16]],[[[56,[21,[0,[18,19]],20]]]],[[[56,[[0,[18,19]],20]],16]],[[[56,[[0,[18,19]],20]],16],[[54,[[0,[18,19]]]]]],[[[56,[[0,[18,19]],20]],16],[[54,[[0,[18,19]]]]]],[[53,17]],[53,37],[53,37],[[[56,[24]],17],[[56,[24]]]],[[[56,[[0,[19,18,24]],[0,[20,32]]]],[56,[[0,[19,18,24]],20]]]],[[56,17,17]],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],2],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],37],[[56,17],37],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],[[37,[[0,[18,19]]]]]],[[[56,[[0,[18,19]],20]],[56,[[0,[18,19]],20]]],[[59,[[0,[18,19]],20,20]]]],[[[56,[[0,[18,19]],20]],[0,[18,[30,[[0,[18,19]]]],31]]],[[37,[[0,[18,19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[56,17]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[[56,[[0,[18,19]],20]],17],[[6,[1]]]],[[[56,[[0,[18,19]],20]],17],[[6,[1]]]],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[[56,[[0,[18,19]],20]],[56,[[0,[18,19]],20]]],[[60,[[0,[18,19]],20]]]],[17,56],[17,56],[[],56]],"c":[],"p":[[3,"TryReserveError"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"String"],[4,"Result"],[3,"TypeId"],[4,"Entry"],[8,"FnOnce"],[3,"IntoIter"],[3,"Slice"],[3,"IndexMap"],[3,"Iter"],[3,"IterMut"],[3,"Drain"],[8,"FnMut"],[15,"usize"],[8,"Hash"],[8,"Eq"],[8,"BuildHasher"],[8,"Ord"],[3,"Keys"],[3,"Values"],[8,"Clone"],[4,"Ordering"],[8,"FromIterator"],[3,"IntoKeys"],[3,"ValuesMut"],[3,"IntoValues"],[8,"Equivalent"],[8,"Sized"],[8,"Default"],[8,"RangeBounds"],[8,"PartialEq"],[8,"Copy"],[8,"IntoIterator"],[4,"Option"],[8,"Debug"],[3,"OccupiedEntry"],[3,"VacantEntry"],[15,"array"],[3,"RandomState"],[8,"Hasher"],[3,"RangeTo"],[3,"RangeFrom"],[3,"Range"],[3,"RangeFull"],[3,"RangeToInclusive"],[3,"RangeInclusive"],[3,"Box"],[8,"PartialOrd"],[3,"Iter"],[3,"Slice"],[3,"IntoIter"],[3,"Drain"],[3,"IndexSet"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"],[8,"MutableKeys"]]},\
"lazy_static":{"doc":"A macro for declaring lazily evaluated statics.","t":"IFO","n":["LazyStatic","initialize","lazy_static"],"q":[[0,"lazy_static"]],"d":["Support trait for enabling a few common operation on lazy …","Takes a shared reference to a lazy static and initializes …",""],"i":[0,0,0],"f":[0,[1],0],"c":[],"p":[[8,"LazyStatic"]]},\
"libc":{"doc":"libc - Raw FFI bindings to platforms’ system libraries","t":"","n":["ABDAY_1","ABDAY_2","ABDAY_3","ABDAY_4","ABDAY_5","ABDAY_6","ABDAY_7","ABMON_1","ABMON_10","ABMON_11","ABMON_12","ABMON_2","ABMON_3","ABMON_4","ABMON_5","ABMON_6","ABMON_7","ABMON_8","ABMON_9","ABS_CNT","ABS_MAX","ACCOUNTING","ADDR_COMPAT_LAYOUT","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","ADDR_NO_RANDOMIZE","ADFS_SUPER_MAGIC","ADJ_ESTERROR","ADJ_FREQUENCY","ADJ_MAXERROR","ADJ_MICRO","ADJ_NANO","ADJ_OFFSET","ADJ_OFFSET_SINGLESHOT","ADJ_OFFSET_SS_READ","ADJ_SETOFFSET","ADJ_STATUS","ADJ_TAI","ADJ_TICK","ADJ_TIMECONST","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AF_ALG","AF_APPLETALK","AF_ASH","AF_ATMPVC","AF_ATMSVC","AF_AX25","AF_BLUETOOTH","AF_BRIDGE","AF_CAIF","AF_CAN","AF_DECnet","AF_ECONET","AF_IB","AF_IEEE802154","AF_INET","AF_INET6","AF_IPX","AF_IRDA","AF_ISDN","AF_IUCV","AF_KEY","AF_LLC","AF_LOCAL","AF_MPLS","AF_NETBEUI","AF_NETLINK","AF_NETROM","AF_NFC","AF_PACKET","AF_PHONET","AF_PPPOX","AF_RDS","AF_ROSE","AF_ROUTE","AF_RXRPC","AF_SECURITY","AF_SNA","AF_TIPC","AF_UNIX","AF_UNSPEC","AF_VSOCK","AF_WANPIPE","AF_X25","AF_XDP","AIO_ALLDONE","AIO_CANCELED","AIO_NOTCANCELED","AI_ADDRCONFIG","AI_ALL","AI_CANONNAME","AI_NUMERICHOST","AI_NUMERICSERV","AI_PASSIVE","AI_V4MAPPED","ALG_OP_DECRYPT","ALG_OP_ENCRYPT","ALG_SET_AEAD_ASSOCLEN","ALG_SET_AEAD_AUTHSIZE","ALG_SET_DRBG_ENTROPY","ALG_SET_IV","ALG_SET_KEY","ALG_SET_KEY_BY_KEY_SERIAL","ALG_SET_OP","ALT_DIGITS","AM_STR","ARPD_FLUSH","ARPD_LOOKUP","ARPD_UPDATE","ARPHRD_ADAPT","ARPHRD_APPLETLK","ARPHRD_ARCNET","ARPHRD_ASH","ARPHRD_ATM","ARPHRD_AX25","ARPHRD_BIF","ARPHRD_CAN","ARPHRD_CHAOS","ARPHRD_CISCO","ARPHRD_CSLIP","ARPHRD_CSLIP6","ARPHRD_DDCMP","ARPHRD_DLCI","ARPHRD_ECONET","ARPHRD_EETHER","ARPHRD_ETHER","ARPHRD_EUI64","ARPHRD_FCAL","ARPHRD_FCFABRIC","ARPHRD_FCPL","ARPHRD_FCPP","ARPHRD_FDDI","ARPHRD_FRAD","ARPHRD_HDLC","ARPHRD_HIPPI","ARPHRD_HWX25","ARPHRD_IEEE1394","ARPHRD_IEEE802","ARPHRD_IEEE80211","ARPHRD_IEEE80211_PRISM","ARPHRD_IEEE80211_RADIOTAP","ARPHRD_IEEE802154","ARPHRD_IEEE802_TR","ARPHRD_INFINIBAND","ARPHRD_IPDDP","ARPHRD_IPGRE","ARPHRD_IRDA","ARPHRD_LAPB","ARPHRD_LOCALTLK","ARPHRD_LOOPBACK","ARPHRD_METRICOM","ARPHRD_NETROM","ARPHRD_NONE","ARPHRD_PIMREG","ARPHRD_PPP","ARPHRD_PRONET","ARPHRD_RAWHDLC","ARPHRD_ROSE","ARPHRD_RSRVD","ARPHRD_SIT","ARPHRD_SKIP","ARPHRD_SLIP","ARPHRD_SLIP6","ARPHRD_TUNNEL","ARPHRD_TUNNEL6","ARPHRD_VOID","ARPHRD_X25","ARPOP_InREPLY","ARPOP_InREQUEST","ARPOP_NAK","ARPOP_REPLY","ARPOP_REQUEST","ARPOP_RREPLY","ARPOP_RREQUEST","ATF_COM","ATF_DONTPUB","ATF_MAGIC","ATF_NETMASK","ATF_PERM","ATF_PUBL","ATF_USETRAILERS","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_RECURSIVE","AT_REMOVEDIR","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_SYSINFO_EHDR","AT_UID","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BINDERFS_SUPER_MAGIC","BLKIOMIN","BLKIOOPT","BLKPBSZGET","BLKSSZGET","BOOT_TIME","BOTHER","BPF_ABS","BPF_ADD","BPF_ALU","BPF_AND","BPF_B","BPF_DIV","BPF_FS_MAGIC","BPF_H","BPF_IMM","BPF_IND","BPF_JA","BPF_JEQ","BPF_JGE","BPF_JGT","BPF_JMP","BPF_JSET","BPF_JUMP","BPF_K","BPF_LD","BPF_LDX","BPF_LEN","BPF_LL_OFF","BPF_LSH","BPF_MAXINSNS","BPF_MEM","BPF_MEMWORDS","BPF_MISC","BPF_MISCOP","BPF_MOD","BPF_MSH","BPF_MUL","BPF_NEG","BPF_NET_OFF","BPF_OR","BPF_RET","BPF_RSH","BPF_RVAL","BPF_ST","BPF_STMT","BPF_STX","BPF_SUB","BPF_W","BPF_X","BPF_XOR","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BUFSIZ","BUS_ADRALN","BUS_ADRERR","BUS_MCEERR_AO","BUS_MCEERR_AR","BUS_OBJERR","CANFD_BRS","CANFD_ESI","CANFD_MAX_DLC","CANFD_MAX_DLEN","CANFD_MTU","CANXL_HDR_SIZE","CANXL_MAX_DLC","CANXL_MAX_DLC_MASK","CANXL_MAX_DLEN","CANXL_MAX_MTU","CANXL_MIN_DLC","CANXL_MIN_DLEN","CANXL_MIN_MTU","CANXL_MTU","CANXL_PRIO_BITS","CANXL_PRIO_MASK","CANXL_SEC","CANXL_XLF","CAN_BCM","CAN_EFF_FLAG","CAN_EFF_ID_BITS","CAN_EFF_MASK","CAN_ERR_FLAG","CAN_ERR_MASK","CAN_INV_FILTER","CAN_ISOTP","CAN_J1939","CAN_MAX_DLC","CAN_MAX_DLEN","CAN_MCNET","CAN_MTU","CAN_NPROTO","CAN_RAW","CAN_RAW_ERR_FILTER","CAN_RAW_FD_FRAMES","CAN_RAW_FILTER","CAN_RAW_FILTER_MAX","CAN_RAW_JOIN_FILTERS","CAN_RAW_LOOPBACK","CAN_RAW_RECV_OWN_MSGS","CAN_RAW_XL_FRAMES","CAN_RTR_FLAG","CAN_SFF_ID_BITS","CAN_SFF_MASK","CAN_TP16","CAN_TP20","CBAUD","CBAUDEX","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_CLEAR_SIGHAND","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_INTO_CGROUP","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWTIME","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CLOSE_RANGE_CLOEXEC","CLOSE_RANGE_UNSHARE","CMSG_DATA","CMSG_FIRSTHDR","CMSG_LEN","CMSG_NXTHDR","CMSG_SPACE","CMSPAR","CODA_SUPER_MAGIC","CODESET","CPU_ALLOC_SIZE","CPU_CLR","CPU_COUNT","CPU_COUNT_S","CPU_EQUAL","CPU_ISSET","CPU_SET","CPU_SETSIZE","CPU_ZERO","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRDLY","CREAD","CRNCYSTR","CRTSCTS","CS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","CTRL_ATTR_FAMILY_ID","CTRL_ATTR_FAMILY_NAME","CTRL_ATTR_HDRSIZE","CTRL_ATTR_MAXATTR","CTRL_ATTR_MCAST_GROUPS","CTRL_ATTR_MCAST_GRP_ID","CTRL_ATTR_MCAST_GRP_NAME","CTRL_ATTR_MCAST_GRP_UNSPEC","CTRL_ATTR_OPS","CTRL_ATTR_OP_FLAGS","CTRL_ATTR_OP_ID","CTRL_ATTR_OP_UNSPEC","CTRL_ATTR_UNSPEC","CTRL_ATTR_VERSION","CTRL_CMD_DELFAMILY","CTRL_CMD_DELMCAST_GRP","CTRL_CMD_DELOPS","CTRL_CMD_GETFAMILY","CTRL_CMD_GETMCAST_GRP","CTRL_CMD_GETOPS","CTRL_CMD_NEWFAMILY","CTRL_CMD_NEWMCAST_GRP","CTRL_CMD_NEWOPS","CTRL_CMD_UNSPEC","DAY_1","DAY_2","DAY_3","DAY_4","DAY_5","DAY_6","DAY_7","DCCP_SERVICE_LIST_MAX_LEN","DCCP_SOCKOPT_AVAILABLE_CCIDS","DCCP_SOCKOPT_CCID","DCCP_SOCKOPT_CCID_RX_INFO","DCCP_SOCKOPT_CCID_TX_INFO","DCCP_SOCKOPT_CHANGE_L","DCCP_SOCKOPT_CHANGE_R","DCCP_SOCKOPT_GET_CUR_MPS","DCCP_SOCKOPT_PACKET_SIZE","DCCP_SOCKOPT_QPOLICY_ID","DCCP_SOCKOPT_QPOLICY_TXQLEN","DCCP_SOCKOPT_RECV_CSCOV","DCCP_SOCKOPT_RX_CCID","DCCP_SOCKOPT_SEND_CSCOV","DCCP_SOCKOPT_SERVER_TIMEWAIT","DCCP_SOCKOPT_SERVICE","DCCP_SOCKOPT_TX_CCID","DEAD_PROCESS","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","DIR","DS","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","D_FMT","D_T_FMT","Dl_info","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EAI_AGAIN","EAI_BADFLAGS","EAI_FAIL","EAI_FAMILY","EAI_MEMORY","EAI_NODATA","EAI_NONAME","EAI_OVERFLOW","EAI_SERVICE","EAI_SOCKTYPE","EAI_SYSTEM","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","ECRYPTFS_SUPER_MAGIC","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFLAGS","EFS_SUPER_MAGIC","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EI_ABIVERSION","EI_CLASS","EI_DATA","EI_MAG0","EI_MAG1","EI_MAG2","EI_MAG3","EI_NIDENT","EI_OSABI","EI_PAD","EI_VERSION","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELFCLASS32","ELFCLASS64","ELFCLASSNONE","ELFCLASSNUM","ELFDATA2LSB","ELFDATA2MSB","ELFDATANONE","ELFDATANUM","ELFMAG0","ELFMAG1","ELFMAG2","ELFMAG3","ELFOSABI_AIX","ELFOSABI_ARM","ELFOSABI_ARM_AEABI","ELFOSABI_FREEBSD","ELFOSABI_GNU","ELFOSABI_HPUX","ELFOSABI_IRIX","ELFOSABI_LINUX","ELFOSABI_MODESTO","ELFOSABI_NETBSD","ELFOSABI_NONE","ELFOSABI_OPENBSD","ELFOSABI_SOLARIS","ELFOSABI_STANDALONE","ELFOSABI_SYSV","ELFOSABI_TRU64","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMPTY","EMSGSIZE","EMULTIHOP","EM_386","EM_68HC05","EM_68HC08","EM_68HC11","EM_68HC12","EM_68HC16","EM_68K","EM_860","EM_88K","EM_960","EM_AARCH64","EM_ALPHA","EM_ARC","EM_ARC_A5","EM_ARM","EM_AVR","EM_COLDFIRE","EM_CRIS","EM_D10V","EM_D30V","EM_FAKE_ALPHA","EM_FIREPATH","EM_FR20","EM_FR30","EM_FX66","EM_H8S","EM_H8_300","EM_H8_300H","EM_H8_500","EM_HUANY","EM_IA_64","EM_JAVELIN","EM_M32","EM_M32R","EM_ME16","EM_MIPS","EM_MIPS_RS3_LE","EM_MIPS_X","EM_MMA","EM_MMIX","EM_MN10200","EM_MN10300","EM_NCPU","EM_NDR1","EM_NONE","EM_OPENRISC","EM_PARISC","EM_PCP","EM_PDSP","EM_PJ","EM_PPC","EM_PPC64","EM_PRISM","EM_RCE","EM_RH32","EM_S370","EM_S390","EM_SH","EM_SPARC","EM_SPARC32PLUS","EM_SPARCV9","EM_ST100","EM_ST19","EM_ST7","EM_ST9PLUS","EM_STARCORE","EM_SVX","EM_TILEGX","EM_TILEPRO","EM_TINYJ","EM_TRICORE","EM_V800","EM_V850","EM_VAX","EM_VPP500","EM_X86_64","EM_XTENSA","EM_ZSP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOATTR","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOF","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERA","ERANGE","ERA_D_FMT","ERA_D_T_FMT","ERA_T_FMT","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ES","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETH_ALEN","ETH_DATA_LEN","ETH_FCS_LEN","ETH_FRAME_LEN","ETH_HLEN","ETH_P_1588","ETH_P_8021AD","ETH_P_8021AH","ETH_P_8021Q","ETH_P_80221","ETH_P_802_2","ETH_P_802_3","ETH_P_802_3_MIN","ETH_P_802_EX1","ETH_P_AARP","ETH_P_AF_IUCV","ETH_P_ALL","ETH_P_AOE","ETH_P_ARCNET","ETH_P_ARP","ETH_P_ATALK","ETH_P_ATMFATE","ETH_P_ATMMPOA","ETH_P_AX25","ETH_P_BATMAN","ETH_P_BPQ","ETH_P_CAIF","ETH_P_CANFD","ETH_P_CONTROL","ETH_P_CUST","ETH_P_DDCMP","ETH_P_DEC","ETH_P_DIAG","ETH_P_DNA_DL","ETH_P_DNA_RC","ETH_P_DNA_RT","ETH_P_DSA","ETH_P_ECONET","ETH_P_EDSA","ETH_P_FCOE","ETH_P_FIP","ETH_P_HDLC","ETH_P_IEEE802154","ETH_P_IEEEPUP","ETH_P_IEEEPUPAT","ETH_P_IP","ETH_P_IPV6","ETH_P_IPX","ETH_P_IRDA","ETH_P_LAT","ETH_P_LINK_CTL","ETH_P_LOCALTALK","ETH_P_LOOP","ETH_P_LOOPBACK","ETH_P_MACSEC","ETH_P_MOBITEX","ETH_P_MPLS_MC","ETH_P_MPLS_UC","ETH_P_MVRP","ETH_P_PAE","ETH_P_PAUSE","ETH_P_PHONET","ETH_P_PPPTALK","ETH_P_PPP_DISC","ETH_P_PPP_MP","ETH_P_PPP_SES","ETH_P_PRP","ETH_P_PUP","ETH_P_PUPAT","ETH_P_QINQ1","ETH_P_QINQ2","ETH_P_QINQ3","ETH_P_RARP","ETH_P_SCA","ETH_P_SLOW","ETH_P_SNAP","ETH_P_TDLS","ETH_P_TEB","ETH_P_TIPC","ETH_P_TRAILER","ETH_P_TR_802_2","ETH_P_WAN_PPP","ETH_P_WCCP","ETH_P_X25","ETH_ZLEN","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","ET_CORE","ET_DYN","ET_EXEC","ET_HIOS","ET_HIPROC","ET_LOOS","ET_LOPROC","ET_NONE","ET_NUM","ET_REL","EUCLEAN","EUNATCH","EUSERS","EV_CNT","EV_CURRENT","EV_MAX","EV_NONE","EV_NUM","EWOULDBLOCK","EXDEV","EXFULL","EXIT_FAILURE","EXIT_SUCCESS","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","Elf32_Addr","Elf32_Chdr","Elf32_Ehdr","Elf32_Half","Elf32_Off","Elf32_Phdr","Elf32_Section","Elf32_Shdr","Elf32_Sym","Elf32_Word","Elf64_Addr","Elf64_Chdr","Elf64_Ehdr","Elf64_Half","Elf64_Off","Elf64_Phdr","Elf64_Section","Elf64_Shdr","Elf64_Sxword","Elf64_Sym","Elf64_Word","Elf64_Xword","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FANOTIFY_METADATA_VERSION","FAN_ACCESS","FAN_ACCESS_PERM","FAN_ALLOW","FAN_ATTRIB","FAN_AUDIT","FAN_CLASS_CONTENT","FAN_CLASS_NOTIF","FAN_CLASS_PRE_CONTENT","FAN_CLOEXEC","FAN_CLOSE","FAN_CLOSE_NOWRITE","FAN_CLOSE_WRITE","FAN_CREATE","FAN_DELETE","FAN_DELETE_SELF","FAN_DENY","FAN_ENABLE_AUDIT","FAN_EPIDFD","FAN_EVENT_INFO_TYPE_DFID","FAN_EVENT_INFO_TYPE_DFID_NAME","FAN_EVENT_INFO_TYPE_ERROR","FAN_EVENT_INFO_TYPE_FID","FAN_EVENT_INFO_TYPE_NEW_DFID_NAME","FAN_EVENT_INFO_TYPE_OLD_DFID_NAME","FAN_EVENT_INFO_TYPE_PIDFD","FAN_EVENT_ON_CHILD","FAN_FS_ERROR","FAN_INFO","FAN_MARK_ADD","FAN_MARK_DONT_FOLLOW","FAN_MARK_EVICTABLE","FAN_MARK_FILESYSTEM","FAN_MARK_FLUSH","FAN_MARK_IGNORE","FAN_MARK_IGNORED_MASK","FAN_MARK_IGNORED_SURV_MODIFY","FAN_MARK_IGNORE_SURV","FAN_MARK_INODE","FAN_MARK_MOUNT","FAN_MARK_ONLYDIR","FAN_MARK_REMOVE","FAN_MODIFY","FAN_MOVE","FAN_MOVED_FROM","FAN_MOVED_TO","FAN_MOVE_SELF","FAN_NOFD","FAN_NONBLOCK","FAN_NOPIDFD","FAN_ONDIR","FAN_OPEN","FAN_OPEN_EXEC","FAN_OPEN_EXEC_PERM","FAN_OPEN_PERM","FAN_Q_OVERFLOW","FAN_RENAME","FAN_REPORT_DFID_NAME","FAN_REPORT_DFID_NAME_TARGET","FAN_REPORT_DIR_FID","FAN_REPORT_FID","FAN_REPORT_NAME","FAN_REPORT_PIDFD","FAN_REPORT_TARGET_FID","FAN_REPORT_TID","FAN_RESPONSE_INFO_AUDIT_RULE","FAN_RESPONSE_INFO_NONE","FAN_UNLIMITED_MARKS","FAN_UNLIMITED_QUEUE","FDPIC_FUNCPTRS","FD_CLOEXEC","FD_CLR","FD_ISSET","FD_SET","FD_SETSIZE","FD_ZERO","FF0","FF1","FFDLY","FF_CNT","FF_MAX","FICLONE","FICLONERANGE","FILE","FILENAME_MAX","FIOASYNC","FIOCLEX","FIONBIO","FIONCLEX","FIONREAD","FIOQSIZE","FLUSHO","FOPEN_MAX","FS","FS_BASE","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FUTEX_BITSET_MATCH_ANY","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_LOCK_PI2","FUTEX_OP","FUTEX_OP_ADD","FUTEX_OP_ANDN","FUTEX_OP_CMP_EQ","FUTEX_OP_CMP_GE","FUTEX_OP_CMP_GT","FUTEX_OP_CMP_LE","FUTEX_OP_CMP_LT","FUTEX_OP_CMP_NE","FUTEX_OP_OPARG_SHIFT","FUTEX_OP_OR","FUTEX_OP_SET","FUTEX_OP_XOR","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_TRYLOCK_PI","FUTEX_UNLOCK_PI","FUTEX_WAIT","FUTEX_WAIT_BITSET","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_OP","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETPIPE_SZ","F_GET_SEALS","F_LOCK","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_RDLCK","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETPIPE_SZ","F_TEST","F_TLOCK","F_ULOCK","F_UNLCK","F_WRLCK","GENL_ADMIN_PERM","GENL_CMD_CAP_DO","GENL_CMD_CAP_DUMP","GENL_CMD_CAP_HASPOL","GENL_ID_CTRL","GENL_ID_PMCRAID","GENL_ID_VFS_DQUOT","GENL_MAX_ID","GENL_MIN_ID","GENL_NAMSIZ","GENL_UNS_ADMIN_PERM","GLOB_ABORTED","GLOB_ALTDIRFUNC","GLOB_APPEND","GLOB_BRACE","GLOB_DOOFFS","GLOB_ERR","GLOB_MARK","GLOB_NOCHECK","GLOB_NOESCAPE","GLOB_NOMAGIC","GLOB_NOMATCH","GLOB_NOSORT","GLOB_NOSPACE","GLOB_ONLYDIR","GLOB_PERIOD","GLOB_TILDE","GLOB_TILDE_CHECK","GRND_INSECURE","GRND_NONBLOCK","GRND_RANDOM","GRPQUOTA","GS","GS_BASE","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","HWTSTAMP_FILTER_ALL","HWTSTAMP_FILTER_NONE","HWTSTAMP_FILTER_NTP_ALL","HWTSTAMP_FILTER_PTP_V1_L4_DELAY_REQ","HWTSTAMP_FILTER_PTP_V1_L4_EVENT","HWTSTAMP_FILTER_PTP_V1_L4_SYNC","HWTSTAMP_FILTER_PTP_V2_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_EVENT","HWTSTAMP_FILTER_PTP_V2_L2_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_L2_EVENT","HWTSTAMP_FILTER_PTP_V2_L2_SYNC","HWTSTAMP_FILTER_PTP_V2_L4_DELAY_REQ","HWTSTAMP_FILTER_PTP_V2_L4_EVENT","HWTSTAMP_FILTER_PTP_V2_L4_SYNC","HWTSTAMP_FILTER_PTP_V2_SYNC","HWTSTAMP_FILTER_SOME","HWTSTAMP_TX_OFF","HWTSTAMP_TX_ON","HWTSTAMP_TX_ONESTEP_P2P","HWTSTAMP_TX_ONESTEP_SYNC","IBSHIFT","ICANON","ICRNL","IEXTEN","IFA_ADDRESS","IFA_ANYCAST","IFA_BROADCAST","IFA_CACHEINFO","IFA_FLAGS","IFA_F_DADFAILED","IFA_F_DEPRECATED","IFA_F_HOMEADDRESS","IFA_F_MANAGETEMPADDR","IFA_F_MCAUTOJOIN","IFA_F_NODAD","IFA_F_NOPREFIXROUTE","IFA_F_OPTIMISTIC","IFA_F_PERMANENT","IFA_F_SECONDARY","IFA_F_STABLE_PRIVACY","IFA_F_TEMPORARY","IFA_F_TENTATIVE","IFA_LABEL","IFA_LOCAL","IFA_MULTICAST","IFA_UNSPEC","IFF_ALLMULTI","IFF_ATTACH_QUEUE","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DETACH_QUEUE","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_MULTI_QUEUE","IFF_NAPI","IFF_NAPI_FRAGS","IFF_NOARP","IFF_NOFILTER","IFF_NOTRAILERS","IFF_NO_PI","IFF_ONE_QUEUE","IFF_PERSIST","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_TAP","IFF_TUN","IFF_TUN_EXCL","IFF_UP","IFF_VNET_HDR","IFLA_ADDRESS","IFLA_AF_SPEC","IFLA_ALLMULTI","IFLA_ALT_IFNAME","IFLA_BROADCAST","IFLA_CARRIER","IFLA_CARRIER_CHANGES","IFLA_CARRIER_DOWN_COUNT","IFLA_CARRIER_UP_COUNT","IFLA_COST","IFLA_EVENT","IFLA_EXT_MASK","IFLA_GROUP","IFLA_GRO_MAX_SIZE","IFLA_GSO_MAX_SEGS","IFLA_GSO_MAX_SIZE","IFLA_IFALIAS","IFLA_IFNAME","IFLA_IF_NETNSID","IFLA_INFO_DATA","IFLA_INFO_KIND","IFLA_INFO_SLAVE_DATA","IFLA_INFO_SLAVE_KIND","IFLA_INFO_UNSPEC","IFLA_INFO_XSTATS","IFLA_LINK","IFLA_LINKINFO","IFLA_LINKMODE","IFLA_LINK_NETNSID","IFLA_MAP","IFLA_MASTER","IFLA_MAX_MTU","IFLA_MIN_MTU","IFLA_MTU","IFLA_NET_NS_FD","IFLA_NET_NS_PID","IFLA_NEW_IFINDEX","IFLA_NEW_NETNSID","IFLA_NUM_RX_QUEUES","IFLA_NUM_TX_QUEUES","IFLA_NUM_VF","IFLA_OPERSTATE","IFLA_PAD","IFLA_PARENT_DEV_BUS_NAME","IFLA_PARENT_DEV_NAME","IFLA_PERM_ADDRESS","IFLA_PHYS_PORT_ID","IFLA_PHYS_PORT_NAME","IFLA_PHYS_SWITCH_ID","IFLA_PORT_SELF","IFLA_PRIORITY","IFLA_PROMISCUITY","IFLA_PROP_LIST","IFLA_PROTINFO","IFLA_PROTO_DOWN","IFLA_PROTO_DOWN_REASON","IFLA_QDISC","IFLA_STATS","IFLA_STATS64","IFLA_TARGET_NETNSID","IFLA_TSO_MAX_SEGS","IFLA_TSO_MAX_SIZE","IFLA_TXQLEN","IFLA_UNSPEC","IFLA_VFINFO_LIST","IFLA_VF_PORTS","IFLA_WEIGHT","IFLA_WIRELESS","IFLA_XDP","IFNAMSIZ","IF_LINK_MODE_DEFAULT","IF_LINK_MODE_DORMANT","IF_LINK_MODE_TESTING","IF_NAMESIZE","IF_OPER_DORMANT","IF_OPER_DOWN","IF_OPER_LOWERLAYERDOWN","IF_OPER_NOTPRESENT","IF_OPER_TESTING","IF_OPER_UNKNOWN","IF_OPER_UP","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INADDR_ANY","INADDR_BROADCAST","INADDR_LOOPBACK","INADDR_NONE","INIT_PROCESS","INLCR","INPCK","INPUT_PROP_CNT","INPUT_PROP_MAX","INT_MAX","INT_MIN","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_EXCL_UNLINK","IN_IGNORED","IN_ISDIR","IN_MASK_ADD","IN_MASK_CREATE","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IP6T_SO_ORIGINAL_DST","IPC_CREAT","IPC_EXCL","IPC_INFO","IPC_NOWAIT","IPC_PRIVATE","IPC_RMID","IPC_SET","IPC_STAT","IPDEFTTL","IPOPT_CLASS","IPOPT_CLASS_MASK","IPOPT_CONTROL","IPOPT_COPIED","IPOPT_COPY","IPOPT_END","IPOPT_EOL","IPOPT_LSRR","IPOPT_MEASUREMENT","IPOPT_MINOFF","IPOPT_NOOP","IPOPT_NOP","IPOPT_NUMBER","IPOPT_NUMBER_MASK","IPOPT_OFFSET","IPOPT_OLEN","IPOPT_OPTVAL","IPOPT_RA","IPOPT_RESERVED1","IPOPT_RESERVED2","IPOPT_RR","IPOPT_SEC","IPOPT_SID","IPOPT_SSRR","IPOPT_TIMESTAMP","IPOPT_TS","IPOPT_TS_PRESPEC","IPOPT_TS_TSANDADDR","IPOPT_TS_TSONLY","IPPROTO_AH","IPPROTO_BEETPH","IPPROTO_COMP","IPPROTO_DCCP","IPPROTO_DSTOPTS","IPPROTO_EGP","IPPROTO_ENCAP","IPPROTO_ESP","IPPROTO_ETHERNET","IPPROTO_FRAGMENT","IPPROTO_GRE","IPPROTO_HOPOPTS","IPPROTO_ICMP","IPPROTO_ICMPV6","IPPROTO_IDP","IPPROTO_IGMP","IPPROTO_IP","IPPROTO_IPIP","IPPROTO_IPV6","IPPROTO_MAX","IPPROTO_MH","IPPROTO_MPLS","IPPROTO_MPTCP","IPPROTO_MTP","IPPROTO_NONE","IPPROTO_PIM","IPPROTO_PUP","IPPROTO_RAW","IPPROTO_ROUTING","IPPROTO_RSVP","IPPROTO_SCTP","IPPROTO_TCP","IPPROTO_TP","IPPROTO_UDP","IPPROTO_UDPLITE","IPTOS_ECN","IPTOS_ECN_CE","IPTOS_ECN_ECT0","IPTOS_ECN_ECT1","IPTOS_ECN_MASK","IPTOS_ECN_NOT_ECT","IPTOS_LOWDELAY","IPTOS_MINCOST","IPTOS_PREC","IPTOS_PREC_CRITIC_ECP","IPTOS_PREC_FLASH","IPTOS_PREC_FLASHOVERRIDE","IPTOS_PREC_IMMEDIATE","IPTOS_PREC_INTERNETCONTROL","IPTOS_PREC_MASK","IPTOS_PREC_NETCONTROL","IPTOS_PREC_PRIORITY","IPTOS_PREC_ROUTINE","IPTOS_RELIABILITY","IPTOS_THROUGHPUT","IPTOS_TOS","IPTOS_TOS_MASK","IPV6_2292DSTOPTS","IPV6_2292HOPLIMIT","IPV6_2292HOPOPTS","IPV6_2292PKTINFO","IPV6_2292PKTOPTIONS","IPV6_2292RTHDR","IPV6_ADDRFORM","IPV6_ADDR_PREFERENCES","IPV6_ADD_MEMBERSHIP","IPV6_AUTHHDR","IPV6_AUTOFLOWLABEL","IPV6_CHECKSUM","IPV6_DONTFRAG","IPV6_DROP_MEMBERSHIP","IPV6_DSTOPTS","IPV6_FLOWINFO","IPV6_FLOWINFO_FLOWLABEL","IPV6_FLOWINFO_PRIORITY","IPV6_FLOWINFO_SEND","IPV6_FLOWLABEL_MGR","IPV6_FREEBIND","IPV6_HDRINCL","IPV6_HOPLIMIT","IPV6_HOPOPTS","IPV6_IPSEC_POLICY","IPV6_JOIN_ANYCAST","IPV6_LEAVE_ANYCAST","IPV6_MINHOPCOUNT","IPV6_MTU","IPV6_MTU_DISCOVER","IPV6_MULTICAST_ALL","IPV6_MULTICAST_HOPS","IPV6_MULTICAST_IF","IPV6_MULTICAST_LOOP","IPV6_NEXTHOP","IPV6_ORIGDSTADDR","IPV6_PATHMTU","IPV6_PKTINFO","IPV6_PMTUDISC_DO","IPV6_PMTUDISC_DONT","IPV6_PMTUDISC_INTERFACE","IPV6_PMTUDISC_OMIT","IPV6_PMTUDISC_PROBE","IPV6_PMTUDISC_WANT","IPV6_PREFER_SRC_CGA","IPV6_PREFER_SRC_COA","IPV6_PREFER_SRC_HOME","IPV6_PREFER_SRC_NONCGA","IPV6_PREFER_SRC_PUBLIC","IPV6_PREFER_SRC_PUBTMP_DEFAULT","IPV6_PREFER_SRC_TMP","IPV6_RECVDSTOPTS","IPV6_RECVERR","IPV6_RECVFRAGSIZE","IPV6_RECVHOPLIMIT","IPV6_RECVHOPOPTS","IPV6_RECVORIGDSTADDR","IPV6_RECVPATHMTU","IPV6_RECVPKTINFO","IPV6_RECVRTHDR","IPV6_RECVTCLASS","IPV6_ROUTER_ALERT","IPV6_ROUTER_ALERT_ISOLATE","IPV6_RTHDR","IPV6_RTHDRDSTOPTS","IPV6_RTHDR_LOOSE","IPV6_RTHDR_STRICT","IPV6_TCLASS","IPV6_TRANSPARENT","IPV6_UNICAST_HOPS","IPV6_UNICAST_IF","IPV6_V6ONLY","IPV6_XFRM_POLICY","IPVERSION","IP_ADD_MEMBERSHIP","IP_ADD_SOURCE_MEMBERSHIP","IP_BIND_ADDRESS_NO_PORT","IP_BLOCK_SOURCE","IP_CHECKSUM","IP_DEFAULT_MULTICAST_LOOP","IP_DEFAULT_MULTICAST_TTL","IP_DROP_MEMBERSHIP","IP_DROP_SOURCE_MEMBERSHIP","IP_FREEBIND","IP_HDRINCL","IP_IPSEC_POLICY","IP_MINTTL","IP_MSFILTER","IP_MTU","IP_MTU_DISCOVER","IP_MULTICAST_ALL","IP_MULTICAST_IF","IP_MULTICAST_LOOP","IP_MULTICAST_TTL","IP_NODEFRAG","IP_OPTIONS","IP_ORIGDSTADDR","IP_PASSSEC","IP_PKTINFO","IP_PKTOPTIONS","IP_PMTUDISC_DO","IP_PMTUDISC_DONT","IP_PMTUDISC_INTERFACE","IP_PMTUDISC_OMIT","IP_PMTUDISC_PROBE","IP_PMTUDISC_WANT","IP_RECVERR","IP_RECVFRAGSIZE","IP_RECVOPTS","IP_RECVORIGDSTADDR","IP_RECVTOS","IP_RECVTTL","IP_RETOPTS","IP_ROUTER_ALERT","IP_TOS","IP_TRANSPARENT","IP_TTL","IP_UNBLOCK_SOURCE","IP_UNICAST_IF","IP_XFRM_POLICY","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUTF8","IXANY","IXOFF","IXON","J1939_EE_INFO_NONE","J1939_EE_INFO_RX_ABORT","J1939_EE_INFO_RX_DPO","J1939_EE_INFO_RX_RTS","J1939_EE_INFO_TX_ABORT","J1939_FILTER_MAX","J1939_IDLE_ADDR","J1939_MAX_UNICAST_ADDR","J1939_NLA_BYTES_ACKED","J1939_NLA_DEST_ADDR","J1939_NLA_DEST_NAME","J1939_NLA_PAD","J1939_NLA_PGN","J1939_NLA_SRC_ADDR","J1939_NLA_SRC_NAME","J1939_NLA_TOTAL_SIZE","J1939_NO_ADDR","J1939_NO_NAME","J1939_NO_PGN","J1939_PGN_ADDRESS_CLAIMED","J1939_PGN_ADDRESS_COMMANDED","J1939_PGN_MAX","J1939_PGN_PDU1_MAX","J1939_PGN_REQUEST","JFFS2_SUPER_MAGIC","KERNEL_VERSION","KEXEC_ARCH_MASK","KEXEC_FILE_NO_INITRAMFS","KEXEC_FILE_ON_CRASH","KEXEC_FILE_UNLOAD","KEXEC_ON_CRASH","KEXEC_PRESERVE_CONTEXT","KEYCTL_ASSUME_AUTHORITY","KEYCTL_CAPABILITIES","KEYCTL_CAPS0_BIG_KEY","KEYCTL_CAPS0_CAPABILITIES","KEYCTL_CAPS0_DIFFIE_HELLMAN","KEYCTL_CAPS0_INVALIDATE","KEYCTL_CAPS0_MOVE","KEYCTL_CAPS0_PERSISTENT_KEYRINGS","KEYCTL_CAPS0_PUBLIC_KEY","KEYCTL_CAPS0_RESTRICT_KEYRING","KEYCTL_CAPS1_NS_KEYRING_NAME","KEYCTL_CAPS1_NS_KEY_TAG","KEYCTL_CHOWN","KEYCTL_CLEAR","KEYCTL_DESCRIBE","KEYCTL_DH_COMPUTE","KEYCTL_GET_KEYRING_ID","KEYCTL_GET_PERSISTENT","KEYCTL_GET_SECURITY","KEYCTL_INSTANTIATE","KEYCTL_INSTANTIATE_IOV","KEYCTL_INVALIDATE","KEYCTL_JOIN_SESSION_KEYRING","KEYCTL_LINK","KEYCTL_MOVE","KEYCTL_NEGATE","KEYCTL_PKEY_DECRYPT","KEYCTL_PKEY_ENCRYPT","KEYCTL_PKEY_QUERY","KEYCTL_PKEY_SIGN","KEYCTL_PKEY_VERIFY","KEYCTL_READ","KEYCTL_REJECT","KEYCTL_RESTRICT_KEYRING","KEYCTL_REVOKE","KEYCTL_SEARCH","KEYCTL_SESSION_TO_PARENT","KEYCTL_SETPERM","KEYCTL_SET_REQKEY_KEYRING","KEYCTL_SET_TIMEOUT","KEYCTL_SUPPORTS_DECRYPT","KEYCTL_SUPPORTS_ENCRYPT","KEYCTL_SUPPORTS_SIGN","KEYCTL_SUPPORTS_VERIFY","KEYCTL_UNLINK","KEYCTL_UPDATE","KEY_CNT","KEY_MAX","KEY_REQKEY_DEFL_DEFAULT","KEY_REQKEY_DEFL_GROUP_KEYRING","KEY_REQKEY_DEFL_NO_CHANGE","KEY_REQKEY_DEFL_PROCESS_KEYRING","KEY_REQKEY_DEFL_REQUESTOR_KEYRING","KEY_REQKEY_DEFL_SESSION_KEYRING","KEY_REQKEY_DEFL_THREAD_KEYRING","KEY_REQKEY_DEFL_USER_KEYRING","KEY_REQKEY_DEFL_USER_SESSION_KEYRING","KEY_SPEC_GROUP_KEYRING","KEY_SPEC_PROCESS_KEYRING","KEY_SPEC_REQKEY_AUTH_KEY","KEY_SPEC_REQUESTOR_KEYRING","KEY_SPEC_SESSION_KEYRING","KEY_SPEC_THREAD_KEYRING","KEY_SPEC_USER_KEYRING","KEY_SPEC_USER_SESSION_KEYRING","LC_ADDRESS","LC_ADDRESS_MASK","LC_ALL","LC_ALL_MASK","LC_COLLATE","LC_COLLATE_MASK","LC_CTYPE","LC_CTYPE_MASK","LC_IDENTIFICATION","LC_IDENTIFICATION_MASK","LC_MEASUREMENT","LC_MEASUREMENT_MASK","LC_MESSAGES","LC_MESSAGES_MASK","LC_MONETARY","LC_MONETARY_MASK","LC_NAME","LC_NAME_MASK","LC_NUMERIC","LC_NUMERIC_MASK","LC_PAPER","LC_PAPER_MASK","LC_TELEPHONE","LC_TELEPHONE_MASK","LC_TIME","LC_TIME_MASK","LED_CNT","LED_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LM_ID_BASE","LM_ID_NEWLM","LOCK_EX","LOCK_NB","LOCK_SH","LOCK_UN","LOGIN_PROCESS","LOG_ALERT","LOG_AUTH","LOG_AUTHPRIV","LOG_CONS","LOG_CRIT","LOG_CRON","LOG_DAEMON","LOG_DEBUG","LOG_EMERG","LOG_ERR","LOG_FACMASK","LOG_FTP","LOG_INFO","LOG_KERN","LOG_LOCAL0","LOG_LOCAL1","LOG_LOCAL2","LOG_LOCAL3","LOG_LOCAL4","LOG_LOCAL5","LOG_LOCAL6","LOG_LOCAL7","LOG_LPR","LOG_MAIL","LOG_NDELAY","LOG_NEWS","LOG_NFACILITIES","LOG_NOTICE","LOG_NOWAIT","LOG_ODELAY","LOG_PERROR","LOG_PID","LOG_PRIMASK","LOG_SYSLOG","LOG_USER","LOG_UUCP","LOG_WARNING","L_tmpnam","Lmid_t","MADV_COLD","MADV_COLLAPSE","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_DONTNEED_LOCKED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_KEEPONFORK","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_PAGEOUT","MADV_POPULATE_READ","MADV_POPULATE_WRITE","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MADV_WIPEONFORK","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FAILED","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAXTC","MAXTTL","MAX_ADDR_LEN","MAX_IPOPTLEN","MAX_LINKS","MCAST_BLOCK_SOURCE","MCAST_EXCLUDE","MCAST_INCLUDE","MCAST_JOIN_GROUP","MCAST_JOIN_SOURCE_GROUP","MCAST_LEAVE_GROUP","MCAST_LEAVE_SOURCE_GROUP","MCAST_MSFILTER","MCAST_UNBLOCK_SOURCE","MCL_CURRENT","MCL_FUTURE","MCL_ONFAULT","MEMBARRIER_CMD_GLOBAL","MEMBARRIER_CMD_GLOBAL_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_QUERY","MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_HUGETLB","MFD_HUGE_16GB","MFD_HUGE_16MB","MFD_HUGE_1GB","MFD_HUGE_1MB","MFD_HUGE_256MB","MFD_HUGE_2GB","MFD_HUGE_2MB","MFD_HUGE_32MB","MFD_HUGE_512KB","MFD_HUGE_512MB","MFD_HUGE_64KB","MFD_HUGE_8MB","MFD_HUGE_MASK","MFD_HUGE_SHIFT","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_ONFAULT","MMAP_PAGE_ZERO","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","MOD_CLKA","MOD_CLKB","MOD_ESTERROR","MOD_FREQUENCY","MOD_MAXERROR","MOD_MICRO","MOD_NANO","MOD_OFFSET","MOD_STATUS","MOD_TAI","MOD_TIMECONST","MON_1","MON_10","MON_11","MON_12","MON_2","MON_3","MON_4","MON_5","MON_6","MON_7","MON_8","MON_9","MOVE_MOUNT_BENEATH","MOVE_MOUNT_F_AUTOMOUNTS","MOVE_MOUNT_F_EMPTY_PATH","MOVE_MOUNT_F_SYMLINKS","MOVE_MOUNT_SET_GROUP","MOVE_MOUNT_T_AUTOMOUNTS","MOVE_MOUNT_T_EMPTY_PATH","MOVE_MOUNT_T_SYMLINKS","MPOL_BIND","MPOL_DEFAULT","MPOL_F_NUMA_BALANCING","MPOL_F_RELATIVE_NODES","MPOL_F_STATIC_NODES","MPOL_INTERLEAVE","MPOL_LOCAL","MPOL_PREFERRED","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSC_CNT","MSC_MAX","MSDOS_SUPER_MAGIC","MSG_CMSG_CLOEXEC","MSG_CONFIRM","MSG_COPY","MSG_CTRUNC","MSG_DONTROUTE","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_EXCEPT","MSG_FASTOPEN","MSG_FIN","MSG_INFO","MSG_MORE","MSG_NOERROR","MSG_NOSIGNAL","MSG_NOTIFICATION","MSG_OOB","MSG_PEEK","MSG_RST","MSG_STAT","MSG_SYN","MSG_TRUNC","MSG_TRYHARD","MSG_WAITALL","MSG_WAITFORONE","MSG_ZEROCOPY","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOSUID","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","M_ARENA_MAX","M_ARENA_TEST","M_CHECK_ACTION","M_GRAIN","M_KEEP","M_MMAP_MAX","M_MMAP_THRESHOLD","M_MXFAST","M_NLBLKS","M_PERTURB","M_TOP_PAD","M_TRIM_THRESHOLD","NCCS","NCP_SUPER_MAGIC","NDA_CACHEINFO","NDA_DST","NDA_IFINDEX","NDA_LINK_NETNSID","NDA_LLADDR","NDA_MASTER","NDA_PORT","NDA_PROBES","NDA_SRC_VNI","NDA_UNSPEC","NDA_VLAN","NDA_VNI","NETLINK_ADD_MEMBERSHIP","NETLINK_AUDIT","NETLINK_BROADCAST_ERROR","NETLINK_CAP_ACK","NETLINK_CONNECTOR","NETLINK_CRYPTO","NETLINK_DNRTMSG","NETLINK_DROP_MEMBERSHIP","NETLINK_ECRYPTFS","NETLINK_EXT_ACK","NETLINK_FIB_LOOKUP","NETLINK_FIREWALL","NETLINK_GENERIC","NETLINK_GET_STRICT_CHK","NETLINK_INET_DIAG","NETLINK_IP6_FW","NETLINK_ISCSI","NETLINK_KOBJECT_UEVENT","NETLINK_LISTEN_ALL_NSID","NETLINK_LIST_MEMBERSHIPS","NETLINK_NETFILTER","NETLINK_NFLOG","NETLINK_NO_ENOBUFS","NETLINK_PKTINFO","NETLINK_RDMA","NETLINK_ROUTE","NETLINK_RX_RING","NETLINK_SCSITRANSPORT","NETLINK_SELINUX","NETLINK_SOCK_DIAG","NETLINK_TX_RING","NETLINK_UNUSED","NETLINK_USERSOCK","NETLINK_XFRM","NEW_TIME","NFNETLINK_V0","NFNLGRP_ACCT_QUOTA","NFNLGRP_CONNTRACK_DESTROY","NFNLGRP_CONNTRACK_EXP_DESTROY","NFNLGRP_CONNTRACK_EXP_NEW","NFNLGRP_CONNTRACK_EXP_UPDATE","NFNLGRP_CONNTRACK_NEW","NFNLGRP_CONNTRACK_UPDATE","NFNLGRP_NFTABLES","NFNLGRP_NFTRACE","NFNLGRP_NONE","NFNL_BATCH_GENID","NFNL_BATCH_UNSPEC","NFNL_MSG_BATCH_BEGIN","NFNL_MSG_BATCH_END","NFNL_SUBSYS_ACCT","NFNL_SUBSYS_COUNT","NFNL_SUBSYS_CTHELPER","NFNL_SUBSYS_CTNETLINK","NFNL_SUBSYS_CTNETLINK_EXP","NFNL_SUBSYS_CTNETLINK_TIMEOUT","NFNL_SUBSYS_HOOK","NFNL_SUBSYS_IPSET","NFNL_SUBSYS_NFTABLES","NFNL_SUBSYS_NFT_COMPAT","NFNL_SUBSYS_NONE","NFNL_SUBSYS_OSF","NFNL_SUBSYS_QUEUE","NFNL_SUBSYS_ULOG","NFPROTO_ARP","NFPROTO_BRIDGE","NFPROTO_DECNET","NFPROTO_INET","NFPROTO_IPV4","NFPROTO_IPV6","NFPROTO_NETDEV","NFPROTO_NUMPROTO","NFPROTO_UNSPEC","NFQA_CAP_LEN","NFQA_CFG_CMD","NFQA_CFG_FLAGS","NFQA_CFG_F_CONNTRACK","NFQA_CFG_F_FAIL_OPEN","NFQA_CFG_F_GSO","NFQA_CFG_F_MAX","NFQA_CFG_F_SECCTX","NFQA_CFG_F_UID_GID","NFQA_CFG_MASK","NFQA_CFG_PARAMS","NFQA_CFG_QUEUE_MAXLEN","NFQA_CFG_UNSPEC","NFQA_CT","NFQA_CT_INFO","NFQA_EXP","NFQA_GID","NFQA_HWADDR","NFQA_IFINDEX_INDEV","NFQA_IFINDEX_OUTDEV","NFQA_IFINDEX_PHYSINDEV","NFQA_IFINDEX_PHYSOUTDEV","NFQA_L2HDR","NFQA_MARK","NFQA_PACKET_HDR","NFQA_PAYLOAD","NFQA_PRIORITY","NFQA_SECCTX","NFQA_SKB_CSUMNOTREADY","NFQA_SKB_CSUM_NOTVERIFIED","NFQA_SKB_GSO","NFQA_SKB_INFO","NFQA_TIMESTAMP","NFQA_UID","NFQA_UNSPEC","NFQA_VERDICT_HDR","NFQA_VLAN","NFQA_VLAN_PROTO","NFQA_VLAN_TCI","NFQA_VLAN_UNSPEC","NFQNL_CFG_CMD_BIND","NFQNL_CFG_CMD_NONE","NFQNL_CFG_CMD_PF_BIND","NFQNL_CFG_CMD_PF_UNBIND","NFQNL_CFG_CMD_UNBIND","NFQNL_COPY_META","NFQNL_COPY_NONE","NFQNL_COPY_PACKET","NFQNL_MSG_CONFIG","NFQNL_MSG_PACKET","NFQNL_MSG_VERDICT","NFQNL_MSG_VERDICT_BATCH","NFS_SUPER_MAGIC","NFT_BREAK","NFT_BYTEORDER_HTON","NFT_BYTEORDER_NTOH","NFT_CHAIN_MAXNAMELEN","NFT_CMP_EQ","NFT_CMP_GT","NFT_CMP_GTE","NFT_CMP_LT","NFT_CMP_LTE","NFT_CMP_NEQ","NFT_CONTINUE","NFT_CT_BYTES","NFT_CT_DIRECTION","NFT_CT_DST","NFT_CT_EXPIRATION","NFT_CT_HELPER","NFT_CT_L3PROTOCOL","NFT_CT_LABELS","NFT_CT_MARK","NFT_CT_PKTS","NFT_CT_PROTOCOL","NFT_CT_PROTO_DST","NFT_CT_PROTO_SRC","NFT_CT_SECMARK","NFT_CT_SRC","NFT_CT_STATE","NFT_CT_STATUS","NFT_DATA_RESERVED_MASK","NFT_DATA_VALUE","NFT_DATA_VALUE_MAXLEN","NFT_DATA_VERDICT","NFT_DYNSET_F_INV","NFT_DYNSET_OP_ADD","NFT_DYNSET_OP_UPDATE","NFT_GOTO","NFT_JUMP","NFT_LIMIT_F_INV","NFT_LIMIT_PKTS","NFT_LIMIT_PKT_BYTES","NFT_LOOKUP_F_INV","NFT_META_BRI_IIFNAME","NFT_META_BRI_OIFNAME","NFT_META_CGROUP","NFT_META_CPU","NFT_META_IIF","NFT_META_IIFGROUP","NFT_META_IIFNAME","NFT_META_IIFTYPE","NFT_META_L4PROTO","NFT_META_LEN","NFT_META_MARK","NFT_META_NFPROTO","NFT_META_NFTRACE","NFT_META_OIF","NFT_META_OIFGROUP","NFT_META_OIFNAME","NFT_META_OIFTYPE","NFT_META_PKTTYPE","NFT_META_PRANDOM","NFT_META_PRIORITY","NFT_META_PROTOCOL","NFT_META_RTCLASSID","NFT_META_SECMARK","NFT_META_SKGID","NFT_META_SKUID","NFT_MSG_DELCHAIN","NFT_MSG_DELOBJ","NFT_MSG_DELRULE","NFT_MSG_DELSET","NFT_MSG_DELSETELEM","NFT_MSG_DELTABLE","NFT_MSG_GETCHAIN","NFT_MSG_GETGEN","NFT_MSG_GETOBJ","NFT_MSG_GETOBJ_RESET","NFT_MSG_GETRULE","NFT_MSG_GETSET","NFT_MSG_GETSETELEM","NFT_MSG_GETTABLE","NFT_MSG_MAX","NFT_MSG_NEWCHAIN","NFT_MSG_NEWGEN","NFT_MSG_NEWOBJ","NFT_MSG_NEWRULE","NFT_MSG_NEWSET","NFT_MSG_NEWSETELEM","NFT_MSG_NEWTABLE","NFT_MSG_TRACE","NFT_NAT_DNAT","NFT_NAT_SNAT","NFT_NG_INCREMENTAL","NFT_NG_RANDOM","NFT_OBJ_MAXNAMELEN","NFT_PAYLOAD_CSUM_INET","NFT_PAYLOAD_CSUM_NONE","NFT_PAYLOAD_LL_HEADER","NFT_PAYLOAD_NETWORK_HEADER","NFT_PAYLOAD_TRANSPORT_HEADER","NFT_QUEUE_FLAG_BYPASS","NFT_QUEUE_FLAG_CPU_FANOUT","NFT_QUEUE_FLAG_MASK","NFT_QUOTA_F_INV","NFT_RANGE_EQ","NFT_RANGE_NEQ","NFT_REG32_00","NFT_REG32_01","NFT_REG32_02","NFT_REG32_03","NFT_REG32_04","NFT_REG32_05","NFT_REG32_06","NFT_REG32_07","NFT_REG32_08","NFT_REG32_09","NFT_REG32_10","NFT_REG32_11","NFT_REG32_12","NFT_REG32_13","NFT_REG32_14","NFT_REG32_15","NFT_REG32_SIZE","NFT_REG_1","NFT_REG_2","NFT_REG_3","NFT_REG_4","NFT_REG_SIZE","NFT_REG_VERDICT","NFT_REJECT_ICMPX_ADMIN_PROHIBITED","NFT_REJECT_ICMPX_HOST_UNREACH","NFT_REJECT_ICMPX_NO_ROUTE","NFT_REJECT_ICMPX_PORT_UNREACH","NFT_REJECT_ICMPX_UNREACH","NFT_REJECT_ICMP_UNREACH","NFT_REJECT_TCP_RST","NFT_RETURN","NFT_SET_ANONYMOUS","NFT_SET_CONSTANT","NFT_SET_ELEM_INTERVAL_END","NFT_SET_EVAL","NFT_SET_INTERVAL","NFT_SET_MAP","NFT_SET_MAXNAMELEN","NFT_SET_POL_MEMORY","NFT_SET_POL_PERFORMANCE","NFT_SET_TIMEOUT","NFT_TABLE_MAXNAMELEN","NFT_TRACETYPE_POLICY","NFT_TRACETYPE_RETURN","NFT_TRACETYPE_RULE","NFT_TRACETYPE_UNSPEC","NFT_USERDATA_MAXLEN","NFULA_CFG_CMD","NFULA_CFG_FLAGS","NFULA_CFG_MODE","NFULA_CFG_NLBUFSIZ","NFULA_CFG_QTHRESH","NFULA_CFG_TIMEOUT","NFULA_CFG_UNSPEC","NFULA_CT","NFULA_CT_INFO","NFULA_GID","NFULA_HWADDR","NFULA_HWHEADER","NFULA_HWLEN","NFULA_HWTYPE","NFULA_IFINDEX_INDEV","NFULA_IFINDEX_OUTDEV","NFULA_IFINDEX_PHYSINDEV","NFULA_IFINDEX_PHYSOUTDEV","NFULA_L2HDR","NFULA_MARK","NFULA_PACKET_HDR","NFULA_PAYLOAD","NFULA_PREFIX","NFULA_SEQ","NFULA_SEQ_GLOBAL","NFULA_TIMESTAMP","NFULA_UID","NFULA_UNSPEC","NFULA_VLAN","NFULA_VLAN_PROTO","NFULA_VLAN_TCI","NFULA_VLAN_UNSPEC","NFULNL_CFG_CMD_BIND","NFULNL_CFG_CMD_NONE","NFULNL_CFG_CMD_PF_BIND","NFULNL_CFG_CMD_PF_UNBIND","NFULNL_CFG_CMD_UNBIND","NFULNL_CFG_F_CONNTRACK","NFULNL_CFG_F_SEQ","NFULNL_CFG_F_SEQ_GLOBAL","NFULNL_COPY_META","NFULNL_COPY_NONE","NFULNL_COPY_PACKET","NFULNL_MSG_CONFIG","NFULNL_MSG_PACKET","NF_ACCEPT","NF_DROP","NF_INET_FORWARD","NF_INET_LOCAL_IN","NF_INET_LOCAL_OUT","NF_INET_NUMHOOKS","NF_INET_POST_ROUTING","NF_INET_PRE_ROUTING","NF_IP6_FORWARD","NF_IP6_LOCAL_IN","NF_IP6_LOCAL_OUT","NF_IP6_NUMHOOKS","NF_IP6_POST_ROUTING","NF_IP6_PRE_ROUTING","NF_IP6_PRI_CONNTRACK","NF_IP6_PRI_CONNTRACK_DEFRAG","NF_IP6_PRI_CONNTRACK_HELPER","NF_IP6_PRI_FILTER","NF_IP6_PRI_FIRST","NF_IP6_PRI_LAST","NF_IP6_PRI_MANGLE","NF_IP6_PRI_NAT_DST","NF_IP6_PRI_NAT_SRC","NF_IP6_PRI_RAW","NF_IP6_PRI_SECURITY","NF_IP6_PRI_SELINUX_FIRST","NF_IP6_PRI_SELINUX_LAST","NF_IP_FORWARD","NF_IP_LOCAL_IN","NF_IP_LOCAL_OUT","NF_IP_NUMHOOKS","NF_IP_POST_ROUTING","NF_IP_PRE_ROUTING","NF_IP_PRI_CONNTRACK","NF_IP_PRI_CONNTRACK_CONFIRM","NF_IP_PRI_CONNTRACK_DEFRAG","NF_IP_PRI_CONNTRACK_HELPER","NF_IP_PRI_FILTER","NF_IP_PRI_FIRST","NF_IP_PRI_LAST","NF_IP_PRI_MANGLE","NF_IP_PRI_NAT_DST","NF_IP_PRI_NAT_SRC","NF_IP_PRI_RAW","NF_IP_PRI_SECURITY","NF_IP_PRI_SELINUX_FIRST","NF_IP_PRI_SELINUX_LAST","NF_MAX_VERDICT","NF_NETDEV_INGRESS","NF_NETDEV_NUMHOOKS","NF_QUEUE","NF_REPEAT","NF_STOLEN","NF_STOP","NF_VERDICT_BITS","NF_VERDICT_FLAG_QUEUE_BYPASS","NF_VERDICT_MASK","NF_VERDICT_QBITS","NF_VERDICT_QMASK","NILFS_SUPER_MAGIC","NI_DGRAM","NI_MAXHOST","NI_NAMEREQD","NI_NOFQDN","NI_NUMERICHOST","NI_NUMERICSERV","NL0","NL1","NLA_ALIGN","NLA_ALIGNTO","NLA_F_NESTED","NLA_F_NET_BYTEORDER","NLA_TYPE_MASK","NLDLY","NLMSG_DONE","NLMSG_ERROR","NLMSG_MIN_TYPE","NLMSG_NOOP","NLMSG_OVERRUN","NLM_F_ACK","NLM_F_APPEND","NLM_F_ATOMIC","NLM_F_CREATE","NLM_F_DUMP","NLM_F_DUMP_FILTERED","NLM_F_DUMP_INTR","NLM_F_ECHO","NLM_F_EXCL","NLM_F_MATCH","NLM_F_MULTI","NLM_F_REPLACE","NLM_F_REQUEST","NLM_F_ROOT","NOEXPR","NOFLSH","NOSTR","NSFS_MAGIC","NTF_EXT_LEARNED","NTF_MASTER","NTF_OFFLOADED","NTF_PROXY","NTF_ROUTER","NTF_SELF","NTF_USE","NTP_API","NT_ASRS","NT_AUXV","NT_FPREGSET","NT_GWINDOWS","NT_LWPSINFO","NT_LWPSTATUS","NT_PLATFORM","NT_PRCRED","NT_PRFPREG","NT_PRFPXREG","NT_PRPSINFO","NT_PRSTATUS","NT_PRXREG","NT_PSINFO","NT_PSTATUS","NT_TASKSTRUCT","NT_UTSNAME","NUD_DELAY","NUD_FAILED","NUD_INCOMPLETE","NUD_NOARP","NUD_NONE","NUD_PERMANENT","NUD_PROBE","NUD_REACHABLE","NUD_STALE","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","OLD_TIME","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPEN_TREE_CLOEXEC","OPEN_TREE_CLONE","OPOST","ORIG_RAX","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","PACKET_ADD_MEMBERSHIP","PACKET_DROP_MEMBERSHIP","PACKET_MR_ALLMULTI","PACKET_MR_MULTICAST","PACKET_MR_PROMISC","PACKET_MR_UNICAST","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PF_ALG","PF_APPLETALK","PF_ASH","PF_ATMPVC","PF_ATMSVC","PF_AX25","PF_BLUETOOTH","PF_BRIDGE","PF_CAIF","PF_CAN","PF_DECnet","PF_ECONET","PF_IB","PF_IEEE802154","PF_INET","PF_INET6","PF_IPX","PF_IRDA","PF_ISDN","PF_IUCV","PF_KEY","PF_LLC","PF_LOCAL","PF_MASKOS","PF_MASKPROC","PF_MPLS","PF_NETBEUI","PF_NETLINK","PF_NETROM","PF_NFC","PF_PACKET","PF_PHONET","PF_PPPOX","PF_R","PF_RDS","PF_ROSE","PF_ROUTE","PF_RXRPC","PF_SECURITY","PF_SNA","PF_TIPC","PF_UNIX","PF_UNSPEC","PF_VSOCK","PF_W","PF_WANPIPE","PF_X","PF_X25","PF_XDP","PIDFD_NONBLOCK","PIPE_BUF","PM_STR","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLWRBAND","POLLWRNORM","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","POSIX_MADV_DONTNEED","POSIX_MADV_NORMAL","POSIX_MADV_RANDOM","POSIX_MADV_SEQUENTIAL","POSIX_MADV_WILLNEED","POSIX_SPAWN_RESETIDS","POSIX_SPAWN_SETPGROUP","POSIX_SPAWN_SETSCHEDPARAM","POSIX_SPAWN_SETSCHEDULER","POSIX_SPAWN_SETSID","POSIX_SPAWN_SETSIGDEF","POSIX_SPAWN_SETSIGMASK","POSIX_SPAWN_USEVFORK","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_WRITE","PR_CAPBSET_DROP","PR_CAPBSET_READ","PR_CAP_AMBIENT","PR_CAP_AMBIENT_CLEAR_ALL","PR_CAP_AMBIENT_IS_SET","PR_CAP_AMBIENT_LOWER","PR_CAP_AMBIENT_RAISE","PR_ENDIAN_BIG","PR_ENDIAN_LITTLE","PR_ENDIAN_PPC_LITTLE","PR_FPEMU_NOPRINT","PR_FPEMU_SIGFPE","PR_FP_EXC_ASYNC","PR_FP_EXC_DISABLED","PR_FP_EXC_DIV","PR_FP_EXC_INV","PR_FP_EXC_NONRECOV","PR_FP_EXC_OVF","PR_FP_EXC_PRECISE","PR_FP_EXC_RES","PR_FP_EXC_SW_ENABLE","PR_FP_EXC_UND","PR_FP_MODE_FR","PR_FP_MODE_FRE","PR_GET_CHILD_SUBREAPER","PR_GET_DUMPABLE","PR_GET_ENDIAN","PR_GET_FPEMU","PR_GET_FPEXC","PR_GET_FP_MODE","PR_GET_KEEPCAPS","PR_GET_NAME","PR_GET_NO_NEW_PRIVS","PR_GET_PDEATHSIG","PR_GET_SECCOMP","PR_GET_SECUREBITS","PR_GET_SPECULATION_CTRL","PR_GET_THP_DISABLE","PR_GET_TID_ADDRESS","PR_GET_TIMERSLACK","PR_GET_TIMING","PR_GET_TSC","PR_GET_UNALIGN","PR_MCE_KILL","PR_MCE_KILL_CLEAR","PR_MCE_KILL_DEFAULT","PR_MCE_KILL_EARLY","PR_MCE_KILL_GET","PR_MCE_KILL_LATE","PR_MCE_KILL_SET","PR_MPX_DISABLE_MANAGEMENT","PR_MPX_ENABLE_MANAGEMENT","PR_SCHED_CORE","PR_SCHED_CORE_CREATE","PR_SCHED_CORE_GET","PR_SCHED_CORE_MAX","PR_SCHED_CORE_SCOPE_PROCESS_GROUP","PR_SCHED_CORE_SCOPE_THREAD","PR_SCHED_CORE_SCOPE_THREAD_GROUP","PR_SCHED_CORE_SHARE_FROM","PR_SCHED_CORE_SHARE_TO","PR_SET_CHILD_SUBREAPER","PR_SET_DUMPABLE","PR_SET_ENDIAN","PR_SET_FPEMU","PR_SET_FPEXC","PR_SET_FP_MODE","PR_SET_KEEPCAPS","PR_SET_MM","PR_SET_MM_ARG_END","PR_SET_MM_ARG_START","PR_SET_MM_AUXV","PR_SET_MM_BRK","PR_SET_MM_END_CODE","PR_SET_MM_END_DATA","PR_SET_MM_ENV_END","PR_SET_MM_ENV_START","PR_SET_MM_EXE_FILE","PR_SET_MM_MAP","PR_SET_MM_MAP_SIZE","PR_SET_MM_START_BRK","PR_SET_MM_START_CODE","PR_SET_MM_START_DATA","PR_SET_MM_START_STACK","PR_SET_NAME","PR_SET_NO_NEW_PRIVS","PR_SET_PDEATHSIG","PR_SET_PTRACER","PR_SET_PTRACER_ANY","PR_SET_SECCOMP","PR_SET_SECUREBITS","PR_SET_SPECULATION_CTRL","PR_SET_THP_DISABLE","PR_SET_TIMERSLACK","PR_SET_TIMING","PR_SET_TSC","PR_SET_UNALIGN","PR_SET_VMA","PR_SET_VMA_ANON_NAME","PR_SPEC_DISABLE","PR_SPEC_DISABLE_NOEXEC","PR_SPEC_ENABLE","PR_SPEC_FORCE_DISABLE","PR_SPEC_INDIRECT_BRANCH","PR_SPEC_NOT_AFFECTED","PR_SPEC_PRCTL","PR_SPEC_STORE_BYPASS","PR_TASK_PERF_EVENTS_DISABLE","PR_TASK_PERF_EVENTS_ENABLE","PR_TIMING_STATISTICAL","PR_TIMING_TIMESTAMP","PR_TSC_ENABLE","PR_TSC_SIGSEGV","PR_UNALIGN_NOPRINT","PR_UNALIGN_SIGBUS","PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","PTHREAD_COND_INITIALIZER","PTHREAD_CREATE_DETACHED","PTHREAD_CREATE_JOINABLE","PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","PTHREAD_MUTEX_ADAPTIVE_NP","PTHREAD_MUTEX_DEFAULT","PTHREAD_MUTEX_ERRORCHECK","PTHREAD_MUTEX_INITIALIZER","PTHREAD_MUTEX_NORMAL","PTHREAD_MUTEX_RECURSIVE","PTHREAD_MUTEX_ROBUST","PTHREAD_MUTEX_STALLED","PTHREAD_ONCE_INIT","PTHREAD_PRIO_INHERIT","PTHREAD_PRIO_NONE","PTHREAD_PRIO_PROTECT","PTHREAD_PROCESS_PRIVATE","PTHREAD_PROCESS_SHARED","PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","PTHREAD_RWLOCK_INITIALIZER","PTHREAD_STACK_MIN","PTRACE_ATTACH","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_SECCOMP","PTRACE_EVENT_STOP","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETREGSET","PTRACE_GETSIGINFO","PTRACE_GETSIGMASK","PTRACE_GET_RSEQ_CONFIGURATION","PTRACE_GET_SYSCALL_INFO","PTRACE_INTERRUPT","PTRACE_KILL","PTRACE_LISTEN","PTRACE_O_EXITKILL","PTRACE_O_MASK","PTRACE_O_SUSPEND_SECCOMP","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKSIGINFO","PTRACE_PEEKSIGINFO_SHARED","PTRACE_PEEKTEXT","PTRACE_PEEKUSER","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSER","PTRACE_SEIZE","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETREGSET","PTRACE_SETSIGINFO","PTRACE_SETSIGMASK","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSCALL_INFO_ENTRY","PTRACE_SYSCALL_INFO_EXIT","PTRACE_SYSCALL_INFO_NONE","PTRACE_SYSCALL_INFO_SECCOMP","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","PT_DYNAMIC","PT_GNU_EH_FRAME","PT_GNU_RELRO","PT_GNU_STACK","PT_HIOS","PT_HIPROC","PT_HISUNW","PT_INTERP","PT_LOAD","PT_LOOS","PT_LOPROC","PT_LOSUNW","PT_NOTE","PT_NULL","PT_NUM","PT_PHDR","PT_SHLIB","PT_SUNWBSS","PT_SUNWSTACK","PT_TLS","P_ALL","P_PGID","P_PID","P_PIDFD","QCMD","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_ALL","QIF_BLIMITS","QIF_BTIME","QIF_ILIMITS","QIF_INODES","QIF_ITIME","QIF_LIMITS","QIF_SPACE","QIF_TIMES","QIF_USAGE","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","Q_GETFMT","Q_GETINFO","Q_GETQUOTA","Q_QUOTAOFF","Q_QUOTAON","Q_SETINFO","Q_SETQUOTA","Q_SYNC","R10","R11","R12","R13","R14","R15","R8","R9","RADIXCHAR","RAND_MAX","RAX","RBP","RBX","RB_AUTOBOOT","RB_DISABLE_CAD","RB_ENABLE_CAD","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_SW_SUSPEND","RCX","RDI","RDTGROUP_SUPER_MAGIC","RDX","READ_IMPLIES_EXEC","REG_BADBR","REG_BADPAT","REG_BADRPT","REG_CR2","REG_CSGSFS","REG_EBRACE","REG_EBRACK","REG_ECOLLATE","REG_ECTYPE","REG_EEND","REG_EESCAPE","REG_EFL","REG_ENOSYS","REG_EPAREN","REG_ERANGE","REG_ERPAREN","REG_ERR","REG_ESIZE","REG_ESPACE","REG_ESUBREG","REG_EXTENDED","REG_ICASE","REG_NEWLINE","REG_NOMATCH","REG_NOSUB","REG_NOTBOL","REG_NOTEOL","REG_OLDMASK","REG_R10","REG_R11","REG_R12","REG_R13","REG_R14","REG_R15","REG_R8","REG_R9","REG_RAX","REG_RBP","REG_RBX","REG_RCX","REG_RDI","REG_RDX","REG_RIP","REG_RSI","REG_RSP","REG_STARTEND","REG_TRAPNO","REISERFS_SUPER_MAGIC","REL_CNT","REL_MAX","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","REP_CNT","REP_MAX","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RIP","RLIM64_INFINITY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NLIMITS","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","RLIM_SAVED_CUR","RLIM_SAVED_MAX","RSI","RSP","RTA_CACHEINFO","RTA_DST","RTA_ENCAP","RTA_ENCAP_TYPE","RTA_EXPIRES","RTA_FLOW","RTA_GATEWAY","RTA_IIF","RTA_MARK","RTA_METRICS","RTA_MFC_STATS","RTA_MP_ALGO","RTA_MULTIPATH","RTA_NEWDST","RTA_OIF","RTA_PAD","RTA_PREF","RTA_PREFSRC","RTA_PRIORITY","RTA_PROTOINFO","RTA_SESSION","RTA_SRC","RTA_TABLE","RTA_TTL_PROPAGATE","RTA_UID","RTA_UNSPEC","RTA_VIA","RTCF_DIRECTSRC","RTCF_DOREDIRECT","RTCF_LOG","RTCF_MASQ","RTCF_NAT","RTCF_VALVE","RTEXT_FILTER_BRVLAN","RTEXT_FILTER_BRVLAN_COMPRESSED","RTEXT_FILTER_CFM_CONFIG","RTEXT_FILTER_CFM_STATUS","RTEXT_FILTER_MRP","RTEXT_FILTER_SKIP_STATS","RTEXT_FILTER_VF","RTF_ADDRCLASSMASK","RTF_ADDRCONF","RTF_ALLONLINK","RTF_BROADCAST","RTF_CACHE","RTF_DEFAULT","RTF_DYNAMIC","RTF_FLOW","RTF_GATEWAY","RTF_HOST","RTF_INTERFACE","RTF_IRTT","RTF_LINKRT","RTF_LOCAL","RTF_MODIFIED","RTF_MSS","RTF_MTU","RTF_MULTICAST","RTF_NAT","RTF_NOFORWARD","RTF_NONEXTHOP","RTF_NOPMTUDISC","RTF_POLICY","RTF_REINSTATE","RTF_REJECT","RTF_STATIC","RTF_THROW","RTF_UP","RTF_WINDOW","RTF_XRESOLVE","RTLD_DEEPBIND","RTLD_DEFAULT","RTLD_DI_CONFIGADDR","RTLD_DI_LINKMAP","RTLD_DI_LMID","RTLD_DI_ORIGIN","RTLD_DI_PROFILENAME","RTLD_DI_PROFILEOUT","RTLD_DI_SERINFO","RTLD_DI_SERINFOSIZE","RTLD_DI_TLS_DATA","RTLD_DI_TLS_MODID","RTLD_GLOBAL","RTLD_LAZY","RTLD_LOCAL","RTLD_NEXT","RTLD_NODELETE","RTLD_NOLOAD","RTLD_NOW","RTMGRP_DECnet_IFADDR","RTMGRP_DECnet_ROUTE","RTMGRP_IPV4_IFADDR","RTMGRP_IPV4_MROUTE","RTMGRP_IPV4_ROUTE","RTMGRP_IPV4_RULE","RTMGRP_IPV6_IFADDR","RTMGRP_IPV6_IFINFO","RTMGRP_IPV6_MROUTE","RTMGRP_IPV6_PREFIX","RTMGRP_IPV6_ROUTE","RTMGRP_LINK","RTMGRP_NEIGH","RTMGRP_NOTIFY","RTMGRP_TC","RTMSG_AR_FAILED","RTMSG_CONTROL","RTMSG_DELDEVICE","RTMSG_DELROUTE","RTMSG_DELRULE","RTMSG_NEWDEVICE","RTMSG_NEWROUTE","RTMSG_NEWRULE","RTMSG_OVERRUN","RTM_DELACTION","RTM_DELADDR","RTM_DELADDRLABEL","RTM_DELLINK","RTM_DELMDB","RTM_DELNEIGH","RTM_DELNETCONF","RTM_DELNSID","RTM_DELQDISC","RTM_DELROUTE","RTM_DELRULE","RTM_DELTCLASS","RTM_DELTFILTER","RTM_F_CLONED","RTM_F_EQUALIZE","RTM_F_FIB_MATCH","RTM_F_LOOKUP_TABLE","RTM_F_NOTIFY","RTM_F_PREFIX","RTM_GETACTION","RTM_GETADDR","RTM_GETADDRLABEL","RTM_GETANYCAST","RTM_GETDCB","RTM_GETLINK","RTM_GETMDB","RTM_GETMULTICAST","RTM_GETNEIGH","RTM_GETNEIGHTBL","RTM_GETNETCONF","RTM_GETNSID","RTM_GETQDISC","RTM_GETROUTE","RTM_GETRULE","RTM_GETSTATS","RTM_GETTCLASS","RTM_GETTFILTER","RTM_NEWACTION","RTM_NEWADDR","RTM_NEWADDRLABEL","RTM_NEWCACHEREPORT","RTM_NEWLINK","RTM_NEWMDB","RTM_NEWNDUSEROPT","RTM_NEWNEIGH","RTM_NEWNEIGHTBL","RTM_NEWNETCONF","RTM_NEWNSID","RTM_NEWPREFIX","RTM_NEWQDISC","RTM_NEWROUTE","RTM_NEWRULE","RTM_NEWSTATS","RTM_NEWTCLASS","RTM_NEWTFILTER","RTM_SETDCB","RTM_SETLINK","RTM_SETNEIGHTBL","RTNLGRP_BRVLAN","RTNLGRP_DCB","RTNLGRP_DECnet_IFADDR","RTNLGRP_DECnet_ROUTE","RTNLGRP_DECnet_RULE","RTNLGRP_IPV4_IFADDR","RTNLGRP_IPV4_MROUTE","RTNLGRP_IPV4_MROUTE_R","RTNLGRP_IPV4_NETCONF","RTNLGRP_IPV4_ROUTE","RTNLGRP_IPV4_RULE","RTNLGRP_IPV6_IFADDR","RTNLGRP_IPV6_IFINFO","RTNLGRP_IPV6_MROUTE","RTNLGRP_IPV6_MROUTE_R","RTNLGRP_IPV6_NETCONF","RTNLGRP_IPV6_PREFIX","RTNLGRP_IPV6_ROUTE","RTNLGRP_IPV6_RULE","RTNLGRP_LINK","RTNLGRP_MCTP_IFADDR","RTNLGRP_MDB","RTNLGRP_MPLS_NETCONF","RTNLGRP_MPLS_ROUTE","RTNLGRP_ND_USEROPT","RTNLGRP_NEIGH","RTNLGRP_NEXTHOP","RTNLGRP_NONE","RTNLGRP_NOP2","RTNLGRP_NOP4","RTNLGRP_NOTIFY","RTNLGRP_NSID","RTNLGRP_PHONET_IFADDR","RTNLGRP_PHONET_ROUTE","RTNLGRP_STATS","RTNLGRP_TC","RTNLGRP_TUNNEL","RTN_ANYCAST","RTN_BLACKHOLE","RTN_BROADCAST","RTN_LOCAL","RTN_MULTICAST","RTN_NAT","RTN_PROHIBIT","RTN_THROW","RTN_UNICAST","RTN_UNREACHABLE","RTN_UNSPEC","RTN_XRESOLVE","RTPROT_BOOT","RTPROT_KERNEL","RTPROT_REDIRECT","RTPROT_STATIC","RTPROT_UNSPEC","RT_ADDRCLASS","RT_CLASS_DEFAULT","RT_CLASS_LOCAL","RT_CLASS_MAIN","RT_CLASS_MAX","RT_CLASS_UNSPEC","RT_LOCALADDR","RT_SCOPE_HOST","RT_SCOPE_LINK","RT_SCOPE_NOWHERE","RT_SCOPE_SITE","RT_SCOPE_UNIVERSE","RT_TABLE_COMPAT","RT_TABLE_DEFAULT","RT_TABLE_LOCAL","RT_TABLE_MAIN","RT_TABLE_UNSPEC","RT_TOS","RUN_LVL","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","R_OK","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SCHED_BATCH","SCHED_FIFO","SCHED_IDLE","SCHED_OTHER","SCHED_RESET_ON_FORK","SCHED_RR","SCM_CREDENTIALS","SCM_J1939_DEST_ADDR","SCM_J1939_DEST_NAME","SCM_J1939_ERRQUEUE","SCM_J1939_PRIO","SCM_RIGHTS","SCM_TIMESTAMP","SCM_TIMESTAMPING","SCM_TIMESTAMPING_OPT_STATS","SCM_TIMESTAMPING_PKTINFO","SCM_TIMESTAMPNS","SCM_TXTIME","SCM_WIFI_STATUS","SCTP_ABORT","SCTP_ADAPTATION_LAYER","SCTP_ADDR_OVER","SCTP_ALL_ASSOC","SCTP_ASSOCINFO","SCTP_AUTHINFO","SCTP_AUTH_ACTIVE_KEY","SCTP_AUTH_CHUNK","SCTP_AUTH_DEACTIVATE_KEY","SCTP_AUTH_DELETE_KEY","SCTP_AUTH_KEY","SCTP_AUTOCLOSE","SCTP_AUTO_ASCONF","SCTP_CONTEXT","SCTP_CURRENT_ASSOC","SCTP_DEFAULT_SEND_PARAM","SCTP_DEFAULT_SNDINFO","SCTP_DELAYED_ACK","SCTP_DELAYED_ACK_TIME","SCTP_DELAYED_SACK","SCTP_DISABLE_FRAGMENTS","SCTP_DSTADDRV4","SCTP_DSTADDRV6","SCTP_ENABLE_CHANGE_ASSOC_REQ","SCTP_ENABLE_RESET_ASSOC_REQ","SCTP_ENABLE_RESET_STREAM_REQ","SCTP_ENABLE_STRRESET_MASK","SCTP_EOF","SCTP_EVENTS","SCTP_FRAGMENT_INTERLEAVE","SCTP_FUTURE_ASSOC","SCTP_GET_ASSOC_ID_LIST","SCTP_GET_ASSOC_NUMBER","SCTP_GET_PEER_ADDR_INFO","SCTP_HMAC_IDENT","SCTP_INIT","SCTP_INITMSG","SCTP_I_WANT_MAPPED_V4_ADDR","SCTP_LOCAL_AUTH_CHUNKS","SCTP_MAXSEG","SCTP_MAX_BURST","SCTP_NODELAY","SCTP_NOTIFICATION","SCTP_NXTINFO","SCTP_PARTIAL_DELIVERY_POINT","SCTP_PEER_ADDR_PARAMS","SCTP_PEER_ADDR_THLDS","SCTP_PEER_ADDR_THLDS_V2","SCTP_PEER_AUTH_CHUNKS","SCTP_PRIMARY_ADDR","SCTP_PRINFO","SCTP_PR_INDEX","SCTP_PR_POLICY","SCTP_PR_PRIO_ENABLED","SCTP_PR_RTX_ENABLED","SCTP_PR_SCTP_ALL","SCTP_PR_SCTP_MASK","SCTP_PR_SCTP_MAX","SCTP_PR_SCTP_NONE","SCTP_PR_SCTP_PRIO","SCTP_PR_SCTP_RTX","SCTP_PR_SCTP_TTL","SCTP_PR_SET_POLICY","SCTP_PR_TTL_ENABLED","SCTP_RCVINFO","SCTP_RECVNXTINFO","SCTP_RECVRCVINFO","SCTP_REUSE_PORT","SCTP_RTOINFO","SCTP_SACK_IMMEDIATELY","SCTP_SENDALL","SCTP_SET_PEER_PRIMARY_ADDR","SCTP_SNDINFO","SCTP_SNDRCV","SCTP_STATUS","SCTP_STREAM_RESET_INCOMING","SCTP_STREAM_RESET_OUTGOING","SCTP_UNORDERED","SECCOMP_FILTER_FLAG_LOG","SECCOMP_FILTER_FLAG_SPEC_ALLOW","SECCOMP_FILTER_FLAG_TSYNC","SECCOMP_GET_ACTION_AVAIL","SECCOMP_GET_NOTIF_SIZES","SECCOMP_MODE_DISABLED","SECCOMP_MODE_FILTER","SECCOMP_MODE_STRICT","SECCOMP_RET_ACTION","SECCOMP_RET_ACTION_FULL","SECCOMP_RET_ALLOW","SECCOMP_RET_DATA","SECCOMP_RET_ERRNO","SECCOMP_RET_KILL","SECCOMP_RET_KILL_PROCESS","SECCOMP_RET_KILL_THREAD","SECCOMP_RET_LOG","SECCOMP_RET_TRACE","SECCOMP_RET_TRAP","SECCOMP_SET_MODE_FILTER","SECCOMP_SET_MODE_STRICT","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_SET","SELFMAG","SELINUX_MAGIC","SEM_FAILED","SFD_CLOEXEC","SFD_NONBLOCK","SHM_EXEC","SHM_HUGETLB","SHM_LOCK","SHM_NORESERVE","SHM_R","SHM_RDONLY","SHM_REMAP","SHM_RND","SHM_UNLOCK","SHM_W","SHORT_INODE","SHUT_RD","SHUT_RDWR","SHUT_WR","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMAX","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_DFL","SIG_ERR","SIG_IGN","SIG_SETMASK","SIG_UNBLOCK","SIOCADDMULTI","SIOCADDRT","SIOCDARP","SIOCDELMULTI","SIOCDELRT","SIOCDIFADDR","SIOCDRARP","SIOCETHTOOL","SIOCGARP","SIOCGHWTSTAMP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGMIIPHY","SIOCGMIIREG","SIOCGRARP","SIOCGSKNS","SIOCOUTQNSD","SIOCSARP","SIOCSHWTSTAMP","SIOCSIFADDR","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNAME","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSMIIREG","SIOCSRARP","SIOCWANDEV","SIOGIFINDEX","SI_LOAD_SHIFT","SKF_AD_ALU_XOR_X","SKF_AD_CPU","SKF_AD_HATYPE","SKF_AD_IFINDEX","SKF_AD_MARK","SKF_AD_MAX","SKF_AD_NLATTR","SKF_AD_NLATTR_NEST","SKF_AD_OFF","SKF_AD_PAY_OFFSET","SKF_AD_PKTTYPE","SKF_AD_PROTOCOL","SKF_AD_QUEUE","SKF_AD_RANDOM","SKF_AD_RXHASH","SKF_AD_VLAN_TAG","SKF_AD_VLAN_TAG_PRESENT","SKF_AD_VLAN_TPID","SKF_LL_OFF","SKF_NET_OFF","SK_MEMINFO_BACKLOG","SK_MEMINFO_DROPS","SK_MEMINFO_FWD_ALLOC","SK_MEMINFO_OPTMEM","SK_MEMINFO_RCVBUF","SK_MEMINFO_RMEM_ALLOC","SK_MEMINFO_SNDBUF","SK_MEMINFO_WMEM_ALLOC","SK_MEMINFO_WMEM_QUEUED","SMACK_MAGIC","SMB_SUPER_MAGIC","SND_CNT","SND_MAX","SOCK_CLOEXEC","SOCK_DCCP","SOCK_DGRAM","SOCK_NONBLOCK","SOCK_PACKET","SOCK_RAW","SOCK_RDM","SOCK_SEQPACKET","SOCK_STREAM","SOF_TIMESTAMPING_OPT_CMSG","SOF_TIMESTAMPING_OPT_ID","SOF_TIMESTAMPING_OPT_PKTINFO","SOF_TIMESTAMPING_OPT_STATS","SOF_TIMESTAMPING_OPT_TSONLY","SOF_TIMESTAMPING_OPT_TX_SWHW","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_SYS_HARDWARE","SOF_TIMESTAMPING_TX_ACK","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SCHED","SOF_TIMESTAMPING_TX_SOFTWARE","SOF_TXTIME_DEADLINE_MODE","SOF_TXTIME_REPORT_ERRORS","SOL_AAL","SOL_ALG","SOL_ATM","SOL_BLUETOOTH","SOL_CAIF","SOL_CAN_BASE","SOL_CAN_J1939","SOL_CAN_RAW","SOL_DCCP","SOL_DECNET","SOL_ICMPV6","SOL_IP","SOL_IPV6","SOL_IRDA","SOL_IUCV","SOL_LLC","SOL_NETBEUI","SOL_NETLINK","SOL_NFC","SOL_PACKET","SOL_PNPIPE","SOL_PPPOL2TP","SOL_RAW","SOL_RDS","SOL_RXRPC","SOL_SOCKET","SOL_TCP","SOL_TIPC","SOL_TLS","SOL_UDP","SOL_X25","SOL_XDP","SOMAXCONN","SO_ACCEPTCONN","SO_ATTACH_BPF","SO_ATTACH_FILTER","SO_ATTACH_REUSEPORT_CBPF","SO_ATTACH_REUSEPORT_EBPF","SO_BINDTODEVICE","SO_BINDTOIFINDEX","SO_BPF_EXTENSIONS","SO_BROADCAST","SO_BSDCOMPAT","SO_BUSY_POLL","SO_CNX_ADVICE","SO_COOKIE","SO_DEBUG","SO_DETACH_BPF","SO_DETACH_FILTER","SO_DETACH_REUSEPORT_BPF","SO_DOMAIN","SO_DONTROUTE","SO_EE_OFFENDER","SO_EE_ORIGIN_ICMP","SO_EE_ORIGIN_ICMP6","SO_EE_ORIGIN_LOCAL","SO_EE_ORIGIN_NONE","SO_EE_ORIGIN_TIMESTAMPING","SO_EE_ORIGIN_TXSTATUS","SO_ERROR","SO_GET_FILTER","SO_INCOMING_CPU","SO_INCOMING_NAPI_ID","SO_J1939_ERRQUEUE","SO_J1939_FILTER","SO_J1939_PROMISC","SO_J1939_SEND_PRIO","SO_KEEPALIVE","SO_LINGER","SO_LOCK_FILTER","SO_MARK","SO_MAX_PACING_RATE","SO_MEMINFO","SO_NOFCS","SO_NO_CHECK","SO_OOBINLINE","SO_ORIGINAL_DST","SO_PASSCRED","SO_PASSSEC","SO_PEEK_OFF","SO_PEERCRED","SO_PEERGROUPS","SO_PEERNAME","SO_PEERSEC","SO_PRIORITY","SO_PROTOCOL","SO_RCVBUF","SO_RCVBUFFORCE","SO_RCVLOWAT","SO_RCVTIMEO","SO_RCVTIMEO_NEW","SO_REUSEADDR","SO_REUSEPORT","SO_RXQ_OVFL","SO_SECURITY_AUTHENTICATION","SO_SECURITY_ENCRYPTION_NETWORK","SO_SECURITY_ENCRYPTION_TRANSPORT","SO_SELECT_ERR_QUEUE","SO_SNDBUF","SO_SNDBUFFORCE","SO_SNDLOWAT","SO_SNDTIMEO","SO_SNDTIMEO_NEW","SO_TIMESTAMP","SO_TIMESTAMPING","SO_TIMESTAMPING_NEW","SO_TIMESTAMPNS","SO_TIMESTAMPNS_NEW","SO_TIMESTAMP_NEW","SO_TXTIME","SO_TYPE","SO_WIFI_STATUS","SO_ZEROCOPY","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SS","SS_DISABLE","SS_ONSTACK","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_DAX","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_MOUNT_ROOT","STATX_ATTR_NODUMP","STATX_ATTR_VERITY","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_DIOALIGN","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STA_CLK","STA_CLOCKERR","STA_DEL","STA_FLL","STA_FREQHOLD","STA_INS","STA_MODE","STA_NANO","STA_PLL","STA_PPSERROR","STA_PPSFREQ","STA_PPSJITTER","STA_PPSSIGNAL","STA_PPSTIME","STA_PPSWANDER","STA_RONLY","STA_UNSYNC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","STICKY_TIMEOUTS","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","SW_CNT","SW_MAX","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYN_CNT","SYN_MAX","SYSFS_MAGIC","SYS__sysctl","SYS_accept","SYS_accept4","SYS_access","SYS_acct","SYS_add_key","SYS_adjtimex","SYS_afs_syscall","SYS_alarm","SYS_arch_prctl","SYS_bind","SYS_bpf","SYS_brk","SYS_capget","SYS_capset","SYS_chdir","SYS_chmod","SYS_chown","SYS_chroot","SYS_clock_adjtime","SYS_clock_getres","SYS_clock_gettime","SYS_clock_nanosleep","SYS_clock_settime","SYS_clone","SYS_clone3","SYS_close","SYS_close_range","SYS_connect","SYS_copy_file_range","SYS_creat","SYS_create_module","SYS_delete_module","SYS_dup","SYS_dup2","SYS_dup3","SYS_epoll_create","SYS_epoll_create1","SYS_epoll_ctl","SYS_epoll_ctl_old","SYS_epoll_pwait","SYS_epoll_pwait2","SYS_epoll_wait","SYS_epoll_wait_old","SYS_eventfd","SYS_eventfd2","SYS_execve","SYS_execveat","SYS_exit","SYS_exit_group","SYS_faccessat","SYS_faccessat2","SYS_fadvise64","SYS_fallocate","SYS_fanotify_init","SYS_fanotify_mark","SYS_fchdir","SYS_fchmod","SYS_fchmodat","SYS_fchown","SYS_fchownat","SYS_fcntl","SYS_fdatasync","SYS_fgetxattr","SYS_finit_module","SYS_flistxattr","SYS_flock","SYS_fork","SYS_fremovexattr","SYS_fsconfig","SYS_fsetxattr","SYS_fsmount","SYS_fsopen","SYS_fspick","SYS_fstat","SYS_fstatfs","SYS_fsync","SYS_ftruncate","SYS_futex","SYS_futex_waitv","SYS_futimesat","SYS_get_kernel_syms","SYS_get_mempolicy","SYS_get_robust_list","SYS_get_thread_area","SYS_getcpu","SYS_getcwd","SYS_getdents","SYS_getdents64","SYS_getegid","SYS_geteuid","SYS_getgid","SYS_getgroups","SYS_getitimer","SYS_getpeername","SYS_getpgid","SYS_getpgrp","SYS_getpid","SYS_getpmsg","SYS_getppid","SYS_getpriority","SYS_getrandom","SYS_getresgid","SYS_getresuid","SYS_getrlimit","SYS_getrusage","SYS_getsid","SYS_getsockname","SYS_getsockopt","SYS_gettid","SYS_gettimeofday","SYS_getuid","SYS_getxattr","SYS_init_module","SYS_inotify_add_watch","SYS_inotify_init","SYS_inotify_init1","SYS_inotify_rm_watch","SYS_io_cancel","SYS_io_destroy","SYS_io_getevents","SYS_io_setup","SYS_io_submit","SYS_io_uring_enter","SYS_io_uring_register","SYS_io_uring_setup","SYS_ioctl","SYS_ioperm","SYS_iopl","SYS_ioprio_get","SYS_ioprio_set","SYS_kcmp","SYS_kexec_file_load","SYS_kexec_load","SYS_keyctl","SYS_kill","SYS_landlock_add_rule","SYS_landlock_create_ruleset","SYS_landlock_restrict_self","SYS_lchown","SYS_lgetxattr","SYS_link","SYS_linkat","SYS_listen","SYS_listxattr","SYS_llistxattr","SYS_lookup_dcookie","SYS_lremovexattr","SYS_lseek","SYS_lsetxattr","SYS_lstat","SYS_madvise","SYS_mbind","SYS_membarrier","SYS_memfd_create","SYS_memfd_secret","SYS_migrate_pages","SYS_mincore","SYS_mkdir","SYS_mkdirat","SYS_mknod","SYS_mknodat","SYS_mlock","SYS_mlock2","SYS_mlockall","SYS_mmap","SYS_modify_ldt","SYS_mount","SYS_mount_setattr","SYS_move_mount","SYS_move_pages","SYS_mprotect","SYS_mq_getsetattr","SYS_mq_notify","SYS_mq_open","SYS_mq_timedreceive","SYS_mq_timedsend","SYS_mq_unlink","SYS_mremap","SYS_msgctl","SYS_msgget","SYS_msgrcv","SYS_msgsnd","SYS_msync","SYS_munlock","SYS_munlockall","SYS_munmap","SYS_name_to_handle_at","SYS_nanosleep","SYS_newfstatat","SYS_nfsservctl","SYS_open","SYS_open_by_handle_at","SYS_open_tree","SYS_openat","SYS_openat2","SYS_pause","SYS_perf_event_open","SYS_personality","SYS_pidfd_getfd","SYS_pidfd_open","SYS_pidfd_send_signal","SYS_pipe","SYS_pipe2","SYS_pivot_root","SYS_pkey_alloc","SYS_pkey_free","SYS_pkey_mprotect","SYS_poll","SYS_ppoll","SYS_prctl","SYS_pread64","SYS_preadv","SYS_preadv2","SYS_prlimit64","SYS_process_madvise","SYS_process_mrelease","SYS_process_vm_readv","SYS_process_vm_writev","SYS_pselect6","SYS_ptrace","SYS_putpmsg","SYS_pwrite64","SYS_pwritev","SYS_pwritev2","SYS_query_module","SYS_quotactl","SYS_quotactl_fd","SYS_read","SYS_readahead","SYS_readlink","SYS_readlinkat","SYS_readv","SYS_reboot","SYS_recvfrom","SYS_recvmmsg","SYS_recvmsg","SYS_remap_file_pages","SYS_removexattr","SYS_rename","SYS_renameat","SYS_renameat2","SYS_request_key","SYS_restart_syscall","SYS_rmdir","SYS_rseq","SYS_rt_sigaction","SYS_rt_sigpending","SYS_rt_sigprocmask","SYS_rt_sigqueueinfo","SYS_rt_sigreturn","SYS_rt_sigsuspend","SYS_rt_sigtimedwait","SYS_rt_tgsigqueueinfo","SYS_sched_get_priority_max","SYS_sched_get_priority_min","SYS_sched_getaffinity","SYS_sched_getattr","SYS_sched_getparam","SYS_sched_getscheduler","SYS_sched_rr_get_interval","SYS_sched_setaffinity","SYS_sched_setattr","SYS_sched_setparam","SYS_sched_setscheduler","SYS_sched_yield","SYS_seccomp","SYS_security","SYS_select","SYS_semctl","SYS_semget","SYS_semop","SYS_semtimedop","SYS_sendfile","SYS_sendmmsg","SYS_sendmsg","SYS_sendto","SYS_set_mempolicy","SYS_set_mempolicy_home_node","SYS_set_robust_list","SYS_set_thread_area","SYS_set_tid_address","SYS_setdomainname","SYS_setfsgid","SYS_setfsuid","SYS_setgid","SYS_setgroups","SYS_sethostname","SYS_setitimer","SYS_setns","SYS_setpgid","SYS_setpriority","SYS_setregid","SYS_setresgid","SYS_setresuid","SYS_setreuid","SYS_setrlimit","SYS_setsid","SYS_setsockopt","SYS_settimeofday","SYS_setuid","SYS_setxattr","SYS_shmat","SYS_shmctl","SYS_shmdt","SYS_shmget","SYS_shutdown","SYS_sigaltstack","SYS_signalfd","SYS_signalfd4","SYS_socket","SYS_socketpair","SYS_splice","SYS_stat","SYS_statfs","SYS_statx","SYS_swapoff","SYS_swapon","SYS_symlink","SYS_symlinkat","SYS_sync","SYS_sync_file_range","SYS_syncfs","SYS_sysfs","SYS_sysinfo","SYS_syslog","SYS_tee","SYS_tgkill","SYS_time","SYS_timer_create","SYS_timer_delete","SYS_timer_getoverrun","SYS_timer_gettime","SYS_timer_settime","SYS_timerfd_create","SYS_timerfd_gettime","SYS_timerfd_settime","SYS_times","SYS_tkill","SYS_truncate","SYS_tuxcall","SYS_umask","SYS_umount2","SYS_uname","SYS_unlink","SYS_unlinkat","SYS_unshare","SYS_uselib","SYS_userfaultfd","SYS_ustat","SYS_utime","SYS_utimensat","SYS_utimes","SYS_vfork","SYS_vhangup","SYS_vmsplice","SYS_vserver","SYS_wait4","SYS_waitid","SYS_write","SYS_writev","S_IEXEC","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IREAD","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWRITE","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCA_CHAIN","TCA_DUMP_INVISIBLE","TCA_FCNT","TCA_HW_OFFLOAD","TCA_KIND","TCA_OPTIONS","TCA_PAD","TCA_RATE","TCA_STAB","TCA_STATS","TCA_STATS2","TCA_UNSPEC","TCA_XSTATS","TCFLSH","TCGETA","TCGETS","TCGETS2","TCGETX","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCP_CC_INFO","TCP_CM_INQ","TCP_CONGESTION","TCP_COOKIE_TRANSACTIONS","TCP_CORK","TCP_DEFER_ACCEPT","TCP_FASTOPEN","TCP_FASTOPEN_CONNECT","TCP_FASTOPEN_KEY","TCP_FASTOPEN_NO_COOKIE","TCP_INFO","TCP_INQ","TCP_KEEPCNT","TCP_KEEPIDLE","TCP_KEEPINTVL","TCP_LINGER2","TCP_MAXSEG","TCP_MD5SIG","TCP_MD5SIG_EXT","TCP_MD5SIG_MAXKEYLEN","TCP_NODELAY","TCP_NOTSENT_LOWAT","TCP_QUEUE_SEQ","TCP_QUICKACK","TCP_REPAIR","TCP_REPAIR_OPTIONS","TCP_REPAIR_QUEUE","TCP_REPAIR_WINDOW","TCP_SAVED_SYN","TCP_SAVE_SYN","TCP_SYNCNT","TCP_THIN_DUPACK","TCP_THIN_LINEAR_TIMEOUTS","TCP_TIMESTAMP","TCP_ULP","TCP_USER_TIMEOUT","TCP_WINDOW_CLAMP","TCP_ZEROCOPY_RECEIVE","TCSADRAIN","TCSAFLUSH","TCSANOW","TCSBRK","TCSBRKP","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCSETX","TCSETXF","TCSETXW","TCXONC","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","TFD_TIMER_CANCEL_ON_SET","THOUSEP","TIMER_ABSTIME","TIME_BAD","TIME_DEL","TIME_ERROR","TIME_INS","TIME_OK","TIME_OOP","TIME_WAIT","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGDEV","TIOCGETD","TIOCGEXCL","TIOCGICOUNT","TIOCGLCKTRMIOS","TIOCGPGRP","TIOCGPKT","TIOCGPTLCK","TIOCGPTN","TIOCGPTPEER","TIOCGRS485","TIOCGSERIAL","TIOCGSID","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMIWAIT","TIOCMSET","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCSBRK","TIOCSCTTY","TIOCSERCONFIG","TIOCSERGETLSR","TIOCSERGETMULTI","TIOCSERGSTRUCT","TIOCSERGWILD","TIOCSERSETMULTI","TIOCSERSWILD","TIOCSETD","TIOCSIG","TIOCSLCKTRMIOS","TIOCSPGRP","TIOCSPTLCK","TIOCSRS485","TIOCSSERIAL","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TIOCVHANGUP","TLS_GET_RECORD_TYPE","TMPFS_MAGIC","TMP_MAX","TOSTOP","TRACEFS_MAGIC","TUN_FLT_ALLMULTI","TUN_F_CSUM","TUN_F_TSO4","TUN_F_TSO6","TUN_F_TSO_ECN","TUN_F_UFO","TUN_PKT_STRIP","TUN_READQ_SIZE","TUN_TAP_DEV","TUN_TUN_DEV","TUN_TX_TIMESTAMP","TUN_TYPE_MASK","T_FMT","T_FMT_AMPM","UDF_SUPER_MAGIC","UDP_CORK","UDP_ENCAP","UDP_GRO","UDP_NO_CHECK6_RX","UDP_NO_CHECK6_TX","UDP_SEGMENT","UINPUT_MAX_NAME_SIZE","UINPUT_VERSION","UIO_MAXIOV","UMOUNT_NOFOLLOW","UNAME26","USBDEVICE_SUPER_MAGIC","USER_PROCESS","USRQUOTA","UTIME_NOW","UTIME_OMIT","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMADDR_CID_ANY","VMADDR_CID_HOST","VMADDR_CID_HYPERVISOR","VMADDR_CID_LOCAL","VMADDR_CID_RESERVED","VMADDR_PORT_ANY","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WCOREDUMP","WEXITED","WEXITSTATUS","WHOLE_SECONDS","WIFCONTINUED","WIFEXITED","WIFSIGNALED","WIFSTOPPED","WNOHANG","WNOWAIT","WSTOPPED","WSTOPSIG","WTERMSIG","WUNTRACED","W_EXITCODE","W_OK","W_STOPCODE","XATTR_CREATE","XATTR_REPLACE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","YESEXPR","YESSTR","_IOFBF","_IOLBF","_IONBF","_PC_2_SYMLINKS","_PC_ALLOC_SIZE_MIN","_PC_ASYNC_IO","_PC_CHOWN_RESTRICTED","_PC_FILESIZEBITS","_PC_LINK_MAX","_PC_MAX_CANON","_PC_MAX_INPUT","_PC_NAME_MAX","_PC_NO_TRUNC","_PC_PATH_MAX","_PC_PIPE_BUF","_PC_PRIO_IO","_PC_REC_INCR_XFER_SIZE","_PC_REC_MAX_XFER_SIZE","_PC_REC_MIN_XFER_SIZE","_PC_REC_XFER_ALIGN","_PC_SOCK_MAXBUF","_PC_SYMLINK_MAX","_PC_SYNC_IO","_PC_VDISABLE","_POSIX_VDISABLE","_SC_2_CHAR_TERM","_SC_2_C_BIND","_SC_2_C_DEV","_SC_2_C_VERSION","_SC_2_FORT_DEV","_SC_2_FORT_RUN","_SC_2_LOCALEDEF","_SC_2_PBS","_SC_2_PBS_ACCOUNTING","_SC_2_PBS_CHECKPOINT","_SC_2_PBS_LOCATE","_SC_2_PBS_MESSAGE","_SC_2_PBS_TRACK","_SC_2_SW_DEV","_SC_2_UPE","_SC_2_VERSION","_SC_ADVISORY_INFO","_SC_AIO_LISTIO_MAX","_SC_AIO_MAX","_SC_AIO_PRIO_DELTA_MAX","_SC_ARG_MAX","_SC_ASYNCHRONOUS_IO","_SC_ATEXIT_MAX","_SC_AVPHYS_PAGES","_SC_BARRIERS","_SC_BASE","_SC_BC_BASE_MAX","_SC_BC_DIM_MAX","_SC_BC_SCALE_MAX","_SC_BC_STRING_MAX","_SC_CHARCLASS_NAME_MAX","_SC_CHAR_BIT","_SC_CHAR_MAX","_SC_CHAR_MIN","_SC_CHILD_MAX","_SC_CLK_TCK","_SC_CLOCK_SELECTION","_SC_COLL_WEIGHTS_MAX","_SC_CPUTIME","_SC_C_LANG_SUPPORT","_SC_C_LANG_SUPPORT_R","_SC_DELAYTIMER_MAX","_SC_DEVICE_IO","_SC_DEVICE_SPECIFIC","_SC_DEVICE_SPECIFIC_R","_SC_EQUIV_CLASS_MAX","_SC_EXPR_NEST_MAX","_SC_FD_MGMT","_SC_FIFO","_SC_FILE_ATTRIBUTES","_SC_FILE_LOCKING","_SC_FILE_SYSTEM","_SC_FSYNC","_SC_GETGR_R_SIZE_MAX","_SC_GETPW_R_SIZE_MAX","_SC_HOST_NAME_MAX","_SC_INT_MAX","_SC_INT_MIN","_SC_IOV_MAX","_SC_IPV6","_SC_JOB_CONTROL","_SC_LEVEL1_DCACHE_ASSOC","_SC_LEVEL1_DCACHE_LINESIZE","_SC_LEVEL1_DCACHE_SIZE","_SC_LEVEL1_ICACHE_ASSOC","_SC_LEVEL1_ICACHE_LINESIZE","_SC_LEVEL1_ICACHE_SIZE","_SC_LEVEL2_CACHE_ASSOC","_SC_LEVEL2_CACHE_LINESIZE","_SC_LEVEL2_CACHE_SIZE","_SC_LEVEL3_CACHE_ASSOC","_SC_LEVEL3_CACHE_LINESIZE","_SC_LEVEL3_CACHE_SIZE","_SC_LEVEL4_CACHE_ASSOC","_SC_LEVEL4_CACHE_LINESIZE","_SC_LEVEL4_CACHE_SIZE","_SC_LINE_MAX","_SC_LOGIN_NAME_MAX","_SC_LONG_BIT","_SC_MAPPED_FILES","_SC_MB_LEN_MAX","_SC_MEMLOCK","_SC_MEMLOCK_RANGE","_SC_MEMORY_PROTECTION","_SC_MESSAGE_PASSING","_SC_MONOTONIC_CLOCK","_SC_MQ_OPEN_MAX","_SC_MQ_PRIO_MAX","_SC_MULTI_PROCESS","_SC_NETWORKING","_SC_NGROUPS_MAX","_SC_NL_ARGMAX","_SC_NL_LANGMAX","_SC_NL_MSGMAX","_SC_NL_NMAX","_SC_NL_SETMAX","_SC_NL_TEXTMAX","_SC_NPROCESSORS_CONF","_SC_NPROCESSORS_ONLN","_SC_NZERO","_SC_OPEN_MAX","_SC_PAGESIZE","_SC_PAGE_SIZE","_SC_PASS_MAX","_SC_PHYS_PAGES","_SC_PII","_SC_PII_INTERNET","_SC_PII_INTERNET_DGRAM","_SC_PII_INTERNET_STREAM","_SC_PII_OSI","_SC_PII_OSI_CLTS","_SC_PII_OSI_COTS","_SC_PII_OSI_M","_SC_PII_SOCKET","_SC_PII_XTI","_SC_PIPE","_SC_POLL","_SC_PRIORITIZED_IO","_SC_PRIORITY_SCHEDULING","_SC_RAW_SOCKETS","_SC_READER_WRITER_LOCKS","_SC_REALTIME_SIGNALS","_SC_REGEXP","_SC_REGEX_VERSION","_SC_RE_DUP_MAX","_SC_RTSIG_MAX","_SC_SAVED_IDS","_SC_SCHAR_MAX","_SC_SCHAR_MIN","_SC_SELECT","_SC_SEMAPHORES","_SC_SEM_NSEMS_MAX","_SC_SEM_VALUE_MAX","_SC_SHARED_MEMORY_OBJECTS","_SC_SHELL","_SC_SHRT_MAX","_SC_SHRT_MIN","_SC_SIGNALS","_SC_SIGQUEUE_MAX","_SC_SINGLE_PROCESS","_SC_SPAWN","_SC_SPIN_LOCKS","_SC_SPORADIC_SERVER","_SC_SSIZE_MAX","_SC_SS_REPL_MAX","_SC_STREAMS","_SC_STREAM_MAX","_SC_SYMLOOP_MAX","_SC_SYNCHRONIZED_IO","_SC_SYSTEM_DATABASE","_SC_SYSTEM_DATABASE_R","_SC_THREADS","_SC_THREAD_ATTR_STACKADDR","_SC_THREAD_ATTR_STACKSIZE","_SC_THREAD_CPUTIME","_SC_THREAD_DESTRUCTOR_ITERATIONS","_SC_THREAD_KEYS_MAX","_SC_THREAD_PRIORITY_SCHEDULING","_SC_THREAD_PRIO_INHERIT","_SC_THREAD_PRIO_PROTECT","_SC_THREAD_PROCESS_SHARED","_SC_THREAD_ROBUST_PRIO_INHERIT","_SC_THREAD_ROBUST_PRIO_PROTECT","_SC_THREAD_SAFE_FUNCTIONS","_SC_THREAD_SPORADIC_SERVER","_SC_THREAD_STACK_MIN","_SC_THREAD_THREADS_MAX","_SC_TIMEOUTS","_SC_TIMERS","_SC_TIMER_MAX","_SC_TRACE","_SC_TRACE_EVENT_FILTER","_SC_TRACE_EVENT_NAME_MAX","_SC_TRACE_INHERIT","_SC_TRACE_LOG","_SC_TRACE_NAME_MAX","_SC_TRACE_SYS_MAX","_SC_TRACE_USER_EVENT_MAX","_SC_TTY_NAME_MAX","_SC_TYPED_MEMORY_OBJECTS","_SC_TZNAME_MAX","_SC_T_IOV_MAX","_SC_UCHAR_MAX","_SC_UINT_MAX","_SC_UIO_MAXIOV","_SC_ULONG_MAX","_SC_USER_GROUPS","_SC_USER_GROUPS_R","_SC_USHRT_MAX","_SC_V6_ILP32_OFF32","_SC_V6_ILP32_OFFBIG","_SC_V6_LP64_OFF64","_SC_V6_LPBIG_OFFBIG","_SC_V7_ILP32_OFF32","_SC_V7_ILP32_OFFBIG","_SC_V7_LP64_OFF64","_SC_V7_LPBIG_OFFBIG","_SC_VERSION","_SC_WORD_BIT","_SC_XBS5_ILP32_OFF32","_SC_XBS5_ILP32_OFFBIG","_SC_XBS5_LP64_OFF64","_SC_XBS5_LPBIG_OFFBIG","_SC_XOPEN_CRYPT","_SC_XOPEN_ENH_I18N","_SC_XOPEN_LEGACY","_SC_XOPEN_REALTIME","_SC_XOPEN_REALTIME_THREADS","_SC_XOPEN_SHM","_SC_XOPEN_STREAMS","_SC_XOPEN_UNIX","_SC_XOPEN_VERSION","_SC_XOPEN_XCU_VERSION","_SC_XOPEN_XPG2","_SC_XOPEN_XPG3","_SC_XOPEN_XPG4","__NFT_REG_MAX","__SIZEOF_PTHREAD_BARRIERATTR_T","__SIZEOF_PTHREAD_BARRIER_T","__SIZEOF_PTHREAD_CONDATTR_T","__SIZEOF_PTHREAD_COND_T","__SIZEOF_PTHREAD_MUTEXATTR_T","__SIZEOF_PTHREAD_MUTEX_T","__SIZEOF_PTHREAD_RWLOCKATTR_T","__SIZEOF_PTHREAD_RWLOCK_T","__UT_HOSTSIZE","__UT_LINESIZE","__UT_NAMESIZE","__WALL","__WCLONE","__WNOTHREAD","__c_anonymous_ifc_ifcu","__c_anonymous_ifr_ifru","__c_anonymous_ifru_map","__c_anonymous_ptrace_syscall_info_data","__c_anonymous_ptrace_syscall_info_entry","__c_anonymous_ptrace_syscall_info_exit","__c_anonymous_ptrace_syscall_info_seccomp","__c_anonymous_sockaddr_can_can_addr","__c_anonymous_sockaddr_can_j1939","__c_anonymous_sockaddr_can_tp","__errno_location","__exit_status","__fsword_t","__glibc_reserved1","__glibc_reserved2","__glibc_reserved3","__glibc_reserved4","__key","__priority_which_t","__rlimit_resource_t","__s16","__s32","__s64","__seq","__statx_timestamp_pad1","__syscall_ulong_t","__timeval","__u16","__u32","__u64","__u8","__unused1","__unused10","__unused11","__unused2","__unused3","__unused4","__unused5","__unused6","__unused7","__unused8","__unused9","_exit","_f","_libc_fpstate","_libc_fpxreg","_libc_xmmreg","_st","_xmm","abort","abs","absflat","absfuzz","absinfo","absmax","absmin","accept","accept4","access","acct","actime","addmntent","addr","addr","addr_mask","addrinfo","adjtime","adjtimex","af","af_alg_iv","ai_addr","ai_addrlen","ai_canonname","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","aio_buf","aio_cancel","aio_error","aio_fildes","aio_fsync","aio_lio_opcode","aio_nbytes","aio_offset","aio_read","aio_reqprio","aio_return","aio_sigevent","aio_suspend","aio_write","aiocb","alarm","ar_hln","ar_hrd","ar_op","ar_pln","ar_pro","arch","arch","arena","arena","args","args","args","arp_dev","arp_flags","arp_flags","arp_ha","arp_ha","arp_netmask","arp_netmask","arp_pa","arp_pa","arpd_request","arphdr","arpreq","arpreq_old","asctime_r","atexit","atof","atoi","atol","atoll","attack_length","attack_level","auth_keynumber","backtrace","base_addr","bind","blkcnt64_t","blkcnt_t","blksize_t","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brk","bsearch","bufferram","bustype","button","c_cc","c_cc","c_cflag","c_cflag","c_char","c_double","c_float","c_iflag","c_iflag","c_int","c_ispeed","c_ispeed","c_lflag","c_lflag","c_line","c_line","c_long","c_longlong","c_oflag","c_oflag","c_ospeed","c_ospeed","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","calcnt","calloc","can_addr","can_dlc","can_err_mask_t","can_family","can_filter","can_frame","can_id","can_id","can_id","can_ifindex","can_mask","canfd_frame","canid_t","canxl_frame","cc_t","center","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","cgid","cgroup","ch_addralign","ch_addralign","ch_reserved","ch_size","ch_size","ch_type","ch_type","chdir","child_tid","chmod","chown","chroot","clearenv","clearerr","clock_adjtime","clock_getcpuclockid","clock_getres","clock_gettime","clock_nanosleep","clock_settime","clock_t","clockid","clockid_t","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_args","close","close_range","closedir","closelog","cmd","cmsg_len","cmsg_level","cmsg_type","cmsghdr","code","code","code","codes_ptr","codes_size","connect","constant","cookie","copy_file_range","cpu_set_t","creat","creat64","cs","ctermid","ctime_r","cuid","currency_symbol","custom_data","custom_len","cwd","cwd","d_ino","d_ino","d_name","d_name","d_off","d_off","d_reclen","d_reclen","d_type","d_type","daemon","data","data","data","deadband","decimal_point","delay","dest_offset","dev","dev_t","difftime","direction","dirent","dirent64","dirfd","dirname","dl_iterate_phdr","dl_phdr_info","dladdr","dladdr1","dlclose","dlerror","dli_fbase","dli_fname","dli_saddr","dli_sname","dlinfo","dlmopen","dlopen","dlpi_addr","dlpi_adds","dlpi_name","dlpi_phdr","dlpi_phnum","dlpi_subs","dlpi_tls_data","dlpi_tls_modid","dlsym","dma","domainname","dqb_bhardlimit","dqb_bsoftlimit","dqb_btime","dqb_curinodes","dqb_curspace","dqb_ihardlimit","dqb_isoftlimit","dqb_itime","dqb_valid","dqblk","drand48","ds","dup","dup2","dup3","duplocale","e_ehsize","e_ehsize","e_entry","e_entry","e_exit","e_flags","e_flags","e_ident","e_ident","e_machine","e_machine","e_phentsize","e_phentsize","e_phnum","e_phnum","e_phoff","e_phoff","e_shentsize","e_shentsize","e_shnum","e_shnum","e_shoff","e_shoff","e_shstrndx","e_shstrndx","e_termination","e_type","e_type","e_version","e_version","eaccess","ee_code","ee_data","ee_errno","ee_info","ee_origin","ee_pad","ee_type","effect","effect_id","eflags","element","end_level","endgrent","endmntent","endpwent","endservent","endspent","endutxent","entry","envelope","envelope","envelope","epoll_create","epoll_create1","epoll_ctl","epoll_event","epoll_pwait","epoll_wait","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erand48","errcnt","error","es","esterror","esterror","euidaccess","event_len","eventfd","events","events","execl","execle","execlp","execv","execve","execveat","execvp","execvpe","exit","exit","exit_signal","explicit_bzero","exponent","f_bavail","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_bsize","f_favail","f_favail","f_ffree","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_files","f_flag","f_flag","f_flags","f_frsize","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namemax","f_namemax","f_spare","f_type","f_type","faccessat","fade_length","fade_level","fallocate","fallocate64","fanotify_event_metadata","fanotify_init","fanotify_mark","fanotify_response","fchdir","fchmod","fchmodat","fchown","fchownat","fclose","fcntl","fd","fd","fd","fd_set","fdatasync","fdopen","fdopendir","feof","ferror","fexecve","ff_condition_effect","ff_constant_effect","ff_effect","ff_effects_max","ff_effects_max","ff_envelope","ff_periodic_effect","ff_ramp_effect","ff_replay","ff_rumble_effect","ff_trigger","fflush","fgetc","fgetgrent_r","fgetpos","fgetpos64","fgetpwent_r","fgets","fgetspent_r","fgetxattr","file_clone_range","fileno","filter","flag","flags","flags","flags","flags","flags","flags","flags","flags","flags","flat","flistxattr","flock","flock","flock64","fmemopen","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fop","fop","fopen","fopen64","fordblks","fordblks","fork","forkpty","fpathconf","fpos64_t","fpos_t","fpregs","fprintf","fputc","fputs","frac_digits","fread","fread_unlocked","free","freeaddrinfo","freehigh","freeifaddrs","freelocale","freeram","freeswap","fremovexattr","freopen","freopen64","freq","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fs","fs_base","fsblkcnt_t","fscanf","fseek","fseeko","fseeko64","fsetpos","fsetpos64","fsetxattr","fsfilcnt_t","fsid_t","fsmblks","fsmblks","fstat","fstat64","fstatat","fstatat64","fstatfs","fstatfs64","fstatvfs","fstatvfs64","fsync","ftell","ftello","ftello64","ftok","ftruncate","ftruncate64","ftw","ftw","futimens","futimes","fuzz","fwrite","gai_strerror","genlmsghdr","getaddrinfo","getauxval","getchar","getchar_unlocked","getcontext","getcwd","getdomainname","getdtablesize","getegid","getentropy","getenv","geteuid","getgid","getgrent","getgrent_r","getgrgid","getgrgid_r","getgrnam","getgrnam_r","getgrouplist","getgroups","gethostid","gethostname","getifaddrs","getline","getloadavg","getlogin","getmntent","getmntent_r","getnameinfo","getopt","getopt_long","getpeername","getpgid","getpgrp","getpid","getppid","getpriority","getprotobyname","getprotobynumber","getpt","getpwent","getpwent_r","getpwnam","getpwnam_r","getpwuid","getpwuid_r","getrandom","getresgid","getresuid","getrlimit","getrlimit64","getrusage","getservbyname","getservbyport","getservent","getsid","getsockname","getsockopt","getspent","getspent_r","getspnam","getspnam_r","gettid","gettimeofday","getuid","getutxent","getutxid","getutxline","getxattr","gid","gid","gid_t","gl_flags","gl_flags","gl_offs","gl_offs","gl_pathc","gl_pathc","gl_pathv","gl_pathv","glob","glob64","glob64_t","glob_t","globfree","globfree64","gmtime","gmtime_r","gnu_basename","gnu_get_libc_release","gnu_get_libc_version","gr_gid","gr_mem","gr_name","gr_passwd","grantpt","greg_t","gregs","group","group","grouping","gs","gs_base","h_addr_list","h_addrtype","h_aliases","h_length","h_name","ha","has_arg","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hasmntopt","hblkhd","hblkhd","hblks","hblks","hostent","hstrerror","hwtstamp_config","i387","iconv","iconv_close","iconv_open","iconv_t","id","id","id","id_t","idtype_t","if_freenameindex","if_index","if_indextoname","if_name","if_nameindex","if_nameindex","if_nametoindex","ifa_addr","ifa_data","ifa_flags","ifa_ifu","ifa_name","ifa_netmask","ifa_next","ifaddrs","ifc_ifcu","ifc_len","ifconf","ifcu_buf","ifcu_req","ifr6_addr","ifr6_ifindex","ifr6_prefixlen","ifr_ifru","ifr_name","ifreq","ifru_addr","ifru_broadaddr","ifru_data","ifru_dstaddr","ifru_flags","ifru_hwaddr","ifru_ifindex","ifru_map","ifru_metric","ifru_mtu","ifru_netmask","ifru_newname","ifru_slave","imr_address","imr_ifindex","imr_interface","imr_interface","imr_multiaddr","imr_multiaddr","imr_multiaddr","imr_sourceaddr","in6_addr","in6_ifreq","in6_pktinfo","in6_rtmsg","in_addr","in_addr_t","in_pktinfo","in_port_t","index","initgroups","ino64_t","ino_t","inotify_add_watch","inotify_event","inotify_init","inotify_init1","inotify_rm_watch","input_absinfo","input_event","input_id","input_keymap_entry","input_mask","instruction_pointer","instruction_pointer","int16_t","int32_t","int64_t","int8_t","int_curr_symbol","int_frac_digits","int_n_cs_precedes","int_n_sep_by_space","int_n_sign_posn","int_p_cs_precedes","int_p_sep_by_space","int_p_sign_posn","interval","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","intptr_t","ioctl","ioperm","iopl","iov_base","iov_len","iovec","ip","ip_mreq","ip_mreq_source","ip_mreqn","ipc_perm","ipi6_addr","ipi6_ifindex","ipi_addr","ipi_ifindex","ipi_spec_dst","ipv6_mreq","ipv6mr_interface","ipv6mr_multiaddr","irq","is_error","isalnum","isalpha","isatty","isblank","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","it_interval","it_interval","it_value","it_value","itimerspec","itimerval","iv","ivlen","j1939","j1939_filter","jf","jitcnt","jitter","jrand48","jt","k","keepcost","keepcost","key_t","keycode","kill","killpg","l_len","l_len","l_linger","l_onoff","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","labs","lchown","lcong48","lconv","left_coeff","left_saturation","len","len","len","len","len","length","level","lgetxattr","linger","link","linkat","lio_listio","listen","listxattr","llistxattr","loads","locale_t","localeconv","localtime","localtime_r","lockf","loff_t","login_tty","lrand48","lremovexattr","lseek","lseek64","lsetxattr","lstat","lstat64","lutimes","machine","madvise","magic","magnitude","major","makecontext","makedev","mallinfo","mallinfo","mallinfo2","mallinfo2","malloc","malloc_info","malloc_trim","malloc_usable_size","mallopt","mask","mask","max_align_t","maxerror","maxerror","maximum","mcontext_t","mem_end","mem_start","mem_unit","memalign","memchr","memcmp","memcpy","memfd_create","memmem","memmove","memrchr","memset","metadata_len","mincore","minimum","minor","mkdir","mkdirat","mkdtemp","mkfifo","mkfifoat","mknod","mknodat","mkostemp","mkostemps","mkstemp","mkstemps","mktime","mlock","mlock2","mlockall","mmap","mmap64","mmsghdr","mnt_dir","mnt_freq","mnt_fsname","mnt_opts","mnt_passno","mnt_type","mntent","mode","mode","mode_t","modes","modtime","mon_decimal_point","mon_grouping","mon_thousands_sep","mount","mprotect","mq_attr","mq_close","mq_curmsgs","mq_flags","mq_getattr","mq_maxmsg","mq_msgsize","mq_open","mq_receive","mq_send","mq_setattr","mq_timedreceive","mq_timedsend","mq_unlink","mqd_t","mr_address","mr_alen","mr_ifindex","mr_type","mrand48","mremap","msg","msg_control","msg_controllen","msg_ctime","msg_flags","msg_hdr","msg_iov","msg_iovlen","msg_len","msg_lrpid","msg_lspid","msg_name","msg_namelen","msg_perm","msg_qbytes","msg_qnum","msg_rtime","msg_stime","msgctl","msgget","msghdr","msginfo","msglen_t","msgmap","msgmax","msgmnb","msgmni","msgpool","msgqnum_t","msgrcv","msgseg","msgsnd","msgssz","msgtql","msqid_ds","msync","munlock","munlockall","munmap","mxcr_mask","mxcr_mask","mxcsr","mxcsr","n_cs_precedes","n_sep_by_space","n_sign_posn","name","name","name","name","name","name_mask","name_t","nanosleep","negative_sign","newlocale","nfds_t","nice","nl_family","nl_groups","nl_item","nl_langinfo","nl_langinfo_l","nl_mmap_hdr","nl_mmap_req","nl_pid","nl_pktinfo","nla_len","nla_type","nlattr","nlink_t","nlmsg_flags","nlmsg_len","nlmsg_pid","nlmsg_seq","nlmsg_type","nlmsgerr","nlmsghdr","nm_block_nr","nm_block_size","nm_frame_nr","nm_frame_size","nm_gid","nm_group","nm_len","nm_pid","nm_status","nm_uid","nodename","nr","nr","nr","nr","nrand48","ntp_adjtime","ntp_gettime","ntptimeval","nxt_assoc_id","nxt_flags","nxt_length","nxt_ppid","nxt_sid","off","off64_t","off_t","offset","offset","old","op","open","open64","open_how","open_memstream","open_wmemstream","openat","openat64","opendir","openlog","openpty","option","ordblks","ordblks","orig_rax","p_aliases","p_align","p_align","p_cs_precedes","p_filesz","p_filesz","p_flags","p_flags","p_memsz","p_memsz","p_name","p_offset","p_offset","p_paddr","p_paddr","p_proto","p_sep_by_space","p_sign_posn","p_type","p_type","p_vaddr","p_vaddr","packet_mreq","pad","pad","pad","parent_tid","passwd","pathconf","pause","pclose","period","perror","personality","pgn","pgn","pgn_mask","pgn_t","phase","pid","pid","pid_t","pidfd","pipe","pipe2","poll","pollfd","popen","port","positive_sign","posix_basename","posix_fadvise","posix_fadvise64","posix_fallocate","posix_fallocate64","posix_madvise","posix_memalign","posix_openpt","posix_spawn","posix_spawn_file_actions_addchdir_np","posix_spawn_file_actions_addclose","posix_spawn_file_actions_addclosefrom_np","posix_spawn_file_actions_adddup2","posix_spawn_file_actions_addfchdir_np","posix_spawn_file_actions_addopen","posix_spawn_file_actions_addtcsetpgrp_np","posix_spawn_file_actions_destroy","posix_spawn_file_actions_init","posix_spawn_file_actions_t","posix_spawnattr_destroy","posix_spawnattr_getflags","posix_spawnattr_getpgroup","posix_spawnattr_getschedparam","posix_spawnattr_getschedpolicy","posix_spawnattr_getsigdefault","posix_spawnattr_getsigmask","posix_spawnattr_init","posix_spawnattr_setflags","posix_spawnattr_setpgroup","posix_spawnattr_setschedparam","posix_spawnattr_setschedpolicy","posix_spawnattr_setsigdefault","posix_spawnattr_setsigmask","posix_spawnattr_t","posix_spawnp","ppoll","ppsfreq","pr_policy","pr_value","prctl","pread","pread64","preadv","preadv2","preadv64","preadv64v2","precision","printf","prio","priority_t","prlimit","prlimit64","process_vm_readv","process_vm_writev","procs","product","protoent","pselect","pthread_atfork","pthread_attr_destroy","pthread_attr_getaffinity_np","pthread_attr_getguardsize","pthread_attr_getstack","pthread_attr_getstacksize","pthread_attr_init","pthread_attr_setaffinity_np","pthread_attr_setdetachstate","pthread_attr_setguardsize","pthread_attr_setstacksize","pthread_attr_t","pthread_barrier_destroy","pthread_barrier_init","pthread_barrier_t","pthread_barrier_wait","pthread_barrierattr_destroy","pthread_barrierattr_getpshared","pthread_barrierattr_init","pthread_barrierattr_setpshared","pthread_barrierattr_t","pthread_cancel","pthread_cond_broadcast","pthread_cond_destroy","pthread_cond_init","pthread_cond_signal","pthread_cond_t","pthread_cond_timedwait","pthread_cond_wait","pthread_condattr_destroy","pthread_condattr_getclock","pthread_condattr_getpshared","pthread_condattr_init","pthread_condattr_setclock","pthread_condattr_setpshared","pthread_condattr_t","pthread_create","pthread_detach","pthread_exit","pthread_getaffinity_np","pthread_getattr_np","pthread_getcpuclockid","pthread_getname_np","pthread_getschedparam","pthread_getspecific","pthread_join","pthread_key_create","pthread_key_delete","pthread_key_t","pthread_kill","pthread_mutex_consistent","pthread_mutex_destroy","pthread_mutex_init","pthread_mutex_lock","pthread_mutex_t","pthread_mutex_timedlock","pthread_mutex_trylock","pthread_mutex_unlock","pthread_mutexattr_destroy","pthread_mutexattr_getprotocol","pthread_mutexattr_getpshared","pthread_mutexattr_getrobust","pthread_mutexattr_init","pthread_mutexattr_setprotocol","pthread_mutexattr_setpshared","pthread_mutexattr_setrobust","pthread_mutexattr_settype","pthread_mutexattr_t","pthread_once","pthread_once_t","pthread_rwlock_destroy","pthread_rwlock_init","pthread_rwlock_rdlock","pthread_rwlock_t","pthread_rwlock_tryrdlock","pthread_rwlock_trywrlock","pthread_rwlock_unlock","pthread_rwlock_wrlock","pthread_rwlockattr_destroy","pthread_rwlockattr_getkind_np","pthread_rwlockattr_getpshared","pthread_rwlockattr_init","pthread_rwlockattr_setkind_np","pthread_rwlockattr_setpshared","pthread_rwlockattr_t","pthread_self","pthread_setaffinity_np","pthread_setname_np","pthread_setschedparam","pthread_setschedprio","pthread_setspecific","pthread_sigmask","pthread_sigqueue","pthread_spin_destroy","pthread_spin_init","pthread_spin_lock","pthread_spin_trylock","pthread_spin_unlock","pthread_spinlock_t","pthread_t","ptrace","ptrace_peeksiginfo_args","ptrace_rseq_configuration","ptrace_syscall_info","ptrdiff_t","ptsname","ptsname_r","putchar","putchar_unlocked","putenv","putgrent","putpwent","puts","pututxline","pw_dir","pw_gecos","pw_gid","pw_name","pw_passwd","pw_shell","pw_uid","pwrite","pwrite64","pwritev","pwritev2","pwritev64","pwritev64v2","qsort","qsort_r","quotactl","r10","r11","r12","r13","r14","r15","r8","r9","raise","rand","rax","rbp","rbx","rcv_assoc_id","rcv_context","rcv_cumtsn","rcv_flags","rcv_ppid","rcv_sid","rcv_ssn","rcv_tsn","rcx","rdi","rdp","rdp","rdx","read","readahead","readdir","readdir64","readdir64_r","readdir_r","readlink","readlinkat","readv","realloc","reallocarray","realpath","reboot","recv","recvfrom","recvmmsg","recvmsg","regcomp","regerror","regex_t","regexec","regfree","regmatch_t","regoff_t","regs","release","remap_file_pages","remove","removexattr","rename","renameat","renameat2","replay","req","request_id","request_id","res_init","reserved","reserved","resolution","resolve","response","ret_data","retval","retval","revents","rewind","rewinddir","right_coeff","right_saturation","rip","rip","rip","rlim64_t","rlim_cur","rlim_cur","rlim_max","rlim_max","rlim_t","rlimit","rlimit64","rm_eo","rm_so","rmdir","rseq_abi_pointer","rseq_abi_size","rsi","rsp","rt_class","rt_dev","rt_dst","rt_flags","rt_gateway","rt_genmask","rt_irtt","rt_metric","rt_mtu","rt_pad1","rt_pad2","rt_pad3","rt_pad4","rt_tos","rt_window","rtentry","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","rx_filter","rx_id","s6_addr","s_addr","s_aliases","s_name","s_port","s_proto","sa_data","sa_family","sa_family_t","sa_flags","sa_mask","sa_restorer","sa_sigaction","salg_family","salg_feat","salg_mask","salg_name","salg_type","sbrk","scancode","scanf","sched_get_priority_max","sched_get_priority_min","sched_getaffinity","sched_getcpu","sched_getparam","sched_getscheduler","sched_param","sched_priority","sched_rr_get_interval","sched_setaffinity","sched_setparam","sched_setscheduler","sched_yield","sctp_assoc_t","sctp_authinfo","sctp_initmsg","sctp_nxtinfo","sctp_prinfo","sctp_rcvinfo","sctp_sndinfo","sctp_sndrcvinfo","sdt","seccomp","seccomp_data","seccomp_data","seccomp_notif","seccomp_notif_resp","seccomp_notif_sizes","seed48","seekdir","select","sem_close","sem_ctime","sem_destroy","sem_flg","sem_getvalue","sem_init","sem_nsems","sem_num","sem_op","sem_open","sem_otime","sem_perm","sem_post","sem_t","sem_timedwait","sem_trywait","sem_unlink","sem_wait","semaem","sembuf","semctl","semget","semid_ds","seminfo","semmap","semmni","semmns","semmnu","semmsl","semop","semopm","semume","semusz","semvmx","send","sendfile","sendfile64","sendmmsg","sendmsg","sendto","servent","set_tid","set_tid_size","setbuf","setcontext","setdomainname","setegid","setenv","seteuid","setfsgid","setfsuid","setgid","setgrent","setgroups","sethostid","sethostname","setlocale","setlogmask","setmntent","setns","setpgid","setpriority","setpwent","setregid","setresgid","setresuid","setreuid","setrlimit","setrlimit64","setservent","setsid","setsockopt","setspent","settimeofday","setuid","setutxent","setvbuf","setxattr","sgetspent_r","sh_addr","sh_addr","sh_addralign","sh_addralign","sh_entsize","sh_entsize","sh_flags","sh_flags","sh_info","sh_info","sh_link","sh_link","sh_name","sh_name","sh_offset","sh_offset","sh_size","sh_size","sh_type","sh_type","sharedram","shift","shm_atime","shm_cpid","shm_ctime","shm_dtime","shm_lpid","shm_nattch","shm_open","shm_perm","shm_segsz","shm_unlink","shmat","shmatt_t","shmctl","shmdt","shmget","shmid_ds","shutdown","si_addr","si_code","si_errno","si_pid","si_signo","si_status","si_stime","si_uid","si_utime","si_value","sigaction","sigaction","sigaddset","sigaltstack","sigdelset","sigemptyset","sigev_notify","sigev_notify_thread_id","sigev_signo","sigev_value","sigevent","sigfillset","sighandler_t","siginfo_t","sigismember","signal","signal","signalfd","signalfd_siginfo","signature","significand","sigpending","sigprocmask","sigset_t","sigsuspend","sigtimedwait","sigval","sigwait","sigwaitinfo","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","sinfo_assoc_id","sinfo_context","sinfo_cumtsn","sinfo_flags","sinfo_ppid","sinfo_ssn","sinfo_stream","sinfo_timetolive","sinfo_tsn","sinit_max_attempts","sinit_max_init_timeo","sinit_max_instreams","sinit_num_ostreams","sival_ptr","size_t","sleep","sll_addr","sll_family","sll_halen","sll_hatype","sll_ifindex","sll_pkttype","sll_protocol","smblks","smblks","snd_assoc_id","snd_context","snd_flags","snd_ppid","snd_sid","snprintf","sock_extended_err","sock_filter","sock_fprog","sock_txtime","sockaddr","sockaddr_alg","sockaddr_can","sockaddr_in","sockaddr_in6","sockaddr_ll","sockaddr_nl","sockaddr_storage","sockaddr_un","sockaddr_vm","socket","socketpair","socklen_t","sp_expire","sp_flag","sp_inact","sp_lstchg","sp_max","sp_min","sp_namp","sp_pwdp","sp_warn","speed_t","splice","sprintf","spwd","srand","srand48","src_fd","src_length","src_offset","ss","ss_family","ss_flags","ss_size","ss_sp","sscanf","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","ssize_t","st_atime","st_atime","st_atime_nsec","st_atime_nsec","st_blksize","st_blksize","st_blocks","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_info","st_info","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_mtime_nsec","st_name","st_name","st_nlink","st_nlink","st_other","st_other","st_rdev","st_rdev","st_shndx","st_shndx","st_size","st_size","st_size","st_size","st_space","st_uid","st_uid","st_value","st_value","stabil","stack","stack_pointer","stack_size","stack_t","stamp","start_code","start_level","start_stack","stat","stat","stat64","stat64","statfs","statfs","statfs64","statfs64","status","statvfs","statvfs","statvfs64","statvfs64","statx","statx","statx_timestamp","stbcnt","stpcpy","stpncpy","strcasecmp","strcasestr","strcat","strchr","strchrnul","strcmp","strcoll","strcpy","strcspn","strdup","strerror","strerror_r","strftime","strlen","strncasecmp","strncat","strncmp","strncpy","strndup","strnlen","strong_magnitude","strpbrk","strptime","strrchr","strsignal","strspn","strstr","strtod","strtof","strtok","strtok_r","strtol","strtoll","strtoul","strtoull","strxfrm","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sun_family","sun_path","suseconds_t","sval","svm_cid","svm_family","svm_port","svm_reserved1","svm_zero","swapcontext","swapoff","swapon","swd","swd","symlink","symlinkat","sync","sync_file_range","syncfs","syscall","sysconf","sysctl","sysinfo","sysinfo","syslog","sysname","system","tai","tai","tcdrain","tcflag_t","tcflow","tcflush","tcgetattr","tcgetpgrp","tcgetsid","tcsendbreak","tcsetattr","tcsetpgrp","tee","telldir","termios","termios2","thousands_sep","tick","time","time","time","time","time_t","timegm","timer_create","timer_delete","timer_getoverrun","timer_gettime","timer_settime","timer_t","timerfd_create","timerfd_gettime","timerfd_settime","times","timespec","timeval","timex","timezone","tls","tm","tm_gmtoff","tm_hour","tm_isdst","tm_mday","tm_min","tm_mon","tm_sec","tm_wday","tm_yday","tm_year","tm_zone","tmpfile","tmpfile64","tmpnam","tms","tms_cstime","tms_cutime","tms_stime","tms_utime","tolerance","tolower","totalhigh","totalram","totalswap","toupper","tp","trigger","truncate","truncate64","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","ttyname_r","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tx_id","tx_type","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","u","u64","u_ar0","u_comm","u_debugreg","u_dsize","u_fpstate","u_fpvalid","u_ssize","u_tsize","uc_flags","uc_link","uc_mcontext","uc_sigmask","uc_stack","ucontext_t","ucred","uid","uid","uid_t","uinput_abs_setup","uinput_ff_erase","uinput_ff_upload","uinput_setup","uinput_user_dev","uint16_t","uint32_t","uint64_t","uint8_t","uintmax_t","uintptr_t","umask","umount","umount2","uname","ungetc","unlink","unlinkat","unlockpt","unsetenv","unshare","uordblks","uordblks","updated","uptime","useconds_t","uselocale","user","user_fpregs_struct","user_regs_struct","usleep","usmblks","usmblks","ut_addr_v6","ut_exit","ut_host","ut_id","ut_line","ut_pid","ut_session","ut_tv","ut_type","ut_user","utimbuf","utime","utimensat","utimes","utmpname","utmpx","utmpxname","utsname","val","value","value","vendor","vers","version","version","version","vfork","vhangup","vmsplice","wait","wait4","waitid","waitpid","waveform","wchar_t","wcslen","wcstombs","wd","weak_magnitude","winsize","wmemchr","write","writev","ws_col","ws_row","ws_xpixel","ws_ypixel","xmm_space"],"q":[[0,"libc"]],"dmaximum number of services provided on the same listening …uth Header","","IP Payload Comp. Protocol","DCCP","IP6 destination option","exterior gateway protocol","encapsulation header","IP6 Encap Sec. Payload","Ethernet-within-IPv6 encapsulation.","IP6 fragmentation header","General Routing Encap.","Hop-by-hop option header","","","xns idp","group mgmt protocol","","for compatibility","","","","","Multipath TCP","","IP6 no next header","Protocol indep. multicast","pup","raw IP packet","IP6 routing header","resource reservation","SCTP","","tp-4 w/ class negotiationhe <code>PartialEq</code>, <code>Eq</code> and <code>Hash</code> implementations of thisquivalent to C’s <code>void</code> type when used as a pointereturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","GNU version of <code>basename(3)</code>, defined in <code>string.h</codeinterface name, e.g. “en0”","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeversion of <code>basename(3)</code>, defined in <code>libgen.h</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The 64-bit libc on Solaris and illumos only has readdir_r. …if":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2,3,3],4],0,0,0,0,0,0,0,0,0,0,[2,2],0,0,0,0,0,0,0,0,[2,2],0,[[1,2],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[5,6],[7,5],[8,8],[[7,5],5],[8,8],0,0,0,[9,10],[[11,12]],[12,9],[[11,12],9],[[12,12],13],[[11,12],13],[[11,12]],0,[12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,14]],[[9,14],13],[[9,14]],0,[14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9,9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,[15,15],0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[16,16,16],16],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[9,9],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,16],0,0,0,0,0,[16,13],0,0,0,0,0,0,0,0,0,0,[15,15],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,9],[9,9],[9,13],[9,13],0,0,0,0,0,0,0,[[9,9]],[9,13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[17,18],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9,13],0,[9,9],0,[9,13],[9,13],[9,13],[9,13],0,0,0,[9,9],[9,9],0,[[9,9],9],0,[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[18,18],[44,44],[45,45],[46,46],[47,47],[14,14],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[12,12],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[17,17],[113,113],[114,114],[115,115],[116,116],[4,4],[117,117],[118,118],[119,119],[120,120],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[136,136],[137,137],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[7,7],[5,5],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[218,218],[219,219],[220,220],[221,221],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[20,20],13],[[21,21],13],[[22,22],13],[[23,23],13],[[24,24],13],[[25,25],13],[[26,26],13],[[27,27],13],[[28,28],13],[[29,29],13],[[30,30],13],[[31,31],13],[[32,32],13],[[33,33],13],[[34,34],13],[[35,35],13],[[36,36],13],[[40,40],13],[[41,41],13],[[42,42],13],[[43,43],13],[[18,18],13],[[44,44],13],[[45,45],13],[[46,46],13],[[47,47],13],[[14,14],13],[[48,48],13],[[49,49],13],[[50,50],13],[[51,51],13],[[52,52],13],[[53,53],13],[[54,54],13],[[55,55],13],[[56,56],13],[[57,57],13],[[58,58],13],[[59,59],13],[[60,60],13],[[61,61],13],[[62,62],13],[[63,63],13],[[65,65],13],[[66,66],13],[[67,67],13],[[68,68],13],[[69,69],13],[[70,70],13],[[71,71],13],[[72,72],13],[[12,12],13],[[73,73],13],[[74,74],13],[[75,75],13],[[76,76],13],[[77,77],13],[[78,78],13],[[79,79],13],[[80,80],13],[[81,81],13],[[82,82],13],[[83,83],13],[[84,84],13],[[85,85],13],[[86,86],13],[[87,87],13],[[88,88],13],[[89,89],13],[[90,90],13],[[91,91],13],[[92,92],13],[[93,93],13],[[94,94],13],[[95,95],13],[[96,96],13],[[97,97],13],[[98,98],13],[[99,99],13],[[100,100],13],[[101,101],13],[[102,102],13],[[103,103],13],[[104,104],13],[[105,105],13],[[106,106],13],[[107,107],13],[[108,108],13],[[109,109],13],[[110,110],13],[[111,111],13],[[112,112],13],[[17,17],13],[[113,113],13],[[114,114],13],[[115,115],13],[[116,116],13],[[4,4],13],[[117,117],13],[[118,118],13],[[119,119],13],[[120,120],13],[[121,121],13],[[122,122],13],[[123,123],13],[[124,124],13],[[125,125],13],[[126,126],13],[[127,127],13],[[128,128],13],[[129,129],13],[[130,130],13],[[131,131],13],[[132,132],13],[[133,133],13],[[134,134],13],[[135,135],13],[[136,136],13],[[137,137],13],[[138,138],13],[[139,139],13],[[140,140],13],[[145,145],13],[[146,146],13],[[150,150],13],[[151,151],13],[[152,152],13],[[153,153],13],[[154,154],13],[[155,155],13],[[7,7],13],[[5,5],13],[[156,156],13],[[157,157],13],[[158,158],13],[[159,159],13],[[160,160],13],[[161,161],13],[[162,162],13],[[163,163],13],[[164,164],13],[[165,165],13],[[166,166],13],[[167,167],13],[[168,168],13],[[169,169],13],[[170,170],13],[[171,171],13],[[172,172],13],[[173,173],13],[[174,174],13],[[175,175],13],[[176,176],13],[[177,177],13],[[178,178],13],[[179,179],13],[[180,180],13],[[181,181],13],[[182,182],13],[[183,183],13],[[184,184],13],[[185,185],13],[[186,186],13],[[187,187],13],[[188,188],13],[[189,189],13],[[190,190],13],[[191,191],13],[[192,192],13],[[193,193],13],[[194,194],13],[[195,195],13],[[196,196],13],[[197,197],13],[[198,198],13],[[199,199],13],[[200,200],13],[[201,201],13],[[202,202],13],[[203,203],13],[[205,205],13],[[206,206],13],[[207,207],13],[[208,208],13],[[209,209],13],[[210,210],13],[[211,211],13],[[212,212],13],[[213,213],13],[[214,214],13],[[215,215],13],[[216,216],13],[[220,220],13],[[221,221],13],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,222],223],[[20,222],223],[[21,222],223],[[22,222],223],[[23,222],223],[[24,222],223],[[25,222],223],[[26,222],223],[[27,222],223],[[28,222],223],[[29,222],223],[[30,222],223],[[31,222],223],[[32,222],223],[[33,222],223],[[34,222],223],[[35,222],223],[[36,222],223],[[37,222],223],[[38,222],223],[[39,222],223],[[40,222],223],[[41,222],223],[[42,222],223],[[43,222],223],[[18,222],223],[[44,222],223],[[45,222],223],[[46,222],223],[[47,222],223],[[14,222],223],[[48,222],223],[[49,222],223],[[50,222],223],[[51,222],223],[[52,222],223],[[53,222],223],[[54,222],223],[[55,222],223],[[56,222],223],[[57,222],223],[[58,222],223],[[59,222],223],[[60,222],223],[[61,222],223],[[62,222],223],[[63,222],223],[[224,222],[[226,[225]]]],[[64,222],223],[[65,222],223],[[66,222],223],[[67,222],223],[[68,222],223],[[69,222],223],[[70,222],223],[[71,222],223],[[72,222],223],[[12,222],223],[[73,222],223],[[74,222],223],[[75,222],223],[[76,222],223],[[77,222],223],[[78,222],223],[[79,222],223],[[80,222],223],[[81,222],223],[[82,222],223],[[83,222],223],[[84,222],223],[[85,222],223],[[86,222],223],[[87,222],223],[[88,222],223],[[89,222],223],[[90,222],223],[[91,222],223],[[92,222],223],[[93,222],223],[[94,222],223],[[95,222],223],[[96,222],223],[[97,222],223],[[98,222],223],[[99,222],223],[[100,222],223],[[101,222],223],[[102,222],223],[[103,222],223],[[104,222],223],[[105,222],223],[[106,222],223],[[107,222],223],[[108,222],223],[[109,222],223],[[110,222],223],[[111,222],223],[[112,222],223],[[17,222],223],[[113,222],223],[[114,222],223],[[115,222],223],[[116,222],223],[[4,222],223],[[117,222],223],[[118,222],223],[[119,222],223],[[120,222],223],[[121,222],223],[[122,222],223],[[123,222],223],[[124,222],223],[[125,222],223],[[126,222],223],[[127,222],223],[[128,222],223],[[129,222],223],[[130,222],223],[[131,222],223],[[132,222],223],[[133,222],223],[[134,222],223],[[135,222],223],[[136,222],223],[[137,222],223],[[138,222],223],[[139,222],223],[[140,222],223],[[141,222],223],[[142,222],223],[[143,222],223],[[144,222],223],[[145,222],223],[[146,222],223],[[150,222],223],[[151,222],223],[[152,222],223],[[153,222],223],[[154,222],223],[[155,222],223],[[7,222],223],[[5,222],223],[[156,222],223],[[157,222],223],[[158,222],223],[[159,222],223],[[160,222],223],[[161,222],223],[[162,222],223],[[163,222],223],[[164,222],223],[[165,222],223],[[166,222],223],[[167,222],223],[[168,222],223],[[169,222],223],[[170,222],223],[[171,222],223],[[172,222],223],[[173,222],223],[[174,222],223],[[175,222],223],[[176,222],223],[[177,222],223],[[178,222],223],[[179,222],223],[[180,222],223],[[181,222],223],[[182,222],223],[[183,222],223],[[184,222],223],[[185,222],223],[[186,222],223],[[187,222],223],[[188,222],223],[[189,222],223],[[190,222],223],[[191,222],223],[[192,222],223],[[193,222],223],[[194,222],223],[[195,222],223],[[196,222],223],[[197,222],223],[[198,222],223],[[199,222],223],[[200,222],223],[[201,222],223],[[202,222],223],[[203,222],223],[[205,222],223],[[206,222],223],[[207,222],223],[[208,222],223],[[209,222],223],[[210,222],223],[[211,222],223],[[212,222],223],[[213,222],223],[[214,222],223],[[215,222],223],[[216,222],223],[[220,222],223],[[221,222],223],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[20,227]],[[21,227]],[[22,227]],[[23,227]],[[24,227]],[[25,227]],[[26,227]],[[27,227]],[[28,227]],[[29,227]],[[30,227]],[[31,227]],[[32,227]],[[33,227]],[[34,227]],[[35,227]],[[36,227]],[[40,227]],[[41,227]],[[42,227]],[[43,227]],[[18,227]],[[44,227]],[[45,227]],[[46,227]],[[47,227]],[[14,227]],[[48,227]],[[49,227]],[[50,227]],[[51,227]],[[52,227]],[[53,227]],[[54,227]],[[55,227]],[[56,227]],[[57,227]],[[58,227]],[[59,227]],[[60,227]],[[61,227]],[[62,227]],[[63,227]],[[65,227]],[[66,227]],[[67,227]],[[68,227]],[[69,227]],[[70,227]],[[71,227]],[[72,227]],[[12,227]],[[73,227]],[[74,227]],[[75,227]],[[76,227]],[[77,227]],[[78,227]],[[79,227]],[[80,227]],[[81,227]],[[82,227]],[[83,227]],[[84,227]],[[85,227]],[[86,227]],[[87,227]],[[88,227]],[[89,227]],[[90,227]],[[91,227]],[[92,227]],[[93,227]],[[94,227]],[[95,227]],[[96,227]],[[97,227]],[[98,227]],[[99,227]],[[100,227]],[[101,227]],[[102,227]],[[103,227]],[[104,227]],[[105,227]],[[106,227]],[[107,227]],[[108,227]],[[109,227]],[[110,227]],[[111,227]],[[112,227]],[[17,227]],[[113,227]],[[114,227]],[[115,227]],[[116,227]],[[4,227]],[[117,227]],[[118,227]],[[119,227]],[[120,227]],[[121,227]],[[122,227]],[[123,227]],[[124,227]],[[125,227]],[[126,227]],[[127,227]],[[128,227]],[[129,227]],[[130,227]],[[131,227]],[[132,227]],[[133,227]],[[134,227]],[[135,227]],[[136,227]],[[137,227]],[[138,227]],[[139,227]],[[140,227]],[[145,227]],[[146,227]],[[150,227]],[[151,227]],[[152,227]],[[153,227]],[[154,227]],[[155,227]],[[7,227]],[[5,227]],[[156,227]],[[157,227]],[[158,227]],[[159,227]],[[160,227]],[[161,227]],[[162,227]],[[163,227]],[[164,227]],[[165,227]],[[166,227]],[[167,227]],[[168,227]],[[169,227]],[[170,227]],[[171,227]],[[172,227]],[[173,227]],[[174,227]],[[175,227]],[[176,227]],[[177,227]],[[178,227]],[[179,227]],[[180,227]],[[181,227]],[[182,227]],[[183,227]],[[184,227]],[[185,227]],[[186,227]],[[187,227]],[[188,227]],[[189,227]],[[190,227]],[[191,227]],[[192,227]],[[193,227]],[[194,227]],[[195,227]],[[196,227]],[[197,227]],[[198,227]],[[199,227]],[[200,227]],[[201,227]],[[202,227]],[[203,227]],[[205,227]],[[206,227]],[[207,227]],[[208,227]],[[209,227]],[[210,227]],[[211,227]],[[212,227]],[[213,227]],[[214,227]],[[215,227]],[[216,227]],[[220,227]],[[221,227]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[228,8],0,[[8,8],228],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[228,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[184,224],0,0,[184,229],0,[184,9],[184,230],[184,231],[184,230],[184,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],[[],226],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],[[],232],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[720,1420,2961,2970,3411,4324,4689,6829,6830,6831,6832,7095,7096,8957,8958,8959,8960,9011],"p":[[6,"__u16"],[6,"__u32"],[6,"__u8"],[3,"sock_filter"],[3,"cmsghdr"],[6,"c_uchar"],[3,"msghdr"],[6,"c_uint"],[6,"c_int"],[6,"size_t"],[15,"usize"],[3,"cpu_set_t"],[15,"bool"],[3,"fd_set"],[15,"u8"],[15,"u32"],[3,"sock_extended_err"],[3,"sockaddr"],[4,"DIR"],[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"],[3,"in_addr"],[3,"ip_mreq"],[3,"ip_mreqn"],[3,"ip_mreq_source"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"lconv"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"in6_rtmsg"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"mmsghdr"],[3,"epoll_event"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"utsname"],[3,"sigevent"],[4,"fpos64_t"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"fsid_t"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"uinput_ff_upload"],[3,"uinput_ff_erase"],[3,"uinput_abs_setup"],[3,"dl_phdr_info"],[3,"Elf32_Ehdr"],[3,"Elf64_Ehdr"],[3,"Elf32_Sym"],[3,"Elf64_Sym"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"Elf32_Shdr"],[3,"Elf64_Shdr"],[3,"ucred"],[3,"mntent"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"inotify_event"],[3,"fanotify_response"],[3,"sockaddr_vm"],[3,"regmatch_t"],[3,"__c_anonymous_sockaddr_can_tp"],[3,"__c_anonymous_sockaddr_can_j1939"],[3,"can_filter"],[3,"j1939_filter"],[3,"sock_fprog"],[3,"seccomp_data"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nlattr"],[3,"file_clone_range"],[3,"__c_anonymous_ifru_map"],[3,"in6_ifreq"],[3,"option"],[3,"sctp_initmsg"],[3,"sctp_sndrcvinfo"],[3,"sctp_sndinfo"],[3,"sctp_rcvinfo"],[3,"sctp_nxtinfo"],[3,"sctp_prinfo"],[3,"sctp_authinfo"],[3,"rlimit64"],[3,"sockaddr_nl"],[3,"dirent"],[3,"sockaddr_alg"],[3,"uinput_setup"],[3,"uinput_user_dev"],[3,"af_alg_iv"],[3,"mq_attr"],[19,"__c_anonymous_ifr_ifru"],[3,"ifreq"],[19,"__c_anonymous_ifc_ifcu"],[3,"ifconf"],[3,"hwtstamp_config"],[3,"dirent64"],[3,"sock_txtime"],[19,"__c_anonymous_sockaddr_can_can_addr"],[3,"sockaddr_can"],[3,"statx"],[3,"statx_timestamp"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"glob64_t"],[3,"termios"],[3,"mallinfo"],[3,"mallinfo2"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"rtentry"],[3,"timex"],[3,"ntptimeval"],[3,"regex_t"],[3,"Elf64_Chdr"],[3,"Elf32_Chdr"],[3,"seminfo"],[3,"ptrace_peeksiginfo_args"],[3,"__c_anonymous_ptrace_syscall_info_entry"],[3,"__c_anonymous_ptrace_syscall_info_exit"],[3,"__c_anonymous_ptrace_syscall_info_seccomp"],[3,"ptrace_syscall_info"],[19,"__c_anonymous_ptrace_syscall_info_data"],[3,"utmpx"],[3,"sigset_t"],[3,"sysinfo"],[3,"msqid_ds"],[3,"semid_ds"],[3,"sigaction"],[3,"statfs"],[3,"flock"],[3,"flock64"],[3,"siginfo_t"],[3,"stack_t"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"seccomp_notif_sizes"],[3,"ptrace_rseq_configuration"],[3,"user_fpregs_struct"],[3,"ucontext_t"],[3,"statvfs"],[3,"max_align_t"],[3,"clone_args"],[3,"sem_t"],[3,"termios2"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_condattr_t"],[3,"pthread_barrierattr_t"],[3,"fanotify_event_metadata"],[3,"pthread_cond_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_barrier_t"],[3,"can_frame"],[3,"canfd_frame"],[3,"canxl_frame"],[3,"open_how"],[3,"in6_addr"],[3,"Formatter"],[6,"Result"],[4,"c_void"],[3,"Error"],[4,"Result"],[8,"Hasher"],[6,"dev_t"],[6,"pid_t"],[6,"c_long"],[6,"uid_t"],[3,"TypeId"]]},\
"linux_raw_sys":{"doc":"","t":"AAAAAAALLGGGGGGGGGGGGGELLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRFFFRRRDTDDDDDDDDRRRRRRRRRRRRRRRRRRRRRRRMMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNNNNNNNNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRNNNNNNNNNNNNSRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGMMMMGGGGGDDGGGGGDGGGGGGGGDGDDGGGGGGDGGGGGDGGGGGGGDMMGMMMMMMMMMGGGGGTDDDDDTDDDDDGGGMMGGGGGMDDGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGGGMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLDLMMMMMMMMMMMMLLMMMMMMMMMMMDLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMDMMMMMMMMMMDDDMMDMMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMEDDDTDDTDDDDDMMMMMMDMDLLLLLLMMMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDMMMMMMMMDDDDMMMMDMMMMMMMMMMMMMMMMLDMMLMMMMMMMEEMMMMMMMMDMLLLMMMMMDMMLMMMMMMMMDMMDMMMMMMMMLMMMMMMMMMMMMMMMMMMMDDDDMMMMMMMMMMMMMMMMMDMMMMMMMMLLLLLLLLLLMMLMMMMDDMMMDTDGDTDGGTGMMMGMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMGMMMDDDMMMDDMMMMMMMMMMMMMMMMMMMMMMGDDDDDDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDTDTDDDDDDDDDDDLMDMMMMMMMMMDDDDMDMMMMMRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFFRF","n":["ctypes","elf","errno","general","ioctl","select_macros","signal_macros","borrow","borrow_mut","c_char","c_double","c_float","c_int","c_long","c_longlong","c_schar","c_short","c_uchar","c_uint","c_ulong","c_ulonglong","c_ushort","c_void","fmt","from","into","try_from","try_into","type_id","DT_HASH","DT_NULL","DT_REL","DT_RELA","DT_RELAENT","DT_RELASZ","DT_RELENT","DT_RELSZ","DT_STRTAB","DT_SYMENT","DT_SYMTAB","DT_VERDEF","DT_VERSYM","EI_ABIVERSION","EI_CLASS","EI_DATA","EI_NIDENT","EI_OSABI","EI_VERSION","ELFABIVERSION","ELFCLASS","ELFDATA","ELFMAG","ELFOSABI_LINUX","ELFOSABI_SYSV","ELF_ST_BIND","ELF_ST_TYPE","ELF_ST_VISIBILITY","EM_CURRENT","ET_DYN","EV_CURRENT","Elf_Dyn","Elf_Dyn_Union","Elf_Ehdr","Elf_Phdr","Elf_Rel","Elf_Rela","Elf_Sym","Elf_Verdaux","Elf_Verdef","Elf_auxv_t","PF_R","PF_W","PF_X","PN_XNUM","PT_DYNAMIC","PT_GNU_RELRO","PT_GNU_STACK","PT_INTERP","PT_LOAD","PT_PHDR","PT_TLS","R_RELATIVE","SELFMAG","SHN_ABS","SHN_UNDEF","STB_GLOBAL","STB_WEAK","STN_UNDEF","STT_FUNC","STT_NOTYPE","STV_DEFAULT","VER_DEF_CURRENT","VER_FLG_BASE","_vda_next","a_type","a_val","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","d_ptr","d_tag","d_un","d_val","e_ehsize","e_entry","e_flags","e_ident","e_machine","e_phentsize","e_phnum","e_phoff","e_shentsize","e_shnum","e_shoff","e_shstrndx","e_type","e_version","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","p_align","p_filesz","p_flags","p_memsz","p_offset","p_paddr","p_type","p_vaddr","r_addend","r_info","r_info","r_offset","r_offset","st_info","st_name","st_other","st_shndx","st_size","st_value","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vd_aux","vd_cnt","vd_flags","vd_hash","vd_ndx","vd_next","vd_version","vda_name","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EXDEV","EXFULL","AAFS_MAGIC","ADDRB","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","AFS_FS_MAGIC","AFS_SUPER_MAGIC","ANON_INODE_FS_MAGIC","ARCH_SET_FS","ARG_MAX","AT_BASE","AT_BASE_PLATFORM","AT_CLKTCK","AT_EACCESS","AT_EGID","AT_EMPTY_PATH","AT_ENTRY","AT_EUID","AT_EXECFD","AT_EXECFN","AT_FDCWD","AT_FLAGS","AT_GID","AT_HWCAP","AT_HWCAP2","AT_IGNORE","AT_MINSIGSTKSZ","AT_NOTELF","AT_NO_AUTOMOUNT","AT_NULL","AT_PAGESZ","AT_PHDR","AT_PHENT","AT_PHNUM","AT_PLATFORM","AT_RANDOM","AT_RECURSIVE","AT_REMOVEDIR","AT_RSEQ_ALIGN","AT_RSEQ_FEATURE_SIZE","AT_SECURE","AT_STATX_DONT_SYNC","AT_STATX_FORCE_SYNC","AT_STATX_SYNC_AS_STAT","AT_STATX_SYNC_TYPE","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AT_SYSINFO_EHDR","AT_UID","AT_VECTOR_SIZE_ARCH","AUTOFS_SUPER_MAGIC","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BDEVFS_MAGIC","BINDERFS_SUPER_MAGIC","BINFMTFS_MAGIC","BLOCK_SIZE","BLOCK_SIZE_BITS","BMAP_IOCTL","BOTHER","BPF_FS_MAGIC","BRKINT","BS0","BS1","BSDLY","BTRFS_SUPER_MAGIC","BTRFS_TEST_MAGIC","BUS_ADRALN","BUS_ADRERR","BUS_MCEERR_AO","BUS_MCEERR_AR","BUS_OBJERR","CAP_AUDIT_CONTROL","CAP_AUDIT_READ","CAP_AUDIT_WRITE","CAP_BLOCK_SUSPEND","CAP_BPF","CAP_CHECKPOINT_RESTORE","CAP_CHOWN","CAP_DAC_OVERRIDE","CAP_DAC_READ_SEARCH","CAP_FOWNER","CAP_FSETID","CAP_IPC_LOCK","CAP_IPC_OWNER","CAP_KILL","CAP_LAST_CAP","CAP_LEASE","CAP_LINUX_IMMUTABLE","CAP_MAC_ADMIN","CAP_MAC_OVERRIDE","CAP_MKNOD","CAP_NET_ADMIN","CAP_NET_BIND_SERVICE","CAP_NET_BROADCAST","CAP_NET_RAW","CAP_PERFMON","CAP_SETFCAP","CAP_SETGID","CAP_SETPCAP","CAP_SETUID","CAP_SYSLOG","CAP_SYS_ADMIN","CAP_SYS_BOOT","CAP_SYS_CHROOT","CAP_SYS_MODULE","CAP_SYS_NICE","CAP_SYS_PACCT","CAP_SYS_PTRACE","CAP_SYS_RAWIO","CAP_SYS_RESOURCE","CAP_SYS_TIME","CAP_SYS_TTY_CONFIG","CAP_WAKE_ALARM","CBAUD","CBAUDEX","CEPH_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CIBAUD","CIFS_SUPER_MAGIC","CLD_CONTINUED","CLD_DUMPED","CLD_EXITED","CLD_KILLED","CLD_STOPPED","CLD_TRAPPED","CLOCAL","CLOCKS_MASK","CLOCKS_MONO","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_SGI_CYCLE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","CLONE_ARGS_SIZE_VER0","CLONE_ARGS_SIZE_VER1","CLONE_ARGS_SIZE_VER2","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_CLEAR_SIGHAND","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_INTO_CGROUP","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWTIME","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CMSPAR","CODA_SUPER_MAGIC","CR0","CR1","CR2","CR3","CRAMFS_MAGIC","CRAMFS_MAGIC_WEND","CRDLY","CREAD","CRTSCTS","CS5","CS6","CS7","CS8","CSIGNAL","CSIZE","CSTOPB","DAXFS_MAGIC","DEBUGFS_MAGIC","DEVMEM_MAGIC","DEVPTS_SUPER_MAGIC","DMA_BUF_MAGIC","DN_ACCESS","DN_ATTRIB","DN_CREATE","DN_DELETE","DN_MODIFY","DN_MULTISHOT","DN_RENAME","DT_BLK","DT_CHR","DT_DIR","DT_FIFO","DT_LNK","DT_REG","DT_SOCK","DT_UNKNOWN","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","ECRYPTFS_SUPER_MAGIC","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EFIVARFS_MAGIC","EFS_SUPER_MAGIC","EMT_TAGOVF","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLNVAL","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EPOLL_CTL_ADD","EPOLL_CTL_DEL","EPOLL_CTL_MOD","EROFS_SUPER_MAGIC_V1","EXFAT_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","EXTA","EXTB","EXTPROC","F2FS_SUPER_MAGIC","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_NO_HIDE_STALE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FASYNC","FD_CLOEXEC","FF0","FF1","FFDLY","FILE_DEDUPE_RANGE_DIFFERS","FILE_DEDUPE_RANGE_SAME","FLUSHO","FPE_CONDTRAP","FPE_FLTDIV","FPE_FLTINV","FPE_FLTOVF","FPE_FLTRES","FPE_FLTSUB","FPE_FLTUND","FPE_FLTUNK","FPE_INTDIV","FPE_INTOVF","FSCONFIG_CMD_CREATE","FSCONFIG_CMD_RECONFIGURE","FSCONFIG_SET_BINARY","FSCONFIG_SET_FD","FSCONFIG_SET_FLAG","FSCONFIG_SET_PATH","FSCONFIG_SET_PATH_EMPTY","FSCONFIG_SET_STRING","FSCRYPT_KEY_DESCRIPTOR_SIZE","FSCRYPT_KEY_DESC_PREFIX","FSCRYPT_KEY_DESC_PREFIX_SIZE","FSCRYPT_KEY_IDENTIFIER_SIZE","FSCRYPT_KEY_REMOVAL_STATUS_FLAG_FILES_BUSY","FSCRYPT_KEY_REMOVAL_STATUS_FLAG_OTHER_USERS","FSCRYPT_KEY_SPEC_TYPE_DESCRIPTOR","FSCRYPT_KEY_SPEC_TYPE_IDENTIFIER","FSCRYPT_KEY_STATUS_ABSENT","FSCRYPT_KEY_STATUS_FLAG_ADDED_BY_SELF","FSCRYPT_KEY_STATUS_INCOMPLETELY_REMOVED","FSCRYPT_KEY_STATUS_PRESENT","FSCRYPT_MAX_KEY_SIZE","FSCRYPT_MODE_ADIANTUM","FSCRYPT_MODE_AES_128_CBC","FSCRYPT_MODE_AES_128_CTS","FSCRYPT_MODE_AES_256_CTS","FSCRYPT_MODE_AES_256_HCTR2","FSCRYPT_MODE_AES_256_XTS","FSCRYPT_MODE_SM4_CTS","FSCRYPT_MODE_SM4_XTS","FSCRYPT_POLICY_FLAGS_PAD_16","FSCRYPT_POLICY_FLAGS_PAD_32","FSCRYPT_POLICY_FLAGS_PAD_4","FSCRYPT_POLICY_FLAGS_PAD_8","FSCRYPT_POLICY_FLAGS_PAD_MASK","FSCRYPT_POLICY_FLAG_DIRECT_KEY","FSCRYPT_POLICY_FLAG_IV_INO_LBLK_32","FSCRYPT_POLICY_FLAG_IV_INO_LBLK_64","FSCRYPT_POLICY_V1","FSCRYPT_POLICY_V2","FSLABEL_MAX","FSMOUNT_CLOEXEC","FSOPEN_CLOEXEC","FSPICK_CLOEXEC","FSPICK_EMPTY_PATH","FSPICK_NO_AUTOMOUNT","FSPICK_SYMLINK_NOFOLLOW","FS_APPEND_FL","FS_BTREE_FL","FS_CASEFOLD_FL","FS_COMPRBLK_FL","FS_COMPR_FL","FS_DAX_FL","FS_DIRSYNC_FL","FS_DIRTY_FL","FS_EA_INODE_FL","FS_ENCRYPTION_MODE_ADIANTUM","FS_ENCRYPTION_MODE_AES_128_CBC","FS_ENCRYPTION_MODE_AES_128_CTS","FS_ENCRYPTION_MODE_AES_256_CBC","FS_ENCRYPTION_MODE_AES_256_CTS","FS_ENCRYPTION_MODE_AES_256_GCM","FS_ENCRYPTION_MODE_AES_256_XTS","FS_ENCRYPTION_MODE_INVALID","FS_ENCRYPT_FL","FS_EOFBLOCKS_FL","FS_EXTENT_FL","FS_FL_USER_MODIFIABLE","FS_FL_USER_VISIBLE","FS_HUGE_FILE_FL","FS_IMAGIC_FL","FS_IMMUTABLE_FL","FS_INDEX_FL","FS_INLINE_DATA_FL","FS_JOURNAL_DATA_FL","FS_KEY_DESCRIPTOR_SIZE","FS_KEY_DESC_PREFIX","FS_KEY_DESC_PREFIX_SIZE","FS_MAX_KEY_SIZE","FS_NOATIME_FL","FS_NOCOMP_FL","FS_NOCOW_FL","FS_NODUMP_FL","FS_NOTAIL_FL","FS_POLICY_FLAGS_PAD_16","FS_POLICY_FLAGS_PAD_32","FS_POLICY_FLAGS_PAD_4","FS_POLICY_FLAGS_PAD_8","FS_POLICY_FLAGS_PAD_MASK","FS_POLICY_FLAGS_VALID","FS_POLICY_FLAG_DIRECT_KEY","FS_PROJINHERIT_FL","FS_RESERVED_FL","FS_SECRM_FL","FS_SYNC_FL","FS_TOPDIR_FL","FS_UNRM_FL","FS_VERITY_FL","FS_XFLAG_APPEND","FS_XFLAG_COWEXTSIZE","FS_XFLAG_DAX","FS_XFLAG_EXTSIZE","FS_XFLAG_EXTSZINHERIT","FS_XFLAG_FILESTREAM","FS_XFLAG_HASATTR","FS_XFLAG_IMMUTABLE","FS_XFLAG_NOATIME","FS_XFLAG_NODEFRAG","FS_XFLAG_NODUMP","FS_XFLAG_NOSYMLINKS","FS_XFLAG_PREALLOC","FS_XFLAG_PROJINHERIT","FS_XFLAG_REALTIME","FS_XFLAG_RTINHERIT","FS_XFLAG_SYNC","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FUTEX_32","FUTEX_BITSET_MATCH_ANY","FUTEX_CLOCK_REALTIME","FUTEX_CMD_MASK","FUTEX_CMP_REQUEUE","FUTEX_CMP_REQUEUE_PI","FUTEX_CMP_REQUEUE_PI_PRIVATE","FUTEX_CMP_REQUEUE_PRIVATE","FUTEX_FD","FUTEX_LOCK_PI","FUTEX_LOCK_PI2","FUTEX_LOCK_PI2_PRIVATE","FUTEX_LOCK_PI_PRIVATE","FUTEX_OP_ADD","FUTEX_OP_ANDN","FUTEX_OP_CMP_EQ","FUTEX_OP_CMP_GE","FUTEX_OP_CMP_GT","FUTEX_OP_CMP_LE","FUTEX_OP_CMP_LT","FUTEX_OP_CMP_NE","FUTEX_OP_OPARG_SHIFT","FUTEX_OP_OR","FUTEX_OP_SET","FUTEX_OP_XOR","FUTEX_OWNER_DIED","FUTEX_PRIVATE_FLAG","FUTEX_REQUEUE","FUTEX_REQUEUE_PRIVATE","FUTEX_TID_MASK","FUTEX_TRYLOCK_PI","FUTEX_TRYLOCK_PI_PRIVATE","FUTEX_UNLOCK_PI","FUTEX_UNLOCK_PI_PRIVATE","FUTEX_WAIT","FUTEX_WAITERS","FUTEX_WAITV_MAX","FUTEX_WAIT_BITSET","FUTEX_WAIT_BITSET_PRIVATE","FUTEX_WAIT_PRIVATE","FUTEX_WAIT_REQUEUE_PI","FUTEX_WAIT_REQUEUE_PI_PRIVATE","FUTEX_WAKE","FUTEX_WAKE_BITSET","FUTEX_WAKE_BITSET_PRIVATE","FUTEX_WAKE_OP","FUTEX_WAKE_OP_PRIVATE","FUTEX_WAKE_PRIVATE","F_ADD_SEALS","F_CANCELLK","F_DUPFD","F_DUPFD_CLOEXEC","F_EXLCK","F_GETFD","F_GETFL","F_GETLEASE","F_GETLK","F_GETOWN","F_GETOWNER_UIDS","F_GETOWN_EX","F_GETPIPE_SZ","F_GETSIG","F_GET_FILE_RW_HINT","F_GET_RW_HINT","F_GET_SEALS","F_LINUX_SPECIFIC_BASE","F_NOTIFY","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_OK","F_OWNER_PGRP","F_OWNER_PID","F_OWNER_TID","F_RDLCK","F_SEAL_EXEC","F_SEAL_FUTURE_WRITE","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLEASE","F_SETLK","F_SETLKW","F_SETOWN","F_SETOWN_EX","F_SETPIPE_SZ","F_SETSIG","F_SET_FILE_RW_HINT","F_SET_RW_HINT","F_SHLCK","F_UNLCK","F_WRLCK","GRND_INSECURE","GRND_NONBLOCK","GRND_RANDOM","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","HUGETLB_FLAG_ENCODE_16GB","HUGETLB_FLAG_ENCODE_16KB","HUGETLB_FLAG_ENCODE_16MB","HUGETLB_FLAG_ENCODE_1GB","HUGETLB_FLAG_ENCODE_1MB","HUGETLB_FLAG_ENCODE_256MB","HUGETLB_FLAG_ENCODE_2GB","HUGETLB_FLAG_ENCODE_2MB","HUGETLB_FLAG_ENCODE_32MB","HUGETLB_FLAG_ENCODE_512KB","HUGETLB_FLAG_ENCODE_512MB","HUGETLB_FLAG_ENCODE_64KB","HUGETLB_FLAG_ENCODE_8MB","HUGETLB_FLAG_ENCODE_MASK","HUGETLB_FLAG_ENCODE_SHIFT","HUPCL","IBSHIFT","ICANON","ICRNL","IEXTEN","IGNBRK","IGNCR","IGNPAR","ILL_BADIADDR","ILL_BADSTK","ILL_COPROC","ILL_ILLADR","ILL_ILLOPC","ILL_ILLOPN","ILL_ILLTRP","ILL_PRVOPC","ILL_PRVREG","IMAXBEL","INLCR","INPCK","INR_OPEN_CUR","INR_OPEN_MAX","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_EXCL_UNLINK","IN_IGNORED","IN_ISDIR","IN_MASK_ADD","IN_MASK_CREATE","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","IOCSIZE_MASK","IOCSIZE_SHIFT","IOC_IN","IOC_INOUT","IOC_OUT","ISIG","ISOFS_SUPER_MAGIC","ISTRIP","ITIMER_PROF","ITIMER_REAL","ITIMER_VIRTUAL","IUCLC","IUTF8","IXANY","IXOFF","IXON","JFFS2_SUPER_MAGIC","LINK_MAX","LINUX_REBOOT_CMD_CAD_OFF","LINUX_REBOOT_CMD_CAD_ON","LINUX_REBOOT_CMD_HALT","LINUX_REBOOT_CMD_KEXEC","LINUX_REBOOT_CMD_POWER_OFF","LINUX_REBOOT_CMD_RESTART","LINUX_REBOOT_CMD_RESTART2","LINUX_REBOOT_CMD_SW_SUSPEND","LINUX_REBOOT_MAGIC1","LINUX_REBOOT_MAGIC2","LINUX_REBOOT_MAGIC2A","LINUX_REBOOT_MAGIC2B","LINUX_REBOOT_MAGIC2C","LINUX_VERSION_CODE","LINUX_VERSION_MAJOR","LINUX_VERSION_PATCHLEVEL","LINUX_VERSION_SUBLEVEL","LOCK_EX","LOCK_MAND","LOCK_NB","LOCK_READ","LOCK_RW","LOCK_SH","LOCK_UN","LOCK_WRITE","MADV_COLD","MADV_COLLAPSE","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_DONTNEED_LOCKED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_KEEPONFORK","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_PAGEOUT","MADV_POPULATE_READ","MADV_POPULATE_WRITE","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MADV_WIPEONFORK","MAP_32BIT","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16KB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_HUGE_MASK","MAP_HUGE_SHIFT","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_SHARED_VALIDATE","MAP_STACK","MAP_SYNC","MAP_TYPE","MAP_UNINITIALIZED","MAX_CANON","MAX_CLOCKS","MAX_INPUT","MCL_CURRENT","MCL_FUTURE","MCL_ONFAULT","MEMBARRIER_CMD_FLAG_CPU","MEMBARRIER_CMD_GET_REGISTRATIONS","MEMBARRIER_CMD_GLOBAL","MEMBARRIER_CMD_GLOBAL_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED","MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_QUERY","MEMBARRIER_CMD_REGISTER_GLOBAL_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ","MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE","MEMBARRIER_CMD_SHARED","MFD_ALLOW_SEALING","MFD_CLOEXEC","MFD_EXEC","MFD_HUGETLB","MFD_HUGE_16GB","MFD_HUGE_16MB","MFD_HUGE_1GB","MFD_HUGE_1MB","MFD_HUGE_256MB","MFD_HUGE_2GB","MFD_HUGE_2MB","MFD_HUGE_32MB","MFD_HUGE_512KB","MFD_HUGE_512MB","MFD_HUGE_64KB","MFD_HUGE_8MB","MFD_HUGE_MASK","MFD_HUGE_SHIFT","MFD_NOEXEC_SEAL","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MINSIGSTKSZ","MLOCK_LIMIT","MLOCK_ONFAULT","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MOUNT_ATTR_IDMAP","MOUNT_ATTR_NOATIME","MOUNT_ATTR_NODEV","MOUNT_ATTR_NODIRATIME","MOUNT_ATTR_NOEXEC","MOUNT_ATTR_NOSUID","MOUNT_ATTR_NOSYMFOLLOW","MOUNT_ATTR_RDONLY","MOUNT_ATTR_RELATIME","MOUNT_ATTR_SIZE_VER0","MOUNT_ATTR_STRICTATIME","MOUNT_ATTR__ATIME","MOVE_MOUNT_F_AUTOMOUNTS","MOVE_MOUNT_F_EMPTY_PATH","MOVE_MOUNT_F_SYMLINKS","MOVE_MOUNT_SET_GROUP","MOVE_MOUNT_T_AUTOMOUNTS","MOVE_MOUNT_T_EMPTY_PATH","MOVE_MOUNT_T_SYMLINKS","MOVE_MOUNT__MASK","MREMAP_DONTUNMAP","MREMAP_FIXED","MREMAP_MAYMOVE","MSDOS_SUPER_MAGIC","MS_ACTIVE","MS_ASYNC","MS_BIND","MS_BORN","MS_DIRSYNC","MS_INVALIDATE","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOREMOTELOCK","MS_NOSEC","MS_NOSUID","MS_NOSYMFOLLOW","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SUBMOUNT","MS_SYNC","MS_SYNCHRONOUS","MS_UNBINDABLE","MS_VERBOSE","MTD_INODE_FS_MAGIC","NAME_MAX","NCC","NCCS","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","NGROUPS_MAX","NILFS_SUPER_MAGIC","NL0","NL1","NLDLY","NOFLSH","NR_FILE","NR_OPEN","NSFS_MAGIC","NSIG","NSIGBUS","NSIGCHLD","NSIGEMT","NSIGFPE","NSIGILL","NSIGPOLL","NSIGSEGV","NSIGSYS","NSIGTRAP","OCFS2_SUPER_MAGIC","OCRNL","OFDEL","OFILL","OLCUC","ONLCR","ONLRET","ONOCR","OPENPROM_SUPER_MAGIC","OPEN_TREE_CLOEXEC","OPEN_TREE_CLONE","OPOST","OVERCOMMIT_ALWAYS","OVERCOMMIT_GUESS","OVERCOMMIT_NEVER","OVERLAYFS_SUPER_MAGIC","O_ACCMODE","O_APPEND","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_SYNC","O_TMPFILE","O_TMPFILE_MASK","O_TRUNC","O_WRONLY","PARENB","PARMRK","PARODD","PATH_MAX","PENDIN","PIPEFS_MAGIC","PIPE_BUF","PKEY_ACCESS_MASK","PKEY_DISABLE_ACCESS","PKEY_DISABLE_WRITE","POLLERR","POLLHUP","POLLIN","POLLMSG","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDHUP","POLLRDNORM","POLLREMOVE","POLLWRBAND","POLLWRNORM","POLL_ERR","POLL_HUP","POLL_IN","POLL_MSG","POLL_OUT","POLL_PRI","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","PRIO_MAX","PRIO_MIN","PRIO_PGRP","PRIO_PROCESS","PRIO_USER","PROC_SUPER_MAGIC","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_SEM","PROT_WRITE","PSTOREFS_MAGIC","P_ALL","P_PGID","P_PID","P_PIDFD","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","RAMFS_MAGIC","RDTGROUP_SUPER_MAGIC","REISER2FS_JR_SUPER_MAGIC_STRING","REISER2FS_SUPER_MAGIC_STRING","REISERFS_SUPER_MAGIC","REISERFS_SUPER_MAGIC_STRING","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","RESOLVE_BENEATH","RESOLVE_CACHED","RESOLVE_IN_ROOT","RESOLVE_NO_MAGICLINKS","RESOLVE_NO_SYMLINKS","RESOLVE_NO_XDEV","RLIM64_INFINITY","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","RLIM_INFINITY","RLIM_NLIMITS","ROBUST_LIST_LIMIT","RTSIG_MAX","RUSAGE_BOTH","RUSAGE_CHILDREN","RUSAGE_SELF","RUSAGE_THREAD","RWF_APPEND","RWF_DSYNC","RWF_HIPRI","RWF_NOWAIT","RWF_SYNC","RWF_WRITE_LIFE_NOT_SET","RWH_WRITE_LIFE_EXTREME","RWH_WRITE_LIFE_LONG","RWH_WRITE_LIFE_MEDIUM","RWH_WRITE_LIFE_NONE","RWH_WRITE_LIFE_NOT_SET","RWH_WRITE_LIFE_SHORT","R_OK","SA_EXPOSE_TAGBITS","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_NOMASK","SA_ONESHOT","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_RESTORER","SA_SIGINFO","SA_UNSUPPORTED","SCHED_BATCH","SCHED_DEADLINE","SCHED_FIFO","SCHED_FLAG_ALL","SCHED_FLAG_DL_OVERRUN","SCHED_FLAG_KEEP_ALL","SCHED_FLAG_KEEP_PARAMS","SCHED_FLAG_KEEP_POLICY","SCHED_FLAG_RECLAIM","SCHED_FLAG_RESET_ON_FORK","SCHED_FLAG_UTIL_CLAMP","SCHED_FLAG_UTIL_CLAMP_MAX","SCHED_FLAG_UTIL_CLAMP_MIN","SCHED_IDLE","SCHED_NORMAL","SCHED_RESET_ON_FORK","SCHED_RR","SECRETMEM_MAGIC","SECURITYFS_MAGIC","SEEK_CUR","SEEK_DATA","SEEK_END","SEEK_HOLE","SEEK_MAX","SEEK_SET","SEGV_ACCADI","SEGV_ACCERR","SEGV_ADIDERR","SEGV_ADIPERR","SEGV_BNDERR","SEGV_MAPERR","SEGV_MTEAERR","SEGV_MTESERR","SEGV_PKUERR","SELINUX_MAGIC","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGEV_MAX_SIZE","SIGEV_NONE","SIGEV_SIGNAL","SIGEV_THREAD","SIGEV_THREAD_ID","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGRTMIN","SIGSEGV","SIGSTKFLT","SIGSTKSZ","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_SETMASK","SIG_UNBLOCK","SI_ASYNCIO","SI_ASYNCNL","SI_DETHREAD","SI_KERNEL","SI_MAX_SIZE","SI_MESGQ","SI_QUEUE","SI_SIGIO","SI_TIMER","SI_TKILL","SI_USER","SMACK_MAGIC","SMB2_SUPER_MAGIC","SMB_SUPER_MAGIC","SOCKFS_MAGIC","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SQUASHFS_MAGIC","SS_AUTODISARM","SS_DISABLE","SS_FLAG_BITS","SS_ONSTACK","STACK_END_MAGIC","STATX_ALL","STATX_ATIME","STATX_ATTR_APPEND","STATX_ATTR_AUTOMOUNT","STATX_ATTR_COMPRESSED","STATX_ATTR_DAX","STATX_ATTR_ENCRYPTED","STATX_ATTR_IMMUTABLE","STATX_ATTR_MOUNT_ROOT","STATX_ATTR_NODUMP","STATX_ATTR_VERITY","STATX_BASIC_STATS","STATX_BLOCKS","STATX_BTIME","STATX_CTIME","STATX_DIOALIGN","STATX_GID","STATX_INO","STATX_MNT_ID","STATX_MODE","STATX_MTIME","STATX_NLINK","STATX_SIZE","STATX_TYPE","STATX_UID","STATX__RESERVED","STAT_HAVE_NSEC","STDERR_FILENO","STDIN_FILENO","STDOUT_FILENO","SYNC_FILE_RANGE_WAIT_AFTER","SYNC_FILE_RANGE_WAIT_BEFORE","SYNC_FILE_RANGE_WRITE","SYNC_FILE_RANGE_WRITE_AND_WAIT","SYSFS_MAGIC","SYS_SECCOMP","SYS_USER_DISPATCH","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","TAB0","TAB1","TAB2","TAB3","TABDLY","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCSADRAIN","TCSAFLUSH","TCSANOW","TFD_CLOEXEC","TFD_CREATE_FLAGS","TFD_NONBLOCK","TFD_SETTIME_FLAGS","TFD_SHARED_FCNTL_FLAGS","TFD_TIMER_ABSTIME","TFD_TIMER_CANCEL_ON_SET","TIMER_ABSTIME","TIOCM_CAR","TIOCM_CD","TIOCM_CTS","TIOCM_DSR","TIOCM_DTR","TIOCM_LE","TIOCM_LOOP","TIOCM_OUT1","TIOCM_OUT2","TIOCM_RI","TIOCM_RNG","TIOCM_RTS","TIOCM_SR","TIOCM_ST","TIOCPKT_DATA","TIOCPKT_DOSTOP","TIOCPKT_FLUSHREAD","TIOCPKT_FLUSHWRITE","TIOCPKT_IOCTL","TIOCPKT_NOSTOP","TIOCPKT_START","TIOCPKT_STOP","TIOCSER_TEMT","TMPFS_MAGIC","TOSTOP","TRACEFS_MAGIC","TRAP_BRANCH","TRAP_BRKPT","TRAP_HWBKPT","TRAP_PERF","TRAP_PERF_FLAG_ASYNC","TRAP_TRACE","TRAP_UNK","UDF_SUPER_MAGIC","UFFDIO","UFFDIO_COPY_MODE_DONTWAKE","UFFDIO_COPY_MODE_WP","UFFDIO_REGISTER_MODE_MINOR","UFFDIO_REGISTER_MODE_MISSING","UFFDIO_REGISTER_MODE_WP","UFFDIO_ZEROPAGE_MODE_DONTWAKE","UFFD_API","UFFD_EVENT_FORK","UFFD_EVENT_PAGEFAULT","UFFD_EVENT_REMAP","UFFD_EVENT_REMOVE","UFFD_EVENT_UNMAP","UFFD_FEATURE_EVENT_FORK","UFFD_FEATURE_EVENT_REMAP","UFFD_FEATURE_EVENT_REMOVE","UFFD_FEATURE_EVENT_UNMAP","UFFD_FEATURE_EXACT_ADDRESS","UFFD_FEATURE_MINOR_HUGETLBFS","UFFD_FEATURE_MINOR_SHMEM","UFFD_FEATURE_MISSING_HUGETLBFS","UFFD_FEATURE_MISSING_SHMEM","UFFD_FEATURE_PAGEFAULT_FLAG_WP","UFFD_FEATURE_SIGBUS","UFFD_FEATURE_THREAD_ID","UFFD_FEATURE_WP_HUGETLBFS_SHMEM","UFFD_PAGEFAULT_FLAG_MINOR","UFFD_PAGEFAULT_FLAG_WP","UFFD_PAGEFAULT_FLAG_WRITE","UFFD_USER_MODE_ONLY","UIO_FASTIOV","UIO_MAXIOV","UMOUNT_NOFOLLOW","UMOUNT_UNUSED","USBDEVICE_SUPER_MAGIC","USERFAULTFD_IOC","UTIME_NOW","UTIME_OMIT","V9FS_MAGIC","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VFS_CAP_FLAGS_EFFECTIVE","VFS_CAP_FLAGS_MASK","VFS_CAP_REVISION","VFS_CAP_REVISION_1","VFS_CAP_REVISION_2","VFS_CAP_REVISION_3","VFS_CAP_REVISION_MASK","VFS_CAP_REVISION_SHIFT","VFS_CAP_U32","VFS_CAP_U32_1","VFS_CAP_U32_2","VFS_CAP_U32_3","VINTR","VKILL","VLNEXT","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","WCONTINUED","WEXITED","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","W_OK","XATTR_APPARMOR_SUFFIX","XATTR_BTRFS_PREFIX","XATTR_CAPS_SUFFIX","XATTR_CREATE","XATTR_EVM_SUFFIX","XATTR_HURD_PREFIX","XATTR_IMA_SUFFIX","XATTR_LIST_MAX","XATTR_MAC_OSX_PREFIX","XATTR_NAME_APPARMOR","XATTR_NAME_CAPS","XATTR_NAME_EVM","XATTR_NAME_IMA","XATTR_NAME_MAX","XATTR_NAME_POSIX_ACL_ACCESS","XATTR_NAME_POSIX_ACL_DEFAULT","XATTR_NAME_SELINUX","XATTR_NAME_SMACK","XATTR_NAME_SMACKEXEC","XATTR_NAME_SMACKIPIN","XATTR_NAME_SMACKIPOUT","XATTR_NAME_SMACKMMAP","XATTR_NAME_SMACKTRANSMUTE","XATTR_OS2_PREFIX","XATTR_POSIX_ACL_ACCESS","XATTR_POSIX_ACL_DEFAULT","XATTR_REPLACE","XATTR_SECURITY_PREFIX","XATTR_SELINUX_SUFFIX","XATTR_SIZE_MAX","XATTR_SMACK_EXEC","XATTR_SMACK_IPIN","XATTR_SMACK_IPOUT","XATTR_SMACK_MMAP","XATTR_SMACK_SUFFIX","XATTR_SMACK_TRANSMUTE","XATTR_SYSTEM_PREFIX","XATTR_TRUSTED_PREFIX","XATTR_USER_PREFIX","XCASE","XENFS_SUPER_MAGIC","XFS_SUPER_MAGIC","XTABS","X_OK","ZONEFS_MAGIC","_IOC_DIRBITS","_IOC_DIRMASK","_IOC_DIRSHIFT","_IOC_NONE","_IOC_NRBITS","_IOC_NRMASK","_IOC_NRSHIFT","_IOC_READ","_IOC_SIZEBITS","_IOC_SIZEMASK","_IOC_SIZESHIFT","_IOC_TYPEBITS","_IOC_TYPEMASK","_IOC_TYPESHIFT","_IOC_WRITE","_LINUX_CAPABILITY_U32S","_LINUX_CAPABILITY_U32S_1","_LINUX_CAPABILITY_U32S_2","_LINUX_CAPABILITY_U32S_3","_LINUX_CAPABILITY_VERSION","_LINUX_CAPABILITY_VERSION_1","_LINUX_CAPABILITY_VERSION_2","_LINUX_CAPABILITY_VERSION_3","_NSIG","_STK_LIM","_UFFDIO_API","_UFFDIO_CONTINUE","_UFFDIO_COPY","_UFFDIO_REGISTER","_UFFDIO_UNREGISTER","_UFFDIO_WAKE","_UFFDIO_WRITEPROTECT","_UFFDIO_ZEROPAGE","__BindgenBitfieldUnit","__FD_SETSIZE","__FPE_DECDIV","__FPE_DECERR","__FPE_DECOVF","__FPE_INVASC","__FPE_INVDEC","__ILL_BNDMOD","__ILL_BREAK","__IncompleteArrayField","__NR__sysctl","__NR_accept","__NR_accept4","__NR_access","__NR_acct","__NR_add_key","__NR_adjtimex","__NR_afs_syscall","__NR_alarm","__NR_arch_prctl","__NR_bind","__NR_bpf","__NR_brk","__NR_capget","__NR_capset","__NR_chdir","__NR_chmod","__NR_chown","__NR_chroot","__NR_clock_adjtime","__NR_clock_getres","__NR_clock_gettime","__NR_clock_nanosleep","__NR_clock_settime","__NR_clone","__NR_clone3","__NR_close","__NR_close_range","__NR_connect","__NR_copy_file_range","__NR_creat","__NR_create_module","__NR_delete_module","__NR_dup","__NR_dup2","__NR_dup3","__NR_epoll_create","__NR_epoll_create1","__NR_epoll_ctl","__NR_epoll_ctl_old","__NR_epoll_pwait","__NR_epoll_pwait2","__NR_epoll_wait","__NR_epoll_wait_old","__NR_eventfd","__NR_eventfd2","__NR_execve","__NR_execveat","__NR_exit","__NR_exit_group","__NR_faccessat","__NR_faccessat2","__NR_fadvise64","__NR_fallocate","__NR_fanotify_init","__NR_fanotify_mark","__NR_fchdir","__NR_fchmod","__NR_fchmodat","__NR_fchown","__NR_fchownat","__NR_fcntl","__NR_fdatasync","__NR_fgetxattr","__NR_finit_module","__NR_flistxattr","__NR_flock","__NR_fork","__NR_fremovexattr","__NR_fsconfig","__NR_fsetxattr","__NR_fsmount","__NR_fsopen","__NR_fspick","__NR_fstat","__NR_fstatfs","__NR_fsync","__NR_ftruncate","__NR_futex","__NR_futex_waitv","__NR_futimesat","__NR_get_kernel_syms","__NR_get_mempolicy","__NR_get_robust_list","__NR_get_thread_area","__NR_getcpu","__NR_getcwd","__NR_getdents","__NR_getdents64","__NR_getegid","__NR_geteuid","__NR_getgid","__NR_getgroups","__NR_getitimer","__NR_getpeername","__NR_getpgid","__NR_getpgrp","__NR_getpid","__NR_getpmsg","__NR_getppid","__NR_getpriority","__NR_getrandom","__NR_getresgid","__NR_getresuid","__NR_getrlimit","__NR_getrusage","__NR_getsid","__NR_getsockname","__NR_getsockopt","__NR_gettid","__NR_gettimeofday","__NR_getuid","__NR_getxattr","__NR_init_module","__NR_inotify_add_watch","__NR_inotify_init","__NR_inotify_init1","__NR_inotify_rm_watch","__NR_io_cancel","__NR_io_destroy","__NR_io_getevents","__NR_io_pgetevents","__NR_io_setup","__NR_io_submit","__NR_io_uring_enter","__NR_io_uring_register","__NR_io_uring_setup","__NR_ioctl","__NR_ioperm","__NR_iopl","__NR_ioprio_get","__NR_ioprio_set","__NR_kcmp","__NR_kexec_file_load","__NR_kexec_load","__NR_keyctl","__NR_kill","__NR_landlock_add_rule","__NR_landlock_create_ruleset","__NR_landlock_restrict_self","__NR_lchown","__NR_lgetxattr","__NR_link","__NR_linkat","__NR_listen","__NR_listxattr","__NR_llistxattr","__NR_lookup_dcookie","__NR_lremovexattr","__NR_lseek","__NR_lsetxattr","__NR_lstat","__NR_madvise","__NR_mbind","__NR_membarrier","__NR_memfd_create","__NR_memfd_secret","__NR_migrate_pages","__NR_mincore","__NR_mkdir","__NR_mkdirat","__NR_mknod","__NR_mknodat","__NR_mlock","__NR_mlock2","__NR_mlockall","__NR_mmap","__NR_modify_ldt","__NR_mount","__NR_mount_setattr","__NR_move_mount","__NR_move_pages","__NR_mprotect","__NR_mq_getsetattr","__NR_mq_notify","__NR_mq_open","__NR_mq_timedreceive","__NR_mq_timedsend","__NR_mq_unlink","__NR_mremap","__NR_msgctl","__NR_msgget","__NR_msgrcv","__NR_msgsnd","__NR_msync","__NR_munlock","__NR_munlockall","__NR_munmap","__NR_name_to_handle_at","__NR_nanosleep","__NR_newfstatat","__NR_nfsservctl","__NR_open","__NR_open_by_handle_at","__NR_open_tree","__NR_openat","__NR_openat2","__NR_pause","__NR_perf_event_open","__NR_personality","__NR_pidfd_getfd","__NR_pidfd_open","__NR_pidfd_send_signal","__NR_pipe","__NR_pipe2","__NR_pivot_root","__NR_pkey_alloc","__NR_pkey_free","__NR_pkey_mprotect","__NR_poll","__NR_ppoll","__NR_prctl","__NR_pread64","__NR_preadv","__NR_preadv2","__NR_prlimit64","__NR_process_madvise","__NR_process_mrelease","__NR_process_vm_readv","__NR_process_vm_writev","__NR_pselect6","__NR_ptrace","__NR_putpmsg","__NR_pwrite64","__NR_pwritev","__NR_pwritev2","__NR_query_module","__NR_quotactl","__NR_quotactl_fd","__NR_read","__NR_readahead","__NR_readlink","__NR_readlinkat","__NR_readv","__NR_reboot","__NR_recvfrom","__NR_recvmmsg","__NR_recvmsg","__NR_remap_file_pages","__NR_removexattr","__NR_rename","__NR_renameat","__NR_renameat2","__NR_request_key","__NR_restart_syscall","__NR_rmdir","__NR_rseq","__NR_rt_sigaction","__NR_rt_sigpending","__NR_rt_sigprocmask","__NR_rt_sigqueueinfo","__NR_rt_sigreturn","__NR_rt_sigsuspend","__NR_rt_sigtimedwait","__NR_rt_tgsigqueueinfo","__NR_sched_get_priority_max","__NR_sched_get_priority_min","__NR_sched_getaffinity","__NR_sched_getattr","__NR_sched_getparam","__NR_sched_getscheduler","__NR_sched_rr_get_interval","__NR_sched_setaffinity","__NR_sched_setattr","__NR_sched_setparam","__NR_sched_setscheduler","__NR_sched_yield","__NR_seccomp","__NR_security","__NR_select","__NR_semctl","__NR_semget","__NR_semop","__NR_semtimedop","__NR_sendfile","__NR_sendmmsg","__NR_sendmsg","__NR_sendto","__NR_set_mempolicy","__NR_set_mempolicy_home_node","__NR_set_robust_list","__NR_set_thread_area","__NR_set_tid_address","__NR_setdomainname","__NR_setfsgid","__NR_setfsuid","__NR_setgid","__NR_setgroups","__NR_sethostname","__NR_setitimer","__NR_setns","__NR_setpgid","__NR_setpriority","__NR_setregid","__NR_setresgid","__NR_setresuid","__NR_setreuid","__NR_setrlimit","__NR_setsid","__NR_setsockopt","__NR_settimeofday","__NR_setuid","__NR_setxattr","__NR_shmat","__NR_shmctl","__NR_shmdt","__NR_shmget","__NR_shutdown","__NR_sigaltstack","__NR_signalfd","__NR_signalfd4","__NR_socket","__NR_socketpair","__NR_splice","__NR_stat","__NR_statfs","__NR_statx","__NR_swapoff","__NR_swapon","__NR_symlink","__NR_symlinkat","__NR_sync","__NR_sync_file_range","__NR_syncfs","__NR_sysfs","__NR_sysinfo","__NR_syslog","__NR_tee","__NR_tgkill","__NR_time","__NR_timer_create","__NR_timer_delete","__NR_timer_getoverrun","__NR_timer_gettime","__NR_timer_settime","__NR_timerfd_create","__NR_timerfd_gettime","__NR_timerfd_settime","__NR_times","__NR_tkill","__NR_truncate","__NR_tuxcall","__NR_umask","__NR_umount2","__NR_uname","__NR_unlink","__NR_unlinkat","__NR_unshare","__NR_uselib","__NR_userfaultfd","__NR_ustat","__NR_utime","__NR_utimensat","__NR_utimes","__NR_vfork","__NR_vhangup","__NR_vmsplice","__NR_vserver","__NR_wait4","__NR_waitid","__NR_write","__NR_writev","__O_SYNC","__O_TMPFILE","__WALL","__WCLONE","__WNOTHREAD","__X32_SYSCALL_BIT","__be16","__be32","__be64","__bindgen_anon_1","__bindgen_anon_1","__bindgen_anon_1","__bindgen_padding_0","__fsword_t","__kernel_caddr_t","__kernel_clock_t","__kernel_clockid_t","__kernel_daddr_t","__kernel_fd_set","__kernel_fsid_t","__kernel_gid16_t","__kernel_gid32_t","__kernel_gid_t","__kernel_ino_t","__kernel_ipc_pid_t","__kernel_itimerspec","__kernel_key_t","__kernel_loff_t","__kernel_long_t","__kernel_mode_t","__kernel_mqd_t","__kernel_off_t","__kernel_old_dev_t","__kernel_old_gid_t","__kernel_old_itimerval","__kernel_old_time_t","__kernel_old_timespec","__kernel_old_timeval","__kernel_old_uid_t","__kernel_pid_t","__kernel_ptrdiff_t","__kernel_rwf_t","__kernel_sighandler_t","__kernel_size_t","__kernel_sock_timeval","__kernel_ssize_t","__kernel_suseconds_t","__kernel_time64_t","__kernel_time_t","__kernel_timer_t","__kernel_timespec","__kernel_uid16_t","__kernel_uid32_t","__kernel_uid_t","__kernel_ulong_t","__le16","__le32","__le64","__old_kernel_stat","__out_reserved","__pad0","__poll_t","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__reserved","__restorefn_t","__s16","__s32","__s64","__s8","__sifields","__sifields__bindgen_ty_1","__sifields__bindgen_ty_2","__sifields__bindgen_ty_3","__sifields__bindgen_ty_4","__sifields__bindgen_ty_5","__sifields__bindgen_ty_5__bindgen_ty_1","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3","__sifields__bindgen_ty_6","__sifields__bindgen_ty_7","__sighandler_t","__signalfn_t","__sigrestore_t","__spare0","__spare3","__sum16","__u16","__u32","__u64","__u8","__unused","__user_cap_data_struct","__user_cap_header_struct","__wsum","_addr","_addr_bnd","_addr_lsb","_addr_pkey","_arch","_attribute","_band","_bitfield_1","_bitfield_align_1","_call_addr","_data","_dummy_bnd","_dummy_pkey","_fd","_flags","_function","_kill","_lower","_overrun","_pad","_perf","_pid","_pid","_pid","_pkey","_rt","_si_pad","_sifields","_sigchld","_sigev_thread","_sigev_un","_sigfault","_sigpoll","_sigsys","_sigval","_sigval","_status","_stime","_sys_private","_syscall","_tid","_tid","_timer","_trapno","_type","_uid","_uid","_uid","_upper","_utime","address","api","arg","as_mut_ptr","as_mut_slice","as_ptr","as_slice","attr_clr","attr_set","base_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","buf_size","bytes_deduped","c_cc","c_cc","c_cc","c_cc","c_cflag","c_cflag","c_cflag","c_cflag","c_iflag","c_iflag","c_iflag","c_iflag","c_ispeed","c_ispeed","c_lflag","c_lflag","c_lflag","c_lflag","c_line","c_line","c_line","c_line","c_oflag","c_oflag","c_oflag","c_oflag","c_ospeed","c_ospeed","cap_user_data_t","cap_user_header_t","cc_t","cgroup","child_tid","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_args","cmp","compat_statfs64","contents","contents_encryption_mode","contents_encryption_mode","cookie","copy","d_ino","d_name","d_off","d_reclen","d_type","data","data","data","default","default","descriptor","dest_count","dest_fd","dest_offset","dest_offset","dst","dummy","effective","end","entropy_count","entry_number","epoll_event","eq","eq","eq","eq","eq","event","events","events","exit_signal","f_bavail","f_bavail","f_bavail","f_bfree","f_bfree","f_bfree","f_blocks","f_blocks","f_blocks","f_bsize","f_bsize","f_bsize","f_ffree","f_ffree","f_ffree","f_files","f_files","f_files","f_flags","f_flags","f_flags","f_frsize","f_frsize","f_frsize","f_fsid","f_fsid","f_fsid","f_namelen","f_namelen","f_namelen","f_owner_ex","f_spare","f_spare","f_spare","f_type","f_type","f_type","fd","fds_bits","feat","features","file_clone_range","file_dedupe_range","file_dedupe_range_info","filenames_encryption_mode","filenames_encryption_mode","files_stat_struct","flags","flags","flags","flags","flags","flags","flock","flock64","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fsconfig_command","fscrypt_add_key_arg","fscrypt_get_key_status_arg","fscrypt_get_policy_ex_arg","fscrypt_get_policy_ex_arg__bindgen_ty_1","fscrypt_key","fscrypt_key_specifier","fscrypt_key_specifier__bindgen_ty_1","fscrypt_policy_v1","fscrypt_policy_v2","fscrypt_provisioning_key_payload","fscrypt_remove_key_arg","fstrim_range","fsx_cowextsize","fsx_extsize","fsx_nextents","fsx_pad","fsx_projid","fsx_xflags","fsxattr","futex_offset","futex_waitv","get","get_bit","hash","hash","hash","hash","identifier","info","inheritable","inheritable","inheritable","inodes_stat_t","inotify_event","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ioctls","ioctls","iov_base","iov_len","iovec","it_interval","it_interval","it_interval","it_interval","it_value","it_value","it_value","it_value","itimerspec","itimerval","kernel_sigaction","kernel_sigset_t","key_id","key_spec","key_spec","key_spec","ktermios","l_len","l_len","l_pid","l_pid","l_start","l_start","l_type","l_type","l_whence","l_whence","len","len","len","len","len","limit","limit_in_pages","linux_dirent64","list","list_op_pending","lm","magic_etc","magic_etc","mapped","mask","master_key_descriptor","master_key_identifier","max_files","membarrier_cmd","membarrier_cmd_flag","minlen","mode","mode","mode","mode","mode","mode","mode","mount_attr","name","new","new","new_bitfield_1","next","nr_files","nr_free_files","nr_inodes","nr_unused","open_how","pagefault","parent_tid","partial_cmp","permitted","permitted","permitted","pid","pid","pidfd","policy","policy_size","pollfd","propagation","ptid","rand_pool_info","range","range","range","range","raw","raw","raw","raw_size","read_exec_only","remap","removal_status_flags","remove","reserved","reserved","reserved1","reserved1","reserved1","reserved2","reserved2","reserved2","reserved3","reserved3","resolve","revents","rlim_cur","rlim_cur","rlim_max","rlim_max","rlimit","rlimit64","robust_list","robust_list_head","rootid","ru_idrss","ru_inblock","ru_isrss","ru_ixrss","ru_majflt","ru_maxrss","ru_minflt","ru_msgrcv","ru_msgsnd","ru_nivcsw","ru_nsignals","ru_nswap","ru_nvcsw","ru_oublock","ru_stime","ru_utime","rusage","sa_flags","sa_flags","sa_handler","sa_handler_kernel","sa_mask","sa_mask","sa_restorer","sa_restorer","seg_32bit","seg_not_present","set","set_bit","set_contents","set_limit_in_pages","set_lm","set_read_exec_only","set_seg_32bit","set_seg_not_present","set_tid","set_tid_size","set_useable","si_code","si_errno","si_signo","sig","sigaction","sigaltstack","sigev_notify","sigev_signo","sigev_value","sigevent","sigevent__bindgen_ty_1","sigevent__bindgen_ty_1__bindgen_ty_1","sigevent_t","siginfo","siginfo__bindgen_ty_1","siginfo__bindgen_ty_1__bindgen_ty_1","siginfo_t","sigset_t","sigval","sigval_t","sival_int","sival_ptr","size","speed_t","src","src_fd","src_length","src_length","src_offset","src_offset","ss_flags","ss_size","ss_sp","st_atime","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime","st_ctime_nsec","st_dev","st_dev","st_gid","st_gid","st_ino","st_ino","st_mode","st_mode","st_mtime","st_mtime","st_mtime_nsec","st_nlink","st_nlink","st_rdev","st_rdev","st_size","st_size","st_uid","st_uid","stack","stack_size","stack_t","start","start","start","stat","statfs","statfs64","status","status","status_flags","statx","statx_timestamp","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","tcflag_t","termio","termios","termios2","timespec","timeval","timezone","tls","to","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tv_nsec","tv_nsec","tv_nsec","tv_nsec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_sec","tv_usec","tv_usec","tv_usec","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","tz_dsttime","tz_minuteswest","u","uaddr","ufd","uffd_msg","uffd_msg__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1","uffd_msg__bindgen_ty_1__bindgen_ty_2","uffd_msg__bindgen_ty_1__bindgen_ty_3","uffd_msg__bindgen_ty_1__bindgen_ty_4","uffd_msg__bindgen_ty_1__bindgen_ty_5","uffdio_api","uffdio_continue","uffdio_copy","uffdio_range","uffdio_register","uffdio_writeprotect","uffdio_zeropage","useable","user_count","user_desc","userns_fd","v1","v2","val","val","version","version","version","version","vfs_cap_data","vfs_cap_data__bindgen_ty_1","vfs_ns_cap_data","vfs_ns_cap_data__bindgen_ty_1","wd","winsize","ws_col","ws_row","ws_xpixel","ws_ypixel","zeropage","ACRN_IOCTL_ASSIGN_PCIDEV","ACRN_IOCTL_ATTACH_IOREQ_CLIENT","ACRN_IOCTL_CLEAR_VM_IOREQ","ACRN_IOCTL_CREATE_IOREQ_CLIENT","ACRN_IOCTL_CREATE_VM","ACRN_IOCTL_DEASSIGN_PCIDEV","ACRN_IOCTL_DESTROY_IOREQ_CLIENT","ACRN_IOCTL_DESTROY_VM","ACRN_IOCTL_INJECT_MSI","ACRN_IOCTL_IOEVENTFD","ACRN_IOCTL_IRQFD","ACRN_IOCTL_NOTIFY_REQUEST_FINISH","ACRN_IOCTL_PAUSE_VM","ACRN_IOCTL_PM_GET_CPU_STATE","ACRN_IOCTL_RESET_PTDEV_INTR","ACRN_IOCTL_RESET_VM","ACRN_IOCTL_SET_IRQLINE","ACRN_IOCTL_SET_MEMSEG","ACRN_IOCTL_SET_PTDEV_INTR","ACRN_IOCTL_SET_VCPU_REGS","ACRN_IOCTL_START_VM","ACRN_IOCTL_UNSET_MEMSEG","ACRN_IOCTL_VM_INTR_MONITOR","AGPIOC_ALLOCATE","APM_IOC_STANDBY","APM_IOC_SUSPEND","ASPEED_LPC_CTRL_IOCTL_GET_SIZE","ASPEED_LPC_CTRL_IOCTL_MAP","ASPEED_P2A_CTRL_IOCTL_GET_MEMORY_CONFIG","ASPEED_P2A_CTRL_IOCTL_SET_WINDOW","ATMARPD_CTRL","ATMARP_ENCAP","ATMARP_MKIP","ATMARP_SETENTRY","ATMLEC_CTRL","ATMLEC_DATA","ATMLEC_MCAST","ATMMPC_CTRL","ATMMPC_DATA","ATMSIGD_CTRL","ATMTCP_CREATE","ATMTCP_REMOVE","ATM_ADDADDR","ATM_ADDLECSADDR","ATM_ADDPARTY","ATM_DELADDR","ATM_DELLECSADDR","ATM_DROPPARTY","ATM_GETADDR","ATM_GETCIRANGE","ATM_GETESI","ATM_GETLECSADDR","ATM_GETLINKRATE","ATM_GETLOOP","ATM_GETNAMES","ATM_GETSTAT","ATM_GETSTATZ","ATM_GETTYPE","ATM_NEWBACKENDIF","ATM_QUERYLOOP","ATM_RSTADDR","ATM_SETBACKEND","ATM_SETCIRANGE","ATM_SETESI","ATM_SETESIF","ATM_SETLOOP","ATM_SETSC","AUTOFS_DEV_IOCTL_ASKUMOUNT","AUTOFS_DEV_IOCTL_CATATONIC","AUTOFS_DEV_IOCTL_CLOSEMOUNT","AUTOFS_DEV_IOCTL_EXPIRE","AUTOFS_DEV_IOCTL_FAIL","AUTOFS_DEV_IOCTL_ISMOUNTPOINT","AUTOFS_DEV_IOCTL_OPENMOUNT","AUTOFS_DEV_IOCTL_PROTOSUBVER","AUTOFS_DEV_IOCTL_PROTOVER","AUTOFS_DEV_IOCTL_READY","AUTOFS_DEV_IOCTL_REQUESTER","AUTOFS_DEV_IOCTL_SETPIPEFD","AUTOFS_DEV_IOCTL_TIMEOUT","AUTOFS_DEV_IOCTL_VERSION","AUTOFS_IOC_ASKUMOUNT","AUTOFS_IOC_CATATONIC","AUTOFS_IOC_EXPIRE","AUTOFS_IOC_EXPIRE_MULTI","AUTOFS_IOC_FAIL","AUTOFS_IOC_PROTOSUBVER","AUTOFS_IOC_PROTOVER","AUTOFS_IOC_READY","AUTOFS_IOC_SETTIMEOUT","BLKALIGNOFF","BLKBSZGET","BLKBSZSET","BLKCLOSEZONE","BLKDISCARD","BLKDISCARDZEROES","BLKFINISHZONE","BLKFLSBUF","BLKFRAGET","BLKFRASET","BLKGETDISKSEQ","BLKGETNRZONES","BLKGETSIZE","BLKGETSIZE64","BLKGETZONESZ","BLKIOMIN","BLKIOOPT","BLKOPENZONE","BLKPBSZGET","BLKPG","BLKRAGET","BLKRASET","BLKREPORTZONE","BLKRESETZONE","BLKROGET","BLKROSET","BLKROTATIONAL","BLKRRPART","BLKSECDISCARD","BLKSECTGET","BLKSECTSET","BLKSSZGET","BLKTRACESETUP","BLKTRACESTART","BLKTRACESTOP","BLKTRACETEARDOWN","BLKZEROOUT","BR2684_SETFILT","BTRFS_IOC_ADD_DEV","BTRFS_IOC_BALANCE","BTRFS_IOC_BALANCE_CTL","BTRFS_IOC_BALANCE_PROGRESS","BTRFS_IOC_BALANCE_V2","BTRFS_IOC_CLONE","BTRFS_IOC_CLONE_RANGE","BTRFS_IOC_DEFAULT_SUBVOL","BTRFS_IOC_DEFRAG","BTRFS_IOC_DEFRAG_RANGE","BTRFS_IOC_DEVICES_READY","BTRFS_IOC_DEV_INFO","BTRFS_IOC_DEV_REPLACE","BTRFS_IOC_FILE_EXTENT_SAME","BTRFS_IOC_FORGET_DEV","BTRFS_IOC_FS_INFO","BTRFS_IOC_GET_DEV_STATS","BTRFS_IOC_GET_FEATURES","BTRFS_IOC_GET_SUBVOL_INFO","BTRFS_IOC_GET_SUBVOL_ROOTREF","BTRFS_IOC_GET_SUPPORTED_FEATURES","BTRFS_IOC_INO_LOOKUP","BTRFS_IOC_INO_LOOKUP_USER","BTRFS_IOC_INO_PATHS","BTRFS_IOC_LOGICAL_INO","BTRFS_IOC_LOGICAL_INO_V2","BTRFS_IOC_QGROUP_ASSIGN","BTRFS_IOC_QGROUP_CREATE","BTRFS_IOC_QGROUP_LIMIT","BTRFS_IOC_QUOTA_CTL","BTRFS_IOC_QUOTA_RESCAN","BTRFS_IOC_QUOTA_RESCAN_STATUS","BTRFS_IOC_QUOTA_RESCAN_WAIT","BTRFS_IOC_RESIZE","BTRFS_IOC_RM_DEV","BTRFS_IOC_RM_DEV_V2","BTRFS_IOC_SCAN_DEV","BTRFS_IOC_SCRUB","BTRFS_IOC_SCRUB_CANCEL","BTRFS_IOC_SCRUB_PROGRESS","BTRFS_IOC_SEND","BTRFS_IOC_SET_FEATURES","BTRFS_IOC_SET_RECEIVED_SUBVOL","BTRFS_IOC_SNAP_CREATE","BTRFS_IOC_SNAP_CREATE_V2","BTRFS_IOC_SNAP_DESTROY","BTRFS_IOC_SNAP_DESTROY_V2","BTRFS_IOC_SPACE_INFO","BTRFS_IOC_START_SYNC","BTRFS_IOC_SUBVOL_CREATE","BTRFS_IOC_SUBVOL_CREATE_V2","BTRFS_IOC_SUBVOL_GETFLAGS","BTRFS_IOC_SUBVOL_SETFLAGS","BTRFS_IOC_SYNC","BTRFS_IOC_TRANS_END","BTRFS_IOC_TRANS_START","BTRFS_IOC_TREE_SEARCH","BTRFS_IOC_TREE_SEARCH_V2","BTRFS_IOC_WAIT_SYNC","BT_BMC_IOCTL_SMS_ATN","CAPI_CLR_FLAGS","CAPI_GET_ERRCODE","CAPI_GET_FLAGS","CAPI_GET_MANUFACTURER","CAPI_GET_PROFILE","CAPI_GET_SERIAL","CAPI_GET_VERSION","CAPI_INSTALLED","CAPI_MANUFACTURER_CMD","CAPI_NCCI_GETUNIT","CAPI_NCCI_OPENCOUNT","CAPI_REGISTER","CAPI_SET_FLAGS","CCISS_BIG_PASSTHRU","CCISS_DEREGDISK","CCISS_GETBUSTYPES","CCISS_GETDRIVVER","CCISS_GETFIRMVER","CCISS_GETHEARTBEAT","CCISS_GETINTINFO","CCISS_GETLUNINFO","CCISS_GETNODENAME","CCISS_GETPCIINFO","CCISS_PASSTHRU","CCISS_REGNEWD","CCISS_REGNEWDISK","CCISS_RESCANDISK","CCISS_REVALIDVOLS","CCISS_SETINTINFO","CCISS_SETNODENAME","CEC_ADAP_G_CAPS","CEC_ADAP_G_CONNECTOR_INFO","CEC_ADAP_G_LOG_ADDRS","CEC_ADAP_G_PHYS_ADDR","CEC_ADAP_S_LOG_ADDRS","CEC_ADAP_S_PHYS_ADDR","CEC_DQEVENT","CEC_G_MODE","CEC_RECEIVE","CEC_S_MODE","CEC_TRANSMIT","CHIOEXCHANGE","CHIOGELEM","CHIOGPARAMS","CHIOGPICKER","CHIOGSTATUS","CHIOGVPARAMS","CHIOINITELEM","CHIOMOVE","CHIOPOSITION","CHIOSPICKER","CHIOSVOLTAG","CIOC_KERNEL_VERSION","CM_IOCGATR","CM_IOSDBGLVL","CXL_MEM_QUERY_COMMANDS","CXL_MEM_SEND_COMMAND","DELL_WMI_SMBIOS_CMD","DFL_FPGA_CHECK_EXTENSION","DFL_FPGA_FME_ERR_GET_IRQ_NUM","DFL_FPGA_FME_ERR_SET_IRQ","DFL_FPGA_FME_PORT_ASSIGN","DFL_FPGA_FME_PORT_PR","DFL_FPGA_FME_PORT_RELEASE","DFL_FPGA_GET_API_VERSION","DFL_FPGA_PORT_DMA_MAP","DFL_FPGA_PORT_DMA_UNMAP","DFL_FPGA_PORT_ERR_GET_IRQ_NUM","DFL_FPGA_PORT_ERR_SET_IRQ","DFL_FPGA_PORT_GET_INFO","DFL_FPGA_PORT_GET_REGION_INFO","DFL_FPGA_PORT_RESET","DFL_FPGA_PORT_UINT_GET_IRQ_NUM","DFL_FPGA_PORT_UINT_SET_IRQ","DMA_BUF_IOCTL_SYNC","DMA_BUF_SET_NAME","DMA_BUF_SET_NAME_A","DMA_BUF_SET_NAME_B","DMA_HEAP_IOCTL_ALLOC","DM_DEV_ARM_POLL","DM_DEV_CREATE","DM_DEV_REMOVE","DM_DEV_RENAME","DM_DEV_SET_GEOMETRY","DM_DEV_STATUS","DM_DEV_SUSPEND","DM_DEV_WAIT","DM_GET_TARGET_VERSION","DM_LIST_DEVICES","DM_LIST_VERSIONS","DM_REMOVE_ALL","DM_TABLE_CLEAR","DM_TABLE_DEPS","DM_TABLE_LOAD","DM_TABLE_STATUS","DM_TARGET_MSG","DM_VERSION","ENI_MEMDUMP","ENI_SETMULT","EVIOCGEFFECTS","EVIOCGID","EVIOCGKEYCODE","EVIOCGKEYCODE_V2","EVIOCGMASK","EVIOCGRAB","EVIOCGREP","EVIOCGVERSION","EVIOCREVOKE","EVIOCRMFF","EVIOCSCLOCKID","EVIOCSFF","EVIOCSKEYCODE","EVIOCSKEYCODE_V2","EVIOCSMASK","EVIOCSREP","EXT4_IOC32_GETRSVSZ","EXT4_IOC32_GETVERSION","EXT4_IOC32_GETVERSION_OLD","EXT4_IOC32_GROUP_EXTEND","EXT4_IOC32_SETRSVSZ","EXT4_IOC32_SETVERSION","EXT4_IOC32_SETVERSION_OLD","EXT4_IOC_ALLOC_DA_BLKS","EXT4_IOC_CHECKPOINT","EXT4_IOC_CLEAR_ES_CACHE","EXT4_IOC_GETRSVSZ","EXT4_IOC_GETSTATE","EXT4_IOC_GETVERSION","EXT4_IOC_GETVERSION_OLD","EXT4_IOC_GET_ES_CACHE","EXT4_IOC_GROUP_EXTEND","EXT4_IOC_MIGRATE","EXT4_IOC_PRECACHE_EXTENTS","EXT4_IOC_RESIZE_FS","EXT4_IOC_SETRSVSZ","EXT4_IOC_SETVERSION","EXT4_IOC_SETVERSION_OLD","EXT4_IOC_SHUTDOWN","EXT4_IOC_SWAP_BOOT","F2FS_IOC_COMMIT_ATOMIC_WRITE","F2FS_IOC_COMPRESS_FILE","F2FS_IOC_DECOMPRESS_FILE","F2FS_IOC_DEFRAGMENT","F2FS_IOC_FLUSH_DEVICE","F2FS_IOC_GARBAGE_COLLECT","F2FS_IOC_GARBAGE_COLLECT_RANGE","F2FS_IOC_GET_COMPRESS_BLOCKS","F2FS_IOC_GET_COMPRESS_OPTION","F2FS_IOC_GET_FEATURES","F2FS_IOC_GET_PIN_FILE","F2FS_IOC_MOVE_RANGE","F2FS_IOC_PRECACHE_EXTENTS","F2FS_IOC_RELEASE_COMPRESS_BLOCKS","F2FS_IOC_RELEASE_VOLATILE_WRITE","F2FS_IOC_RESERVE_COMPRESS_BLOCKS","F2FS_IOC_RESIZE_FS","F2FS_IOC_SEC_TRIM_FILE","F2FS_IOC_SET_COMPRESS_OPTION","F2FS_IOC_SET_PIN_FILE","F2FS_IOC_SHUTDOWN","F2FS_IOC_START_ATOMIC_WRITE","F2FS_IOC_START_VOLATILE_WRITE","F2FS_IOC_WRITE_CHECKPOINT","FAT_IOCTL_GET_ATTRIBUTES","FAT_IOCTL_GET_VOLUME_ID","FAT_IOCTL_SET_ATTRIBUTES","FBIOGET_VBLANK","FBIO_CURSOR","FBIO_GETCONTROL2","FBIO_RADEON_GET_MIRROR","FBIO_RADEON_SET_MIRROR","FBIO_WAITEVENT","FBIO_WAITFORVSYNC","FDCLRPRM","FDDEFPRM","FDEJECT","FDFLUSH","FDFMTBEG","FDFMTEND","FDFMTTRK","FDGETDRVPRM","FDGETDRVSTAT","FDGETDRVTYP","FDGETFDCSTAT","FDGETMAXERRS","FDGETPRM","FDMSGOFF","FDMSGON","FDPOLLDRVSTAT","FDRAWCMD","FDRESET","FDSETDRVPRM","FDSETEMSGTRESH","FDSETMAXERRS","FDSETPRM","FDTWADDLE","FDWERRORCLR","FDWERRORGET","FIBMAP","FICLONE","FICLONERANGE","FIDEDUPERANGE","FIFREEZE","FIGETBSZ","FIOASYNC","FIOCLEX","FIOGETOWN","FIONBIO","FIONCLEX","FIONREAD","FIOQSIZE","FIOSETOWN","FITHAW","FITRIM","FSI_SCOM_CHECK","FSI_SCOM_READ","FSI_SCOM_RESET","FSI_SCOM_WRITE","FSL_HV_IOCTL_DOORBELL","FSL_HV_IOCTL_GETPROP","FSL_HV_IOCTL_MEMCPY","FSL_HV_IOCTL_PARTITION_GET_STATUS","FSL_HV_IOCTL_PARTITION_RESTART","FSL_HV_IOCTL_PARTITION_START","FSL_HV_IOCTL_PARTITION_STOP","FSL_HV_IOCTL_SETPROP","FSL_MC_SEND_MC_COMMAND","FS_IOC32_GETFLAGS","FS_IOC32_GETVERSION","FS_IOC32_SETFLAGS","FS_IOC32_SETVERSION","FS_IOC_ADD_ENCRYPTION_KEY","FS_IOC_ENABLE_VERITY","FS_IOC_FIEMAP","FS_IOC_FSGETXATTR","FS_IOC_FSSETXATTR","FS_IOC_GETFLAGS","FS_IOC_GETFSLABEL","FS_IOC_GETFSMAP","FS_IOC_GETVERSION","FS_IOC_GET_ENCRYPTION_KEY_STATUS","FS_IOC_GET_ENCRYPTION_NONCE","FS_IOC_GET_ENCRYPTION_POLICY","FS_IOC_GET_ENCRYPTION_POLICY_EX","FS_IOC_GET_ENCRYPTION_PWSALT","FS_IOC_MEASURE_VERITY","FS_IOC_READ_VERITY_METADATA","FS_IOC_REMOVE_ENCRYPTION_KEY","FS_IOC_REMOVE_ENCRYPTION_KEY_ALL_USERS","FS_IOC_SETFLAGS","FS_IOC_SETFSLABEL","FS_IOC_SETVERSION","FS_IOC_SET_ENCRYPTION_POLICY","FUSE_DEV_IOC_CLONE","FW_CDEV_IOC_ADD_DESCRIPTOR","FW_CDEV_IOC_ALLOCATE","FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE","FW_CDEV_IOC_ALLOCATE_ISO_RESOURCE_ONCE","FW_CDEV_IOC_CREATE_ISO_CONTEXT","FW_CDEV_IOC_DEALLOCATE","FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE","FW_CDEV_IOC_DEALLOCATE_ISO_RESOURCE_ONCE","FW_CDEV_IOC_FLUSH_ISO","FW_CDEV_IOC_GET_CYCLE_TIMER","FW_CDEV_IOC_GET_CYCLE_TIMER2","FW_CDEV_IOC_GET_INFO","FW_CDEV_IOC_GET_SPEED","FW_CDEV_IOC_INITIATE_BUS_RESET","FW_CDEV_IOC_QUEUE_ISO","FW_CDEV_IOC_RECEIVE_PHY_PACKETS","FW_CDEV_IOC_REMOVE_DESCRIPTOR","FW_CDEV_IOC_SEND_BROADCAST_REQUEST","FW_CDEV_IOC_SEND_PHY_PACKET","FW_CDEV_IOC_SEND_REQUEST","FW_CDEV_IOC_SEND_RESPONSE","FW_CDEV_IOC_SEND_STREAM_PACKET","FW_CDEV_IOC_SET_ISO_CHANNELS","FW_CDEV_IOC_START_ISO","FW_CDEV_IOC_STOP_ISO","GIO_CMAP","GIO_FONT","GIO_FONTX","GIO_SCRNMAP","GIO_UNIMAP","GIO_UNISCRNMAP","GPIOHANDLE_GET_LINE_VALUES_IOCTL","GPIOHANDLE_SET_CONFIG_IOCTL","GPIOHANDLE_SET_LINE_VALUES_IOCTL","GPIO_GET_CHIPINFO_IOCTL","GPIO_GET_LINEEVENT_IOCTL","GPIO_GET_LINEHANDLE_IOCTL","GPIO_GET_LINEINFO_IOCTL","GPIO_GET_LINEINFO_UNWATCH_IOCTL","GPIO_GET_LINEINFO_WATCH_IOCTL","GPIO_V2_GET_LINEINFO_IOCTL","GPIO_V2_GET_LINEINFO_WATCH_IOCTL","GPIO_V2_GET_LINE_IOCTL","GPIO_V2_LINE_GET_VALUES_IOCTL","GPIO_V2_LINE_SET_CONFIG_IOCTL","GPIO_V2_LINE_SET_VALUES_IOCTL","GSMIOC_DISABLE_NET","GSMIOC_ENABLE_NET","GSMIOC_GETCONF","GSMIOC_GETFIRST","GSMIOC_SETCONF","HE_GET_REG","HIDIOCAPPLICATION","HIDIOCGCOLLECTIONINDEX","HIDIOCGCOLLECTIONINFO","HIDIOCGDEVINFO","HIDIOCGFIELDINFO","HIDIOCGFLAG","HIDIOCGRAWINFO","HIDIOCGRDESC","HIDIOCGRDESCSIZE","HIDIOCGREPORT","HIDIOCGREPORTINFO","HIDIOCGSTRING","HIDIOCGUCODE","HIDIOCGUSAGE","HIDIOCGUSAGES","HIDIOCGVERSION","HIDIOCINITREPORT","HIDIOCSFLAG","HIDIOCSREPORT","HIDIOCSUSAGE","HIDIOCSUSAGES","HPET_DPI","HPET_EPI","HPET_IE_OFF","HPET_IE_ON","HPET_INFO","HPET_IRQFREQ","I2OEVTGET","I2OEVTREG","I2OGETIOPS","I2OHRTGET","I2OHTML","I2OLCTGET","I2OPARMGET","I2OPARMSET","I2OPASSTHRU","I2OPASSTHRU32","I2OSWDEL","I2OSWDL","I2OSWUL","I2OVALIDATE","I8K_GET_FAN","I8K_GET_SPEED","I8K_SET_FAN","IDT77105_GETSTAT","IDT77105_GETSTATZ","INOTIFY_IOC_SETNEXTWD","IOCTL_MEI_CONNECT_CLIENT","IOCTL_MEI_CONNECT_CLIENT_VTAG","IOCTL_MEI_NOTIFY_GET","IOCTL_MEI_NOTIFY_SET","IOCTL_VM_SOCKETS_GET_LOCAL_CID","IOC_OPAL_ACTIVATE_LSP","IOC_OPAL_ACTIVATE_USR","IOC_OPAL_ADD_USR_TO_LR","IOC_OPAL_ENABLE_DISABLE_MBR","IOC_OPAL_ERASE_LR","IOC_OPAL_GENERIC_TABLE_RW","IOC_OPAL_LOCK_UNLOCK","IOC_OPAL_LR_SETUP","IOC_OPAL_MBR_DONE","IOC_OPAL_PSID_REVERT_TPR","IOC_OPAL_REVERT_TPR","IOC_OPAL_SAVE","IOC_OPAL_SECURE_ERASE_LR","IOC_OPAL_SET_PW","IOC_OPAL_TAKE_OWNERSHIP","IOC_OPAL_WRITE_SHADOW_MBR","IOC_PR_CLEAR","IOC_PR_PREEMPT","IOC_PR_PREEMPT_ABORT","IOC_PR_REGISTER","IOC_PR_RELEASE","IOC_PR_RESERVE","IOC_WATCH_QUEUE_SET_FILTER","IOC_WATCH_QUEUE_SET_SIZE","IPMICTL_GET_MAINTENANCE_MODE_CMD","IPMICTL_GET_MY_ADDRESS_CMD","IPMICTL_GET_MY_CHANNEL_ADDRESS_CMD","IPMICTL_GET_MY_CHANNEL_LUN_CMD","IPMICTL_GET_MY_LUN_CMD","IPMICTL_GET_TIMING_PARMS_CMD","IPMICTL_RECEIVE_MSG","IPMICTL_RECEIVE_MSG_TRUNC","IPMICTL_REGISTER_FOR_CMD","IPMICTL_REGISTER_FOR_CMD_CHANS","IPMICTL_SEND_COMMAND","IPMICTL_SEND_COMMAND_SETTIME","IPMICTL_SET_GETS_EVENTS_CMD","IPMICTL_SET_MAINTENANCE_MODE_CMD","IPMICTL_SET_MY_ADDRESS_CMD","IPMICTL_SET_MY_CHANNEL_ADDRESS_CMD","IPMICTL_SET_MY_CHANNEL_LUN_CMD","IPMICTL_SET_MY_LUN_CMD","IPMICTL_SET_TIMING_PARMS_CMD","IPMICTL_UNREGISTER_FOR_CMD","IPMICTL_UNREGISTER_FOR_CMD_CHANS","IPMI_BMC_IOCTL_CLEAR_SMS_ATN","IPMI_BMC_IOCTL_FORCE_ABORT","IPMI_BMC_IOCTL_SET_SMS_ATN","ISST_IF_GET_PHY_ID","ISST_IF_GET_PLATFORM_INFO","ISST_IF_IO_CMD","ISST_IF_MBOX_COMMAND","ISST_IF_MSR_COMMAND","IVTVFB_IOC_DMA_FRAME","JSIOCGAXES","JSIOCGAXMAP","JSIOCGBTNMAP","JSIOCGBUTTONS","JSIOCGCORR","JSIOCGVERSION","JSIOCSAXMAP","JSIOCSBTNMAP","JSIOCSCORR","KCOV_DISABLE","KCOV_ENABLE","KCOV_INIT_TRACE","KCOV_REMOTE_ENABLE","KDADDIO","KDDELIO","KDDISABIO","KDENABIO","KDGETKEYCODE","KDGETLED","KDGETMODE","KDGKBDIACR","KDGKBENT","KDGKBLED","KDGKBMETA","KDGKBMODE","KDGKBSENT","KDGKBTYPE","KDMKTONE","KDSETKEYCODE","KDSETLED","KDSETMODE","KDSIGACCEPT","KDSKBENT","KDSKBLED","KDSKBMETA","KDSKBMODE","KDSKBSENT","KIOCSOUND","KVM_ARM_SET_DEVICE_ADDR","KVM_ARM_VCPU_FINALIZE","KVM_ASSIGN_DEV_IRQ","KVM_ASSIGN_PCI_DEVICE","KVM_ASSIGN_SET_INTX_MASK","KVM_ASSIGN_SET_MSIX_ENTRY","KVM_ASSIGN_SET_MSIX_NR","KVM_CHECK_EXTENSION","KVM_CLEAR_DIRTY_LOG","KVM_CREATE_DEVICE","KVM_CREATE_IRQCHIP","KVM_CREATE_PIT","KVM_CREATE_PIT2","KVM_CREATE_VCPU","KVM_CREATE_VM","KVM_DEASSIGN_DEV_IRQ","KVM_DEASSIGN_PCI_DEVICE","KVM_DIRTY_TLB","KVM_ENABLE_CAP","KVM_GET_API_VERSION","KVM_GET_CLOCK","KVM_GET_DEVICE_ATTR","KVM_GET_DIRTY_LOG","KVM_GET_FPU","KVM_GET_IRQCHIP","KVM_GET_MP_STATE","KVM_GET_NR_MMU_PAGES","KVM_GET_ONE_REG","KVM_GET_REGS","KVM_GET_REG_LIST","KVM_GET_SREGS","KVM_GET_STATS_FD","KVM_GET_TSC_KHZ","KVM_GET_VCPU_MMAP_SIZE","KVM_HAS_DEVICE_ATTR","KVM_HYPERV_EVENTFD","KVM_INTERRUPT","KVM_IOEVENTFD","KVM_IRQFD","KVM_IRQ_LINE","KVM_IRQ_LINE_STATUS","KVM_KVMCLOCK_CTRL","KVM_MEMORY_ENCRYPT_OP","KVM_MEMORY_ENCRYPT_REG_REGION","KVM_MEMORY_ENCRYPT_UNREG_REGION","KVM_NMI","KVM_PPC_ALLOCATE_HTAB","KVM_PPC_GET_PVINFO","KVM_PPC_GET_SMMU_INFO","KVM_PPC_RESIZE_HPT_COMMIT","KVM_PPC_RESIZE_HPT_PREPARE","KVM_PPC_SVM_OFF","KVM_REGISTER_COALESCED_MMIO","KVM_REINJECT_CONTROL","KVM_RESET_DIRTY_RINGS","KVM_RUN","KVM_S390_CLEAR_RESET","KVM_S390_ENABLE_SIE","KVM_S390_GET_CMMA_BITS","KVM_S390_GET_IRQ_STATE","KVM_S390_GET_SKEYS","KVM_S390_INITIAL_RESET","KVM_S390_INTERRUPT","KVM_S390_IRQ","KVM_S390_MEM_OP","KVM_S390_NORMAL_RESET","KVM_S390_PV_COMMAND","KVM_S390_SET_CMMA_BITS","KVM_S390_SET_INITIAL_PSW","KVM_S390_SET_IRQ_STATE","KVM_S390_SET_SKEYS","KVM_S390_STORE_STATUS","KVM_S390_UCAS_MAP","KVM_S390_UCAS_UNMAP","KVM_S390_VCPU_FAULT","KVM_SET_BOOT_CPU_ID","KVM_SET_CLOCK","KVM_SET_DEVICE_ATTR","KVM_SET_FPU","KVM_SET_GSI_ROUTING","KVM_SET_GUEST_DEBUG","KVM_SET_IDENTITY_MAP_ADDR","KVM_SET_IRQCHIP","KVM_SET_MP_STATE","KVM_SET_NR_MMU_PAGES","KVM_SET_ONE_REG","KVM_SET_REGS","KVM_SET_SIGNAL_MASK","KVM_SET_SREGS","KVM_SET_TSC_KHZ","KVM_SET_TSS_ADDR","KVM_SET_USER_MEMORY_REGION","KVM_SET_VAPIC_ADDR","KVM_SIGNAL_MSI","KVM_SMI","KVM_TPR_ACCESS_REPORTING","KVM_TRANSLATE","KVM_UNREGISTER_COALESCED_MMIO","KVM_X86_GET_MCE_CAP_SUPPORTED","KVM_X86_SETUP_MCE","KVM_XEN_HVM_GET_ATTR","KVM_XEN_HVM_SET_ATTR","KVM_XEN_VCPU_GET_ATTR","KVM_XEN_VCPU_SET_ATTR","LIRC_GET_FEATURES","LIRC_GET_LENGTH","LIRC_GET_MAX_TIMEOUT","LIRC_GET_MIN_TIMEOUT","LIRC_GET_REC_MODE","LIRC_GET_REC_RESOLUTION","LIRC_GET_REC_TIMEOUT","LIRC_GET_SEND_MODE","LIRC_SET_MEASURE_CARRIER_MODE","LIRC_SET_REC_CARRIER","LIRC_SET_REC_CARRIER_RANGE","LIRC_SET_REC_MODE","LIRC_SET_REC_TIMEOUT","LIRC_SET_REC_TIMEOUT_REPORTS","LIRC_SET_SEND_CARRIER","LIRC_SET_SEND_DUTY_CYCLE","LIRC_SET_SEND_MODE","LIRC_SET_TRANSMITTER_MASK","LIRC_SET_WIDEBAND_RECEIVER","LPSETTIMEOUT_NEW","MATROXFB_GET_ALL_OUTPUTS","MATROXFB_GET_AVAILABLE_OUTPUTS","MATROXFB_GET_OUTPUT_CONNECTION","MATROXFB_GET_OUTPUT_MODE","MATROXFB_SET_OUTPUT_CONNECTION","MATROXFB_SET_OUTPUT_MODE","MEDIA_IOC_DEVICE_INFO","MEDIA_IOC_ENUM_ENTITIES","MEDIA_IOC_ENUM_LINKS","MEDIA_IOC_G_TOPOLOGY","MEDIA_IOC_SETUP_LINK","MEDIA_REQUEST_IOC_QUEUE","MEDIA_REQUEST_IOC_REINIT","MEYEIOC_SYNC","MGSL_IOCCLRMODCOUNT","MGSL_IOCGGPIO","MGSL_IOCGIF","MGSL_IOCGPARAMS","MGSL_IOCGSTATS","MGSL_IOCGTXIDLE","MGSL_IOCGXCTRL","MGSL_IOCGXSYNC","MGSL_IOCLOOPTXDONE","MGSL_IOCRXENABLE","MGSL_IOCSGPIO","MGSL_IOCSIF","MGSL_IOCSPARAMS","MGSL_IOCSTXIDLE","MGSL_IOCSXCTRL","MGSL_IOCSXSYNC","MGSL_IOCTXABORT","MGSL_IOCTXENABLE","MGSL_IOCWAITEVENT","MGSL_IOCWAITGPIO","MMTIMER_GETBITS","MMTIMER_GETCOUNTER","MMTIMER_GETFREQ","MMTIMER_GETOFFSET","MMTIMER_GETRES","MMTIMER_MMAPAVAIL","MTIOCGET","MTIOCPOS","MTIOCTOP","NBD_CLEAR_QUE","NBD_CLEAR_SOCK","NBD_DISCONNECT","NBD_DO_IT","NBD_PRINT_DEBUG","NBD_SET_BLKSIZE","NBD_SET_FLAGS","NBD_SET_SIZE","NBD_SET_SIZE_BLOCKS","NBD_SET_SOCK","NBD_SET_TIMEOUT","ND_IOCTL_ARS_CAP","ND_IOCTL_ARS_START","ND_IOCTL_ARS_STATUS","ND_IOCTL_CALL","ND_IOCTL_CLEAR_ERROR","ND_IOCTL_DIMM_FLAGS","ND_IOCTL_GET_CONFIG_DATA","ND_IOCTL_GET_CONFIG_SIZE","ND_IOCTL_SET_CONFIG_DATA","ND_IOCTL_VENDOR","NE_ADD_VCPU","NE_CREATE_VM","NE_GET_IMAGE_LOAD_INFO","NE_SET_USER_MEMORY_REGION","NE_START_ENCLAVE","NILFS_IOCTL_CHANGE_CPMODE","NILFS_IOCTL_CLEAN_SEGMENTS","NILFS_IOCTL_DELETE_CHECKPOINT","NILFS_IOCTL_GET_BDESCS","NILFS_IOCTL_GET_CPINFO","NILFS_IOCTL_GET_CPSTAT","NILFS_IOCTL_GET_SUINFO","NILFS_IOCTL_GET_SUSTAT","NILFS_IOCTL_GET_VINFO","NILFS_IOCTL_RESIZE","NILFS_IOCTL_SET_ALLOC_RANGE","NILFS_IOCTL_SET_SUINFO","NILFS_IOCTL_SYNC","NS_ADJBUFLEV","NS_GETPSTAT","NS_GET_NSTYPE","NS_GET_OWNER_UID","NS_GET_PARENT","NS_GET_USERNS","NS_SETBUFLEV","NVME_IOCTL_ADMIN64_CMD","NVME_IOCTL_ADMIN_CMD","NVME_IOCTL_ID","NVME_IOCTL_IO64_CMD","NVME_IOCTL_IO_CMD","NVME_IOCTL_RESCAN","NVME_IOCTL_RESET","NVME_IOCTL_SUBMIT_IO","NVME_IOCTL_SUBSYS_RESET","NVRAM_INIT","NVRAM_SETCKS","PACKET_CTRL_CMD","PCITEST_BAR","PCITEST_CLEAR_IRQ","PCITEST_COPY","PCITEST_GET_IRQTYPE","PCITEST_LEGACY_IRQ","PCITEST_MSI","PCITEST_MSIX","PCITEST_READ","PCITEST_SET_IRQTYPE","PCITEST_WRITE","PERF_EVENT_IOC_ID","PERF_EVENT_IOC_MODIFY_ATTRIBUTES","PERF_EVENT_IOC_PAUSE_OUTPUT","PERF_EVENT_IOC_PERIOD","PERF_EVENT_IOC_QUERY_BPF","PERF_EVENT_IOC_SET_BPF","PERF_EVENT_IOC_SET_FILTER","PHN_GETREG","PHN_GETREGS","PHN_GET_REG","PHN_GET_REGS","PHN_NOT_OH","PHN_SETREG","PHN_SETREGS","PHN_SET_REG","PHN_SET_REGS","PIO_CMAP","PIO_FONT","PIO_FONTRESET","PIO_FONTX","PIO_SCRNMAP","PIO_UNIMAP","PIO_UNIMAPCLR","PIO_UNISCRNMAP","PMU_IOC_CAN_SLEEP","PMU_IOC_GET_BACKLIGHT","PMU_IOC_GET_MODEL","PMU_IOC_GRAB_BACKLIGHT","PMU_IOC_HAS_ADB","PMU_IOC_SET_BACKLIGHT","PMU_IOC_SLEEP","PPCLAIM","PPCLRIRQ","PPDATADIR","PPEXCL","PPFCONTROL","PPGETFLAGS","PPGETMODE","PPGETMODES","PPGETPHASE","PPGETTIME","PPNEGOT","PPPIOCATTACH","PPPIOCATTCHAN","PPPIOCBRIDGECHAN","PPPIOCCONNECT","PPPIOCDETACH","PPPIOCDISCONN","PPPIOCGASYNCMAP","PPPIOCGCHAN","PPPIOCGDEBUG","PPPIOCGFLAGS","PPPIOCGIDLE","PPPIOCGIDLE32","PPPIOCGIDLE64","PPPIOCGL2TPSTATS","PPPIOCGMRU","PPPIOCGNPMODE","PPPIOCGRASYNCMAP","PPPIOCGUNIT","PPPIOCGXASYNCMAP","PPPIOCNEWUNIT","PPPIOCSACTIVE","PPPIOCSASYNCMAP","PPPIOCSCOMPRESS","PPPIOCSDEBUG","PPPIOCSFLAGS","PPPIOCSMAXCID","PPPIOCSMRRU","PPPIOCSMRU","PPPIOCSNPMODE","PPPIOCSPASS","PPPIOCSRASYNCMAP","PPPIOCSXASYNCMAP","PPPIOCUNBRIDGECHAN","PPPIOCXFERUNIT","PPPOEIOCDFWD","PPPOEIOCSFWD","PPRCONTROL","PPRDATA","PPRELEASE","PPRSTATUS","PPSETFLAGS","PPSETMODE","PPSETPHASE","PPSETTIME","PPS_FETCH","PPS_GETCAP","PPS_GETPARAMS","PPS_KC_BIND","PPS_SETPARAMS","PPWCONTROL","PPWCTLONIRQ","PPWDATA","PPYIELD","PTP_CLOCK_GETCAPS","PTP_CLOCK_GETCAPS2","PTP_ENABLE_PPS","PTP_ENABLE_PPS2","PTP_EXTTS_REQUEST","PTP_EXTTS_REQUEST2","PTP_PEROUT_REQUEST","PTP_PEROUT_REQUEST2","PTP_PIN_GETFUNC","PTP_PIN_GETFUNC2","PTP_PIN_SETFUNC","PTP_PIN_SETFUNC2","PTP_SYS_OFFSET","PTP_SYS_OFFSET2","PTP_SYS_OFFSET_EXTENDED","PTP_SYS_OFFSET_EXTENDED2","PTP_SYS_OFFSET_PRECISE","PTP_SYS_OFFSET_PRECISE2","REISERFS_IOC_UNPACK","RFKILL_IOCTL_NOINPUT","RIO_ALLOC_DMA","RIO_CM_CHAN_ACCEPT","RIO_CM_CHAN_BIND","RIO_CM_CHAN_CLOSE","RIO_CM_CHAN_CONNECT","RIO_CM_CHAN_CREATE","RIO_CM_CHAN_LISTEN","RIO_CM_CHAN_RECEIVE","RIO_CM_CHAN_SEND","RIO_CM_EP_GET_LIST","RIO_CM_EP_GET_LIST_SIZE","RIO_CM_MPORT_GET_LIST","RIO_DEV_ADD","RIO_DEV_DEL","RIO_DISABLE_DOORBELL_RANGE","RIO_DISABLE_PORTWRITE_RANGE","RIO_ENABLE_DOORBELL_RANGE","RIO_ENABLE_PORTWRITE_RANGE","RIO_FREE_DMA","RIO_GET_EVENT_MASK","RIO_MAP_INBOUND","RIO_MAP_OUTBOUND","RIO_MPORT_GET_PROPERTIES","RIO_MPORT_MAINT_COMPTAG_SET","RIO_MPORT_MAINT_HDID_SET","RIO_MPORT_MAINT_PORT_IDX_GET","RIO_MPORT_MAINT_READ_LOCAL","RIO_MPORT_MAINT_READ_REMOTE","RIO_MPORT_MAINT_WRITE_LOCAL","RIO_MPORT_MAINT_WRITE_REMOTE","RIO_SET_EVENT_MASK","RIO_TRANSFER","RIO_UNMAP_INBOUND","RIO_UNMAP_OUTBOUND","RIO_WAIT_FOR_ASYNC","RNDADDENTROPY","RNDADDTOENTCNT","RNDCLEARPOOL","RNDGETENTCNT","RNDGETPOOL","RNDRESEEDCRNG","RNDZAPENTCNT","RPMSG_CREATE_EPT_IOCTL","RPMSG_DESTROY_EPT_IOCTL","RPROC_GET_SHUTDOWN_ON_RELEASE","RPROC_SET_SHUTDOWN_ON_RELEASE","RTC_AIE_OFF","RTC_AIE_ON","RTC_ALM_READ","RTC_ALM_SET","RTC_EPOCH_READ","RTC_EPOCH_SET","RTC_IRQP_READ","RTC_IRQP_SET","RTC_PIE_OFF","RTC_PIE_ON","RTC_PLL_GET","RTC_PLL_SET","RTC_RD_TIME","RTC_SET_TIME","RTC_UIE_OFF","RTC_UIE_ON","RTC_VL_CLR","RTC_VL_READ","RTC_WIE_OFF","RTC_WIE_ON","RTC_WKALM_RD","RTC_WKALM_SET","SCIF_ACCEPTREG","SCIF_ACCEPTREQ","SCIF_BIND","SCIF_CONNECT","SCIF_FENCE_MARK","SCIF_FENCE_SIGNAL","SCIF_FENCE_WAIT","SCIF_GET_NODEIDS","SCIF_LISTEN","SCIF_READFROM","SCIF_RECV","SCIF_REG","SCIF_SEND","SCIF_UNREG","SCIF_VREADFROM","SCIF_VWRITETO","SCIF_WRITETO","SEV_ISSUE_CMD","SIOCADDDLCI","SIOCADDMULTI","SIOCADDRT","SIOCATMARK","SIOCDARP","SIOCDELDLCI","SIOCDELMULTI","SIOCDELRT","SIOCDEVPRIVATE","SIOCDIFADDR","SIOCDRARP","SIOCGARP","SIOCGIFADDR","SIOCGIFBR","SIOCGIFBRDADDR","SIOCGIFCONF","SIOCGIFCOUNT","SIOCGIFDSTADDR","SIOCGIFENCAP","SIOCGIFFLAGS","SIOCGIFHWADDR","SIOCGIFINDEX","SIOCGIFMAP","SIOCGIFMEM","SIOCGIFMETRIC","SIOCGIFMTU","SIOCGIFNAME","SIOCGIFNETMASK","SIOCGIFPFLAGS","SIOCGIFSLAVE","SIOCGIFTXQLEN","SIOCGPGRP","SIOCGRARP","SIOCGSTAMP","SIOCGSTAMPNS_NEW","SIOCGSTAMP_NEW","SIOCMKCLIP","SIOCPROTOPRIVATE","SIOCRTMSG","SIOCSARP","SIOCSIFADDR","SIOCSIFATMTCP","SIOCSIFBR","SIOCSIFBRDADDR","SIOCSIFDSTADDR","SIOCSIFENCAP","SIOCSIFFLAGS","SIOCSIFHWADDR","SIOCSIFHWBROADCAST","SIOCSIFLINK","SIOCSIFMAP","SIOCSIFMEM","SIOCSIFMETRIC","SIOCSIFMTU","SIOCSIFNAME","SIOCSIFNETMASK","SIOCSIFPFLAGS","SIOCSIFSLAVE","SIOCSIFTXQLEN","SIOCSPGRP","SIOCSRARP","SIOGIFINDEX","SNAPSHOT_ALLOC_SWAP_PAGE","SNAPSHOT_ATOMIC_RESTORE","SNAPSHOT_AVAIL_SWAP_SIZE","SNAPSHOT_CREATE_IMAGE","SNAPSHOT_FREE","SNAPSHOT_FREEZE","SNAPSHOT_FREE_SWAP_PAGES","SNAPSHOT_GET_IMAGE_SIZE","SNAPSHOT_PLATFORM_SUPPORT","SNAPSHOT_POWER_OFF","SNAPSHOT_PREF_IMAGE_SIZE","SNAPSHOT_S2RAM","SNAPSHOT_SET_SWAP_AREA","SNAPSHOT_UNFREEZE","SONET_CLRDIAG","SONET_GETDIAG","SONET_GETFRAMING","SONET_GETFRSENSE","SONET_GETSTAT","SONET_GETSTATZ","SONET_SETDIAG","SONET_SETFRAMING","SONYPI_IOCGBAT1CAP","SONYPI_IOCGBAT1REM","SONYPI_IOCGBAT2CAP","SONYPI_IOCGBAT2REM","SONYPI_IOCGBATFLAGS","SONYPI_IOCGBLUE","SONYPI_IOCGBRT","SONYPI_IOCGFAN","SONYPI_IOCGTEMP","SONYPI_IOCSBLUE","SONYPI_IOCSBRT","SONYPI_IOCSFAN","SPIOCSTYPE","STP_POLICY_ID_GET","STP_POLICY_ID_SET","STP_SET_OPTIONS","SWITCHTEC_IOCTL_EVENT_CTL","SWITCHTEC_IOCTL_EVENT_SUMMARY","SWITCHTEC_IOCTL_EVENT_SUMMARY_LEGACY","SWITCHTEC_IOCTL_FLASH_INFO","SWITCHTEC_IOCTL_FLASH_PART_INFO","SWITCHTEC_IOCTL_PFF_TO_PORT","SWITCHTEC_IOCTL_PORT_TO_PFF","SYNC_IOC_FILE_INFO","SYNC_IOC_MERGE","TCFLSH","TCGETA","TCGETS","TCGETS2","TCGETX","TCSBRK","TCSBRKP","TCSETA","TCSETAF","TCSETAW","TCSETS","TCSETS2","TCSETSF","TCSETSF2","TCSETSW","TCSETSW2","TCSETX","TCSETXF","TCSETXW","TCXONC","TEE_IOC_CANCEL","TEE_IOC_CLOSE_SESSION","TEE_IOC_INVOKE","TEE_IOC_OPEN_SESSION","TEE_IOC_SHM_ALLOC","TEE_IOC_SHM_REGISTER","TEE_IOC_SUPPL_RECV","TEE_IOC_SUPPL_SEND","TEE_IOC_VERSION","TFD_IOC_SET_TICKS","TIOCCBRK","TIOCCONS","TIOCEXCL","TIOCGDEV","TIOCGETD","TIOCGEXCL","TIOCGICOUNT","TIOCGLCKTRMIOS","TIOCGPGRP","TIOCGPKT","TIOCGPTLCK","TIOCGPTN","TIOCGPTPEER","TIOCGRS485","TIOCGSERIAL","TIOCGSID","TIOCGSOFTCAR","TIOCGWINSZ","TIOCINQ","TIOCLINUX","TIOCMBIC","TIOCMBIS","TIOCMGET","TIOCMIWAIT","TIOCMSET","TIOCNOTTY","TIOCNXCL","TIOCOUTQ","TIOCPKT","TIOCSBRK","TIOCSCTTY","TIOCSERCONFIG","TIOCSERGETLSR","TIOCSERGETMULTI","TIOCSERGSTRUCT","TIOCSERGWILD","TIOCSERSETMULTI","TIOCSERSWILD","TIOCSETD","TIOCSIG","TIOCSLCKTRMIOS","TIOCSPGRP","TIOCSPTLCK","TIOCSRS485","TIOCSSERIAL","TIOCSSOFTCAR","TIOCSTI","TIOCSWINSZ","TIOCVHANGUP","TOSHIBA_ACPI_SCI","TOSH_SMM","TUNATTACHFILTER","TUNDETACHFILTER","TUNGETDEVNETNS","TUNGETFEATURES","TUNGETFILTER","TUNGETIFF","TUNGETSNDBUF","TUNGETVNETBE","TUNGETVNETHDRSZ","TUNGETVNETLE","TUNSETCARRIER","TUNSETDEBUG","TUNSETFILTEREBPF","TUNSETGROUP","TUNSETIFF","TUNSETIFINDEX","TUNSETLINK","TUNSETNOCSUM","TUNSETOFFLOAD","TUNSETOWNER","TUNSETPERSIST","TUNSETQUEUE","TUNSETSNDBUF","TUNSETSTEERINGEBPF","TUNSETTXFILTER","TUNSETVNETBE","TUNSETVNETHDRSZ","TUNSETVNETLE","UDF_GETEABLOCK","UDF_GETEASIZE","UDF_GETVOLIDENT","UDF_RELOCATE_BLOCKS","UDMABUF_CREATE","UDMABUF_CREATE_LIST","UFFDIO_API","UFFDIO_CONTINUE","UFFDIO_COPY","UFFDIO_REGISTER","UFFDIO_UNREGISTER","UFFDIO_WAKE","UFFDIO_WRITEPROTECT","UFFDIO_ZEROPAGE","UI_ABS_SETUP","UI_BEGIN_FF_ERASE","UI_BEGIN_FF_UPLOAD","UI_DEV_CREATE","UI_DEV_DESTROY","UI_DEV_SETUP","UI_END_FF_ERASE","UI_END_FF_UPLOAD","UI_GET_VERSION","UI_SET_ABSBIT","UI_SET_EVBIT","UI_SET_FFBIT","UI_SET_KEYBIT","UI_SET_LEDBIT","UI_SET_MSCBIT","UI_SET_PHYS","UI_SET_PROPBIT","UI_SET_RELBIT","UI_SET_SNDBIT","UI_SET_SWBIT","USBDEVFS_ALLOC_STREAMS","USBDEVFS_ALLOW_SUSPEND","USBDEVFS_BULK","USBDEVFS_CLAIMINTERFACE","USBDEVFS_CLAIM_PORT","USBDEVFS_CLEAR_HALT","USBDEVFS_CONNECT","USBDEVFS_CONNECTINFO","USBDEVFS_CONTROL","USBDEVFS_DISCARDURB","USBDEVFS_DISCONNECT","USBDEVFS_DISCONNECT_CLAIM","USBDEVFS_DISCSIGNAL","USBDEVFS_DROP_PRIVILEGES","USBDEVFS_FORBID_SUSPEND","USBDEVFS_FREE_STREAMS","USBDEVFS_GETDRIVER","USBDEVFS_GET_CAPABILITIES","USBDEVFS_GET_SPEED","USBDEVFS_HUB_PORTINFO","USBDEVFS_IOCTL","USBDEVFS_REAPURB","USBDEVFS_REAPURB32","USBDEVFS_REAPURBNDELAY","USBDEVFS_REAPURBNDELAY32","USBDEVFS_RELEASEINTERFACE","USBDEVFS_RELEASE_PORT","USBDEVFS_RESET","USBDEVFS_RESETEP","USBDEVFS_SETCONFIGURATION","USBDEVFS_SETINTERFACE","USBDEVFS_SUBMITURB","USBDEVFS_WAIT_FOR_RESUME","UVCIOC_CTRL_MAP","UVCIOC_CTRL_QUERY","VBG_IOCTL_ACQUIRE_GUEST_CAPABILITIES","VBG_IOCTL_CHANGE_FILTER_MASK","VBG_IOCTL_CHANGE_GUEST_CAPABILITIES","VBG_IOCTL_CHECK_BALLOON","VBG_IOCTL_DRIVER_VERSION_INFO","VBG_IOCTL_HGCM_CONNECT","VBG_IOCTL_HGCM_DISCONNECT","VBG_IOCTL_INTERRUPT_ALL_WAIT_FOR_EVENTS","VBG_IOCTL_VMMDEV_REQUEST_BIG","VBG_IOCTL_WAIT_FOR_EVENTS","VBG_IOCTL_WRITE_CORE_DUMP","VDUSE_CREATE_DEV","VDUSE_DESTROY_DEV","VDUSE_DEV_GET_FEATURES","VDUSE_DEV_INJECT_CONFIG_IRQ","VDUSE_DEV_SET_CONFIG","VDUSE_GET_API_VERSION","VDUSE_IOTLB_GET_FD","VDUSE_SET_API_VERSION","VDUSE_VQ_GET_INFO","VDUSE_VQ_INJECT_IRQ","VDUSE_VQ_SETUP","VDUSE_VQ_SETUP_KICKFD","VFAT_IOCTL_READDIR_BOTH","VFAT_IOCTL_READDIR_SHORT","VFIO_CHECK_EXTENSION","VFIO_DEVICE_FEATURE","VFIO_DEVICE_GET_GFX_DMABUF","VFIO_DEVICE_GET_INFO","VFIO_DEVICE_GET_IRQ_INFO","VFIO_DEVICE_GET_PCI_HOT_RESET_INFO","VFIO_DEVICE_GET_REGION_INFO","VFIO_DEVICE_IOEVENTFD","VFIO_DEVICE_PCI_HOT_RESET","VFIO_DEVICE_QUERY_GFX_PLANE","VFIO_DEVICE_RESET","VFIO_DEVICE_SET_IRQS","VFIO_EEH_PE_OP","VFIO_GET_API_VERSION","VFIO_GROUP_GET_DEVICE_FD","VFIO_GROUP_GET_STATUS","VFIO_GROUP_SET_CONTAINER","VFIO_GROUP_UNSET_CONTAINER","VFIO_IOMMU_DIRTY_PAGES","VFIO_IOMMU_DISABLE","VFIO_IOMMU_ENABLE","VFIO_IOMMU_GET_INFO","VFIO_IOMMU_MAP_DMA","VFIO_IOMMU_SPAPR_REGISTER_MEMORY","VFIO_IOMMU_SPAPR_TCE_CREATE","VFIO_IOMMU_SPAPR_TCE_GET_INFO","VFIO_IOMMU_SPAPR_TCE_REMOVE","VFIO_IOMMU_SPAPR_UNREGISTER_MEMORY","VFIO_IOMMU_UNMAP_DMA","VFIO_SET_IOMMU","VHOST_GET_BACKEND_FEATURES","VHOST_GET_FEATURES","VHOST_GET_VRING_BASE","VHOST_GET_VRING_BUSYLOOP_TIMEOUT","VHOST_GET_VRING_ENDIAN","VHOST_NET_SET_BACKEND","VHOST_RESET_OWNER","VHOST_SCSI_CLEAR_ENDPOINT","VHOST_SCSI_GET_ABI_VERSION","VHOST_SCSI_GET_EVENTS_MISSED","VHOST_SCSI_SET_ENDPOINT","VHOST_SCSI_SET_EVENTS_MISSED","VHOST_SET_BACKEND_FEATURES","VHOST_SET_FEATURES","VHOST_SET_LOG_BASE","VHOST_SET_LOG_FD","VHOST_SET_MEM_TABLE","VHOST_SET_OWNER","VHOST_SET_VRING_ADDR","VHOST_SET_VRING_BASE","VHOST_SET_VRING_BUSYLOOP_TIMEOUT","VHOST_SET_VRING_CALL","VHOST_SET_VRING_ENDIAN","VHOST_SET_VRING_ERR","VHOST_SET_VRING_KICK","VHOST_SET_VRING_NUM","VHOST_VDPA_GET_CONFIG","VHOST_VDPA_GET_DEVICE_ID","VHOST_VDPA_GET_IOVA_RANGE","VHOST_VDPA_GET_STATUS","VHOST_VDPA_GET_VRING_NUM","VHOST_VDPA_SET_CONFIG","VHOST_VDPA_SET_CONFIG_CALL","VHOST_VDPA_SET_STATUS","VHOST_VDPA_SET_VRING_ENABLE","VHOST_VSOCK_SET_GUEST_CID","VHOST_VSOCK_SET_RUNNING","VIDIOC_AM437X_CCDC_CFG","VIDIOC_CREATE_BUFS","VIDIOC_CROPCAP","VIDIOC_DBG_G_CHIP_INFO","VIDIOC_DBG_G_REGISTER","VIDIOC_DBG_S_REGISTER","VIDIOC_DECODER_CMD","VIDIOC_DQBUF","VIDIOC_DQEVENT","VIDIOC_DV_TIMINGS_CAP","VIDIOC_ENCODER_CMD","VIDIOC_ENUMAUDIO","VIDIOC_ENUMAUDOUT","VIDIOC_ENUMINPUT","VIDIOC_ENUMOUTPUT","VIDIOC_ENUMSTD","VIDIOC_ENUM_DV_TIMINGS","VIDIOC_ENUM_FMT","VIDIOC_ENUM_FRAMEINTERVALS","VIDIOC_ENUM_FRAMESIZES","VIDIOC_ENUM_FREQ_BANDS","VIDIOC_EXPBUF","VIDIOC_G_AUDIO","VIDIOC_G_AUDOUT","VIDIOC_G_CROP","VIDIOC_G_CTRL","VIDIOC_G_DV_TIMINGS","VIDIOC_G_EDID","VIDIOC_G_ENC_INDEX","VIDIOC_G_EXT_CTRLS","VIDIOC_G_FBUF","VIDIOC_G_FMT","VIDIOC_G_FREQUENCY","VIDIOC_G_INPUT","VIDIOC_G_JPEGCOMP","VIDIOC_G_MODULATOR","VIDIOC_G_OUTPUT","VIDIOC_G_PARM","VIDIOC_G_PRIORITY","VIDIOC_G_SELECTION","VIDIOC_G_SLICED_VBI_CAP","VIDIOC_G_STD","VIDIOC_G_TUNER","VIDIOC_LOG_STATUS","VIDIOC_OMAP3ISP_AEWB_CFG","VIDIOC_OMAP3ISP_AF_CFG","VIDIOC_OMAP3ISP_CCDC_CFG","VIDIOC_OMAP3ISP_HIST_CFG","VIDIOC_OMAP3ISP_PRV_CFG","VIDIOC_OMAP3ISP_STAT_EN","VIDIOC_OMAP3ISP_STAT_REQ","VIDIOC_OVERLAY","VIDIOC_PREPARE_BUF","VIDIOC_QBUF","VIDIOC_QUERYBUF","VIDIOC_QUERYCAP","VIDIOC_QUERYCTRL","VIDIOC_QUERYMENU","VIDIOC_QUERYSTD","VIDIOC_QUERY_DV_TIMINGS","VIDIOC_QUERY_EXT_CTRL","VIDIOC_REQBUFS","VIDIOC_STREAMOFF","VIDIOC_STREAMON","VIDIOC_SUBDEV_DV_TIMINGS_CAP","VIDIOC_SUBDEV_ENUMSTD","VIDIOC_SUBDEV_ENUM_DV_TIMINGS","VIDIOC_SUBDEV_ENUM_FRAME_INTERVAL","VIDIOC_SUBDEV_ENUM_FRAME_SIZE","VIDIOC_SUBDEV_ENUM_MBUS_CODE","VIDIOC_SUBDEV_G_CROP","VIDIOC_SUBDEV_G_DV_TIMINGS","VIDIOC_SUBDEV_G_EDID","VIDIOC_SUBDEV_G_FMT","VIDIOC_SUBDEV_G_FRAME_INTERVAL","VIDIOC_SUBDEV_G_SELECTION","VIDIOC_SUBDEV_G_STD","VIDIOC_SUBDEV_QUERYCAP","VIDIOC_SUBDEV_QUERYSTD","VIDIOC_SUBDEV_QUERY_DV_TIMINGS","VIDIOC_SUBDEV_S_CROP","VIDIOC_SUBDEV_S_DV_TIMINGS","VIDIOC_SUBDEV_S_EDID","VIDIOC_SUBDEV_S_FMT","VIDIOC_SUBDEV_S_FRAME_INTERVAL","VIDIOC_SUBDEV_S_SELECTION","VIDIOC_SUBDEV_S_STD","VIDIOC_SUBSCRIBE_EVENT","VIDIOC_S_AUDIO","VIDIOC_S_AUDOUT","VIDIOC_S_CROP","VIDIOC_S_CTRL","VIDIOC_S_DV_TIMINGS","VIDIOC_S_EDID","VIDIOC_S_EXT_CTRLS","VIDIOC_S_FBUF","VIDIOC_S_FMT","VIDIOC_S_FREQUENCY","VIDIOC_S_HW_FREQ_SEEK","VIDIOC_S_INPUT","VIDIOC_S_JPEGCOMP","VIDIOC_S_MODULATOR","VIDIOC_S_OUTPUT","VIDIOC_S_PARM","VIDIOC_S_PRIORITY","VIDIOC_S_SELECTION","VIDIOC_S_STD","VIDIOC_S_TUNER","VIDIOC_TRY_DECODER_CMD","VIDIOC_TRY_ENCODER_CMD","VIDIOC_TRY_EXT_CTRLS","VIDIOC_TRY_FMT","VIDIOC_UNSUBSCRIBE_EVENT","VTPM_PROXY_IOC_NEW_DEV","VT_ACTIVATE","VT_DISALLOCATE","VT_GETMODE","VT_GETSTATE","VT_OPENQRY","VT_RELDISP","VT_RESIZE","VT_RESIZEX","VT_SETMODE","VT_WAITACTIVE","WDIOC_GETBOOTSTATUS","WDIOC_GETPRETIMEOUT","WDIOC_GETSTATUS","WDIOC_GETSUPPORT","WDIOC_GETTEMP","WDIOC_GETTIMELEFT","WDIOC_GETTIMEOUT","WDIOC_KEEPALIVE","WDIOC_SETOPTIONS","WDIOC_SETPRETIMEOUT","WDIOC_SETTIMEOUT","ZATM_GETPOOL","ZATM_GETPOOLZ","ZATM_SETPOOL","FD_CLR","FD_ISSET","FD_SET","FD_ZERO","SIG_DFL","sig_ign"],"q":[[0,"linux_raw_sys"],[7,"linux_raw_sys::ctypes"],[29,"linux_raw_sys::elf"],[216,"linux_raw_sys::errno"],[349,"linux_raw_sys::general"],[3703,"linux_raw_sys::ioctl"],[5294,"linux_raw_sys::select_macros"],[5298,"linux_raw_sys::signal_macros"]],"d":["","The ELF ABI. 🧝","","","","","","","","","","","","","","","","","","","","","Equivalent to C’s <code>void</code> type when used as a pointer.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeust doesn’t currently permit us to use <code>transmute</code> to …"],"i":[0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,9,9,145,146,147,148,144,10,12,7,8,9,145,146,147,148,144,10,12,7,8,9,7,8,9,8,7,7,8,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,146,147,148,144,10,12,7,8,9,145,146,147,148,144,10,12,7,8,9,146,146,146,146,146,146,146,146,10,10,12,10,12,147,147,147,147,147,147,145,146,147,148,144,10,12,7,8,9,145,146,147,148,144,10,12,7,8,9,10,12,145,146,147,148,144,10,12,7,8,9,148,148,148,148,148,148,148,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,109,109,109,109,109,109,109,109,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,110,110,110,110,110,110,110,110,110,110,110,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,76,117,106,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,101,0,149,33,35,129,36,37,45,80,113,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,81,0,0,0,0,0,101,0,0,0,70,116,116,116,75,79,74,106,106,75,73,71,72,74,73,79,115,71,67,118,116,66,68,69,72,115,117,77,115,118,78,115,115,115,67,68,69,69,67,75,67,118,115,116,73,66,68,69,71,69,89,94,88,13,13,13,13,38,38,106,149,17,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,129,36,37,38,39,40,41,130,42,43,44,45,46,47,131,48,132,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,133,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,149,17,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,129,36,37,38,39,40,41,130,42,43,44,45,46,47,131,48,132,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,133,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,132,132,41,82,83,84,86,82,83,84,86,82,83,84,86,83,84,82,83,84,86,82,83,84,86,82,83,84,86,83,84,0,0,0,63,63,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,0,17,0,106,31,33,131,97,133,133,133,133,133,22,24,30,17,13,113,130,41,39,41,97,43,21,92,132,106,0,17,49,109,110,111,88,30,48,63,103,104,105,103,104,105,103,104,105,103,104,105,103,104,105,103,104,105,103,104,105,103,104,105,103,104,105,103,104,105,0,103,104,105,103,104,105,48,18,89,94,0,0,0,31,33,0,29,31,33,45,63,89,0,0,17,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,129,38,39,40,41,130,42,43,44,45,46,47,131,48,132,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,69,71,72,73,74,75,79,80,81,82,83,84,85,86,87,90,91,92,93,94,95,96,97,98,99,100,133,101,102,103,104,105,106,107,108,109,110,111,119,149,17,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,129,36,37,38,39,40,41,130,42,43,44,45,46,47,131,48,132,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,133,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,91,0,0,0,0,0,0,0,0,0,0,0,0,0,44,44,44,44,44,44,0,47,0,17,17,17,109,110,111,113,130,21,23,25,0,0,149,17,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,129,36,37,38,39,40,41,130,42,43,44,45,46,47,131,48,132,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,133,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,94,96,87,87,0,50,53,57,58,50,53,57,58,0,0,0,0,149,149,36,37,0,27,28,27,28,27,28,27,28,27,28,40,131,91,95,97,106,106,0,47,47,106,22,24,100,131,31,33,42,0,0,40,29,32,96,97,98,99,100,0,131,17,13,106,46,42,42,43,43,0,119,63,17,21,23,25,20,26,63,34,34,0,38,120,0,96,98,99,100,149,32,129,149,106,119,36,119,41,119,130,88,93,130,88,93,88,93,29,48,61,62,61,62,0,0,0,0,24,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,0,64,108,64,108,64,108,64,108,106,106,17,17,106,106,106,106,106,106,63,63,106,77,77,77,107,0,0,78,78,78,0,0,0,0,0,0,0,0,0,0,0,114,114,32,0,97,39,39,130,39,130,65,65,65,101,102,101,101,101,101,102,101,101,102,101,102,101,102,101,102,101,102,101,101,102,101,102,101,102,101,102,63,63,0,40,92,95,0,0,0,37,41,37,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,0,0,0,0,63,91,149,17,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,129,36,37,38,39,40,41,130,42,43,44,45,46,47,131,48,132,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,133,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,149,17,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,129,36,37,38,39,40,41,130,42,43,44,45,46,47,131,48,132,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,133,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,49,52,55,80,49,51,52,54,55,56,80,51,54,56,26,35,129,149,17,13,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,129,36,37,38,39,40,41,130,42,43,44,45,46,47,131,48,132,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,133,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,59,59,35,45,90,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,106,37,0,38,112,112,19,45,20,31,33,112,0,0,0,0,131,0,85,85,85,85,98,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[4,[3]]]],[[]],[[]],[[],4],[[],4],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,6],[6,6],[6,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,7],[8,8],[9,9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[10,11],[12,11],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[13],[[13,14],15],[13],[[13,14],15],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[17,[16]]],[[17,[16]]]],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[69,69],[70,70],[71,71],[72,72],[73,73],[74,74],[75,75],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[107,107],[108,108],[109,109],[110,110],[111,111],[112,112],[113,113],[114,114],[115,115],[116,116],[117,117],[118,118],[119,119],[120,120],0,[[[17,[121]],[17,[121]]],122],0,[106,123],0,0,0,0,0,0,0,0,0,0,0,0,[[],[[17,[124]]]],[[],[[13,[124]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[17,[125]],[17,[125]]],126],[[49,49],126],[[109,109],126],[[110,110],126],[[111,111],126],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[17,[127]],2],128],[[13,2],128],[[18,2],128],[[19,2],128],[[20,2],128],[[21,2],128],[[22,2],128],[[23,2],128],[[24,2],128],[[25,2],128],[[26,2],128],[[27,2],128],[[28,2],128],[[29,2],128],[[30,2],128],[[31,2],128],[[32,2],128],[[33,2],128],[[129,2],128],[[38,2],128],[[39,2],128],[[40,2],128],[[41,2],128],[[130,2],128],[[42,2],128],[[43,2],128],[[44,2],128],[[45,2],128],[[46,2],128],[[47,2],128],[[131,2],128],[[48,2],128],[[132,2],128],[[49,2],128],[[50,2],128],[[51,2],128],[[52,2],128],[[53,2],128],[[54,2],128],[[55,2],128],[[56,2],128],[[57,2],128],[[58,2],128],[[59,2],128],[[60,2],128],[[61,2],128],[[62,2],128],[[63,2],128],[[64,2],128],[[65,2],128],[[66,2],128],[[69,2],128],[[71,2],128],[[72,2],128],[[73,2],128],[[74,2],128],[[75,2],128],[[79,2],128],[[80,2],128],[[81,2],128],[[82,2],128],[[83,2],128],[[84,2],128],[[85,2],128],[[86,2],128],[[87,2],128],[[90,2],128],[[91,2],128],[[92,2],128],[[93,2],128],[[94,2],128],[[95,2],128],[[96,2],128],[[97,2],128],[[98,2],128],[[99,2],128],[[100,2],128],[[133,2],128],[[101,2],128],[[102,2],128],[[103,2],128],[[104,2],128],[[105,2],128],[[106,2],128],[[107,2],128],[[108,2],128],[[109,2],128],[[110,2],128],[[111,2],128],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[17,[[0,[[134,[[15,[6]]]],[135,[[15,[6]]]]]]]],14,6],136],[[[17,[[0,[[134,[[15,[6]]]],[135,[[15,[6]]]]]]]],14],126],[[[17,[137]],138]],[[109,138]],[[110,138]],[[111,138]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[106,123],0,0,0,[106,123],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],17],[[],13],[[123,123,123,123,123,123,123],[[17,[[139,[6]]]]]],0,0,0,0,0,0,0,0,[[[17,[140]],[17,[140]]],[[141,[122]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[106,123],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[106,123],[106,123],[[[17,[[0,[[134,[[15,[6]]]],[135,[[15,[6]]]]]]]],14,6,136]],[[[17,[[0,[[134,[[15,[6]]]],[135,[[15,[6]]]]]]]],14,126]],[[106,123]],[[106,123]],[[106,123]],[[106,123]],[[106,123]],[[106,123]],0,0,[[106,123]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[106,123],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[142,18]],[[142,18],126],[[142,18]],[18],0,[[],143]],"c":[],"p":[[4,"c_void"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"TypeId"],[15,"u8"],[3,"Elf_Dyn"],[19,"Elf_Dyn_Union"],[3,"Elf_auxv_t"],[3,"Elf_Rela"],[15,"u32"],[3,"Elf_Rel"],[3,"__IncompleteArrayField"],[15,"usize"],[15,"slice"],[8,"Clone"],[3,"__BindgenBitfieldUnit"],[3,"__kernel_fd_set"],[3,"__kernel_fsid_t"],[3,"__user_cap_header_struct"],[3,"__user_cap_data_struct"],[3,"vfs_cap_data"],[3,"vfs_cap_data__bindgen_ty_1"],[3,"vfs_ns_cap_data"],[3,"vfs_ns_cap_data__bindgen_ty_1"],[3,"f_owner_ex"],[3,"flock"],[3,"flock64"],[3,"open_how"],[3,"epoll_event"],[3,"fscrypt_policy_v1"],[3,"fscrypt_key"],[3,"fscrypt_policy_v2"],[3,"fscrypt_get_policy_ex_arg"],[3,"fscrypt_key_specifier"],[3,"fscrypt_remove_key_arg"],[3,"fscrypt_get_key_status_arg"],[3,"mount_attr"],[3,"file_clone_range"],[3,"fstrim_range"],[3,"file_dedupe_range_info"],[3,"files_stat_struct"],[3,"inodes_stat_t"],[3,"fsxattr"],[3,"futex_waitv"],[3,"robust_list"],[3,"robust_list_head"],[3,"pollfd"],[3,"__kernel_timespec"],[3,"__kernel_itimerspec"],[3,"__kernel_old_timeval"],[3,"__kernel_old_timespec"],[3,"__kernel_old_itimerval"],[3,"__kernel_sock_timeval"],[3,"timespec"],[3,"timeval"],[3,"itimerspec"],[3,"itimerval"],[3,"timezone"],[3,"rusage"],[3,"rlimit"],[3,"rlimit64"],[3,"clone_args"],[3,"sigaction"],[3,"sigaltstack"],[3,"__sifields__bindgen_ty_1"],[3,"__sifields__bindgen_ty_2"],[3,"__sifields__bindgen_ty_3"],[3,"__sifields__bindgen_ty_4"],[3,"__sifields__bindgen_ty_5"],[3,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],[3,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],[3,"__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],[3,"__sifields__bindgen_ty_6"],[3,"__sifields__bindgen_ty_7"],[3,"siginfo"],[3,"siginfo__bindgen_ty_1__bindgen_ty_1"],[3,"sigevent"],[3,"sigevent__bindgen_ty_1__bindgen_ty_1"],[3,"statx_timestamp"],[3,"statx"],[3,"termios"],[3,"termios2"],[3,"ktermios"],[3,"winsize"],[3,"termio"],[3,"iovec"],[3,"uffd_msg"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_1"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_2"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_3"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_4"],[3,"uffd_msg__bindgen_ty_1__bindgen_ty_5"],[3,"uffdio_api"],[3,"uffdio_range"],[3,"uffdio_register"],[3,"uffdio_copy"],[3,"uffdio_zeropage"],[3,"uffdio_writeprotect"],[3,"uffdio_continue"],[3,"stat"],[3,"__old_kernel_stat"],[3,"statfs"],[3,"statfs64"],[3,"compat_statfs64"],[3,"user_desc"],[3,"kernel_sigset_t"],[3,"kernel_sigaction"],[4,"fsconfig_command"],[4,"membarrier_cmd"],[4,"membarrier_cmd_flag"],[19,"fscrypt_get_policy_ex_arg__bindgen_ty_1"],[19,"fscrypt_key_specifier__bindgen_ty_1"],[19,"sigval"],[19,"__sifields"],[19,"__sifields__bindgen_ty_5__bindgen_ty_1"],[19,"siginfo__bindgen_ty_1"],[19,"sigevent__bindgen_ty_1"],[19,"uffd_msg__bindgen_ty_1"],[19,"uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],[8,"Ord"],[4,"Ordering"],[6,"c_uint"],[8,"Default"],[8,"PartialEq"],[15,"bool"],[8,"Debug"],[6,"Result"],[3,"fscrypt_provisioning_key_payload"],[3,"file_dedupe_range"],[3,"inotify_event"],[3,"rand_pool_info"],[3,"linux_dirent64"],[8,"AsRef"],[8,"AsMut"],[15,"u64"],[8,"Hash"],[8,"Hasher"],[15,"array"],[8,"PartialOrd"],[4,"Option"],[6,"c_int"],[6,"__kernel_sighandler_t"],[3,"Elf_Verdaux"],[3,"Elf_Ehdr"],[3,"Elf_Phdr"],[3,"Elf_Sym"],[3,"Elf_Verdef"],[3,"fscrypt_add_key_arg"]]},\
"lock_api":{"doc":"This library provides type-safe and fully-featured <code>Mutex</code> …","t":"QQIQQDDSSSSQQDDDDDDIIIDIIIIIIIIIIDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKKKKLLLKKKKKKKLLLKKKLLLLLLLLLLLLLLLLLKLKLKLLLLLLLLLLLLLLLLLLLLLLKLKKKLLLLLLLLLLKKKKLLLLLLLLLLLKLLL","n":["Duration","Duration","GetThreadId","GuardMarker","GuardMarker","GuardNoSend","GuardSend","INIT","INIT","INIT","INIT","Instant","Instant","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","RawMutex","RawMutexFair","RawMutexTimed","RawReentrantMutex","RawRwLock","RawRwLockDowngrade","RawRwLockFair","RawRwLockRecursive","RawRwLockRecursiveTimed","RawRwLockTimed","RawRwLockUpgrade","RawRwLockUpgradeDowngrade","RawRwLockUpgradeFair","RawRwLockUpgradeTimed","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump","bump","bump","bump","bump","bump","bump_exclusive","bump_exclusive","bump_shared","bump_shared","bump_upgradable","bump_upgradable","const_new","const_new","const_new","data_ptr","data_ptr","data_ptr","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade","downgrade_to_upgradable","downgrade_to_upgradable","downgrade_upgradable","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_unlock","force_unlock","force_unlock_fair","force_unlock_fair","force_unlock_read","force_unlock_read_fair","force_unlock_write","force_unlock_write_fair","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked","is_locked_exclusive","is_locked_exclusive","is_locked_exclusive","is_owned_by_current_thread","is_owned_by_current_thread","leak","lock","lock","lock","lock","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","make_guard_unchecked","make_guard_unchecked","make_read_guard_unchecked","make_upgradable_guard_unchecked","make_write_guard_unchecked","map","map","map","map","map","map","map","map","mutex","new","new","new","nonzero_thread_id","raw","raw","raw","read","read_recursive","remutex","rwlock","rwlock","rwlock","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_for","try_read_recursive","try_read_recursive_for","try_read_recursive_until","try_read_until","try_upgradable_read","try_upgradable_read_for","try_upgradable_read_until","try_upgrade","try_upgrade","try_upgrade_for","try_upgrade_for","try_upgrade_until","try_upgrade_until","try_with_upgraded","try_with_upgraded_for","try_with_upgraded_until","try_write","try_write_for","try_write_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","unlocked","unlocked","unlocked","unlocked","unlocked","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","unlocked_fair","upgradable_read","upgrade","upgrade","with_upgraded","write"],"q":[[0,"lock_api"]],"d":["Duration type used for <code>try_lock_for</code>.","Duration type used for <code>try_lock_for</code>.","Helper trait which returns a non-zero thread ID.","Marker type which determines whether a lock guard should …","Marker type which determines whether a lock guard should …","Marker type which indicates that the Guard type for a lock …","Marker type which indicates that the Guard type for a lock …","Initial value for an unlocked mutex.","Initial value.","Initial value for an unlocked mutex.","Initial value for an unlocked <code>RwLock</code>.","Instant type used for <code>try_lock_until</code>.","Instant type used for <code>try_lock_until</code>.","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","Basic operations for a mutex.","Additional methods for mutexes which support fair …","Additional methods for mutexes which support locking with …","A raw mutex type that wraps another raw mutex to provide …","Basic operations for a reader-writer lock.","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support fair …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support recursive …","Additional methods for RwLocks which support locking with …","Additional methods for RwLocks which support atomically …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","Additional methods for RwLocks which support upgradable …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the mutex to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields the <code>RwLock</code> to a waiting thread if there …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields an exclusive lock to a waiting thread …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields a shared lock to a waiting thread if …","Temporarily yields an upgradable lock to a waiting thread …","Temporarily yields an upgradable lock to a waiting thread …","Creates a new mutex based on a pre-existing raw mutex.","Creates a new reentrant mutex based on a pre-existing raw …","Creates a new new instance of an <code>RwLock&lt;T&gt;</code> based on a …","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","Returns a raw pointer to the underlying data.","","","","","","","","","","","","","","","","","Atomically downgrades an exclusive lock into a shared lock …","Atomically downgrades a write lock into a read lock …","Atomically downgrades an upgradable read lock lock into a …","Downgrades an exclusive lock to an upgradable lock.","Atomically downgrades a write lock into an upgradable read …","Downgrades an upgradable lock to a shared lock.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forcibly unlocks the mutex.","Forcibly unlocks the mutex.","Forcibly unlocks the mutex using a fair unlock procotol.","Forcibly unlocks the mutex using a fair unlock protocol.","Forcibly unlocks a read lock.","Forcibly unlocks a read lock using a fair unlock procotol.","Forcibly unlocks a write lock.","Forcibly unlocks a write lock using a fair unlock procotol.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this mutex, returning the underlying data.","Consumes this mutex, returning the underlying data.","Consumes this <code>RwLock</code>, returning the underlying data.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks whether the mutex is currently locked.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks if this <code>RwLock</code> is currently locked in any way.","Checks whether this <code>RwLock</code> is currently locked in any way.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Check if this <code>RwLock</code> is currently exclusively locked.","Checks whether the mutex is currently held by the current …","Checks whether the mutex is currently held by the current …","Leaks the mutex guard and returns a mutable reference to …","Acquires this mutex, blocking the current thread until it …","Acquires a mutex, blocking the current thread until it is …","Acquires this mutex, blocking if it’s held by another …","Acquires a reentrant mutex, blocking the current thread …","Acquires an exclusive lock, blocking the current thread …","Acquires a shared lock, blocking the current thread until …","Acquires a shared lock without deadlocking in case of a …","Acquires an upgradable lock, blocking the current thread …","Creates a new <code>MutexGuard</code> without checking if the mutex is …","Creates a new <code>ReentrantMutexGuard</code> without checking if the …","Creates a new <code>RwLockReadGuard</code> without checking if the lock …","Creates a new <code>RwLockUpgradableReadGuard</code> without checking …","Creates a new <code>RwLockReadGuard</code> without checking if the lock …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Makes a new <code>MappedReentrantMutexGuard</code> for a component of …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Make a new <code>MappedRwLockReadGuard</code> for a component of the …","Make a new <code>MappedRwLockWriteGuard</code> for a component of the …","Returns a reference to the original <code>Mutex</code> object.","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Returns a non-zero thread ID which identifies the current …","Returns the underlying raw mutex object.","Returns the underlying raw mutex object.","Returns the underlying raw reader-writer lock object.","Locks this <code>RwLock</code> with shared read access, blocking the …","Locks this <code>RwLock</code> with shared read access, blocking the …","Returns a reference to the original <code>ReentrantMutex</code> object.","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","Returns a reference to the original reader-writer lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire this mutex without blocking. Returns …","Attempts to acquire this lock.","Attempts to acquire an exclusive lock without blocking.","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire an exclusive lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire a shared lock without blocking.","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock without deadlocking in …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire a shared lock until a timeout is …","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire this lock until a timeout is reached.","Attempts to acquire an upgradable lock without blocking.","Attempts to acquire an upgradable lock until a timeout is …","Attempts to acquire an upgradable lock until a timeout is …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedReentrantMutexGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to make  a new <code>MappedRwLockReadGuard</code> for a …","Attempts to make  a new <code>MappedRwLockWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with shared read access …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to acquire this <code>RwLock</code> with upgradable read …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","Attempts to upgrade an upgradable lock to an exclusive …","Tries to atomically upgrade an upgradable read lock into …","First, tries to atomically upgrade an upgradable read lock …","Tries to atomically upgrade an upgradable read lock into …","Tries to atomically upgrade an upgradable read lock into …","Attempts to lock this <code>RwLock</code> with exclusive write access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","Unlocks this mutex.","Unlocks this mutex. The inner mutex may not be unlocked if …","Releases an exclusive lock.","Releases an exclusive lock using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol.","Unlocks this mutex using a fair unlock protocol. The inner …","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the mutex using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Unlocks the <code>RwLock</code> using a fair unlock protocol.","Releases a shared lock.","Releases a shared lock using a fair unlock protocol.","Releases an upgradable lock.","Releases an upgradable lock using a fair unlock protocol.","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the mutex to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Temporarily unlocks the <code>RwLock</code> to execute the given …","Locks this <code>RwLock</code> with upgradable read access, blocking …","Upgrades an upgradable lock to an exclusive lock.","Atomically upgrades an upgradable read lock lock into an …","First, atomically upgrades an upgradable read lock lock …","Locks this <code>RwLock</code> with exclusive write access, blocking …"],"i":[36,37,0,15,16,0,0,15,2,3,16,36,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,1,1,3,5,6,8,9,11,7,7,7,7,10,10,12,13,14,12,13,14,12,13,14,5,18,6,19,8,9,11,21,22,5,18,9,22,23,9,11,24,9,24,5,18,6,19,8,9,11,21,22,12,13,14,5,5,18,18,6,6,19,19,8,8,9,9,11,11,21,21,22,22,12,13,12,13,14,14,14,14,41,42,12,12,12,3,13,13,13,14,14,14,5,18,6,19,8,9,11,21,22,12,13,14,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,12,13,14,15,15,12,3,13,16,16,14,16,16,14,3,13,5,15,12,3,13,16,16,33,20,12,13,14,14,14,5,18,6,19,8,9,21,22,5,12,13,14,2,12,13,14,14,14,6,8,9,11,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,15,12,3,13,16,37,37,36,12,3,13,16,37,33,38,38,37,36,12,3,13,20,39,39,5,18,6,19,8,9,21,22,14,14,14,14,14,14,14,14,14,20,11,39,11,39,11,11,11,11,14,14,14,41,42,12,3,13,14,5,18,6,19,8,9,11,21,22,15,3,16,7,1,3,5,18,6,19,8,9,11,21,22,16,7,20,10,5,6,8,9,11,5,6,8,9,11,14,20,11,11,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[6,[1,2,4]]]],[[[8,[7,4]]]],[[[9,[7,4]]]],[[[11,[10,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],13],[[],14],[[[12,[15,4]]]],[[[13,[15,2,4]]]],[[[14,[16,4]]]],[[],[[12,[15,[0,[4,17]]]]]],[[],[[13,[15,2,[0,[4,17]]]]]],[[],[[14,[16,[0,[4,17]]]]]],[[[5,[15,4]]],4],[[[18,[15,4]]],4],[[[6,[15,2,4]]],4],[[[19,[15,2,4]]],4],[[[8,[16,4]]],4],[[[9,[16,4]]],4],[[[11,[20,4]]],4],[[[21,[16,4]]],4],[[[22,[16,4]]],4],[[[5,[15,4]]],4],[[[18,[15,4]]],4],[[[9,[16,4]]],4],[[[22,[16,4]]],4],[[]],[[[9,[23,4]]],[[8,[23,4]]]],[[[11,[24,4]]],[[8,[24,4]]]],[[]],[[[9,[24,4]]],[[11,[24,4]]]],[[]],[[[5,[15,4]]]],[[[18,[15,4]]]],[[[6,[15,2,4]]]],[[[19,[15,2,4]]]],[[[8,[16,4]]]],[[[9,[16,4]]]],[[[11,[20,4]]]],[[[21,[16,4]]]],[[[22,[16,4]]]],[[[12,[15,[0,[4,25]]]],26],27],[[[13,[15,2,[0,[4,25]]]],26],27],[[[14,[16,[0,[4,25]]]],26],27],[[[5,[15,[0,[25,4]]]],26],27],[[[5,[15,[0,[28,4]]]],26],27],[[[18,[15,[0,[28,4]]]],26],27],[[[18,[15,[0,[25,4]]]],26],27],[[[6,[15,2,[0,[28,4]]]],26],27],[[[6,[15,2,[0,[25,4]]]],26],27],[[[19,[15,2,[0,[25,4]]]],26],27],[[[19,[15,2,[0,[28,4]]]],26],27],[[[8,[16,[0,[25,4]]]],26],27],[[[8,[16,[0,[28,4]]]],26],27],[[[9,[16,[0,[25,4]]]],26],27],[[[9,[16,[0,[28,4]]]],26],27],[[[11,[20,[0,[25,4]]]],26],27],[[[11,[20,[0,[28,4]]]],26],27],[[[21,[16,[0,[28,4]]]],26],27],[[[21,[16,[0,[25,4]]]],26],27],[[[22,[16,[0,[25,4]]]],26],27],[[[22,[16,[0,[28,4]]]],26],27],[[[12,[15,4]]]],[[[13,[15,2,4]]]],[[[12,[1,4]]]],[[[13,[1,2,4]]]],[[[14,[16,4]]]],[[[14,[7,4]]]],[[[14,[16,4]]]],[[[14,[7,4]]]],[[]],[[]],[[]],[[],[[12,[15]]]],[29],[[]],[29],[[]],[[],[[13,[15,2]]]],[[],[[14,[16]]]],[[]],[29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15,4]]],4],[[[13,[15,2,4]]],4],[[[14,[16,4]]],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[12,[15]]]],[[[13,[15,2]]]],[[[14,[16]]]],[[],30],[[],30],[[[12,[15,4]]],30],[[[3,[15,2]]],30],[[[13,[15,2,4]]],30],[[],30],[[],30],[[[14,[16,4]]],30],[[],30],[[],30],[[[14,[16,4]]],30],[[[3,[15,2]]],30],[[[13,[15,2,4]]],30],[[[5,[15,4]]],4],[[]],[[[12,[15,4]]],[[5,[15,4]]]],[[[3,[15,2]]]],[[[13,[15,2,4]]],[[6,[15,2,4]]]],[[]],[[]],[[]],[[]],[[[12,[15,4]]],[[5,[15,4]]]],[[[13,[15,2,4]]],[[6,[15,2,4]]]],[[[14,[16,4]]],[[8,[16,4]]]],[[[14,[20,4]]],[[11,[20,4]]]],[[[14,[16,4]]],[[9,[16,4]]]],[[[5,[15,4]],31],[[18,[15,4]]]],[[[18,[15,4]],31],[[18,[15,4]]]],[[[6,[15,2,4]],31],[[19,[15,2,4]]]],[[[19,[15,2,4]],31],[[19,[15,2,4]]]],[[[8,[16,4]],31],[[21,[16,4]]]],[[[9,[16,4]],31],[[22,[16,4]]]],[[[21,[16,4]],31],[[21,[16,4]]]],[[[22,[16,4]],31],[[22,[16,4]]]],[[[5,[15,4]]],[[12,[15,4]]]],[[],[[12,[15]]]],[[],[[13,[15,2]]]],[[],[[14,[16]]]],[[],32],[[[12,[15,4]]],15],[[[13,[15,2,4]]],15],[[[14,[16,4]]],16],[[[14,[16,4]]],[[8,[16,4]]]],[[[14,[33,4]]],[[8,[33,4]]]],[[[6,[15,2,4]]],[[13,[15,2,4]]]],[[[8,[16,4]]],[[14,[16,4]]]],[[[9,[16,4]]],[[14,[16,4]]]],[[[11,[20,4]]],[[14,[20,4]]]],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],30],[[[12,[15,4]]],[[35,[[5,[15,4]]]]]],[[[3,[15,2]]],30],[[[13,[15,2,4]]],[[35,[[6,[15,2,4]]]]]],[[],30],[[],30],[[],30],[[],30],[[[12,[36,4]]],[[35,[[5,[36,4]]]]]],[[[3,[36,2]]],30],[[[13,[36,2,4]]],[[35,[[6,[36,2,4]]]]]],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[],30],[[[12,[36,4]]],[[35,[[5,[36,4]]]]]],[[[3,[36,2]]],30],[[[13,[36,2,4]]],[[35,[[6,[36,2,4]]]]]],[[],30],[[],30],[[],30],[[[5,[15,4]],31],[[34,[[18,[15,4]],[5,[15,4]]]]]],[[[18,[15,4]],31],[[34,[[18,[15,4]],[18,[15,4]]]]]],[[[6,[15,2,4]],31],[[34,[[19,[15,2,4]],[6,[15,2,4]]]]]],[[[19,[15,2,4]],31],[[34,[[19,[15,2,4]],[19,[15,2,4]]]]]],[[[8,[16,4]],31],[[34,[[21,[16,4]],[8,[16,4]]]]]],[[[9,[16,4]],31],[[34,[[22,[16,4]],[9,[16,4]]]]]],[[[21,[16,4]],31],[[34,[[21,[16,4]],[21,[16,4]]]]]],[[[22,[16,4]],31],[[34,[[22,[16,4]],[22,[16,4]]]]]],[[[14,[16,4]]],[[35,[[8,[16,4]]]]]],[[[14,[37,4]]],[[35,[[8,[37,4]]]]]],[[[14,[33,4]]],[[35,[[8,[33,4]]]]]],[[[14,[38,4]]],[[35,[[8,[38,4]]]]]],[[[14,[38,4]]],[[35,[[8,[38,4]]]]]],[[[14,[37,4]]],[[35,[[8,[37,4]]]]]],[[[14,[20,4]]],[[35,[[11,[20,4]]]]]],[[[14,[39,4]]],[[35,[[11,[39,4]]]]]],[[[14,[39,4]]],[[35,[[11,[39,4]]]]]],[[],30],[[[11,[20,4]]],[[34,[[9,[20,4]],[11,[20,4]]]]]],[[],30],[[[11,[39,4]]],[[34,[[9,[39,4]],[11,[39,4]]]]]],[[],30],[[[11,[39,4]]],[[34,[[9,[39,4]],[11,[39,4]]]]]],[[[11,[24,4]],31],35],[[[11,[[0,[39,24]],4]],31],35],[[[11,[[0,[39,24]],4]],31],35],[[[14,[16,4]]],[[35,[[9,[16,4]]]]]],[[[14,[37,4]]],[[35,[[9,[37,4]]]]]],[[[14,[37,4]]],[[35,[[9,[37,4]]]]]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[]],[[[3,[15,2]]]],[[]],[[]],[[]],[[[3,[1,2]]]],[[[5,[1,4]]]],[[[18,[1,4]]]],[[[6,[1,2,4]]]],[[[19,[1,2,4]]]],[[[8,[7,4]]]],[[[9,[7,4]]]],[[[11,[10,4]]]],[[[21,[7,4]]]],[[[22,[7,4]]]],[[]],[[]],[[]],[[]],[[[5,[15,4]],31]],[[[6,[15,2,4]],31]],[[[8,[16,4]],31]],[[[9,[16,4]],31]],[[[11,[20,4]],31]],[[[5,[1,4]],31]],[[[6,[1,2,4]],31]],[[[8,[7,4]],31]],[[[9,[7,4]],31]],[[[11,[10,4]],31]],[[[14,[20,4]]],[[11,[20,4]]]],[[]],[[[11,[20,4]]],[[9,[20,4]]]],[[[11,[24,4]],31]],[[[14,[16,4]]],[[9,[16,4]]]]],"c":[],"p":[[8,"RawMutexFair"],[8,"GetThreadId"],[3,"RawReentrantMutex"],[8,"Sized"],[3,"MutexGuard"],[3,"ReentrantMutexGuard"],[8,"RawRwLockFair"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"RawRwLockUpgradeFair"],[3,"RwLockUpgradableReadGuard"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"RwLock"],[8,"RawMutex"],[8,"RawRwLock"],[8,"Default"],[3,"MappedMutexGuard"],[3,"MappedReentrantMutexGuard"],[8,"RawRwLockUpgrade"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawRwLockDowngrade"],[8,"RawRwLockUpgradeDowngrade"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Display"],[15,"never"],[15,"bool"],[8,"FnOnce"],[3,"NonZeroUsize"],[8,"RawRwLockRecursive"],[4,"Result"],[4,"Option"],[8,"RawMutexTimed"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgradeTimed"],[3,"TypeId"],[3,"GuardSend"],[3,"GuardNoSend"]]},\
"log":{"doc":"A lightweight logging facade.","t":"NNNNNNEEIDDNDDDRDNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLOLLKLLLLLLLOLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLKOOFLLFLLLLLLLLLLLLLLFFFFLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLO","n":["Debug","Debug","Error","Error","Info","Info","Level","LevelFilter","Log","Metadata","MetadataBuilder","Off","ParseLevelError","Record","RecordBuilder","STATIC_MAX_LEVEL","SetLoggerError","Trace","Trace","Warn","Warn","args","args","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","builder","builder","clone","clone","clone","clone","cmp","cmp","cmp","cmp","debug","default","default","enabled","eq","eq","eq","eq","eq","eq","eq","error","file","file","file_static","file_static","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_str","from_str","hash","hash","hash","hash","info","into","into","into","into","into","into","into","into","iter","iter","level","level","level","level","line","line","log","log","log_enabled","logger","max","max","max_level","metadata","metadata","module_path","module_path","module_path_static","module_path_static","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","set_logger","set_logger_racy","set_max_level","set_max_level_racy","target","target","target","target","to_level","to_level_filter","trace","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","warn"],"q":[[0,"log"]],"d":["The “debug” level.","Corresponds to the <code>Debug</code> log level.","The “error” level.","Corresponds to the <code>Error</code> log level.","The “info” level.","Corresponds to the <code>Info</code> log level.","An enum representing the available verbosity levels of the …","An enum representing the available verbosity level filters …","A trait encapsulating the operations required of a logger.","Metadata about a log message.","Builder for <code>Metadata</code>.","A level lower than all log levels.","The type returned by <code>from_str</code> when the string doesn’t …","The “payload” of a log message.","Builder for <code>Record</code>.","The statically resolved maximum log level.","The type returned by <code>set_logger</code> if <code>set_logger</code> has already …","The “trace” level.","Corresponds to the <code>Trace</code> log level.","The “warn” level.","Corresponds to the <code>Warn</code> log level.","The message body.","Set <code>args</code>.","Returns the string representation of the <code>Level</code>.","Returns the string representation of the <code>LevelFilter</code>.","","","","","","","","","","","","","","","","","Invoke the builder and return a <code>Record</code>","Returns a <code>Metadata</code> object.","Returns a new builder.","Returns a new builder.","","","","","","","","","Logs a message at the debug level.","","","Determines if a log message with the specified metadata …","","","","","","","","Logs a message at the error level.","The source file containing the message.","Set <code>file</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>file</code> to a <code>&#39;static</code> string.","Flushes any buffered records.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Logs a message at the info level.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Iterate through all supported logging levels.","Iterate through all supported filtering levels.","The verbosity level of the message.","Set <code>Metadata::level</code>.","The verbosity level of the message.","Setter for <code>level</code>.","The line containing the message.","Set <code>line</code>","Logs the <code>Record</code>.","The standard logging macro.","Determines if a message logged at the specified level in …","Returns a reference to the logger.","Returns the most verbose logging level.","Returns the most verbose logging level filter.","Returns the current maximum log level.","Metadata about the log directive.","Set <code>metadata</code>. Construct a <code>Metadata</code> object with …","The module path of the message.","Set <code>module_path</code>","The module path of the message, if it is a <code>&#39;static</code> string.","Set <code>module_path</code> to a <code>&#39;static</code> string","Construct new <code>RecordBuilder</code>.","Construct a new <code>MetadataBuilder</code>.","","","","","","","Sets the global logger to a <code>&amp;&#39;static Log</code>.","A thread-unsafe version of <code>set_logger</code>.","Sets the global maximum log level.","A thread-unsafe version of <code>set_max_level</code>.","The name of the target of the directive.","Set <code>Metadata::target</code>","The name of the target of the directive.","Setter for <code>target</code>.","Converts <code>self</code> to the equivalent <code>Level</code>.","Converts the <code>Level</code> to the equivalent <code>LevelFilter</code>.","Logs a message at the trace level.","","","","","","","","","","","","","","","","","","","","","","","","","Logs a message at the warn level."],"i":[4,6,4,6,4,6,0,0,0,0,0,6,0,0,0,0,0,4,6,4,6,1,3,4,6,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,3,7,1,8,4,6,1,8,4,6,8,7,0,3,7,20,4,4,6,6,8,7,11,0,1,3,1,3,20,4,4,6,6,1,3,8,7,15,15,11,11,4,6,1,3,8,7,15,11,4,6,4,6,8,7,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,1,3,20,0,0,0,4,6,0,1,3,1,3,1,3,3,7,4,4,6,6,8,7,0,0,0,0,1,3,8,7,6,4,0,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,4,6,1,3,8,7,15,11,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[3,2],3],[4,5],[6,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,1],[7,8],[[],3],[[],7],[4,4],[6,6],[1,1],[8,8],[[4,4],9],[[6,6],9],[[8,8],9],[[7,7],9],0,[[],3],[[],7],[8,10],[[4,6],10],[[4,4],10],[[6,6],10],[[6,4],10],[[8,8],10],[[7,7],10],[[11,11],10],0,[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[]],[[4,13],14],[[4,13],14],[[6,13],14],[[6,13],14],[[1,13],14],[[3,13],14],[[8,13],14],[[7,13],14],[[15,13],14],[[15,13],14],[[11,13],14],[[11,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,[[16,[4]]]],[5,[[16,[6]]]],[[4,17]],[[6,17]],[[8,17]],[[7,17]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[1,4],[[3,4],3],[8,4],[[7,4],7],[1,[[12,[19]]]],[[3,[12,[19]]],3],[1],0,0,[[],20],[[],4],[[],6],[[],6],[1,8],[[3,8],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[1,[[12,[5]]]],[[3,[12,[5]]],3],[[],3],[[],7],[[4,6],[[12,[9]]]],[[4,4],[[12,[9]]]],[[6,6],[[12,[9]]]],[[6,4],[[12,[9]]]],[[8,8],[[12,[9]]]],[[7,7],[[12,[9]]]],[20,[[16,[15]]]],[20,[[16,[15]]]],[6],[6],[1,5],[[3,5],3],[8,5],[[7,5],7],[6,[[12,[4]]]],[4,6],0,[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0],"c":[],"p":[[3,"Record"],[3,"Arguments"],[3,"RecordBuilder"],[4,"Level"],[15,"str"],[4,"LevelFilter"],[3,"MetadataBuilder"],[3,"Metadata"],[4,"Ordering"],[15,"bool"],[3,"ParseLevelError"],[4,"Option"],[3,"Formatter"],[6,"Result"],[3,"SetLoggerError"],[4,"Result"],[8,"Hasher"],[8,"Iterator"],[15,"u32"],[8,"Log"],[3,"TypeId"]]},\
"memchr":{"doc":"This library provides heavily optimized routines for …","t":"DDDALLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFAFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLAAFFFFAAAAADDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDIDLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLAAAADDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLAADDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLNDDDDDNELLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLL","n":["Memchr","Memchr2","Memchr3","arch","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","count","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","into_iter","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memmem","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","new","new","next","next","next","next_back","next_back","next_back","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","all","x86_64","is_equal","is_equal_raw","is_prefix","is_suffix","memchr","packedpair","rabinkarp","shiftor","twoway","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","iter","iter","iter","new","new","new","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","HeuristicFrequencyRank","Pair","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find_prefilter","fmt","fmt","from","from","index1","index2","into","into","new","new","pair","rank","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","with_indices","with_pair","with_ranker","Finder","FinderRev","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find","find_raw","fmt","fmt","from","from","into","into","new","new","rfind","rfind_raw","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Finder","borrow","borrow_mut","find","fmt","from","into","new","try_from","try_into","type_id","Finder","FinderRev","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","find","fmt","fmt","from","from","into","into","new","new","rfind","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","avx2","sse2","memchr","packedpair","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_available","is_available","is_available","iter","iter","iter","new","new","new","new_unchecked","new_unchecked","new_unchecked","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","borrow","borrow_mut","clone","clone_into","find","find_prefilter","fmt","from","into","is_available","min_haystack_len","new","pair","to_owned","try_from","try_into","type_id","with_pair","memchr","packedpair","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","count","count_raw","find","find","find","find_raw","find_raw","find_raw","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_available","is_available","is_available","iter","iter","iter","new","new","new","new_unchecked","new_unchecked","new_unchecked","next","next","next","next_back","next_back","next_back","rfind","rfind","rfind","rfind_raw","rfind_raw","rfind_raw","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Finder","borrow","borrow_mut","clone","clone_into","find","find_prefilter","fmt","from","into","is_available","min_haystack_len","new","pair","to_owned","try_from","try_into","type_id","with_pair","Auto","FindIter","FindRevIter","Finder","FinderBuilder","FinderRev","None","Prefilter","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_forward","build_forward_with_ranker","build_reverse","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","find","find","find_iter","find_iter","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_owned","into_owned","into_owned","into_owned","needle","needle","new","new","new","next","next","prefilter","rfind","rfind","rfind_iter","rfind_iter","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"memchr"],[66,"memchr::arch"],[68,"memchr::arch::all"],[77,"memchr::arch::all::memchr"],[182,"memchr::arch::all::packedpair"],[217,"memchr::arch::all::rabinkarp"],[247,"memchr::arch::all::shiftor"],[258,"memchr::arch::all::twoway"],[286,"memchr::arch::x86_64"],[288,"memchr::arch::x86_64::avx2"],[290,"memchr::arch::x86_64::avx2::memchr"],[401,"memchr::arch::x86_64::avx2::packedpair"],[420,"memchr::arch::x86_64::sse2"],[422,"memchr::arch::x86_64::sse2::memchr"],[533,"memchr::arch::x86_64::sse2::packedpair"],[552,"memchr::memmem"]],"d":["An iterator over all occurrences of a single byte in a …","An iterator over all occurrences of two possible bytes in …","An iterator over all occurrences of three possible bytes …","A module with low-level architecture dependent routines.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Search for the first occurrence of a byte in a slice.","Search for the first occurrence of two possible bytes in a …","Returns an iterator over all occurrences of the needles in …","Search for the first occurrence of three possible bytes in …","Returns an iterator over all occurrences of the needles in …","Returns an iterator over all occurrences of the needle in …","This module provides forward and reverse substring search …","Search for the last occurrence of a byte in a slice.","Search for the last occurrence of two possible bytes in a …","Returns an iterator over all occurrences of the needles in …","Search for the last occurrence of three possible bytes in …","Returns an iterator over all occurrences of the needles in …","Returns an iterator over all occurrences of the needle in …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","","","","","","","","","","","","","","","","","","","","","","Contains architecture independent routines.","Vector algorithms for the <code>x86_64</code> target.","Compare corresponding bytes in <code>x</code> and <code>y</code> for equality.","Compare <code>n</code> bytes at the given pointers for equality.","Returns true if and only if <code>needle</code> is a prefix of <code>haystack</code>.","Returns true if and only if <code>needle</code> is a suffix of <code>haystack</code>.","Provides architecture independent implementations of <code>memchr</code>…","Provides an architecture independent implementation of the …","An implementation of the Rabin-Karp substring search …","An implementation of the Shift-Or substring search …","An implementation of the Two-Way substring search algorithm…","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Counts all occurrences of this byte in the given haystack …","Return the first occurrence of the needle in the given …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of one of the …","Returns an iterator over all occurrences of one of the …","Create a new searcher that finds occurrences of the byte …","Create a new searcher that finds occurrences of the two …","Create a new searcher that finds occurrences of the three …","","","","","","","Return the last occurrence of the needle in the given …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","An architecture independent “packed pair” finder.","This trait allows the user to customize the heuristic used …","A pair of byte offsets into a needle to use as a predicate.","","","","","","","","","Run this finder on the given haystack as a prefilter.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the first offset of the pair.","Returns the second offset of the pair.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new prefilter that reports possible locations …","Create a new pair of offsets from the given needle.","Returns the pair of offsets (into the needle) used to …","Return the heuristic frequency rank of the given byte. A …","","","","","","","","","Create a new pair using the offsets given for the needle …","Create a new prefilter using the pair given.","Create a new pair of offsets from the given needle and …","A forward substring searcher using the Rabin-Karp …","A reverse substring searcher using the Rabin-Karp …","","","","","","","","","Return the first occurrence of the <code>needle</code> in the <code>haystack</code> …","Like <code>find</code>, but accepts and returns raw pointers.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new Rabin-Karp forward searcher for the given …","Create a new Rabin-Karp reverse searcher for the given …","Return the last occurrence of the <code>needle</code> in the <code>haystack</code> …","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","A forward substring searcher using the Shift-Or algorithm.","","","Return the first occurrence of the needle given to …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new Shift-Or forward searcher for the given <code>needle</code>…","","","","A forward substring searcher that uses the Two-Way …","A reverse substring searcher that uses the Two-Way …","","","","","","","","","Returns the first occurrence of <code>needle</code> in the given …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a searcher that finds occurrences of the given …","Create a searcher that finds occurrences of the given …","Returns the last occurrence of <code>needle</code> in the given <code>haystack</code>…","","","","","","","","","Algorithms for the <code>x86_64</code> target using 256-bit vectors via …","Algorithms for the <code>x86_64</code> target using 128-bit vectors via …","This module defines 256-bit vector implementations of …","A 256-bit vector implementation of the “packed pair” …","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Counts all occurrences of this byte in the given haystack …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new finder specific to AVX2 vectors and routines …","Create a new finder specific to AVX2 vectors and routines …","Create a new finder specific to AVX2 vectors and routines …","","","","","","","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A “packed pair” finder that uses 256-bit vector …","","","","","Execute a search using AVX2 vectors and routines.","Run this finder on the given haystack as a prefilter.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true when this implementation is available in the …","Returns the minimum haystack length that this <code>Finder</code> can …","Create a new pair searcher. The searcher returned can …","Returns the pair of offsets (into the needle) used to …","","","","","Create a new “packed pair” finder using the pair of …","This module defines 128-bit vector implementations of …","A 128-bit vector implementation of the “packed pair” …","Finds all occurrences of a single byte in a haystack.","An iterator over all occurrences of a single byte in a …","Finds all occurrences of three bytes in a haystack.","An iterator over all occurrences of three possible bytes …","Finds all occurrences of two bytes in a haystack.","An iterator over all occurrences of two possible bytes in …","","","","","","","","","","","","","","","","","","","","","","","","","Counts all occurrences of this byte in the given haystack.","","Counts all occurrences of this byte in the given haystack …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Return the first occurrence of one of the needle bytes in …","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","Like <code>find</code>, but accepts and returns raw pointers.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns true when this implementation is available in the …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Returns an iterator over all occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new searcher that finds occurrences of the needle …","Create a new finder specific to SSE2 vectors and routines …","Create a new finder specific to SSE2 vectors and routines …","Create a new finder specific to SSE2 vectors and routines …","","","","","","","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Return the last occurrence of one of the needle bytes in …","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","Like <code>rfind</code>, but accepts and returns raw pointers.","","","","","","","","","","","","","","","","","","","","","","","","","","","","A “packed pair” finder that uses 128-bit vector …","","","","","Execute a search using SSE2 vectors and routines.","Run this finder on the given haystack as a prefilter.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns true when this implementation is available in the …","Returns the minimum haystack length that this <code>Finder</code> can …","Create a new pair searcher. The searcher returned can …","Returns the pair of offsets (into the needle) used to …","","","","","Create a new “packed pair” finder using the pair of …","Automatically detect whether a heuristic prefilter should …","An iterator over non-overlapping substring matches.","An iterator over non-overlapping substring matches in …","A single substring searcher fixed to a particular needle.","A builder for constructing non-default forward or reverse …","A single substring reverse searcher fixed to a particular …","Never used a prefilter in substring search.","Prefilter controls whether heuristics are used to …","Convert this finder into its borrowed variant.","Convert this finder into its borrowed variant.","","","","","","","","","","","","","Build a forward finder using the given needle from the …","Build a forward finder using the given needle and a custom …","Build a reverse finder using the given needle from the …","","","","","","","","","","","Returns the index of the first occurrence of the given …","Returns the index of the first occurrence of this needle …","Returns an iterator over all non-overlapping occurrences …","Returns an iterator over all occurrences of a substring in …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Convert this iterator into its owned variant, such that it …","Convert this iterator into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Convert this finder into its owned variant, such that it …","Returns the needle that this finder searches for.","Returns the needle that this finder searches for.","Create a new finder for the given needle.","Create a new reverse finder for the given needle.","Create a new finder builder with default settings.","","","Configure the prefilter setting for the finder.","Returns the index of the last occurrence of the given …","Returns the index of the last occurrence of this needle in …","Returns a reverse iterator over all non-overlapping …","Returns a reverse iterator over all occurrences of a …","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,15,16,17,18,19,14,15,16,17,18,19,14,15,16,17,18,19,14,15,16,17,18,19,14,15,14,14,16,18,14,16,18,14,15,16,17,18,19,14,15,16,17,18,19,14,15,16,17,18,19,15,17,19,14,16,18,14,16,18,15,17,19,15,17,19,14,16,18,14,16,18,15,17,19,14,15,16,17,18,19,14,15,16,17,18,19,14,15,16,17,18,19,14,15,16,17,18,19,0,0,0,20,21,20,21,20,21,20,21,20,20,21,20,21,21,21,20,21,20,21,20,22,20,21,20,21,20,21,20,21,21,20,21,0,0,23,24,23,24,23,24,23,24,23,23,23,24,23,24,23,24,23,24,24,24,23,24,23,24,23,24,23,24,0,25,25,25,25,25,25,25,25,25,25,0,0,26,27,26,27,26,27,26,27,26,26,27,26,27,26,27,26,27,27,26,27,26,27,26,27,26,27,0,0,0,0,0,0,0,0,0,0,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,28,28,30,32,28,30,32,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,29,31,33,28,30,32,28,30,32,28,30,32,28,30,32,29,31,33,29,31,33,28,30,32,28,30,32,29,31,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,28,29,30,31,32,33,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,0,0,0,0,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,35,35,37,39,35,37,39,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,36,38,40,35,37,39,35,37,39,35,37,39,35,37,39,36,38,40,36,38,40,35,37,39,35,37,39,36,38,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,47,0,0,0,0,0,47,0,42,43,47,48,49,42,43,44,47,48,49,42,43,44,44,44,44,47,42,43,44,47,42,43,44,47,44,0,42,0,42,47,48,49,42,43,44,47,48,49,42,43,44,47,48,49,42,43,44,48,49,48,49,42,43,42,43,42,43,44,48,49,44,0,43,0,43,48,47,42,43,44,47,48,49,42,43,44,47,48,49,42,43,44,47,48,49,42,43,44],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[1,4],[[1,5],6],[[2,5],6],[[3,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],2],[[7,7,7,[8,[7]]],[[9,[4]]]],[[7,7,7,[8,[7]]],3],[[7,[8,[7]]],1],0,[[7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],[[9,[4]]]],[[7,7,[8,[7]]],[[10,[2]]]],[[7,7,7,[8,[7]]],[[9,[4]]]],[[7,7,7,[8,[7]]],[[10,[3]]]],[[7,[8,[7]]],[[10,[1]]]],[[7,[8,[7]]],1],[[7,7,[8,[7]]],2],[[7,7,7,[8,[7]]],3],[1,[[9,[4]]]],[2,[[9,[4]]]],[3,[[9,[4]]]],[1,[[9,[4]]]],[2,[[9,[4]]]],[3,[[9,[4]]]],[1],[2],[3],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,[[[8,[7]],[8,[7]]],13],[[7,7,4],13],[[[8,[7]],[8,[7]]],13],[[[8,[7]],[8,[7]]],13],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[[]],[[]],[[]],[[]],[[]],[[]],[[14,[8,[7]]],4],[15,4],[[14,7,7],4],[[14,[8,[7]]],[[9,[4]]]],[[16,[8,[7]]],[[9,[4]]]],[[18,[8,[7]]],[[9,[4]]]],[[14,7,7],[[9,[7]]]],[[16,7,7],[[9,[7]]]],[[18,7,7],[[9,[7]]]],[[14,5],6],[[15,5],6],[[16,5],6],[[17,5],6],[[18,5],6],[[19,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[14,[8,[7]]],15],[[16,[8,[7]]],17],[[18,[8,[7]]],19],[7,14],[[7,7],16],[[7,7,7],18],[15,[[9,[4]]]],[17,[[9,[4]]]],[19,[[9,[4]]]],[15,[[9,[4]]]],[17,[[9,[4]]]],[19,[[9,[4]]]],[[14,[8,[7]]],[[9,[4]]]],[[16,[8,[7]]],[[9,[4]]]],[[18,[8,[7]]],[[9,[4]]]],[[14,7,7],[[9,[7]]]],[[16,7,7],[[9,[7]]]],[[18,7,7],[[9,[7]]]],[15],[17],[19],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,[[]],[[]],[[]],[[]],[20,20],[21,21],[[]],[[]],[[20,[8,[7]]],[[9,[4]]]],[[20,5],6],[[21,5],6],[[]],[[]],[21,7],[21,7],[[]],[[]],[[[8,[7]]],[[9,[20]]]],[[[8,[7]]],[[9,[21]]]],[20,21],[7,7],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[[8,[7]],7,7],[[9,[21]]]],[[[8,[7]],21],[[9,[20]]]],[[[8,[7]],22],[[9,[21]]]],0,0,[[]],[[]],[[]],[[]],[23,23],[24,24],[[]],[[]],[[23,[8,[7]],[8,[7]]],[[9,[4]]]],[[23,7,7,7,7],[[9,[7]]]],[[23,5],6],[[24,5],6],[[]],[[]],[[]],[[]],[[[8,[7]]],23],[[[8,[7]]],24],[[24,[8,[7]],[8,[7]]],[[9,[4]]]],[[24,7,7,7,7],[[9,[7]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,[[]],[[]],[[25,[8,[7]]],[[9,[4]]]],[[25,5],6],[[]],[[]],[[[8,[7]]],[[9,[25]]]],[[],11],[[],11],[[],12],0,0,[[]],[[]],[[]],[[]],[26,26],[27,27],[[]],[[]],[[26,[8,[7]],[8,[7]]],[[9,[4]]]],[[26,5],6],[[27,5],6],[[]],[[]],[[]],[[]],[[[8,[7]]],26],[[[8,[7]]],27],[[27,[8,[7]],[8,[7]]],[[9,[4]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[29,29],[30,30],[31,31],[32,32],[33,33],[[]],[[]],[[]],[[]],[[]],[[]],[[28,[8,[7]]],4],[29,4],[[28,7,7],4],[[28,[8,[7]]],[[9,[4]]]],[[30,[8,[7]]],[[9,[4]]]],[[32,[8,[7]]],[[9,[4]]]],[[28,7,7],[[9,[7]]]],[[30,7,7],[[9,[7]]]],[[32,7,7],[[9,[7]]]],[[28,5],6],[[29,5],6],[[30,5],6],[[31,5],6],[[32,5],6],[[33,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[28,[8,[7]]],29],[[30,[8,[7]]],31],[[32,[8,[7]]],33],[7,[[9,[28]]]],[[7,7],[[9,[30]]]],[[7,7,7],[[9,[32]]]],[7,28],[[7,7],30],[[7,7,7],32],[29,[[9,[4]]]],[31,[[9,[4]]]],[33,[[9,[4]]]],[29,[[9,[4]]]],[31,[[9,[4]]]],[33,[[9,[4]]]],[[28,[8,[7]]],[[9,[4]]]],[[30,[8,[7]]],[[9,[4]]]],[[32,[8,[7]]],[[9,[4]]]],[[28,7,7],[[9,[7]]]],[[30,7,7],[[9,[7]]]],[[32,7,7],[[9,[7]]]],[29],[31],[33],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[34,34],[[]],[[34,[8,[7]],[8,[7]]],[[9,[4]]]],[[34,[8,[7]]],[[9,[4]]]],[[34,5],6],[[]],[[]],[[],13],[34,4],[[[8,[7]]],[[9,[34]]]],[34,21],[[]],[[],11],[[],11],[[],12],[[[8,[7]],21],[[9,[34]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[[]],[[]],[[]],[[]],[[]],[[]],[[35,[8,[7]]],4],[36,4],[[35,7,7],4],[[35,[8,[7]]],[[9,[4]]]],[[37,[8,[7]]],[[9,[4]]]],[[39,[8,[7]]],[[9,[4]]]],[[35,7,7],[[9,[7]]]],[[37,7,7],[[9,[7]]]],[[39,7,7],[[9,[7]]]],[[35,5],6],[[36,5],6],[[37,5],6],[[38,5],6],[[39,5],6],[[40,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[35,[8,[7]]],36],[[37,[8,[7]]],38],[[39,[8,[7]]],40],[7,[[9,[35]]]],[[7,7],[[9,[37]]]],[[7,7,7],[[9,[39]]]],[7,35],[[7,7],37],[[7,7,7],39],[36,[[9,[4]]]],[38,[[9,[4]]]],[40,[[9,[4]]]],[36,[[9,[4]]]],[38,[[9,[4]]]],[40,[[9,[4]]]],[[35,[8,[7]]],[[9,[4]]]],[[37,[8,[7]]],[[9,[4]]]],[[39,[8,[7]]],[[9,[4]]]],[[35,7,7],[[9,[7]]]],[[37,7,7],[[9,[7]]]],[[39,7,7],[[9,[7]]]],[36],[38],[40],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[]],[[]],[41,41],[[]],[[41,[8,[7]],[8,[7]]],[[9,[4]]]],[[41,[8,[7]]],[[9,[4]]]],[[41,5],6],[[]],[[]],[[],13],[41,4],[[[8,[7]]],[[9,[41]]]],[41,21],[[]],[[],11],[[],11],[[],12],[[[8,[7]],21],[[9,[41]]]],0,0,0,0,0,0,0,0,[42,42],[43,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[44,[0,[45,[46,[[8,[7]]]]]]],42],[[44,22,[0,[45,[46,[[8,[7]]]]]]],42],[[44,[0,[45,[46,[[8,[7]]]]]]],43],[47,47],[42,42],[43,43],[44,44],[[]],[[]],[[]],[[]],[[],47],[[],44],[[[8,[7]],[8,[7]]],[[9,[4]]]],[[42,[8,[7]]],[[9,[4]]]],[[[8,[7]],[0,[45,[46,[[8,[7]]]]]]],48],[[42,[8,[7]]],48],[[47,5],6],[[48,5],6],[[49,5],6],[[42,5],6],[[43,5],6],[[44,5],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[48,48],[49,49],[42,42],[43,43],[42,[[8,[7]]]],[43,[[8,[7]]]],[[[0,[45,[46,[[8,[7]]]]]]],42],[[[0,[45,[46,[[8,[7]]]]]]],43],[[],44],[48,[[9,[4]]]],[49,[[9,[4]]]],[[44,47],44],[[[8,[7]],[8,[7]]],[[9,[4]]]],[[43,[46,[[8,[7]]]]],[[9,[4]]]],[[[8,[7]],[0,[45,[46,[[8,[7]]]]]]],49],[[43,[8,[7]]],49],[48],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12]],"c":[],"p":[[3,"Memchr"],[3,"Memchr2"],[3,"Memchr3"],[15,"usize"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[4,"Option"],[3,"Rev"],[4,"Result"],[3,"TypeId"],[15,"bool"],[3,"One"],[3,"OneIter"],[3,"Two"],[3,"TwoIter"],[3,"Three"],[3,"ThreeIter"],[3,"Finder"],[3,"Pair"],[8,"HeuristicFrequencyRank"],[3,"Finder"],[3,"FinderRev"],[3,"Finder"],[3,"Finder"],[3,"FinderRev"],[3,"One"],[3,"OneIter"],[3,"Two"],[3,"TwoIter"],[3,"Three"],[3,"ThreeIter"],[3,"Finder"],[3,"One"],[3,"OneIter"],[3,"Two"],[3,"TwoIter"],[3,"Three"],[3,"ThreeIter"],[3,"Finder"],[3,"Finder"],[3,"FinderRev"],[3,"FinderBuilder"],[8,"Sized"],[8,"AsRef"],[4,"Prefilter"],[3,"FindIter"],[3,"FindRevIter"]]},\
"memoffset":{"doc":"A crate used for calculating offsets of struct members and …","t":"OOOOO","n":["offset_of","offset_of_tuple","raw_field","raw_field_tuple","span_of"],"q":[[0,"memoffset"]],"d":["Calculates the offset of the specified field from the …","Calculates the offset of the specified field from the …","Computes a const raw pointer to the given field of the …","Computes a const raw pointer to the given field of the …","Produces a range instance representing the sub-slice …"],"i":[0,0,0,0,0],"f":[0,0,0,0,0],"c":[],"p":[]},\
"minimal_lexical":{"doc":"Fast, minimal float-parsing algorithm.","t":"SSSSISSSSSSSSSSSSSSSSSLKKLLLFKK","n":["CARRY_MASK","DENORMAL_EXPONENT","EXPONENT_BIAS","EXPONENT_MASK","Float","HIDDEN_BIT_MASK","INFINITE_POWER","INVALID_FP","LARGEST_POWER_OF_TEN","MANTISSA_MASK","MANTISSA_SIZE","MAX_DIGITS","MAX_EXPONENT","MAX_EXPONENT_DISGUISED_FAST_PATH","MAX_EXPONENT_FAST_PATH","MAX_EXPONENT_ROUND_TO_EVEN","MAX_MANTISSA_FAST_PATH","MINIMUM_EXPONENT","MIN_EXPONENT_FAST_PATH","MIN_EXPONENT_ROUND_TO_EVEN","SIGN_MASK","SMALLEST_POWER_OF_TEN","exponent","from_bits","from_u64","int_pow_fast_path","is_denormal","mantissa","parse_float","pow_fast_path","to_bits"],"q":[[0,"minimal_lexical"]],"d":["Mask to determine if a full-carry occurred (1 in bit above …","Exponent portion of a denormal float.","Bias of the exponet","Bitmask for the exponent, including the hidden bit.","Generic floating-point type, to be used in generic code …","Bitmask for the hidden bit in exponent, which is an …","","Bias for marking an invalid extended float.","Largest decimal exponent for a non-infinite value.","Bitmask for the mantissa (fraction), excluding the hidden …","Size of the significand (mantissa) without hidden bit.","Maximum number of digits that can contribute in the …","Maximum exponent value in float.","Maximum exponent that can be represented for a …","Maximum exponent that for a fast path case, or …","","","Minimum normal exponent value …","Minimum exponent that for a fast path case, or …","","Bitmask for the sign bit.","Smallest decimal exponent for a non-zero value.","Get exponent component from the float.","","Convert 64-bit integer to float.","Get a small, integral power-of-radix for fast-path …","Returns true if the float is a denormal.","Get mantissa (significand) component from float.","Parse float from extracted float components.","Get a small power-of-radix for fast-path multiplication.",""],"i":[8,8,8,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,0,8,8],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2],[2],[[3,4],2],[[],5],[[],2],[[[0,[6,7]],[0,[6,7]],1],8],[3],[[],2]],"c":[],"p":[[15,"i32"],[15,"u64"],[15,"usize"],[15,"u32"],[15,"bool"],[8,"Iterator"],[8,"Clone"],[8,"Float"]]},\
"mio":{"doc":"Mio is a fast, low-level I/O library for Rust focusing on …","t":"CDSDSDDSDLLLLLLLLLLLLLLLLLLLLLLLLLLAALLLLLLLLLLALLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLALDDDILLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLALLLLLDDLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLL","n":["Events","Interest","PRIORITY","Poll","READABLE","Registry","Token","WRITABLE","Waker","add","as_raw_fd","as_raw_fd","bitor","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deregister","eq","eq","equivalent","equivalent","event","features","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","guide","hash","into","into","into","into","into","is_aio","is_lio","is_priority","is_readable","is_writable","net","new","new","partial_cmp","partial_cmp","poll","register","registry","remove","reregister","to_owned","to_owned","try_clone","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unix","wake","Event","Events","Iter","Source","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_into","clone_into","count","deregister","fmt","fmt","fmt","from","from","from","into","into","into","into_iter","into_iter","is_aio","is_empty","is_error","is_lio","is_priority","is_read_closed","is_readable","is_writable","is_write_closed","iter","next","register","reregister","size_hint","to_owned","to_owned","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_capacity","SocketAddr","TcpListener","TcpStream","UdpSocket","UnixDatagram","UnixListener","UnixStream","accept","accept","as_abstract_namespace","as_pathname","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","as_raw_fd","bind","bind","bind","bind","bind_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","connect","connect","connect","connect","connect_addr","deregister","deregister","deregister","deregister","deregister","deregister","flush","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw_fd","from_raw_fd","from_raw_fd","from_raw_fd","from_raw_fd","from_raw_fd","from_std","from_std","from_std","from_std","from_std","from_std","into","into","into","into","into","into","into","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","into_raw_fd","is_unnamed","join_multicast_v4","join_multicast_v6","leave_multicast_v4","leave_multicast_v6","local_addr","local_addr","local_addr","local_addr","local_addr","local_addr","multicast_loop_v4","multicast_loop_v6","multicast_ttl_v4","nodelay","only_v6","pair","pair","peek","peek","peek_from","peer_addr","peer_addr","peer_addr","peer_addr","read","read","read","read","read_vectored","read_vectored","read_vectored","read_vectored","recv","recv","recv_from","recv_from","register","register","register","register","register","register","reregister","reregister","reregister","reregister","reregister","reregister","send","send","send_to","send_to","set_broadcast","set_multicast_loop_v4","set_multicast_loop_v6","set_multicast_ttl_v4","set_nodelay","set_ttl","set_ttl","set_ttl","shutdown","shutdown","shutdown","take_error","take_error","take_error","take_error","take_error","take_error","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_io","try_io","try_io","try_io","ttl","ttl","ttl","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbound","write","write","write","write","write_vectored","write_vectored","write_vectored","write_vectored","SourceFd","borrow","borrow_mut","deregister","fmt","from","into","pipe","register","reregister","try_from","try_into","type_id","Receiver","Sender","as_raw_fd","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","deregister","deregister","flush","flush","fmt","fmt","from","from","from","from","from","from_raw_fd","from_raw_fd","into","into","into_raw_fd","into_raw_fd","new","read","read","read_vectored","read_vectored","register","register","reregister","reregister","set_nonblocking","set_nonblocking","try_from","try_from","try_into","try_into","try_io","try_io","type_id","type_id","write","write","write_vectored","write_vectored"],"q":[[0,"mio"],[89,"mio::event"],[145,"mio::net"],[343,"mio::unix"],[356,"mio::unix::pipe"]],"d":["","Interest used in registering.","Returns a <code>Interest</code> set representing priority completion …","Polls for readiness events on all registered values.","Returns a <code>Interest</code> set representing readable interests.","Registers I/O resources.","Associates readiness events with <code>event::Source</code>s.","Returns a <code>Interest</code> set representing writable interests.","Waker allows cross-thread waking of <code>Poll</code>.","Add together two <code>Interest</code>.","","","","","","","","","","","","","","","","","","","","","Deregister an <code>event::Source</code> with the <code>Poll</code> instance.","","","","","Readiness event types and utilities.","Mio’s optional features.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Getting started guide.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if <code>Interest</code> contains AIO readiness.","Returns true if <code>Interest</code> contains LIO readiness.","Returns true if <code>Interest</code> contains priority readiness.","Returns true if the value includes readable readiness.","Returns true if the value includes writable readiness.","Networking primitives.","Return a new <code>Poll</code> handle.","Create a new <code>Waker</code>.","","","Wait for readiness events","Register an <code>event::Source</code> with the <code>Poll</code> instance.","Create a separate <code>Registry</code> which can be used to register …","Removes <code>other</code> <code>Interest</code> from <code>self</code>.","Re-register an <code>event::Source</code> with the <code>Poll</code> instance.","","","Creates a new independently owned <code>Registry</code>.","","","","","","","","","","","","","","","","Unix only extensions.","Wake up the <code>Poll</code> associated with this <code>Waker</code>.","A readiness event.","A collection of readiness events.","<code>Events</code> iterator.","An event source that may be registered with <code>Registry</code>.","","","","","","","Returns the number of <code>Event</code> values that <code>self</code> can hold.","Clearing all <code>Event</code> values from container explicitly.","","","","","","Deregister <code>self</code> from the given <code>Registry</code> instance.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the event contains AIO readiness.","Returns <code>true</code> if <code>self</code> contains no <code>Event</code> values.","Returns true if the event contains error readiness.","Returns true if the event contains LIO readiness.","Returns true if the event contains priority readiness.","Returns true if the event contains read closed readiness.","Returns true if the event contains readable readiness.","Returns true if the event contains writable readiness.","Returns true if the event contains write closed readiness.","Returns an iterator over the <code>Event</code> values.","","Register <code>self</code> with the given <code>Registry</code> instance.","Re-register <code>self</code> with the given <code>Registry</code> instance.","","","","Returns the event’s token.","","","","","","","","","","Return a new <code>Events</code> capable of holding up to <code>capacity</code> …","An address associated with a <code>mio</code> specific Unix socket.","A structure representing a socket server","A non-blocking TCP stream between a local socket and a …","A User Datagram Protocol socket.","A Unix datagram socket.","A non-blocking Unix domain socket server.","A non-blocking Unix stream socket.","Accepts a new <code>TcpStream</code>.","Accepts a new incoming connection to this listener.","Returns the contents of this address if it is an abstract …","Returns the contents of this address if it is a <code>pathname</code> …","","","","","","","Convenience method to bind a new TCP listener to the …","Creates a UDP socket from the given address.","Creates a Unix datagram socket bound to the given path.","Creates a new <code>UnixListener</code> bound to the specified socket …","Creates a new <code>UnixListener</code> bound to the specified socket …","","","","","","","","","","","","","","","Gets the value of the <code>SO_BROADCAST</code> option for this socket.","Create a new TCP stream and issue a non-blocking connect …","Connects the UDP socket setting the default destination …","Connects the socket to the specified address.","Connects to the socket named by <code>path</code>.","Connects to the socket named by <code>address</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a <code>RawFd</code> to a <code>TcpListener</code>.","Converts a <code>RawFd</code> to a <code>TcpStream</code>.","Converts a <code>RawFd</code> to a <code>UdpSocket</code>.","Converts a <code>RawFd</code> to a <code>UnixDatagram</code>.","Converts a <code>RawFd</code> to a <code>UnixListener</code>.","Converts a <code>RawFd</code> to a <code>UnixStream</code>.","Creates a new <code>TcpListener</code> from a standard <code>net::TcpListener</code>.","Creates a new <code>TcpStream</code> from a standard <code>net::TcpStream</code>.","Creates a new <code>UdpSocket</code> from a standard <code>net::UdpSocket</code>.","Creates a new <code>UnixDatagram</code> from a standard …","Creates a new <code>UnixListener</code> from a standard …","Creates a new <code>UnixStream</code> from a standard <code>net::UnixStream</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Returns <code>true</code> if the address is unnamed.","Executes an operation of the <code>IP_ADD_MEMBERSHIP</code> type.","Executes an operation of the <code>IPV6_ADD_MEMBERSHIP</code> type.","Executes an operation of the <code>IP_DROP_MEMBERSHIP</code> type.","Executes an operation of the <code>IPV6_DROP_MEMBERSHIP</code> type.","Returns the local socket address of this listener.","Returns the socket address of the local half of this TCP …","Returns the socket address that this socket was created …","Returns the address of this socket.","Returns the local socket address of this listener.","Returns the socket address of the local half of this …","Gets the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Gets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Gets the value of the <code>IP_MULTICAST_TTL</code> option for this …","Gets the value of the <code>TCP_NODELAY</code> option on this socket.","Get the value of the <code>IPV6_V6ONLY</code> option on this socket.","Create an unnamed pair of connected sockets.","Creates an unnamed pair of connected sockets.","Receives data on the socket from the remote address to …","Receives data from the socket, without removing it from …","Receives data from the socket, without removing it from …","Returns the socket address of the remote peer of this TCP …","Returns the socket address of the remote peer this socket …","Returns the address of this socket’s peer.","Returns the socket address of the remote half of this …","","","","","","","","","Receives data from the socket previously bound with …","Receives data from the socket.","Receives data from the socket. On success, returns the …","Receives data from the socket.","","","","","","","","","","","","","Sends data on the socket to the address previously bound …","Sends data on the socket to the socket’s peer.","Sends data on the socket to the given address. On success, …","Sends data on the socket to the specified address.","Sets the value of the <code>SO_BROADCAST</code> option for this socket.","Sets the value of the <code>IP_MULTICAST_LOOP</code> option for this …","Sets the value of the <code>IPV6_MULTICAST_LOOP</code> option for this …","Sets the value of the <code>IP_MULTICAST_TTL</code> option for this …","Sets the value of the <code>TCP_NODELAY</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Sets the value for the <code>IP_TTL</code> option on this socket.","Shuts down the read, write, or both halves of this …","Shut down the read, write, or both halves of this …","Shuts down the read, write, or both halves of this …","Get the value of the <code>SO_ERROR</code> option on this socket.","Get the value of the <code>SO_ERROR</code> option on this socket.","Get the value of the <code>SO_ERROR</code> option on this socket.","Returns the value of the <code>SO_ERROR</code> option.","Returns the value of the <code>SO_ERROR</code> option.","Returns the value of the <code>SO_ERROR</code> option.","","","","","","","","","","","","","","","Execute an I/O operation ensuring that the socket receives …","Execute an I/O operation ensuring that the socket receives …","Execute an I/O operation ensuring that the socket receives …","Execute an I/O operation ensuring that the socket receives …","Gets the value of the <code>IP_TTL</code> option for this socket.","Gets the value of the <code>IP_TTL</code> option for this socket.","Gets the value of the <code>IP_TTL</code> option for this socket.","","","","","","","","Creates a Unix Datagram socket which is not bound to any …","","","","","","","","","Adapter for <code>RawFd</code> providing an <code>event::Source</code> …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Unix pipe.","","","","","","Receiving end of an Unix pipe.","Sending end of an Unix pipe.","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create a new non-blocking Unix pipe.","","","","","","","","","Set the <code>Sender</code> into or out of non-blocking mode.","Set the <code>Receiver</code> into or out of non-blocking mode.","","","","","Execute an I/O operation ensuring that the socket receives …","Execute an I/O operation ensuring that the socket receives …","","","","","",""],"i":[0,0,1,0,1,0,0,1,0,1,2,4,1,1,2,4,1,5,13,2,4,1,5,13,1,5,1,5,1,5,4,1,5,1,5,0,0,2,4,1,5,13,2,4,1,5,13,0,5,2,4,1,5,13,1,1,1,1,1,0,2,13,1,5,2,4,2,1,4,1,5,4,2,4,1,5,13,2,4,1,5,13,2,4,1,5,13,0,13,0,0,0,0,16,21,22,16,21,22,16,16,21,22,21,22,22,7,16,21,22,16,21,22,16,21,22,16,22,21,16,21,21,21,21,21,21,21,16,22,7,7,22,21,22,21,16,21,22,16,21,22,16,21,22,16,0,0,0,0,0,0,0,23,24,25,25,23,29,30,31,24,32,23,30,31,24,24,25,23,29,30,31,24,32,25,23,29,30,31,24,32,30,29,30,31,32,32,23,29,30,31,24,32,29,29,32,32,25,23,29,30,31,24,32,25,23,29,30,31,24,32,23,29,30,31,24,32,23,29,30,31,24,32,25,23,29,30,31,24,32,23,29,30,31,24,32,25,30,30,30,30,23,29,30,31,24,32,30,30,30,29,30,31,32,29,30,30,29,30,31,32,29,29,32,32,29,29,32,32,30,31,30,31,23,29,30,31,24,32,23,29,30,31,24,32,30,31,30,31,30,30,30,30,29,23,29,30,29,31,32,23,29,30,31,24,32,25,23,29,30,31,24,32,25,23,29,30,31,24,32,29,30,31,32,23,29,30,25,23,29,30,31,24,32,31,29,29,32,32,29,29,32,32,0,49,49,49,49,49,49,0,49,49,49,49,49,0,0,50,51,50,51,50,51,50,51,50,50,50,51,50,50,51,51,51,50,51,50,51,50,51,0,51,51,51,51,50,51,50,51,50,51,50,51,50,51,50,51,50,51,50,50,50,50],"f":[0,0,0,0,0,0,0,0,0,[[1,1],1],[2,3],[4,3],[[1,1],1],[[1,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[5,5],[[]],[[]],[[1,1],6],[[5,5],6],[[4,[0,[7,8]]],9],[[1,1],10],[[5,5],10],[[],10],[[],10],0,0,[[2,11],12],[[4,11],12],[[1,11],12],[[5,11],12],[[13,11],12],[[]],[[]],[[]],[[]],[[]],0,[[5,14]],[[]],[[]],[[]],[[]],[[]],[1,10],[1,10],[1,10],[1,10],[1,10],0,[[],[[9,[2]]]],[[4,5],[[9,[13]]]],[[1,1],[[15,[6]]]],[[5,5],[[15,[6]]]],[[2,16,[15,[17]]],9],[[4,[0,[7,8]],5,1],9],[2,4],[[1,1],[[15,[1]]]],[[4,[0,[7,8]],5,1],9],[[]],[[]],[4,[[9,[4]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],0,[13,9],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[16,20],[16],[21,21],[22,22],[[]],[[]],[22,20],[4,9],[[16,11],12],[[21,11],12],[[22,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[16],[[]],[21,10],[16,10],[21,10],[21,10],[21,10],[21,10],[21,10],[21,10],[21,10],[16,22],[22,15],[[4,5,1],9],[[4,5,1],9],[22],[[]],[[]],[21,5],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[20,16],0,0,0,0,0,0,0,[23,9],[24,9],[25,[[15,[[27,[26]]]]]],[25,[[15,[28]]]],[23,3],[29,3],[30,3],[31,3],[24,3],[32,3],[33,[[9,[23]]]],[33,[[9,[30]]]],[[[34,[28]]],[[9,[31]]]],[[[34,[28]]],[[9,[24]]]],[25,[[9,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,[[9,[10]]]],[33,[[9,[29]]]],[[30,33],9],[[31,[34,[28]]],9],[[[34,[28]]],[[9,[32]]]],[25,[[9,[32]]]],[[23,4],9],[[29,4],9],[[30,4],9],[[31,4],9],[[24,4],9],[[32,4],9],[29,9],[29,9],[32,9],[32,9],[[25,11],12],[[23,11],12],[[29,11],12],[[30,11],12],[[31,11],12],[[24,11],12],[[32,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,23],[3,29],[3,30],[3,31],[3,24],[3,32],[35,23],[36,29],[37,30],[38,31],[39,24],[40,32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,3],[29,3],[30,3],[31,3],[24,3],[32,3],[25,10],[[30,41,41],9],[[30,42,43],9],[[30,41,41],9],[[30,42,43],9],[23,[[9,[33]]]],[29,[[9,[33]]]],[30,[[9,[33]]]],[31,[[9,[25]]]],[24,[[9,[25]]]],[32,[[9,[25]]]],[30,[[9,[10]]]],[30,[[9,[10]]]],[30,[[9,[43]]]],[29,[[9,[10]]]],[30,[[9,[10]]]],[[],9],[[],9],[[29,[27,[26]]],[[9,[20]]]],[[30,[27,[26]]],[[9,[20]]]],[[30,[27,[26]]],9],[29,[[9,[33]]]],[30,[[9,[33]]]],[31,[[9,[25]]]],[32,[[9,[25]]]],[[29,[27,[26]]],[[9,[20]]]],[[29,[27,[26]]],[[9,[20]]]],[[32,[27,[26]]],[[9,[20]]]],[[32,[27,[26]]],[[9,[20]]]],[[29,[27,[44]]],[[9,[20]]]],[[29,[27,[44]]],[[9,[20]]]],[[32,[27,[44]]],[[9,[20]]]],[[32,[27,[44]]],[[9,[20]]]],[[30,[27,[26]]],[[9,[20]]]],[[31,[27,[26]]],[[9,[20]]]],[[30,[27,[26]]],9],[[31,[27,[26]]],9],[[23,4,5,1],9],[[29,4,5,1],9],[[30,4,5,1],9],[[31,4,5,1],9],[[24,4,5,1],9],[[32,4,5,1],9],[[23,4,5,1],9],[[29,4,5,1],9],[[30,4,5,1],9],[[31,4,5,1],9],[[24,4,5,1],9],[[32,4,5,1],9],[[30,[27,[26]]],[[9,[20]]]],[[31,[27,[26]]],[[9,[20]]]],[[30,[27,[26]],33],[[9,[20]]]],[[31,[27,[26]],[34,[28]]],[[9,[20]]]],[[30,10],9],[[30,10],9],[[30,10],9],[[30,43],9],[[29,10],9],[[23,43],9],[[29,43],9],[[30,43],9],[[29,45],9],[[31,45],9],[[32,45],9],[23,[[9,[[15,[46]]]]]],[29,[[9,[[15,[46]]]]]],[30,[[9,[[15,[46]]]]]],[31,[[9,[[15,[46]]]]]],[24,[[9,[[15,[46]]]]]],[32,[[9,[[15,[46]]]]]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[29,47],9],[[30,47],9],[[31,47],9],[[32,47],9],[23,[[9,[43]]]],[29,[[9,[43]]]],[30,[[9,[43]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],[[9,[31]]]],[[29,[27,[26]]],[[9,[20]]]],[[29,[27,[26]]],[[9,[20]]]],[[32,[27,[26]]],[[9,[20]]]],[[32,[27,[26]]],[[9,[20]]]],[[29,[27,[48]]],[[9,[20]]]],[[29,[27,[48]]],[[9,[20]]]],[[32,[27,[48]]],[[9,[20]]]],[[32,[27,[48]]],[[9,[20]]]],0,[[]],[[]],[[49,4],9],[[49,11],12],[[]],[[]],0,[[49,4,5,1],9],[[49,4,5,1],9],[[],18],[[],18],[[],19],0,0,[50,3],[51,3],[[]],[[]],[[]],[[]],[[50,4],9],[[51,4],9],[50,9],[50,9],[[50,11],12],[[51,11],12],[52,50],[[]],[53,51],[[]],[54,51],[3,50],[3,51],[[]],[[]],[50,3],[51,3],[[],9],[[51,[27,[26]]],[[9,[20]]]],[[51,[27,[26]]],[[9,[20]]]],[[51,[27,[44]]],[[9,[20]]]],[[51,[27,[44]]],[[9,[20]]]],[[50,4,5,1],9],[[51,4,5,1],9],[[50,4,5,1],9],[[51,4,5,1],9],[[50,10],9],[[51,10],9],[[],18],[[],18],[[],18],[[],18],[[50,47],9],[[51,47],9],[[],19],[[],19],[[50,[27,[26]]],[[9,[20]]]],[[50,[27,[26]]],[[9,[20]]]],[[50,[27,[48]]],[[9,[20]]]],[[50,[27,[48]]],[[9,[20]]]]],"c":[],"p":[[3,"Interest"],[3,"Poll"],[6,"RawFd"],[3,"Registry"],[3,"Token"],[4,"Ordering"],[8,"Source"],[8,"Sized"],[6,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Waker"],[8,"Hasher"],[4,"Option"],[3,"Events"],[3,"Duration"],[4,"Result"],[3,"TypeId"],[15,"usize"],[3,"Event"],[3,"Iter"],[3,"TcpListener"],[3,"UnixListener"],[3,"SocketAddr"],[15,"u8"],[15,"slice"],[3,"Path"],[3,"TcpStream"],[3,"UdpSocket"],[3,"UnixDatagram"],[3,"UnixStream"],[4,"SocketAddr"],[8,"AsRef"],[3,"TcpListener"],[3,"TcpStream"],[3,"UdpSocket"],[3,"UnixDatagram"],[3,"UnixListener"],[3,"UnixStream"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[15,"u32"],[3,"IoSliceMut"],[4,"Shutdown"],[3,"Error"],[8,"FnOnce"],[3,"IoSlice"],[3,"SourceFd"],[3,"Sender"],[3,"Receiver"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"]]},\
"nix":{"doc":"Rust friendly bindings to the various *nix system …","t":"GIGOAAAAAAOOOOOOOOOOOOOKAKCAAAAAOOOOAAAAAKNNDNDNNDDNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLFLLLLLLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNRSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRSNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRSNNEILNLLLLLLLLLFLLLLFLLLLLKLLLLLLSSSSSDSSSSSSSNNNNNNNNNNNSSSSNNNNNDEDENNNNDSSSSSSSSSSSSSSSSSSSSSSSSNNNNNNESSSDSSSSDDNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLFFFFLLLLLLLFFLLLLLLLFLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFDDMLLLLMLLMLLLLLMLLLLFLLMLLLMLLLLLLLLDSSDSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDDSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLFFLLSDDDDSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLASSSSSSSSSSSSSSSSSSSSSSDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLDDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLFLLLLLLLLMMFFFFLLMLLLLLLLLLLLLLLLFLLMMMMSSSSSSSSSSSSSSSSSSSGDDLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLFLLLLLLLLLLLLLLFAAAAAAAAAAAAAAAAAAAAAAAAAAAAANENDENNNNNNDDEENNFLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSDNNNDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSDLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDSSSSSSSSSSSSSSSSSSSSSSSSDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMOOOOSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLNNNNNNNNNNNNNNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDSSSDDEDSSSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFFFLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSDSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLFLLLLLLLLLLGFFGEDNNNNNNNNNNNNNNNNNNNNSSSSSSSSSNNNNNNNNNNNNNNNNNNNELFLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLFLLLLLLLFLLLLFLFLFFFFLLLFFFLLLLFLLLLLLLLLLFDNNNNSSSSSSSSSSEEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNELLLLLLLLLLLLFFLLLLNNNNNNNNNNNNNNNNELLLLLLLLLFLLLGFLLLLRDDLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLFFNSSSSSSSNNNNNNNNNNRNNRNNNNNNNNNNNNRNNNNNNNNNNDDNNDENDDNENNEEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLFFLLLFLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGLLMMMMMSSRRDCDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDCFMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLENNDNNNNNNNNNNNNNDEENNNINNNNNEEDDNNNDDNNNNNNNNNDNSSSSSSSSSSNDNNNNDNNNNNNNNNNNNNNNNNNNNNNDDNNNNSSSSSSSSNNNNNNNNDNIENEDEEDDITNNDDNNNNNNNDDNNNNNQQNNDNNNMFFLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMDLMLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLKFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLFMMMMMMMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLMMGLLFFFFKLLLFFMMMMMMMMMLLLDDDDFDFFAMLLLLLLMMLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEDFNNDNNDSSSSSSSSSSSSSSSSSSSSSSSELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLFFFFFFFFGLLLLLLLLMMMMMMMMMMMMMMMMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLFFRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRLLLLLLLLLLLLLLLLLLLLLLGFLLLLFLLLLLLLLDSSSSSSSSSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLFLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSSSESSSSSSSSSSSSSSSSSSDSSSSSSSSSSSSEESSSSSSSSSSSSSSSSDDRSSSSSSSSSSSSDSSSSEESSSSSNNNNNNNNNNSDNNNNNNNNNNNNNNNSSSNNSRLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLKLLLLLKLLKLLLKLLKLLLLKLLLLGGLLLLLLLLLLLLLLLENNNDDLLLLLLLLLLLLLNNNNNEENNNSSSDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLMLLLLLLLLLLLLLLLLLLLLLLMFFFFFFFLLLLLLLLFDLLLLLLLLLLLLLLLLLLFLNNNENNNNNNNNSSSSSSDESSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFSSSSSSSSSSSDLLLFFFFLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLNNNNNDNNNNNNNNNNNSENENNDDNNNNNENNNNNNNNNNNNNNNNNNNNNNNNEDNRNSNDDNNNNNNNNNNNNENNNDEDSESNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLFLMFFFLLMMLLLLLLLLLLLLLLLLLLLLLFFFFFLFFFFFLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFMFFFFFFFFFFFFFFFFMMLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLFFFFMFFFFMMLLLLMMFFFFFFMMLMMLFFFFFFFFFFFFMFLLFLFFFFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLMLFFFMFFFF","n":["Error","NixPath","Result","cmsg_space","dir","env","errno","fcntl","features","ifaddrs","ioctl_none","ioctl_none_bad","ioctl_read","ioctl_read_bad","ioctl_read_buf","ioctl_readwrite","ioctl_readwrite_bad","ioctl_readwrite_buf","ioctl_write_buf","ioctl_write_int","ioctl_write_int_bad","ioctl_write_ptr","ioctl_write_ptr_bad","is_empty","kmod","len","libc","mount","mqueue","net","poll","pty","request_code_none","request_code_read","request_code_readwrite","request_code_write","sched","sys","time","ucontext","unistd","with_nix_path","BlockDevice","CharacterDevice","Dir","Directory","Entry","Fifo","File","Iter","OwningIter","Socket","Symlink","Type","as_raw_fd","as_raw_fd","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","file_name","file_type","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_fd","hash","hash","hash","hash","hash","ino","into","into","into","into","into","into_iter","into_iter","into_iter","iter","next","next","open","openat","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","ClearEnvError","borrow","borrow_mut","clearenv","clone","clone_into","fmt","fmt","from","into","to_owned","to_string","try_from","try_into","type_id","E2BIG","EACCES","EADDRINUSE","EADDRNOTAVAIL","EADV","EAFNOSUPPORT","EAGAIN","EALREADY","EBADE","EBADF","EBADFD","EBADMSG","EBADR","EBADRQC","EBADSLT","EBFONT","EBUSY","ECANCELED","ECHILD","ECHRNG","ECOMM","ECONNABORTED","ECONNREFUSED","ECONNRESET","EDEADLK","EDEADLOCK","EDEADLOCK","EDESTADDRREQ","EDOM","EDOTDOT","EDQUOT","EEXIST","EFAULT","EFBIG","EHOSTDOWN","EHOSTUNREACH","EHWPOISON","EIDRM","EILSEQ","EINPROGRESS","EINTR","EINVAL","EIO","EISCONN","EISDIR","EISNAM","EKEYEXPIRED","EKEYREJECTED","EKEYREVOKED","EL2HLT","EL2NSYNC","EL3HLT","EL3RST","ELIBACC","ELIBBAD","ELIBEXEC","ELIBMAX","ELIBSCN","ELNRNG","ELOOP","EMEDIUMTYPE","EMFILE","EMLINK","EMSGSIZE","EMULTIHOP","ENAMETOOLONG","ENAVAIL","ENETDOWN","ENETRESET","ENETUNREACH","ENFILE","ENOANO","ENOBUFS","ENOCSI","ENODATA","ENODEV","ENOENT","ENOEXEC","ENOKEY","ENOLCK","ENOLINK","ENOMEDIUM","ENOMEM","ENOMSG","ENONET","ENOPKG","ENOPROTOOPT","ENOSPC","ENOSR","ENOSTR","ENOSYS","ENOTBLK","ENOTCONN","ENOTDIR","ENOTEMPTY","ENOTNAM","ENOTRECOVERABLE","ENOTSOCK","ENOTSUP","ENOTSUP","ENOTTY","ENOTUNIQ","ENXIO","EOPNOTSUPP","EOVERFLOW","EOWNERDEAD","EPERM","EPFNOSUPPORT","EPIPE","EPROTO","EPROTONOSUPPORT","EPROTOTYPE","ERANGE","EREMCHG","EREMOTE","EREMOTEIO","ERESTART","ERFKILL","EROFS","ESHUTDOWN","ESOCKTNOSUPPORT","ESPIPE","ESRCH","ESRMNT","ESTALE","ESTRPIPE","ETIME","ETIMEDOUT","ETOOMANYREFS","ETXTBSY","EUCLEAN","EUNATCH","EUSERS","EWOULDBLOCK","EWOULDBLOCK","EXDEV","EXFULL","Errno","ErrnoSentinel","Sys","UnknownErrno","as_errno","borrow","borrow_mut","clear","clone","clone_into","desc","eq","equivalent","errno","fmt","fmt","from","from_errno","from_i32","from_i32","into","invalid_argument","last","result","sentinel","to_owned","to_string","try_from","try_from","try_into","type_id","AT_EMPTY_PATH","AT_NO_AUTOMOUNT","AT_REMOVEDIR","AT_SYMLINK_FOLLOW","AT_SYMLINK_NOFOLLOW","AtFlags","FALLOC_FL_COLLAPSE_RANGE","FALLOC_FL_INSERT_RANGE","FALLOC_FL_KEEP_SIZE","FALLOC_FL_PUNCH_HOLE","FALLOC_FL_UNSHARE_RANGE","FALLOC_FL_ZERO_RANGE","FD_CLOEXEC","F_ADD_SEALS","F_DUPFD","F_DUPFD_CLOEXEC","F_GETFD","F_GETFL","F_GETLK","F_GETPIPE_SZ","F_GET_SEALS","F_OFD_GETLK","F_OFD_SETLK","F_OFD_SETLKW","F_SEAL_GROW","F_SEAL_SEAL","F_SEAL_SHRINK","F_SEAL_WRITE","F_SETFD","F_SETFL","F_SETLK","F_SETLKW","F_SETPIPE_SZ","FallocateFlags","FcntlArg","FdFlag","FlockArg","LockExclusive","LockExclusiveNonblock","LockShared","LockSharedNonblock","OFlag","O_ACCMODE","O_APPEND","O_ASYNC","O_CLOEXEC","O_CREAT","O_DIRECT","O_DIRECTORY","O_DSYNC","O_EXCL","O_FSYNC","O_LARGEFILE","O_NDELAY","O_NOATIME","O_NOCTTY","O_NOFOLLOW","O_NONBLOCK","O_PATH","O_RDONLY","O_RDWR","O_RSYNC","O_SYNC","O_TMPFILE","O_TRUNC","O_WRONLY","POSIX_FADV_DONTNEED","POSIX_FADV_NOREUSE","POSIX_FADV_NORMAL","POSIX_FADV_RANDOM","POSIX_FADV_SEQUENTIAL","POSIX_FADV_WILLNEED","PosixFadviseAdvice","RENAME_EXCHANGE","RENAME_NOREPLACE","RENAME_WHITEOUT","RenameFlags","SPLICE_F_GIFT","SPLICE_F_MORE","SPLICE_F_MOVE","SPLICE_F_NONBLOCK","SealFlag","SpliceFFlags","Unlock","UnlockNonblock","all","all","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","copy_file_range","difference","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend","extend","extend","fallocate","fcntl","flock","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","not","not","not","not","not","not","not","open","openat","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","posix_fadvise","posix_fallocate","readlink","readlinkat","remove","remove","remove","remove","remove","remove","remove","renameat","renameat2","set","set","set","set","set","set","set","splice","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","tee","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","union","union","vmsplice","socket_atomic_cloexec","InterfaceAddress","InterfaceAddressIterator","address","borrow","borrow","borrow_mut","borrow_mut","broadcast","clone","clone_into","destination","drop","eq","eq","equivalent","equivalent","flags","fmt","fmt","from","from","getifaddrs","hash","hash","interface_name","into","into","into_iter","netmask","next","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","DeleteModuleFlags","MODULE_INIT_IGNORE_MODVERSIONS","MODULE_INIT_IGNORE_VERMAGIC","ModuleInitFlags","O_NONBLOCK","O_TRUNC","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","delete_module","difference","difference","empty","empty","eq","eq","equivalent","equivalent","extend","extend","finit_module","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","init_module","insert","insert","intersection","intersection","intersects","intersects","into","into","is_all","is_all","is_empty","is_empty","not","not","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","union","MNT_DETACH","MNT_EXPIRE","MNT_FORCE","MS_ACTIVE","MS_BIND","MS_DIRSYNC","MS_I_VERSION","MS_KERNMOUNT","MS_LAZYTIME","MS_MANDLOCK","MS_MGC_MSK","MS_MGC_VAL","MS_MOVE","MS_NOATIME","MS_NODEV","MS_NODIRATIME","MS_NOEXEC","MS_NOSUID","MS_NOUSER","MS_POSIXACL","MS_PRIVATE","MS_RDONLY","MS_REC","MS_RELATIME","MS_REMOUNT","MS_RMT_MASK","MS_SHARED","MS_SILENT","MS_SLAVE","MS_STRICTATIME","MS_SYNCHRONOUS","MS_UNBINDABLE","MntFlags","MsFlags","UMOUNT_NOFOLLOW","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","is_all","is_all","is_empty","is_empty","mount","not","not","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","umount","umount2","union","union","FD_CLOEXEC","FdFlag","MQ_OFlag","MqAttr","MqdT","O_CLOEXEC","O_CREAT","O_EXCL","O_NONBLOCK","O_RDONLY","O_RDWR","O_WRONLY","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","curmsgs","difference","difference","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","is_all","is_all","is_empty","is_empty","maxmsg","mq_attr_member_t","mq_close","mq_getattr","mq_open","mq_receive","mq_remove_nonblock","mq_send","mq_set_nonblock","mq_setattr","mq_unlink","msgsize","new","not","not","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","if_","IFF_ALLMULTI","IFF_AUTOMEDIA","IFF_BROADCAST","IFF_DEBUG","IFF_DORMANT","IFF_DYNAMIC","IFF_ECHO","IFF_LOOPBACK","IFF_LOWER_UP","IFF_MASTER","IFF_MULTICAST","IFF_NOARP","IFF_NOTRAILERS","IFF_NO_PI","IFF_POINTOPOINT","IFF_PORTSEL","IFF_PROMISC","IFF_RUNNING","IFF_SLAVE","IFF_TAP","IFF_TUN","IFF_UP","Interface","InterfaceFlags","Interfaces","InterfacesIter","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","difference","drop","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","if_nameindex","if_nametoindex","index","insert","intersection","intersects","into","into","into","into","into_iter","into_iter","is_all","is_empty","iter","name","next","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_slice","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","POLLERR","POLLHUP","POLLIN","POLLNVAL","POLLOUT","POLLPRI","POLLRDBAND","POLLRDNORM","POLLWRBAND","POLLWRNORM","PollFd","PollFlags","all","as_raw_fd","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","equivalent","equivalent","events","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","new","not","partial_cmp","poll","ppoll","remove","revents","set","set_events","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","ForkptyResult","OpenptyResult","PtyMaster","SessionId","Winsize","as_raw_fd","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","drop","eq","eq","eq","equivalent","equivalent","equivalent","flush","flush","fmt","fmt","fmt","fmt","fork_result","forkpty","from","from","from","from","from","grantpt","hash","hash","hash","into","into","into","into","into_raw_fd","master","master","openpty","posix_openpt","ptsname","ptsname_r","read","read","slave","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unlockpt","write","write","ws_col","ws_row","ws_xpixel","ws_ypixel","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_IO","CLONE_NEWCGROUP","CLONE_NEWIPC","CLONE_NEWNET","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWUSER","CLONE_NEWUTS","CLONE_PARENT","CLONE_PTRACE","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CloneCb","CloneFlags","CpuSet","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","cmp","complement","contains","count","default","difference","empty","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","is_set","new","not","partial_cmp","remove","sched_getaffinity","sched_setaffinity","sched_yield","set","set","setns","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","unset","unshare","aio","epoll","eventfd","inotify","ioctl","memfd","mman","personality","pthread","ptrace","quota","reboot","resource","select","sendfile","signal","signalfd","socket","stat","statfs","statvfs","sysinfo","termios","time","timer","timerfd","uio","utsname","wait","AioAllDone","AioCancelStat","AioCanceled","AioCb","AioFsyncMode","AioNotCanceled","LIO_NOP","LIO_NOWAIT","LIO_READ","LIO_WAIT","LIO_WRITE","LioCb","LioCbBuilder","LioMode","LioOpcode","O_DSYNC","O_SYNC","aio_cancel_all","aio_return","aio_return","aio_suspend","aiocbs","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","drop","emplace_mut_slice","emplace_slice","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","error","error","fd","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fd","from_mut_ptr","from_mut_slice","from_ptr","from_slice","fsync","hash","hash","hash","hash","into","into","into","into","into","into","into","is_empty","len","lio_opcode","listio","listio_resubmit","nbytes","offset","partial_cmp","partial_cmp","partial_cmp","priority","read","set_sigev_notify","sigevent","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_capacity","write","EPOLLERR","EPOLLET","EPOLLEXCLUSIVE","EPOLLHUP","EPOLLIN","EPOLLMSG","EPOLLONESHOT","EPOLLOUT","EPOLLPRI","EPOLLRDBAND","EPOLLRDHUP","EPOLLRDNORM","EPOLLWAKEUP","EPOLLWRBAND","EPOLLWRNORM","EPOLL_CLOEXEC","EpollCreateFlags","EpollCtlAdd","EpollCtlDel","EpollCtlMod","EpollEvent","EpollFlags","EpollOp","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","data","difference","difference","empty","empty","empty","epoll_create","epoll_create1","epoll_ctl","epoll_wait","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","events","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","partial_cmp","partial_cmp","remove","remove","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","union","EFD_CLOEXEC","EFD_NONBLOCK","EFD_SEMAPHORE","EfdFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","equivalent","eventfd","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","AddWatchFlags","IN_ACCESS","IN_ALL_EVENTS","IN_ATTRIB","IN_CLOEXEC","IN_CLOSE","IN_CLOSE_NOWRITE","IN_CLOSE_WRITE","IN_CREATE","IN_DELETE","IN_DELETE_SELF","IN_DONT_FOLLOW","IN_IGNORED","IN_ISDIR","IN_MODIFY","IN_MOVE","IN_MOVED_FROM","IN_MOVED_TO","IN_MOVE_SELF","IN_NONBLOCK","IN_ONESHOT","IN_ONLYDIR","IN_OPEN","IN_Q_OVERFLOW","IN_UNMOUNT","InitFlags","Inotify","InotifyEvent","WatchDescriptor","add_watch","all","all","as_raw_fd","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","cookie","difference","difference","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_raw_fd","hash","hash","hash","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","is_all","is_all","is_empty","is_empty","mask","name","not","not","partial_cmp","partial_cmp","partial_cmp","read_events","remove","remove","rm_watch","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","wd","request_code_none","request_code_read","request_code_readwrite","request_code_write","MFD_ALLOW_SEALING","MFD_CLOEXEC","MemFdCreateFlag","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","memfd_create","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","MADV_DODUMP","MADV_DOFORK","MADV_DONTDUMP","MADV_DONTFORK","MADV_DONTNEED","MADV_FREE","MADV_HUGEPAGE","MADV_HWPOISON","MADV_MERGEABLE","MADV_NOHUGEPAGE","MADV_NORMAL","MADV_RANDOM","MADV_REMOVE","MADV_SEQUENTIAL","MADV_SOFT_OFFLINE","MADV_UNMERGEABLE","MADV_WILLNEED","MAP_32BIT","MAP_ANON","MAP_ANONYMOUS","MAP_DENYWRITE","MAP_EXECUTABLE","MAP_FILE","MAP_FIXED","MAP_FIXED_NOREPLACE","MAP_GROWSDOWN","MAP_HUGETLB","MAP_HUGE_16GB","MAP_HUGE_16MB","MAP_HUGE_1GB","MAP_HUGE_1MB","MAP_HUGE_256MB","MAP_HUGE_2GB","MAP_HUGE_2MB","MAP_HUGE_32MB","MAP_HUGE_512KB","MAP_HUGE_512MB","MAP_HUGE_64KB","MAP_HUGE_8MB","MAP_LOCKED","MAP_NONBLOCK","MAP_NORESERVE","MAP_POPULATE","MAP_PRIVATE","MAP_SHARED","MAP_STACK","MCL_CURRENT","MCL_FUTURE","MREMAP_FIXED","MREMAP_MAYMOVE","MRemapFlags","MS_ASYNC","MS_INVALIDATE","MS_SYNC","MapFlags","MlockAllFlags","MmapAdvise","MsFlags","PROT_EXEC","PROT_GROWSDOWN","PROT_GROWSUP","PROT_NONE","PROT_READ","PROT_WRITE","ProtFlags","all","all","all","all","all","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","hash","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","madvise","mlock","mlockall","mmap","mprotect","mremap","msync","munlock","munlockall","munmap","not","not","not","not","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","remove","set","set","set","set","set","shm_open","shm_unlink","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","union","ADDR_COMPAT_LAYOUT","ADDR_LIMIT_32BIT","ADDR_LIMIT_3GB","ADDR_NO_RANDOMIZE","FDPIC_FUNCPTRS","MMAP_PAGE_ZERO","Persona","READ_IMPLIES_EXEC","SHORT_INODE","STICKY_TIMEOUTS","UNAME26","WHOLE_SECONDS","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","cmp","complement","contains","difference","empty","eq","equivalent","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","get","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","Pthread","pthread_kill","pthread_self","AddressType","Event","Options","PTRACE_ATTACH","PTRACE_CONT","PTRACE_DETACH","PTRACE_EVENT_CLONE","PTRACE_EVENT_EXEC","PTRACE_EVENT_EXIT","PTRACE_EVENT_FORK","PTRACE_EVENT_SECCOMP","PTRACE_EVENT_STOP","PTRACE_EVENT_VFORK","PTRACE_EVENT_VFORK_DONE","PTRACE_GETEVENTMSG","PTRACE_GETFPREGS","PTRACE_GETFPXREGS","PTRACE_GETREGS","PTRACE_GETREGSET","PTRACE_GETSIGINFO","PTRACE_INTERRUPT","PTRACE_KILL","PTRACE_LISTEN","PTRACE_O_EXITKILL","PTRACE_O_TRACECLONE","PTRACE_O_TRACEEXEC","PTRACE_O_TRACEEXIT","PTRACE_O_TRACEFORK","PTRACE_O_TRACESECCOMP","PTRACE_O_TRACESYSGOOD","PTRACE_O_TRACEVFORK","PTRACE_O_TRACEVFORKDONE","PTRACE_PEEKDATA","PTRACE_PEEKSIGINFO","PTRACE_PEEKTEXT","PTRACE_PEEKUSER","PTRACE_POKEDATA","PTRACE_POKETEXT","PTRACE_POKEUSER","PTRACE_SEIZE","PTRACE_SETFPREGS","PTRACE_SETFPXREGS","PTRACE_SETOPTIONS","PTRACE_SETREGS","PTRACE_SETREGSET","PTRACE_SETSIGINFO","PTRACE_SINGLESTEP","PTRACE_SYSCALL","PTRACE_SYSEMU","PTRACE_SYSEMU_SINGLESTEP","PTRACE_TRACEME","Request","all","attach","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","cont","contains","detach","difference","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","getevent","getregs","getsiginfo","hash","hash","hash","insert","interrupt","intersection","intersects","into","into","into","is_all","is_empty","kill","not","partial_cmp","partial_cmp","partial_cmp","read","remove","seize","set","setoptions","setregs","setsiginfo","step","sub","sub_assign","symmetric_difference","syscall","sysemu","sysemu_step","to_owned","to_owned","to_owned","toggle","traceme","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","write","Dqblk","GRPQUOTA","QFMT_VFS_OLD","QFMT_VFS_V0","QFMT_VFS_V1","QIF_ALL","QIF_BLIMITS","QIF_BTIME","QIF_ILIMITS","QIF_INODES","QIF_ITIME","QIF_LIMITS","QIF_SPACE","QIF_TIMES","QIF_USAGE","QuotaFmt","QuotaType","QuotaValidFlags","USRQUOTA","all","allocated_inodes","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","block_time_limit","blocks_hard_limit","blocks_soft_limit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","default","default","difference","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","hash","inode_time_limit","inodes_hard_limit","inodes_soft_limit","insert","intersection","intersects","into","into","into","into","is_all","is_empty","not","occupied_space","partial_cmp","partial_cmp","partial_cmp","quotactl_get","quotactl_off","quotactl_on","quotactl_set","quotactl_sync","remove","set","set_block_time_limit","set_blocks_hard_limit","set_blocks_soft_limit","set_inode_time_limit","set_inodes_hard_limit","set_inodes_soft_limit","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","RB_AUTOBOOT","RB_HALT_SYSTEM","RB_KEXEC","RB_POWER_OFF","RB_SW_SUSPEND","RebootMode","borrow","borrow_mut","clone","clone_into","cmp","eq","equivalent","fmt","from","hash","into","partial_cmp","reboot","set_cad_enabled","to_owned","try_from","try_into","type_id","RLIMIT_AS","RLIMIT_CORE","RLIMIT_CPU","RLIMIT_DATA","RLIMIT_FSIZE","RLIMIT_LOCKS","RLIMIT_MEMLOCK","RLIMIT_MSGQUEUE","RLIMIT_NICE","RLIMIT_NOFILE","RLIMIT_NPROC","RLIMIT_RSS","RLIMIT_RTPRIO","RLIMIT_RTTIME","RLIMIT_SIGPENDING","RLIMIT_STACK","Resource","borrow","borrow_mut","clone","clone_into","cmp","eq","equivalent","fmt","from","getrlimit","hash","into","partial_cmp","rlim_t","setrlimit","to_owned","try_from","try_into","type_id","FD_SETSIZE","FdSet","Fds","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","contains","default","eq","equivalent","fds","fmt","fmt","from","from","hash","highest","insert","into","into","into_iter","new","next","next_back","pselect","remove","select","size_hint","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","sendfile","sendfile64","Handler","SA_NOCLDSTOP","SA_NOCLDWAIT","SA_NODEFER","SA_ONSTACK","SA_RESETHAND","SA_RESTART","SA_SIGINFO","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGIOT","SIGKILL","SIGPIPE","SIGPOLL","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGUNUSED","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SIG_BLOCK","SIG_SETMASK","SIG_UNBLOCK","SaFlags","SigAction","SigAction","SigDfl","SigEvent","SigHandler","SigIgn","SigSet","SigSetIter","SigevNone","SigevNotify","SigevSignal","SigevThreadId","SigmaskHow","Signal","SignalIterator","add","all","all","as_mut_ptr","as_ref","as_ref","as_str","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","contains","contains","difference","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_iter","from_str","handler","hash","hash","hash","hash","hash","hash","hash","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","is_all","is_empty","iter","iterator","kill","killpg","mask","new","new","next","next","not","partial_cmp","partial_cmp","partial_cmp","pthread_sigmask","raise","remove","remove","set","sigaction","sigevent","signal","sigprocmask","sub","sub_assign","symmetric_difference","thread_block","thread_get_mask","thread_set_mask","thread_swap_mask","thread_unblock","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_of_thread_id","union","wait","si_value","si_value","signal","signal","thread_id","SFD_CLOEXEC","SFD_NONBLOCK","SIGNALFD_NEW","SIGNALFD_SIGINFO_SIZE","SfdFlags","SigSet","SignalFd","all","as_raw_fd","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","drop","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","hash","hash","insert","intersection","intersects","into","into","into","into_iter","is_all","is_empty","new","next","not","partial_cmp","read_signal","remove","set","set_mask","siginfo","signal","signalfd","ssi_addr","ssi_addr_lsb","ssi_arch","ssi_band","ssi_call_addr","ssi_code","ssi_errno","ssi_fd","ssi_int","ssi_overrun","ssi_pid","ssi_ptr","ssi_signo","ssi_status","ssi_stime","ssi_syscall","ssi_tid","ssi_trapno","ssi_uid","ssi_utime","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","with_flags","AddressFamily","Alg","Alg","AlgAddr","AlgSetAeadAssoclen","AlgSetIv","AlgSetOp","AppleTalk","Ash","AtmPvc","AtmSvc","Ax25","Bluetooth","Both","Bridge","Caif","Can","CmsgIterator","ControlMessage","ControlMessageOwned","Datagram","Decnet","Econet","GetSockOpt","Ib","Ieee802154","Inet","Inet","Inet6","InetAddr","IpAddr","IpMembershipRequest","Ipv4Addr","Ipv4PacketInfo","Ipv4PacketInfo","Ipv4RecvErr","Ipv6Addr","Ipv6MembershipRequest","Ipv6PacketInfo","Ipv6PacketInfo","Ipv6RecvErr","Ipx","Irda","Isdn","Iucv","Key","Link","LinkAddr","Llc","MSG_CMSG_CLOEXEC","MSG_CTRUNC","MSG_DONTWAIT","MSG_EOR","MSG_ERRQUEUE","MSG_NOSIGNAL","MSG_OOB","MSG_PEEK","MSG_TRUNC","MSG_WAITALL","Mpls","MsgFlags","NetBeui","NetRom","Netlink","Netlink","NetlinkAddr","NetlinkAudit","NetlinkCrypto","NetlinkDECNetRoutingMessage","NetlinkFIBLookup","NetlinkIPv6Firewall","NetlinkISCSI","NetlinkKObjectUEvent","NetlinkNetFilter","NetlinkRDMA","NetlinkRoute","NetlinkSCSITransport","NetlinkSELinux","NetlinkSockDiag","NetlinkUserSock","Nfc","Packet","Phonet","Pppox","Raw","Rdm","Rds","Read","RecvMmsgData","RecvMsg","Rose","RxRpc","RxqOvfl","RxqOvfl","SOCK_CLOEXEC","SOCK_NONBLOCK","SOF_TIMESTAMPING_RAW_HARDWARE","SOF_TIMESTAMPING_RX_HARDWARE","SOF_TIMESTAMPING_RX_SOFTWARE","SOF_TIMESTAMPING_SOFTWARE","SOF_TIMESTAMPING_TX_HARDWARE","SOF_TIMESTAMPING_TX_SOFTWARE","ScmCredentials","ScmCredentials","ScmRights","ScmRights","ScmTimestamp","ScmTimestampns","ScmTimestampsns","Security","SendMmsgData","SeqPacket","SetSockOpt","Shutdown","Sna","SockAddr","SockFlag","SockProtocol","SockType","SockaddrIn","SockaddrIn6","SockaddrLike","SockaddrStorage","Stream","Tcp","TimestampingFlag","Timestamps","Tipc","TxTime","Udp","UdpGroSegments","UdpGsoSegments","Unix","Unix","UnixAddr","UnixCredentials","Unspec","V4","V4","V6","V6","Val","Val","Vsock","Vsock","VsockAddr","Wanpipe","Write","X25","_lt","accept","accept4","addr","addr","address","alg_name","alg_type","all","all","all","any","as_abstract","as_alg_addr","as_alg_addr_mut","as_ffi_pair","as_link_addr","as_link_addr_mut","as_mut_ptr","as_netlink_addr","as_netlink_addr_mut","as_ptr","as_ptr","as_ptr","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_sockaddr_in","as_sockaddr_in6","as_sockaddr_in6_mut","as_sockaddr_in_mut","as_unix_addr","as_unix_addr_mut","as_vsock_addr","as_vsock_addr_mut","bind","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","cid","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmsg_buffer","cmsg_len","cmsg_level","cmsg_type","cmsghdr","cmsgs","cmsgs","complement","complement","complement","connect","contains","contains","contains","default","difference","difference","difference","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","family","family","family","flags","flowinfo","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_i32","from_iter","from_iter","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_std","from_std","from_std","from_std","from_str","from_str","get","getpeername","getsockname","getsockopt","gid","groups","halen","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hatype","hw_raw","hw_trans","ifindex","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","iov","iov","ip","ip","ip","is_all","is_all","is_all","is_empty","is_empty","is_empty","len","len","len","len","listen","msg_control","msg_controllen","msg_flags","msg_iov","msg_iovlen","msg_name","msg_namelen","msghdr","new","new","new","new","new","new","new","new","new","new","new","new_abstract","new_alg","new_inet","new_netlink","new_unix","new_v4","new_v6","new_vsock","next","not","not","not","octets","partial_cmp","partial_cmp","partial_cmp","path","path_len","pid","pid","pkttype","port","port","port","port","protocol","recv","recvfrom","recvmmsg","recvmsg","remove","remove","remove","sa_data","sa_family","sa_family_t","scope_id","segments","send","sendmmsg","sendmsg","sendto","set","set","set","set","setsockopt","shutdown","sin6_addr","sin6_family","sin6_flowinfo","sin6_port","sin6_scope_id","sin_addr","sin_family","sin_port","sin_zero","size","size","size","sockaddr","sockaddr_in","sockaddr_in6","sockaddr_storage","sockaddr_storage_to_addr","sockaddr_un","socket","socketpair","sockopt","ss_family","sub","sub","sub","sub_assign","sub_assign","sub_assign","sun_family","sun_path","symmetric_difference","symmetric_difference","symmetric_difference","system","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_std","to_std","to_std","to_std","to_str","to_str","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","union","union","union","AcceptConn","AlgSetAeadAuthSize","AlgSetKey","BindToDevice","Broadcast","Ip6tOriginalDst","IpAddMembership","IpDropMembership","IpFreebind","IpMulticastLoop","IpMulticastTtl","IpTransparent","Ipv4PacketInfo","Ipv4RecvErr","Ipv4Ttl","Ipv6AddMembership","Ipv6DontFrag","Ipv6DropMembership","Ipv6RecvErr","Ipv6RecvPacketInfo","Ipv6Ttl","Ipv6V6Only","KeepAlive","Linger","Mark","OobInline","OriginalDst","PassCred","PeerCredentials","RcvBuf","RcvBufForce","ReceiveTimeout","ReceiveTimestamp","ReceiveTimestampns","ReuseAddr","ReusePort","RxqOvfl","SendTimeout","SndBuf","SndBufForce","SockType","SocketError","TcpCongestion","TcpKeepCount","TcpKeepIdle","TcpKeepInterval","TcpMaxSeg","TcpNoDelay","TcpRepair","TcpUserTimeout","Timestamping","TxTime","UdpGroSegment","UdpGsoSegment","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","get","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","set","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","FchmodatFlags","FileStat","FileStat","FollowSymlink","FollowSymlink","Mode","NoFollowSymlink","NoFollowSymlink","SFlag","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","S_IFMT","S_IFREG","S_IFSOCK","S_IRGRP","S_IROTH","S_IRUSR","S_IRWXG","S_IRWXO","S_IRWXU","S_ISGID","S_ISUID","S_ISVTX","S_IWGRP","S_IWOTH","S_IWUSR","S_IXGRP","S_IXOTH","S_IXUSR","UtimensatFlags","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","dev_t","difference","difference","empty","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fchmod","fchmodat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","fstat","fstatat","futimens","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","is_all","is_all","is_empty","is_empty","lstat","lutimes","major","makedev","minor","mkdirat","mknod","mknodat","mode_t","not","not","partial_cmp","partial_cmp","remove","remove","set","set","st_atime","st_atime_nsec","st_blksize","st_blocks","st_ctime","st_ctime_nsec","st_dev","st_gid","st_ino","st_mode","st_mtime","st_mtime_nsec","st_nlink","st_rdev","st_size","st_uid","stat","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","umask","union","union","utimensat","utimes","ADFS_SUPER_MAGIC","AFFS_SUPER_MAGIC","AFS_SUPER_MAGIC","AUTOFS_SUPER_MAGIC","BPF_FS_MAGIC","BTRFS_SUPER_MAGIC","CGROUP2_SUPER_MAGIC","CGROUP_SUPER_MAGIC","CODA_SUPER_MAGIC","CRAMFS_MAGIC","DEBUGFS_MAGIC","DEVPTS_SUPER_MAGIC","ECRYPTFS_SUPER_MAGIC","EFS_SUPER_MAGIC","EXT2_SUPER_MAGIC","EXT3_SUPER_MAGIC","EXT4_SUPER_MAGIC","F2FS_SUPER_MAGIC","FUSE_SUPER_MAGIC","FUTEXFS_SUPER_MAGIC","FsType","HOSTFS_SUPER_MAGIC","HPFS_SUPER_MAGIC","HUGETLBFS_MAGIC","ISOFS_SUPER_MAGIC","JFFS2_SUPER_MAGIC","MINIX2_SUPER_MAGIC","MINIX2_SUPER_MAGIC2","MINIX3_SUPER_MAGIC","MINIX_SUPER_MAGIC","MINIX_SUPER_MAGIC2","MSDOS_SUPER_MAGIC","NCP_SUPER_MAGIC","NFS_SUPER_MAGIC","NILFS_SUPER_MAGIC","OCFS2_SUPER_MAGIC","OPENPROM_SUPER_MAGIC","OVERLAYFS_SUPER_MAGIC","PROC_SUPER_MAGIC","QNX4_SUPER_MAGIC","QNX6_SUPER_MAGIC","RDTGROUP_SUPER_MAGIC","REISERFS_SUPER_MAGIC","SECURITYFS_MAGIC","SELINUX_MAGIC","SMACK_MAGIC","SMB_SUPER_MAGIC","SYSFS_MAGIC","Statfs","TMPFS_MAGIC","TRACEFS_MAGIC","UDF_SUPER_MAGIC","USBDEVICE_SUPER_MAGIC","XENFS_SUPER_MAGIC","block_size","blocks","blocks_available","blocks_free","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","files","files_free","filesystem_id","filesystem_type","fmt","fmt","from","from","fsid_t","fstatfs","into","into","maximum_name_length","optimal_transfer_size","statfs","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","FsFlags","ST_APPEND","ST_IMMUTABLE","ST_MANDLOCK","ST_NOATIME","ST_NODEV","ST_NODIRATIME","ST_NOEXEC","ST_NOSUID","ST_RDONLY","ST_RELATIME","ST_SYNCHRONOUS","ST_WRITE","Statvfs","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","block_size","blocks","blocks_available","blocks_free","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","default","difference","empty","eq","eq","equivalent","equivalent","extend","files","files_available","files_free","filesystem_id","flags","fmt","fmt","fmt","fmt","fmt","fmt","fragment_size","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","fstatvfs","hash","hash","insert","intersection","intersects","into","into","is_all","is_empty","name_max","not","partial_cmp","remove","set","statvfs","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","SysInfo","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","hash","into","load_average","process_count","ram_total","ram_unused","swap_free","swap_total","sysinfo","to_owned","try_from","try_into","type_id","uptime","B0","B1000000","B110","B115200","B1152000","B1200","B134","B150","B1500000","B1800","B19200","B200","B2000000","B230400","B2400","B2500000","B300","B3000000","B3500000","B38400","B4000000","B460800","B4800","B50","B500000","B57600","B576000","B600","B75","B921600","B9600","BRKINT","BS0","BS1","BSDLY","BaudRate","CBAUD","CBAUDEX","CIBAUD","CLOCAL","CMSPAR","CR0","CR1","CR2","CR3","CRDLY","CREAD","CRTSCTS","CS5","CS6","CS7","CS8","CSIZE","CSTOPB","ControlFlags","ECHO","ECHOCTL","ECHOE","ECHOK","ECHOKE","ECHONL","ECHOPRT","EXTPROC","FF0","FF1","FFDLY","FLUSHO","FlowArg","FlushArg","HUPCL","ICANON","ICRNL","IEXTEN","IGNBRK","IGNCR","IGNPAR","IMAXBEL","INLCR","INPCK","ISIG","ISTRIP","IUTF8","IXANY","IXOFF","IXON","InputFlags","LocalFlags","NCCS","NL0","NL1","NLDLY","NOFLSH","OCRNL","OFDEL","OFILL","OLCUC","ONLCR","ONLRET","ONOCR","OPOST","OutputFlags","PARENB","PARMRK","PARODD","PENDIN","SetArg","SpecialCharacterIndices","TAB0","TAB1","TAB2","TAB3","TABDLY","TCIFLUSH","TCIOFF","TCIOFLUSH","TCION","TCOFLUSH","TCOOFF","TCOON","TCSADRAIN","TCSAFLUSH","TCSANOW","TOSTOP","Termios","VDISCARD","VEOF","VEOL","VEOL2","VERASE","VINTR","VKILL","VLNEXT","VMIN","VQUIT","VREPRINT","VSTART","VSTOP","VSUSP","VSWTC","VT0","VT1","VTDLY","VTIME","VWERASE","XTABS","_POSIX_VDISABLE","all","all","all","all","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfgetispeed","cfgetospeed","cfmakeraw","cfsetispeed","cfsetospeed","cfsetspeed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","complement","complement","complement","contains","contains","contains","contains","control_chars","control_flags","difference","difference","difference","difference","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","hash","hash","hash","hash","hash","hash","hash","hash","hash","input_flags","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","local_flags","not","not","not","not","output_flags","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","remove","set","set","set","set","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","tcdrain","tcflow","tcflush","tcgetattr","tcgetsid","tcsendbreak","tcsetattr","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","union","TimeSpec","TimeVal","TimeValLike","add","add","as_mut","as_mut","as_ref","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","div","div","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_duration","from_timespec","hash","hash","hours","into","into","microseconds","microseconds","microseconds","milliseconds","milliseconds","milliseconds","minutes","mul","mul","nanoseconds","nanoseconds","nanoseconds","neg","neg","num_hours","num_microseconds","num_microseconds","num_microseconds","num_milliseconds","num_milliseconds","num_milliseconds","num_minutes","num_nanoseconds","num_nanoseconds","num_nanoseconds","num_seconds","num_seconds","num_seconds","partial_cmp","partial_cmp","seconds","seconds","seconds","sub","sub","suseconds_t","time_t","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","tv_nsec","tv_sec","tv_sec","tv_usec","type_id","type_id","zero","Expiration","Interval","IntervalDelayed","OneShot","Timer","TimerSetTimeFlags","borrow","borrow_mut","drop","fmt","from","get","into","new","overruns","set","try_from","try_into","type_id","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","ClockId","Expiration","Interval","IntervalDelayed","OneShot","TFD_CLOEXEC","TFD_NONBLOCK","TFD_TIMER_ABSTIME","TimerFd","TimerFlags","TimerSetTimeFlags","all","all","as_raw_fd","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","difference","difference","drop","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_raw_fd","get","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","is_all","is_all","is_empty","is_empty","new","not","not","partial_cmp","partial_cmp","partial_cmp","remove","remove","set","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","unset","wait","IoVec","RemoteIoVec","as_slice","base","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_mut_slice","from_slice","hash","hash","into","into","len","pread","preadv","process_vm_readv","process_vm_writev","pwrite","pwritev","readv","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","writev","UtsName","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","hash","into","machine","nodename","release","sysname","to_owned","try_from","try_into","type_id","uname","version","All","Continued","Exited","Id","PGid","PIDFd","Pid","PtraceEvent","PtraceSyscall","Signaled","StillAlive","Stopped","WCONTINUED","WEXITED","WNOHANG","WNOWAIT","WSTOPPED","WUNTRACED","WaitPidFlag","WaitStatus","__WALL","__WCLONE","__WNOTHREAD","all","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","complement","contains","difference","empty","eq","eq","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","hash","hash","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","not","partial_cmp","partial_cmp","pid","remove","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","toggle","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","wait","waitid","waitpid","CLOCK_BOOTTIME","CLOCK_BOOTTIME_ALARM","CLOCK_MONOTONIC","CLOCK_MONOTONIC_COARSE","CLOCK_MONOTONIC_RAW","CLOCK_PROCESS_CPUTIME_ID","CLOCK_REALTIME","CLOCK_REALTIME_ALARM","CLOCK_REALTIME_COARSE","CLOCK_TAI","CLOCK_THREAD_CPUTIME_ID","ClockId","as_raw","borrow","borrow_mut","clock_getcpuclockid","clock_getres","clock_gettime","clock_settime","clone","clone_into","cmp","eq","equivalent","fmt","fmt","from","from","from_raw","hash","into","now","partial_cmp","pid_cpu_clock_id","res","set_time","to_owned","to_string","try_from","try_into","type_id","UContext","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","get","hash","into","set","sigmask","sigmask_mut","to_owned","try_from","try_into","type_id","AIO_LISTIO_MAX","AIO_MAX","AIO_PRIO_DELTA_MAX","ARG_MAX","ATEXIT_MAX","AccessFlags","BC_BASE_MAX","BC_DIM_MAX","BC_SCALE_MAX","BC_STRING_MAX","CHILD_MAX","CLK_TCK","COLL_WEIGHTS_MAX","Child","DELAYTIMER_MAX","EXPR_NEST_MAX","FILESIZEBITS","F_OK","FchownatFlags","FollowSymlink","ForkResult","GETGR_R_SIZE_MAX","GETPW_R_SIZE_MAX","Gid","Group","HOST_NAME_MAX","IOV_MAX","LINE_MAX","LINK_MAX","LOGIN_NAME_MAX","LinkatFlags","MAX_CANON","MAX_INPUT","MQ_OPEN_MAX","MQ_PRIO_MAX","NAME_MAX","NGROUPS_MAX","NoFollowSymlink","NoRemoveDir","NoSymlinkFollow","OPEN_MAX","PAGE_SIZE","PATH_MAX","PIPE_BUF","POSIX2_SYMLINKS","POSIX_ALLOC_SIZE_MIN","POSIX_REC_INCR_XFER_SIZE","POSIX_REC_MAX_XFER_SIZE","POSIX_REC_MIN_XFER_SIZE","POSIX_REC_XFER_ALIGN","PTHREAD_DESTRUCTOR_ITERATIONS","PTHREAD_KEYS_MAX","PTHREAD_STACK_MIN","PTHREAD_THREADS_MAX","Parent","PathconfVar","Pid","RE_DUP_MAX","ROOT","RTSIG_MAX","R_OK","RemoveDir","ResGid","ResUid","SEM_NSEMS_MAX","SEM_VALUE_MAX","SIGQUEUE_MAX","STREAM_MAX","SYMLINK_MAX","SYMLOOP_MAX","SeekCur","SeekData","SeekEnd","SeekHole","SeekSet","SymlinkFollow","SysconfVar","TIMER_MAX","TTY_NAME_MAX","TZNAME_MAX","Uid","UnlinkatFlags","User","W_OK","Whence","X_OK","_POSIX2_CHAR_TERM","_POSIX2_C_BIND","_POSIX2_C_DEV","_POSIX2_FORT_DEV","_POSIX2_FORT_RUN","_POSIX2_LOCALEDEF","_POSIX2_PBS","_POSIX2_PBS_ACCOUNTING","_POSIX2_PBS_CHECKPOINT","_POSIX2_PBS_LOCATE","_POSIX2_PBS_MESSAGE","_POSIX2_PBS_TRACK","_POSIX2_SW_DEV","_POSIX2_UPE","_POSIX2_VERSION","_POSIX_ADVISORY_INFO","_POSIX_ASYNCHRONOUS_IO","_POSIX_ASYNC_IO","_POSIX_BARRIERS","_POSIX_CHOWN_RESTRICTED","_POSIX_CLOCK_SELECTION","_POSIX_CPUTIME","_POSIX_FSYNC","_POSIX_IPV6","_POSIX_JOB_CONTROL","_POSIX_MAPPED_FILES","_POSIX_MEMLOCK","_POSIX_MEMLOCK_RANGE","_POSIX_MEMORY_PROTECTION","_POSIX_MESSAGE_PASSING","_POSIX_MONOTONIC_CLOCK","_POSIX_NO_TRUNC","_POSIX_PRIORITIZED_IO","_POSIX_PRIORITY_SCHEDULING","_POSIX_PRIO_IO","_POSIX_RAW_SOCKETS","_POSIX_READER_WRITER_LOCKS","_POSIX_REALTIME_SIGNALS","_POSIX_REGEXP","_POSIX_SAVED_IDS","_POSIX_SEMAPHORES","_POSIX_SHARED_MEMORY_OBJECTS","_POSIX_SHELL","_POSIX_SPAWN","_POSIX_SPIN_LOCKS","_POSIX_SPORADIC_SERVER","_POSIX_SS_REPL_MAX","_POSIX_SYNCHRONIZED_IO","_POSIX_SYNC_IO","_POSIX_THREADS","_POSIX_THREAD_ATTR_STACKADDR","_POSIX_THREAD_ATTR_STACKSIZE","_POSIX_THREAD_CPUTIME","_POSIX_THREAD_PRIORITY_SCHEDULING","_POSIX_THREAD_PRIO_INHERIT","_POSIX_THREAD_PRIO_PROTECT","_POSIX_THREAD_PROCESS_SHARED","_POSIX_THREAD_ROBUST_PRIO_INHERIT","_POSIX_THREAD_ROBUST_PRIO_PROTECT","_POSIX_THREAD_SAFE_FUNCTIONS","_POSIX_THREAD_SPORADIC_SERVER","_POSIX_TIMEOUTS","_POSIX_TIMERS","_POSIX_TRACE","_POSIX_TRACE_EVENT_FILTER","_POSIX_TRACE_EVENT_NAME_MAX","_POSIX_TRACE_INHERIT","_POSIX_TRACE_LOG","_POSIX_TRACE_NAME_MAX","_POSIX_TRACE_SYS_MAX","_POSIX_TRACE_USER_EVENT_MAX","_POSIX_TYPED_MEMORY_OBJECTS","_POSIX_V6_ILP32_OFF32","_POSIX_V6_ILP32_OFFBIG","_POSIX_V6_LP64_OFF64","_POSIX_V6_LPBIG_OFFBIG","_POSIX_VDISABLE","_POSIX_VERSION","_XOPEN_CRYPT","_XOPEN_ENH_I18N","_XOPEN_LEGACY","_XOPEN_REALTIME","_XOPEN_REALTIME_THREADS","_XOPEN_SHM","_XOPEN_STREAMS","_XOPEN_UNIX","_XOPEN_VERSION","access","acct","alarm","all","as_raw","as_raw","as_raw","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chdir","chown","chroot","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","cmp","cmp","complement","contains","current","current","daemon","difference","dir","dup","dup2","dup3","effective","effective","effective","effective","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","execv","execve","execveat","execvp","execvpe","extend","fchdir","fchown","fchownat","fdatasync","fexecve","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fork","fpathconf","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_gid","from_iter","from_name","from_name","from_raw","from_raw","from_raw","from_uid","fsync","ftruncate","gecos","getcwd","getegid","geteuid","getgid","getgrouplist","getgroups","gethostname","getpgid","getpgrp","getpid","getppid","getresgid","getresuid","getsid","gettid","getuid","gid","gid","hash","hash","hash","hash","hash","hash","initgroups","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_child","is_empty","is_parent","is_root","isatty","linkat","lseek","lseek64","mem","mkdir","mkfifo","mkfifoat","mkstemp","name","name","not","parent","partial_cmp","partial_cmp","passwd","passwd","pathconf","pause","pipe","pipe2","pivot_root","read","real","real","remove","saved","saved","set","setegid","seteuid","setfsgid","setfsuid","setgid","setgroups","sethostname","setpgid","setresgid","setresuid","setsid","setuid","shell","sleep","sub","sub_assign","symlinkat","symmetric_difference","sync","sysconf","tcgetpgrp","tcsetpgrp","this","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","toggle","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttyname","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","union","unlink","unlinkat","write","child","disable","enable","cancel","set"],"q":[[0,"nix"],[42,"nix::dir"],[132,"nix::env"],[147,"nix::errno"],[315,"nix::fcntl"],[806,"nix::features"],[807,"nix::ifaddrs"],[844,"nix::kmod"],[953,"nix::mount"],[1091,"nix::mqueue"],[1240,"nix::net"],[1241,"nix::net::if_"],[1351,"nix::poll"],[1434,"nix::pty"],[1514,"nix::sched"],[1612,"nix::sys"],[1641,"nix::sys::aio"],[1776,"nix::sys::epoll"],[1935,"nix::sys::eventfd"],[1990,"nix::sys::inotify"],[2164,"nix::sys::ioctl"],[2168,"nix::sys::memfd"],[2222,"nix::sys::mman"],[2565,"nix::sys::personality"],[2629,"nix::sys::pthread"],[2632,"nix::sys::ptrace"],[2785,"nix::sys::quota"],[2921,"nix::sys::reboot"],[2945,"nix::sys::resource"],[2981,"nix::sys::select"],[3020,"nix::sys::sendfile"],[3022,"nix::sys::signal"],[3304,"nix::sys::signal::SigevNotify"],[3309,"nix::sys::signalfd"],[3422,"nix::sys::socket"],[4388,"nix::sys::socket::sockopt"],[5287,"nix::sys::stat"],[5491,"nix::sys::statfs"],[5582,"nix::sys::statvfs"],[5674,"nix::sys::sysinfo"],[5697,"nix::sys::termios"],[6156,"nix::sys::time"],[6249,"nix::sys::timer"],[6268,"nix::sys::timerfd"],[6429,"nix::sys::uio"],[6472,"nix::sys::utsname"],[6493,"nix::sys::wait"],[6601,"nix::time"],[6642,"nix::ucontext"],[6661,"nix::unistd"],[7186,"nix::unistd::ForkResult"],[7187,"nix::unistd::acct"],[7189,"nix::unistd::alarm"]],"d":["Nix’s main error type.","Common trait used to represent file system paths by many …","Nix Result Type","Create a buffer large enough for storing some control …","","Environment variables","","","Feature tests for OS functionality","Query network interface addresses","Generates a wrapper function for an ioctl that passes no …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that reads data …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that reads an …","Generates a wrapper function for an ioctl that reads and …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that reads and …","Generates a wrapper function for an ioctl that writes an …","Generates a wrapper function for a ioctl that writes an …","Generates a wrapper function for a “bad” ioctl that …","Generates a wrapper function for an ioctl that writes data …","Generates a wrapper function for a “bad” ioctl that …","Is the path empty?","Load and unload kernel modules.","Length of the path in bytes","","Mount file systems","Posix Message Queue functions","Functionality involving network interfaces","Wait for events to trigger on specific file descriptors","Create master and slave virtual pseudo-terminals (PTYs)","Generate an ioctl request code for a command that passes …","Generate an ioctl request code for a command that reads.","Generate an ioctl request code for a command that reads …","Generate an ioctl request code for a command that writes.","Execution scheduling","Mostly platform-specific functionality","","","Safe wrappers around functions found in libc “unistd.h”…","Execute a function with this path as a <code>CStr</code>.","","","An open directory.","","A directory entry, similar to <code>std::fs::DirEntry</code>.","","","","The return type of Dir::into_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the bare file name of this directory entry without …","Returns the type of this directory entry, if known.","","","","","","Converts from a descriptor-based object, closing the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts from a file descriptor, closing it on success or …","","","","","","Returns the inode number (<code>d_ino</code>) of the underlying <code>dirent</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a owning iterator, that is, one that takes …","","","Returns an iterator of <code>Result&lt;Entry&gt;</code> which rewinds when …","","","Opens the given path as with <code>fcntl::open</code>.","Opens the given path as with <code>fcntl::openat</code>.","","","","","","","","","","","","","","","","","","Indicates that <code>clearenv</code> failed for some unknown reason","","","Clear the environment of all name-value pairs.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The sentinel value indicates that a function failed and …","Backwards compatibility hack for Nix &lt;= 0.21.0 users","","Convert this <code>Error</code> to an <code>Errno</code>.","","","","","","","","","Returns the platform-specific value of errno","","","Returns the argument unchanged.","Create a nix Error from a given errno","","","Calls <code>U::from(self)</code>.","Create a new invalid argument error (<code>EINVAL</code>)","","Returns <code>Ok(value)</code> if it does not contain the sentinel …","","","","","","","","","","","","","","Removes byte range from a file without leaving a hole.","Increases file space by inserting a hole within the file …","File size is not changed.","Deallocates space by creating a hole.","Shared file data extants are made private to the file.","Zeroes space in specified byte range.","The file descriptor will automatically be closed during a …","","","","","","","","","","","","The size of the file cannot be increased.","Prevents further calls to <code>fcntl()</code> with <code>F_ADD_SEALS</code>.","The file cannot be reduced in size.","The file contents cannot be modified.","","","","","","Mode argument flags for fallocate determining operation …","","Additional configuration flags for <code>fcntl</code>’s <code>F_SETFD</code>.","","","","","","Configuration options for opened files.","Mask for the access mode of the file.","Open the file in append-only mode.","Generate a signal when input or output becomes possible.","Closes the file descriptor once an <code>execve</code> call is made.","Create the file if it does not exist.","Try to minimize cache effects of the I/O for this file.","If the specified path isn’t a directory, fail.","Implicitly follow each <code>write()</code> with an <code>fdatasync()</code>.","Error out if a file was not created.","Same as <code>O_SYNC</code>.","Allow files whose sizes can’t be represented in an <code>off_t</code> …","Same as <code>O_NONBLOCK</code>.","Do not update the file last access time during <code>read(2)</code>s.","Don’t attach the device as the process’ controlling …","<code>open()</code> will fail if the given path is a symbolic link.","When possible, open the file in nonblocking mode.","Obtain a file descriptor for low-level access.","Only allow reading.","Allow both reading and writing.","Similar to <code>O_DSYNC</code> but applies to <code>read</code>s instead.","Implicitly follow each <code>write()</code> with an <code>fsync()</code>.","Create an unnamed temporary file.","Truncate an existing regular file to 0 length if it allows …","Only allow writing.","","","","","","","","","","","","Gift the user pages to the kernel.","Hint that more data will be coming in a subsequent splice.","Request that pages be moved instead of copied.","Do not block on I/O.","Additional flags for file sealing, which allows for …","Additional flags to <code>splice</code> and friends.","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Copy a range of data from one file to another","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Manipulates file space.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","Check if the OS supports atomic close-on-exec for sockets","Describes a single address for an interface as returned by …","Holds the results of <code>getifaddrs</code>.","Network address of this interface","","","","","Broadcast address of this interface, if applicable","","","Point-to-point destination address","","","","","","Flags as from <code>SIOCGIFFLAGS</code> ioctl","","","Returns the argument unchanged.","Returns the argument unchanged.","Get interface addresses using libc’s <code>getifaddrs</code>","","","Name of the network interface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Netmask of this interface","","","","","","","","","Flags used by <code>delete_module</code>.","Ignore symbol version hashes.","Ignore kernel version magic.","Flags used by the <code>finit_module</code> function.","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Unloads the kernel module with the given name.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","Loads a kernel module from a given file descriptor.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Loads a kernel module from a buffer.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","Linux 2.4.0 - Bind directory at different place","Directory modifications are synchronous","","","","Allow mandatory locks on a FS","","","","Do not update access times","Disallow access to device special files","Do not update directory access times","Disallow program execution","Ignore suid and sgid bits","","","","Mount read-only","","","Alter flags of a mounted FS","","","","","","Writes are synced at once","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","Identifies an open POSIX Message Queue","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","The number of messages currently held in the queue","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","The max number of messages that can be held by the queue","","Close a message queue","Get message queue attributes","Open a message queue","Receive a message from a message queue","Convenience function. Removes <code>O_NONBLOCK</code> attribute for a …","Send a message to a message queue","Convenience function. Sets the <code>O_NONBLOCK</code> attribute for a …","Set the attributes of the message queue. Only <code>O_NONBLOCK</code> …","Remove a message queue","The maximum size of each message (in bytes)","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Network interface name resolution.","Receive all multicast packets. (see <code>netdevice(7)</code>)","Auto media selection active. (see <code>netdevice(7)</code>)","Valid broadcast address set. (see <code>netdevice(7)</code>)","Internal debugging flag. (see <code>netdevice(7)</code>)","Driver signals dormant. Volatile.","The addresses are lost when the interface goes down. (see …","Echo sent packets. Volatile.","Interface is a loopback interface. (see <code>netdevice(7)</code>)","Driver signals L1 up. Volatile.","Master of a load balancing bundle. (see <code>netdevice(7)</code>)","Supports multicast. (see <code>netdevice(7)</code>)","No arp protocol, L2 destination address not set. (see …","Avoid use of trailers. (see <code>netdevice(7)</code>)","Do not provide packet information","Interface is a point-to-point link. (see <code>netdevice(7)</code>)","Is able to select media type via ifmap. (see <code>netdevice(7)</code>)","Interface is in promiscuous mode. (see <code>netdevice(7)</code>)","Resources allocated. (see <code>netdevice(7)</code>)","Slave of a load balancing bundle. (see <code>netdevice(7)</code>)","TAP device","TUN device (no Ethernet headers)","Interface is running. (see <code>netdevice(7)</code>)","A network interface. Has a name like “eth0” or “…","Standard interface flags, used by <code>getifaddrs</code>","A list of the network interfaces available on this system. …","An iterator over the interfaces in an <code>Interfaces</code>.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Retrieve a list of the network interfaces available on the …","Resolve an interface into a interface number.","Obtain the index of this interface.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Iterate over the interfaces in this list.","Obtain the name of this interface.","","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Convert this to a slice of interfaces. Note that the …","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Error condition (only returned in <code>PollFd::revents</code>; ignored …","Hang up (only returned in <code>PollFd::revents</code>; ignored in …","There is data to read.","Invalid request: <code>fd</code> not open (only returned in …","Writing is now possible, though a write larger that the …","There is some exceptional condition on the file descriptor.","Priority band data can be read (generally unused on Linux).","Equivalent to <code>POLLIN</code>","Priority data may be written.","Equivalent to <code>POLLOUT</code>","This is a wrapper around <code>libc::pollfd</code>.","These flags define the different events that can be …","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","The events of interest for this <code>PollFd</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates a new <code>PollFd</code> specifying the events of interest for …","Returns the complement of this set of flags.","","<code>poll</code> waits for one of a set of file descriptors to become …","<code>ppoll()</code> allows an application to safely wait until either …","Removes the specified flags in-place.","Returns the events that occurred in the last call to <code>poll</code> …","Inserts or removes the specified flags depending on the …","Modify the events of interest for this <code>PollFd</code>.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Representation of a master with a forked pty","Representation of a master/slave pty pair","Representation of the Master device in a master/slave pty …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Metadata about forked process","Create a new pseudoterminal, returning the master file …","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Grant access to a slave pseudoterminal (see <code>grantpt(3)</code>)","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The master port in a virtual pty pair","The master port in a virtual pty pair","Create a new pseudoterminal, returning the slave and …","Open a pseudoterminal device (see <code>posix_openpt(3)</code>)","Get the name of the slave pseudoterminal (see <code>ptsname(3)</code>)","Get the name of the slave pseudoterminal (see <code>ptsname(3)</code>)","","","The slave port in a virtual pty pair","","","","","","","","","","","","","","","","Unlock a pseudoterminal master/slave pseudoterminal pair …","","","","","","","Unused since Linux 2.6.2","The calling process and the child process share the same …","The caller and the child process share the same  filesystem","The new process shares an I/O context with the calling …","Create the process in a new cgroup namespace.","Create the process in a new IPC namespace.","Create the process in a new network namespace.","The cloned child is started in a new mount namespace.","Create the process in a new PID namespace.","Create the process in a new user namespace.","Create the process in a new UTS namespace.","The parent of the new child  (as returned by getppid(2)) …","If the calling process is being traced, then trace the …","The calling process and the child process share the same …","The child and the calling process share a single list of …","The child is placed in the same thread group as the calling","A tracing process cannot force <code>CLONE_PTRACE</code> on this child …","The execution of the calling process is suspended until the","The calling process and the child process run in the same …","Type for the function executed by <code>clone</code>.","Options for use with <code>clone</code>","CpuSet represent a bit-mask of CPUs. CpuSets are used by …","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","<code>clone</code> create a child process (<code>clone(2)</code>)","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Return the maximum number of CPU in CpuSet","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Test to see if a CPU is in the CpuSet. <code>field</code> is the CPU id …","Create a new and empty CpuSet.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","<code>sched_getaffinity</code> get a thread’s CPU affinity mask (…","<code>sched_setaffinity</code> set a thread’s CPU affinity mask (…","Explicitly yield the processor to other threads.","Inserts or removes the specified flags depending on the …","Add a CPU to CpuSet. <code>field</code> is the CPU id to add","reassociate thread with a namespace","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Remove a CPU from CpuSet. <code>field</code> is the CPU id to remove","disassociate parts of the process execution context","POSIX Asynchronous I/O","","","Monitoring API for filesystem events.","Provide helpers for making ioctl system calls.","Interfaces for managing memory-backed files.","Memory management declarations.","Process execution domains","Low level threading primitives","","Set and configure disk quotas for users, groups, or …","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.","Configure the process resource limits.","Portably monitor a group of file descriptors for readiness.","Send data from a file to a socket, bypassing userland.","Operating system signals.","Interface for the <code>signalfd</code> syscall.","Socket interface functions","","Get filesystem statistics, non-portably","Get filesystem statistics","","An interface for controlling asynchronous communication …","","Timer API via signals.","Timer API via file descriptors.","Vectored I/O","Get system identification","Wait for a process to change status","All of the requests have already finished","Return values for <code>AioCb::cancel</code> and <code>aio_cancel_all</code>","All outstanding requests were canceled","AIO Control Block.","Mode for <code>AioCb::fsync</code>.  Controls whether only data or both …","Some requests were not canceled.  Their status should be …","No operation","Requests that <code>lio_listio</code> return immediately","Write data as if by a call to <code>AioCb::read</code>","Requests that <code>lio_listio</code> block until all requested …","Write data as if by a call to <code>AioCb::write</code>","LIO Control Block.","Used to construct <code>LioCb</code>","Mode for <code>lio_listio</code>","When used with <code>lio_listio</code>, determines whether a given <code>aiocb</code>…","on supported operating systems only, do it like <code>fdatasync</code>","do it like <code>fsync</code>","Cancels outstanding AIO requests for a given file …","Retrieve return status of an asynchronous operation.","Collect final status for an individual <code>AioCb</code> submitted as …","Suspends the calling process until at least one of the …","A collection of <code>AioCb</code>s.","","","","","","","","","","","","","","","Cancels an outstanding AIO request.","","","","","","","","","","","","If the <code>AioCb</code> has no remaining state in the kernel, just …","Add a new operation on a mutable slice to the <code>LioCb</code> under …","Add a new operation on an immutable slice to the <code>LioCb</code> …","","","","","","","","","Retrieve error status of an asynchronous operation.","Retrieve error status of an individual <code>AioCb</code> submitted as …","Returns the underlying file descriptor associated with the …","Finalize this <code>LioCb</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new <code>AioCb</code> with no associated buffer.","Constructs a new <code>AioCb</code> from a mutable raw pointer","Constructs a new <code>AioCb</code> from a mutable slice.","Constructs a new <code>AioCb</code> from a raw pointer.","Like <code>AioCb::from_mut_slice</code>, but works on constant slices …","An asynchronous version of <code>fsync(2)</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Are no <code>AioCb</code>s contained?","Return the number of individual <code>AioCb</code>s contained.","Returns the <code>aiocb</code>’s <code>LioOpcode</code> field","Submits multiple asynchronous I/O requests with a single …","Resubmits any incomplete operations with <code>lio_listio</code>.","Returns the requested length of the aio operation in bytes","Returns the file offset stored in the <code>AioCb</code>","","","","Returns the priority of the <code>AioCb</code>","Asynchronously reads from a file descriptor into a buffer","Update the notification settings for an existing <code>aiocb</code>","Returns the <code>SigEvent</code> stored in the <code>AioCb</code>","","","","","","","","","","","","","","","","","","","","","","","","","","Initialize an empty <code>LioCb</code>","Asynchronously writes from a buffer to a file descriptor","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Configuration options for <code>inotify_add_watch</code>.","File was accessed.","All of the events.","Metadata changed.","Set the <code>FD_CLOEXEC</code> flag on the file descriptor.","Combination of <code>IN_CLOSE_WRITE</code> and <code>IN_CLOSE_NOWRITE</code>.","Nonwritable file was closed.","Writable file was closed.","Subfile was created.","Subfile was deleted.","Self was deleted.","Don’t follow symlinks.","File was ignored.","Event occurred against directory.","File was modified.","Combination of <code>IN_MOVED_FROM</code> and <code>IN_MOVED_TO</code>.","File was moved from X.","File was moved to Y.","Self was moved.","Set the <code>O_NONBLOCK</code> flag on the open file description …","Only send event once.","Only watch the path if it is a directory.","File was opened.","Event queue overflowed.","Backing filesystem was unmounted.","Configuration options for <code>inotify_init1</code>.","An inotify instance. This is also a file descriptor, you …","A single inotify event.","This object is returned when you create a new watch on an …","Adds a new watch on the target file or directory.","Returns the set containing all flags.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","This cookie is a number that allows you to connect related …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","Initialize a new inotify instance.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Event mask. This field is a bitfield describing the exact …","Filename. This field exists only if the event was …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Reads a collection of events from the inotify file …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes an existing watch using the watch descriptor …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Watch descriptor. This field corresponds to the watch …","Generate an ioctl request code for a command that passes …","Generate an ioctl request code for a command that reads.","Generate an ioctl request code for a command that reads …","Generate an ioctl request code for a command that writes.","Allow sealing operations on this file.","Set the close-on-exec (<code>FD_CLOEXEC</code>) flag on the new file …","Options that change the behavior of <code>memfd_create</code>.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Creates an anonymous file that lives in memory, and return …","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Undo the effect of an earlier <code>MADV_DONTDUMP</code>.","Undo the effect of <code>MADV_DONTFORK</code>.","Exclude the given range from a core dump.","Do not make pages in this range available to the child …","Do not expect access in the near future.","Specify that the application no longer needs the pages in …","Enable Transparent Huge Pages (THP) for pages in the given …","Poison the given pages.","Enable Kernel Samepage Merging (KSM) for the given pages.","Undo the effect of <code>MADV_HUGEPAGE</code>.","No further special treatment. This is the default.","Expect random page references.","Free up a given range of pages and its associated backing …","Expect sequential page references.","Preserve the memory of each page but offline the original …","Undo the effect of <code>MADV_MERGEABLE</code>","Expect access in the near future.","Put the mapping into the first 2GB of the process address …","Synonym for <code>MAP_ANONYMOUS</code>.","The mapping is not backed by any file.","Compatibility flag. Ignored.","Compatibility flag. Ignored.","Compatibility flag. Ignored.","Place the mapping at exactly the address specified in <code>addr</code>.","Place the mapping at exactly the address specified in <code>addr</code>…","Used for stacks; indicates to the kernel that the mapping …","Allocate the mapping using “huge pages.”","Make use of 16GB huge page (must be supported by the …","Make use of 16MB huge page (must be supported by the …","Make use of 1GB huge page (must be supported by the system)","Make use of 1MB huge page (must be supported by the system)","Make use of 256MB huge page (must be supported by the …","Make use of 2GB huge page (must be supported by the system)","Make use of 2MB huge page (must be supported by the system)","Make use of 32MB huge page (must be supported by the …","Make use of 512KB huge page (must be supported by the …","Make use of 512MB huge page (must be supported by the …","Make use of 64KB huge page (must be supported by the …","Make use of 8MB huge page (must be supported by the system)","Mark the mmaped region to be locked in the same way as …","Only meaningful when used with <code>MAP_POPULATE</code>. Don’t …","Do not reserve swap space for this mapping.","Populate page tables for a mapping.","Create a private copy-on-write mapping. Mutually exclusive …","Share this mapping. Mutually exclusive with <code>MAP_PRIVATE</code>.","Region grows down, like a stack.","Lock pages that are currently mapped into the address …","Lock pages which will become mapped into the address space …","Place the mapping at exactly the address specified in …","Permit the kernel to relocate the mapping to a new virtual …","Options for <code>mremap</code>.","Schedule an update but return immediately.","Invalidate all cached data.","Perform an update and wait for it to complete.","Additional parameters for <code>mmap</code>.","Flags for <code>mlockall</code>.","Usage information for a range of memory to allow for …","Configuration flags for <code>msync</code>.","Pages can be executed","Apply protection up to the end of a mapping that grows …","Apply protection down to the beginning of a mapping that …","Pages cannot be accessed.","Pages can be read.","Pages can be written.","Desired memory protection of a memory mapping.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","give advice about use of memory","Locks all memory pages that contain part of the address …","Locks all memory pages mapped into this process’ address …","allocate memory, or map files or devices into memory","Set protection of memory mapping.","Expands (or shrinks) an existing memory mapping, …","synchronize a mapped region","Unlocks all memory pages that contain part of the address …","Unlocks all memory pages mapped into this process’ …","remove a mapping","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Creates and opens a new, or opens an existing, POSIX …","Performs the converse of <code>shm_open</code>, removing an object …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Provide the legacy virtual address space layout.","Limit the address space to 32 bits.","Use <code>0xc0000000</code> as the offset at which to search a virtual …","Disable address-space-layout randomization.","User-space function pointers to signal handlers point to …","Map page 0 as read-only.","Flags used and returned by <code>get()</code> and <code>set()</code>.","<code>PROT_READ</code> implies <code>PROT_EXEC</code> for <code>mmap(2)</code>.","No effects.","<code>select(2)</code>, <code>pselect(2)</code>, and <code>ppoll(2)</code> do not modify the …","Have <code>uname(2)</code> report a 2.6.40+ version number rather than …","No effects.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Retrieve the current process personality.","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Set the current process personality.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","Toggles the specified flags in-place.","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Identifies an individual thread.","Send a signal to a thread (see <code>pthread_kill(3)</code>).","Obtain ID of the calling thread (see <code>pthread_self(3)</code>","","Using the ptrace options the tracer can configure the …","Ptrace options used in conjunction with the …","","","","Event that stops before a return from clone.","Event that stops before a return from execve.","Event for a stop before an exit. Unlike the waitpid Exit …","Event that stops before a return from fork or clone.","Stop triggered by a seccomp rule on a tracee.","Stop triggered by the <code>INTERRUPT</code> syscall, or a group stop, …","Event that stops before a return from vfork or clone.","Event for a return from vfork.","","","","","","","","","","Send a SIGKILL to the tracee if the tracer exits.  This is …","Stop tracee at next clone call and trace the cloned …","Stop tracee at next execve call.","Stop tracee at next exit call. Stops before exit commences …","Stop tracee at next fork and start tracing the forked …","Stop tracee when a SECCOMP_RET_TRACE rule is triggered. …","When delivering system call traps set a bit to allow …","Stop tracee at next vfork call and trace the vforked …","Stop tracee at vfork completion.","","","","","","","","","","","","","","","","","","","","Ptrace Request enum defining the action to be taken.","Returns the set containing all flags.","Attach to a running process, as with …","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Restart the stopped tracee process, as with …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Detaches the current running process, as with …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Gets a ptrace event as described by …","Get user registers, as with <code>ptrace(PTRACE_GETREGS, ...)</code>","Get siginfo as with <code>ptrace(PTRACE_GETSIGINFO,...)</code>","","","","Inserts the specified flags in-place.","Stop a tracee, as with <code>ptrace(PTRACE_INTERRUPT, ...)</code>","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Issues a kill request as with <code>ptrace(PTRACE_KILL, ...)</code>","Returns the complement of this set of flags.","","","","Reads a word from a processes memory at the given address","Removes the specified flags in-place.","Attach to a running process, as with …","Inserts or removes the specified flags depending on the …","Set options, as with <code>ptrace(PTRACE_SETOPTIONS,...)</code>.","Set user registers, as with <code>ptrace(PTRACE_SETREGS, ...)</code>","Set siginfo as with <code>ptrace(PTRACE_SETSIGINFO,...)</code>","Move the stopped tracee process forward by a single step …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Continue execution until the next syscall, as with …","Continue execution until the next syscall, as with …","Move the stopped tracee process forward by a single step …","","","","Toggles the specified flags in-place.","Sets the process as traceable, as with …","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Writes a word into the processes memory at the given …","Wrapper type for <code>if_dqblk</code>","Specify a group quota","Use the original quota format.","Use the standard VFS v0 quota format.","Use the VFS v1 quota format.","All fields.","The block hard &amp; soft limit fields.","The disk use time limit field.","The inode hard &amp; soft limit fields.","The current inodes field.","The file quote time limit field.","All block &amp; inode limits.","The current space field.","The time limit fields.","The space &amp; inodes usage fields.","The type of quota format to use.","The scope of the quota.","Indicates the quota fields that are valid to read from.","Specify a user quota","Returns the set containing all flags.","Current number of allocated inodes.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Time limit for excessive disk use.","The absolute limit on disk quota blocks allocated.","Preferred limit on disk quota blocks","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","Time limit for excessive files.","Maximum number of allocated inodes.","Preferred inode limit","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Current occupied space (bytes).","","","","Get disk quota limits and current usage for the given …","Disable disk quotas for a block device.","Turn on disk quotas for a block device.","Configure quota values for the specified fields for a …","Update the on-disk copy of quota usages for a filesystem.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Set the time limit for excessive disk use.","Set the absolute limit on disk quota blocks allocated.","Set the preferred limit on disk quota blocks allocated.","Set the time limit for excessive files.","Set the maximum number of allocated inodes.","Set the preferred limit of allocated inodes.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Restart the system.","Halt the system.","Execute a kernel that has been loaded earlier with …","Stop the system and switch off power, if possible.","Suspend the system using software suspend.","How exactly should the system be rebooted.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Reboots or shuts down the system.","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).","","","","","The maximum amount (in bytes) of virtual memory the …","The largest size (in bytes) core(5) file that may be …","The maximum amount of cpu time (in seconds) to be used by …","The maximum size (in bytes) of the data segment for a …","The largest size (in bytes) file that may be created.","A limit on the combined number of flock locks and fcntl …","The maximum size (in bytes) which a process may lock into …","A limit on the number of bytes that can be allocated for …","A ceiling to which the process’s nice value can be …","The maximum number of open files for this process.","The maximum number of simultaneous processes for this user …","When there is memory pressure and swap is available, …","A ceiling on the real-time priority that may be set for …","A limit (in microseconds) on the amount of CPU time that a …","A limit on the number of signals that may be queued for …","The maximum size (in bytes) of the stack segment for a …","Types of process resources.","","","","","","","","","Returns the argument unchanged.","Get the current processes resource limits","","Calls <code>U::from(self)</code>.","","","Set the current processes resource limits","","","","","","Contains a set of file descriptors used by <code>select</code>","Iterator over <code>FdSet</code>.","","","","","Remove all file descriptors from this <code>FdSet</code>.","","","Test an <code>FdSet</code> for the presence of a certain file …","","","","Returns an iterator over the file descriptors in the set.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Finds the highest file descriptor in the set.","Add a file descriptor to an <code>FdSet</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create an empty <code>FdSet</code>","","","Monitors file descriptors for readiness with an altered …","Remove a file descriptor from an <code>FdSet</code>","Monitors file descriptors for readiness","","","","","","","","","Copy up to <code>count</code> bytes to <code>out_fd</code> from <code>in_fd</code> starting at …","Copy up to <code>count</code> bytes to <code>out_fd</code> from <code>in_fd</code> starting at …","Use the given signal-catching function, which takes in the …","When catching a <code>Signal::SIGCHLD</code> signal, the signal will be …","When catching a <code>Signal::SIGCHLD</code> signal, the system will not","Further occurrences of the delivered signal are not masked …","The system will deliver the signal to the process on a …","The handler is reset back to the default at the moment the …","Requests that certain system calls restart if interrupted …","This flag is controlled internally by Nix.","Abort","Alarm clock","Bus error","To parent on child stop or exit","Continue a stopped process","Floating point exception","Hangup","Illegal instruction (not reset when caught)","Interrupt","Input/output possible signal","Alias for <code>SIGABRT</code>","Kill (cannot be caught or ignored)","Write on a pipe with no one to read it","Alias for <code>SIGIO</code>","Profiling time alarm","Power failure imminent.","Quit","Segmentation violation","Stack fault (obsolete)","Sendable stop signal not from tty","Bad system call","Software termination signal from kill","Trace trap (not reset when caught)","Stop signal from tty","To readers pgrp upon background tty read","Like TTIN if (tp-&gt;t_local&amp;LTOSTOP)","Alias for <code>SIGSYS</code>","Urgent condition on IO channel","User defined signal 1","User defined signal 2","Virtual time alarm","Window size changes","Exceeded CPU time limit","Exceeded file size limit","The new mask is the union of the current mask and the …","The current mask is replaced by the specified set.","The new mask is the intersection of the current mask and …","Controls the behavior of a <code>SigAction</code>","Action to take on receipt of a signal. Corresponds to …","Use the given signal-catching function, which takes in the …","Default signal handling.","Used to request asynchronous notification of the …","A signal handler.","Request that the signal be ignored.","Specifies a set of <code>Signal</code>s that may be blocked, waited …","Iterator for a <code>SigSet</code>.","No notification will be delivered","Specifies the notification method used by a <code>SigEvent</code>","Notify by delivering a signal to the process.","Notify by delivering a signal to a thread.","Specifies how certain functions should manipulate a signal …","Types of operating system signals","Iterate through all signals defined by this operating …","Add the specified signal to the set.","Returns the set containing all flags.","Initialize to include all signals.","Returns a mutable pointer to the <code>sigevent</code> wrapped by <code>self</code>","","","Returns name of signal.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Remove all signals from this set.","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Return whether this set includes the specified signal.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Initialize to include nothing.","","","","","","","","","","","","","","","","","","","","","Returns the flags set on the action.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","Returns the action’s handler.","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns an iterator that yields the signals contained in …","Iterate through all signals defined by this OS","Send a signal to a process","Send a signal to a process group","Returns the set of signals that are blocked during …","Creates a new action.","<strong>Note:</strong> this constructor does not allow the user to set the …","","","Returns the complement of this set of flags.","","","","Manages the signal mask (set of blocked signals) for the …","Send a signal to the current thread","Removes the specified flags in-place.","Remove the specified signal from this set.","Inserts or removes the specified flags depending on the …","Changes the action taken by a process on receipt of a …","Return a copy of the inner structure","Signal management (see signal(3p))","Examine and change blocked signals.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Adds the set of signals to the signal mask for the calling …","Gets the currently blocked (masked) set of signals for the …","Sets the set of signals as the signal mask for the calling …","Sets the set of signals as the signal mask, and returns …","Removes the set of signals from the signal mask for the …","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Identifies a thread for <code>SigevNotify::SigevThreadId</code>","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Suspends execution of the calling thread until one of the …","Will be present in the <code>si_value</code> field of the …","Will be present in the <code>si_value</code> field of the …","Signal to deliver","Signal to send","LWP ID of the thread to notify","","","","","","","A helper struct for creating, reading and closing a …","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","","Creates a new file descriptor for reading signals.","","","","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","These constants specify the protocol family to be used in …","","Interface to kernel crypto API","Socket address for the Linux kernel crypto API","Set the length of associated authentication data (AAD) …","Set IV for <code>AF_ALG</code> crypto API.","Set crypto operation for <code>AF_ALG</code> crypto API. It may be one …","AppleTalk","","Access to raw ATM PVCs","Access to ATM Switched Virtual Circuits","Amateur radio AX.25 protocol","Bluetooth low-level socket protocol","Further receptions and transmissions will be disallowed.","Can’t be used for creating sockets; mostly used for …","Ericsson’s Communication CPU to Application CPU …","Controller Area Network automotive bus protocol","","A type-safe zero-copy wrapper around a single control …","A type-safe wrapper around a single control message, as …","Supports datagrams (connectionless, unreliable messages of …","DECet protocol sockets.","Acorn Econet protocol","Represents a socket option that can be retrieved.","InfiniBand native addressing ","IEEE 802.15.4 WPAN (wireless personal area network) raw …","","IPv4 Internet protocols (see <code>ip(7)</code>)","IPv6 Internet protocols (see <code>ipv6(7)</code>)","","","Request for multicast socket operations","","","Configure the sending addressing and interface for v4","Socket error queue control messages read with the …","","Request for ipv6 multicast socket operations","","Configure the sending addressing and interface for v6","Socket error queue control messages read with the …","IPX - Novell protocols","Socket interface over IrDA","New “modular ISDN” driver interface protocol","IUCV (inter-user communication vehicle) z/VM protocol for …","Key management protocol.","Datalink address (MAC)","Hardware Address","Logical link control (IEEE 802.2 LLC) protocol","Set the <code>close-on-exec</code> flag for the file descriptor …","Receive flags: Control Data was discarded (buffer too …","Enables nonblocking operation; if the operation would …","Terminates a record (when this notion is supported, as for …","This flag specifies that queued errors should be received …","Requests not to send <code>SIGPIPE</code> errors when the other end …","Sends or requests out-of-band data on sockets that support …","Peeks at an incoming message. The data is treated as …","For raw (<code>Packet</code>), Internet datagram (since Linux …","Receive operation blocks until the full amount of data can …","Multiprotocol Label Switching","Flags for send/recv and their relatives","Reserved for “802.2LLC project”; never used.","AX.25 packet layer protocol. (see netrom(4))","","Kernel user interface device (see <code>netlink(7)</code>)","Address for the Linux kernel user interface device.","Auditing (ref)","Netlink interface to request information about ciphers …","DECnet routing messages (ref)","Access to FIB lookup from user space (ref)","Transport IPv6 packets from netfilter to user space.  Used …","Open-iSCSI (ref)","Kernel messages to user space (ref)","Netfilter subsystem (ref)","Infiniband RDMA (ref)","Receives routing and link updates and may be used to …","SCSI Transports (ref)","SELinux event notifications. (ref)","Query information about sockets of various protocol …","Reserved for user-mode socket protocols (ref)","Near field communication","Low level packet interface (see <code>packet(7)</code>)","Nokia cellular modem IPC/RPC interface","Generic PPP transport layer, for setting up L2 tunnels …","Provides raw network protocol access.","Provides a reliable datagram layer that does not guarantee …","Reliable Datagram Sockets (RDS) protocol","Further receptions will be disallowed.","","","RATS (Radio Amateur Telecommunications Society) Open …","Rx, Andrew File System remote procedure call protocol","SO_RXQ_OVFL indicates that an unsigned 32 bit value …","SO_RXQ_OVFL indicates that an unsigned 32 bit value …","Set close-on-exec on the new descriptor","Set non-blocking mode on the new socket","Report hardware timestamps as generated by …","Collect receiving timestamps as reported by hardware","Collect receiving timestamps as reported by software","Report any software timestamps when available.","Collect transmiting timestamps as reported by hardware","Collect transmiting timestamps as reported by software","Received version of <code>ControlMessage::ScmCredentials</code>","A message of type <code>SCM_CREDENTIALS</code>, containing the pid, uid …","Received version of <code>ControlMessage::ScmRights</code>","A message of type <code>SCM_RIGHTS</code>, containing an array of file …","A message of type <code>SCM_TIMESTAMP</code>, containing the time the …","Nanoseconds resolution timestamp","A set of nanosecond resolution timestamps","This was a short-lived (between Linux 2.1.30 and …","","Provides a sequenced, reliable, two-way connection- based …","Represents a socket option that can be set.","","IBM SNA","Represents a socket address","Additional socket options","Constants used in <code>socket</code> and <code>socketpair</code> to specify the …","These constants are used to specify the communication …","An IPv4 socket address","An IPv6 socket address","Anything that, in C, can be cast back and forth to <code>sockaddr</code>…","A container for any sockaddr type","Provides sequenced, reliable, two-way, connection- based …","TCP protocol (ip(7))","Configuration flags for <code>SO_TIMESTAMPING</code> interface","For representing packet timestamps via <code>SO_TIMESTAMPING</code> …","TIPC, “cluster domain sockets” protocol","Configure the transmission time of packets.","UDP protocol (ip(7))","UDP Generic Receive Offload (GRO) allows receiving …","UDP GSO makes it possible for applications to generate …","","Local communication (see <code>unix(7)</code>)","A wrapper around <code>sockaddr_un</code>.","Unix credentials of the sending process.","Unspecified address family, (see <code>getaddrinfo(3)</code>)","","","","","","","","VMWare VSockets protocol for hypervisor-guest interaction.","Socket address for VMWare VSockets protocol","Legacy protocol for wide area network (WAN) connectivity …","Further  transmissions will be disallowed.","ITU-T X.25 / ISO-8208 protocol (see <code>x25(7)</code>)","","Accept a connection on a socket","Accept a connection on a socket","Physical-layer address (MAC)","","","Return the socket’s cipher name, for example <code>sha1</code>.","Return the socket’s cipher type, for example <code>hash</code> or <code>aead</code>…","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","If this address represents an abstract socket, return its …","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Conversion from nix’s SockAddr type to the underlying …","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Returns a mutable pointer to the raw <code>sockaddr_un</code> struct","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Returns a raw pointer to the inner structure.  Useful for …","Returns a raw pointer to the inner structure.  Useful for …","Returns a pointer to the raw <code>sockaddr_un</code> struct","","","","","","","","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Safely and falliably downcast to a mutable reference","Downcast to an immutable <code>[UnixAddr]</code> reference.","Downcast to a mutable <code>[UnixAddr]</code> reference.","Safely and falliably downcast to an immutable reference","Safely and falliably downcast to a mutable reference","Bind a name to a socket","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Context Identifier (CID)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterate over the valid control messages pointed to by this …","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Initiate a connection on a socket","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the address family of this socket","Return the address family of this socket","","","Returns the flow information associated with this address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Create a new <code>AddressFamily</code> from an integer value retrieved …","","","","Unsafe constructor from a variable length source","","","","","","","","","","","","","","","","Look up the value of this socket option on the given …","Get the address of the peer connected to the socket <code>fd</code>.","Get the current address to which the socket <code>fd</code> is bound.","Get the current value for the requested socket option","Returns the group identifier","Return the socket’s multicast groups mask","Length of MAC address","","","","","","","","","","","","","","","","","","","","","","","","","","","ARP hardware type","hardware based timestamp","legacy timestamp, usually empty","Interface number","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the IP address associated with this socket address.","Returns the IP address associated with this socket …","Gets the IP address associated with this socket address.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Return the length of valid data in the sockaddr structure.","Return the length of valid data in the sockaddr structure.","","","Listen for connections on a socket","","","","","","","","","Create a new sockaddr_un representing a filesystem path.","Construct a new socket address from its port ID and …","Construct an <code>AF_ALG</code> socket from its cipher name and type.","Construct a <code>VsockAddr</code> from its raw fields.","Instantiate a new <code>IpMembershipRequest</code>","Instantiate a new <code>Ipv6MembershipRequest</code>","Creates a new instance with the credentials of the current …","Creates a new socket address from IPv4 octets and a port …","","","","Create a new <code>sockaddr_un</code> representing an address in the “…","","","","","Create a new IpAddr that contains an IPv4 address.","Create a new IpAddr that contains an IPv6 address.","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","If this address represents a filesystem path, return that …","Returns the addrlen of this socket - …","Return the socket’s port ID.","Returns the process identifier","Packet type","Port number","Returns the port number associated with this socket …","Returns the port number associated with this socket …","Gets the port number associated with this socket address","Physical-layer protocol","Receive data from a connection-oriented socket. Returns …","Receive data from a connectionless or connection-oriented …","An extension of <code>recvmsg</code> that allows the caller to receive …","Receive message in scatter-gather vectors from a socket, …","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","Returns the scope ID associated with this address.","Return the eight 16-bit segments that make up this address","Send data to a connection-oriented socket. Returns the …","An extension of <code>sendmsg</code> that allows the caller to transmit …","Send data in scatter-gather vectors to a socket, possibly …","Send a message to a socket","Set the value of this socket option on the given socket.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Sets the value for the requested socket option","Shut down part of a full-duplex connection.","","","","","","","","","","Return the available space in the structure","Return the available space in the structure","","","","","","Return the appropriate <code>SockAddr</code> type from a …","","Create an endpoint for communication","Create a pair of connected sockets","Socket options as used by <code>setsockopt</code> and <code>getsockopt</code>.","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","","","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","software based timestamp, usually one containing data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user identifier","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns a value indicating whether or not this socket has …","","","Bind this socket to a particular device like “eth0”.","Set or get the broadcast flag.","","Join a multicast group","Leave a multicast group.","If enabled, this boolean option allows binding to an IP …","Set or read a boolean integer argument that determines …","Set or read the time-to-live value of outgoing multicast …","Setting this boolean option enables transparent proxying …","Pass an <code>IP_PKTINFO</code> ancillary message that contains a …","Enable extended reliable error message passing.","Set or retrieve the current time-to-live field that is …","Join an IPv6 multicast group.","Set “don’t fragment packet” flag on the IPv6 packet.","Leave an IPv6 multicast group.","Control receiving of asynchronous error options.","Set delivery of the <code>IPV6_PKTINFO</code> control message on …","Set the unicast hop limit for the socket.","The socket is restricted to sending and receiving IPv6 …","Enable sending of keep-alive messages on …","When enabled,  a close(2) or shutdown(2) will not return …","Set the mark for each packet sent through this socket …","If this option is enabled, out-of-band data is directly …","","Enable or disable the receiving of the <code>SCM_CREDENTIALS</code> …","Return the credentials of the foreign process connected to …","Sets or gets the maximum socket receive buffer in bytes.","Using this socket option, a privileged (<code>CAP_NET_ADMIN</code>) …","Specify the receiving timeout until reporting an error.","Enable or disable the receiving of the <code>SO_TIMESTAMP</code> …","Enable or disable the receiving of the <code>SO_TIMESTAMPNS</code> …","Enables local address reuse","Permits multiple AF_INET or AF_INET6 sockets to be bound …","Indicates that an unsigned 32-bit value ancillary message …","Specify the sending timeout until reporting an error.","Sets or gets the maximum socket send buffer in bytes.","Using this socket option, a privileged (<code>CAP_NET_ADMIN</code>)  …","Gets the socket type as an integer.","Get and clear the pending socket error.","This option allows the caller to set the TCP congestion …","The maximum number of keepalive probes TCP should send …","The time (in seconds) the connection needs to remain idle …","The time (in seconds) between individual keepalive probes.","The maximum segment size for outgoing TCP packets.","Under most circumstances, TCP sends data when it is …","","Specifies the maximum amount of time in milliseconds that …","Specifies exact type of timestamping information collected …","Configures the behavior of time-based transmission of …eturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codelags for <code>fchmodat</code> function.","","","","","“File mode / permissions” flags.","","","“File type” flags for <code>mknod</code> and related functions.","","","","","","","","","","","","","","","","","","","","","","","","Flags for <code>utimensat</code> function.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","Change the file permission bits of the file specified by a …","Change the file permission bits.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","Change the access and modification times of the file …","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","Change the access and modification times of a file without …","","","","","Create a special or ordinary file, by pathname.","Create a special or ordinary file, relative to a given …","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","","","","","","","","","","","","","","","","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Change the access and modification times of a file.","Change the access and modification times of a file.","","","","","","","","","","","","","","","","","","","","","Describes the file system type as known by the operating …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a mounted file system","","","","","","Size of a block","Total data blocks in filesystem","Free blocks available to unprivileged user","Free blocks in filesystem","","","","","","","","","","","Total file nodes in filesystem","Free file nodes in filesystem","Filesystem ID","Magic code defining system type","","","Returns the argument unchanged.","Returns the argument unchanged.","Identifies a mounted file system","Describes a mounted file system.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Maximum length of filenames","Optimal transfer block size","Describes a mounted file system.","","","","","","","","","File system mount Flags","Append-only file","Immutable file","Allow mandatory locks on the filesystem","Do not update access times on files","Do not interpret character or block-special devices","Do not update access times on files","Do not allow execution of binaries on the filesystem","Do not allow the set-uid bits to have an effect","Read Only","Update access time relative to modify/change time","All IO should be done synchronously","Write on file/directory/symlink","Wrapper around the POSIX <code>statvfs</code> struct","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","get the file system block size","Get the number of blocks.","Get the number of free blocks for unprivileged users","Get the number of free blocks in the file system","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","Get the total number of file inodes","Get the number of free file inodes for unprivileged users","Get the number of free file inodes","Get the file system id","Get the mount flags","","","","","","","Get the fundamental file system block size","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Return a <code>Statvfs</code> object with information about <code>fd</code>","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Get the maximum filename length","Returns the complement of this set of flags.","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Return a <code>Statvfs</code> object with information about the <code>path</code>","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","Toggles the specified flags in-place.","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","System info structure returned by <code>sysinfo</code>.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns the load average tuple.","Current number of processes.","Returns the total amount of installed RAM in Bytes.","Returns the amount of completely unused RAM in Bytes.","Returns the amount of unused swap memory in Bytes.","Returns the amount of swap memory in Bytes.","Returns system information.","","","","","Returns the time since system boot.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Baud rates supported by the system.","","","","","","","","","","","","","","","","","","","Flags for setting the control mode of a terminal","","","","","","","","","","","","","Specify how transmission flow should be altered","Specify a combination of the input and output buffers to …","","","","","","","","","","","","","","","","","Flags for configuring the input mode of a terminal","Flags for setting any local modes","","","","","","","","","","","","","","Flags for configuring the output mode of a terminal","","","","","Specify when a port configuration change should occur.","Indices into the <code>termios.c_cc</code> array for special characters.","","","","","","Flush data that was received but not read","Transmit a STOP character, which should disable a …","Flush both received data not read and written data not …","Transmit a START character, which should re-enable a …","Flush data written but not transmitted","Suspend transmission","Resume transmission","The change occurs after all output has been written","Same as <code>TCSADRAIN</code>, but will also flush the input buffer","The change will occur immediately","","Stores settings for the termios API","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Get input baud rate (see cfgetispeed(3p)).","Get output baud rate (see cfgetospeed(3p)).","Configures the port to something like the “raw” mode …","Set input baud rate (see cfsetispeed(3p)).","Set output baud rate (see cfsetospeed(3p)).","Set both the input and output baud rates (see termios(3)).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Control characters (see <code>termios.c_cc</code> documentation)","Control mode flags (see <code>termios.c_cflag</code> documentation)","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","Input mode flags (see <code>termios.c_iflag</code> documentation)","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Local mode flags (see <code>termios.c_lflag</code> documentation)","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Output mode flags (see <code>termios.c_oflag</code> documentation)","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Block until all output data is written (see tcdrain(3p)).","Suspend or resume the transmission or reception of data …","Discard data in the output or input queue (see tcflush(3p)…","Return the configuration of a port tcgetattr(3p)).","Get the session controlled by the given terminal (see …","Send a break for a specific duration (see tcsendbreak(3p)).","Set the configuration for a terminal (see tcsetattr(3p)).","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Makes a new <code>TimeSpec</code> with given number of microseconds.","Makes a new <code>TimeVal</code> with given number of microseconds.","","","","","","","","Makes a new <code>TimeSpec</code> with given number of nanoseconds.","Makes a new <code>TimeVal</code> with given number of nanoseconds.  …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An enumeration allowing the definition of the expiration …","Alarm will trigger every specified interval of time.","Alarm will trigger after a specified delay and then every …","Alarm will trigger once after the time given in <code>TimeSpec</code>","A Unix signal per-process timer.","Flags that are used for arming the timer.","","","","","Returns the argument unchanged.","Get the parameters for the alarm currently set, if any.","Calls <code>U::from(self)</code>.","Creates a new timer based on the clock defined by <code>clockid</code>. …","Return the number of timers that have overrun","Set a new alarm on the timer.","","","","Like <code>CLOCK_MONOTONIC</code>, except that <code>CLOCK_BOOTTIME</code> includes …","Like <code>CLOCK_BOOTTIME</code>, but will wake the system if it is …","A non-settable monotonically increasing clock.","A settable system-wide real-time clock.","Like <code>CLOCK_REALTIME</code>, but will wake the system if it is …","The type of the clock used to mark the progress of the …","An enumeration allowing the definition of the expiration …","Alarm will trigger every specified interval of time.","Alarm will trigger after a specified delay and then every …","Alarm will trigger once after the time given in <code>TimeSpec</code>","Set the <code>FD_CLOEXEC</code> flag on the file descriptor.","Set the <code>O_NONBLOCK</code> flag on the open file description …","","A timerfd instance. This is also a file descriptor, you …","Additional flags to change the behaviour of the file …","Flags that are used for arming the timer.","Returns the set containing all flags.","Returns the set containing all flags.","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","Get the parameters for the alarm currently set, if any.","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Creates a new timer based on the clock defined by <code>clockid</code>. …","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Sets a new alarm on the timer.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Remove the alarm if any is set.","Wait for the configured alarm to expire.","A vector of buffers.","A slice of memory in a remote process, starting at address …","View the <code>IoVec</code> as a Rust slice.","The starting address of this slice (<code>iov_base</code>).","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>IoVec</code> from a mutable Rust slice.","Create an <code>IoVec</code> from a Rust slice.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The number of bytes in this slice (<code>iov_len</code>).","Low-level read from a file, with specified offset.","Read from <code>fd</code> at <code>offset</code> filling buffers in <code>iov</code>.","Read data directly from another process’s virtual memory …","Write data directly to another process’s virtual memory …","Low-level write to a file, with specified offset.","Write to <code>fd</code> at <code>offset</code> from buffers in <code>iov</code>.","Low-level vectored read from a raw file descriptor","","","","","","","","","Low-level vectored write to a raw file descriptor","Describes the running system.  Return type of <code>uname</code>.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Machine hardware platform.","Network name of this machine.","Release level of the operating system.","Name of the operating system implementation.","","","","","Get system identification","Version level of the operating system.","Wait for any child","The process was previously stopped but has resumed …","The process exited normally (as with <code>exit()</code> or returning …","The ID argument for <code>waitid</code>","Wait for the child whose process group ID matches the …","Wait for the child referred to by the given PID file …","Wait for the child whose process ID matches the given PID","The traced process was stopped by a <code>PTRACE_EVENT_*</code> event. …","The traced process was stopped by execution of a system …","The process was killed by the given signal. The third field","There are currently no state changes to report in any …","The process is alive, but was stopped by the given signal. …","Report the status of selected processes that have …","Report the status of selected processes which have …","Do not block when there are no processes wishing to report …","Don’t reap, just poll status.","An alias for WUNTRACED.","Report the status of selected processes which are stopped …","Controls the behavior of <code>waitpid</code>.","Possible return values from <code>wait()</code> or <code>waitpid()</code>.","Wait on all children, regardless of type","Wait for “clone” children only.","Don’t wait on children of other threads in this group","Returns the set containing all flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","Convert a raw <code>wstatus</code> as returned by <code>waitpid</code>/<code>wait</code> into a …","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","Extracts the PID from the WaitStatus unless it equals …","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Wait for any child process to change status or a signal is …","Wait for a process to change status","Wait for a process to change status","","","","","","","","","","","","Clock identifier","Gets the raw <code>clockid_t</code> wrapped by <code>self</code>","","","Get the clock id of the specified process id, (see …","Get the resolution of the specified clock, (see …","Get the time of the specified clock, (see clock_gettime(2)…","Set the time of the specified clock, (see clock_settime(2)…","","","","","","","","Returns the argument unchanged.","","Creates <code>ClockId</code> from raw <code>clockid_t</code>","","Calls <code>U::from(self)</code>.","Returns the current time on the clock id","","Returns <code>ClockId</code> of a <code>pid</code> CPU-time clock","Returns resolution of the clock id","Sets time to <code>timespec</code> on the clock id","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Maximum number of I/O operations in a single list I/O call …","Maximum number of outstanding asynchronous I/O operations …","The maximum amount by which a process can decrease its …","Maximum length of argument to the exec functions including …","Maximum number of functions that may be registered with …","Options for access()","Maximum obase values allowed by the bc utility.","Maximum number of elements permitted in an array by the bc …","Maximum scale value allowed by the bc utility.","Maximum length of a string constant accepted by the bc …","Maximum number of simultaneous processes per real user ID.","","Maximum number of weights that can be assigned to an entry …","","Maximum number of timer expiration overruns.","Maximum number of expressions that can be nested within …","Minimum number of bits needed to represent, as a signed …","Test for existence of file.","Flags for <code>fchownat</code> function.","","Represents the successful result of calling <code>fork</code>","Initial size of <code>getgrgid_r</code> and <code>getgrnam_r</code> data buffers","Initial size of <code>getpwuid_r</code> and <code>getpwnam_r</code> data buffers","Group identifier","Representation of a Group, based on <code>libc::group</code>","Maximum length of a host name (not including the …","Maximum number of iovec structures that one process has …","Unless otherwise noted, the maximum length, in bytes, of a …","Maximum number of links to a single file.","Maximum length of a login name.","Flags for <code>linkat</code> function.","Maximum number of bytes in a terminal canonical input line.","Minimum number of bytes for which space is available in a …","The maximum number of open message queue descriptors a …","The maximum number of message priorities supported by the …","Maximum number of bytes in a filename (not including the …","Maximum number of simultaneous supplementary group IDs per …","","","","A value one greater than the maximum value that the system …","The size of a system page in bytes.","Maximum number of bytes the implementation will store as a …","Maximum number of bytes that is guaranteed to be atomic …","Symbolic links can be created.","Minimum number of bytes of storage actually allocated for …","Recommended increment for file transfer sizes between the …","Maximum recommended file transfer size.","Minimum recommended file transfer size.","Recommended file transfer buffer alignment.","","","","","","Variable names for <code>pathconf</code>","Process identifier","","Constant for UID = 0","","Test for read permission.","","Real, effective and saved group IDs.","Real, effective and saved user IDs.","","","","","Maximum number of bytes in a symbolic link.","","Specify an offset relative to the current file location.","Specify an offset relative to the next location in the …","Specify an offset relative to the end of the file.","Specify an offset relative to the next hole in the file …","Specify an offset relative to the start of the file.","","Variable names for <code>sysconf</code>","","","","User identifier","Flags for <code>unlinkat</code> function.","Representation of a User, based on <code>libc::passwd</code>","Test for write permission.","Directive that tells <code>lseek</code> and <code>lseek64</code> what the offset is …","Test for execute (search) permission.","The implementation supports the Terminal Characteristics …","The implementation supports the C-Language Binding option.","The implementation supports the C-Language Development …","The implementation supports the FORTRAN Development …","The implementation supports the FORTRAN Runtime Utilities …","The implementation supports the creation of locales by the …","The implementation supports the Batch Environment Services …","The implementation supports the Batch Accounting option.","The implementation supports the Batch Checkpoint/Restart …","The implementation supports the Locate Batch Job Request …","The implementation supports the Batch Job Message Request …","The implementation supports the Track Batch Job Request …","The implementation supports the Software Development …","The implementation supports the User Portability Utilities …","Integer value indicating version of the Shell and …","The implementation supports the Advisory Information …","The implementation supports asynchronous input and output.","Asynchronous input or output operations may be performed …","The implementation supports barriers.","The use of <code>chown</code> and <code>fchown</code> is restricted to a process with","The implementation supports clock selection.","The implementation supports the Process CPU-Time Clocks …","The implementation supports the File Synchronization …","The implementation supports the IPv6 option.","The implementation supports job control.","The implementation supports memory mapped Files.","The implementation supports the Process Memory Locking …","The implementation supports the Range Memory Locking …","The implementation supports memory protection.","The implementation supports the Message Passing option.","The implementation supports the Monotonic Clock option.","Pathname components longer than {NAME_MAX} generate an …","The implementation supports the Prioritized Input and …","The implementation supports the Process Scheduling option.","Prioritized input or output operations may be performed …","The implementation supports the Raw Sockets option.","The implementation supports read-write locks.","The implementation supports realtime signals.","The implementation supports the Regular Expression …","Each process has a saved set-user-ID and a saved …","The implementation supports semaphores.","The implementation supports the Shared Memory Objects …","The implementation supports the POSIX shell.","The implementation supports the Spawn option.","The implementation supports spin locks.","The implementation supports the Process Sporadic Server …","","The implementation supports the Synchronized Input and …","Synchronized input or output operations may be performed …","The implementation supports threads.","The implementation supports the Thread Stack Address …","The implementation supports the Thread Stack Size …","The implementation supports the Thread CPU-Time Clocks …","The implementation supports the Thread Execution …","The implementation supports the Non-Robust Mutex Priority …","The implementation supports the Non-Robust Mutex Priority …","The implementation supports the Thread Process-Shared …","The implementation supports the Robust Mutex Priority …","The implementation supports the Robust Mutex Priority …","The implementation supports thread-safe functions.","The implementation supports the Thread Sporadic Server …","The implementation supports timeouts.","The implementation supports timers.","The implementation supports the Trace option.","The implementation supports the Trace Event Filter option.","","The implementation supports the Trace Inherit option.","The implementation supports the Trace Log option.","","","","The implementation supports the Typed Memory Objects …","The implementation provides a C-language compilation …","The implementation provides a C-language compilation …","The implementation provides a C-language compilation …","The implementation provides a C-language compilation …","This symbol shall be defined to be the value of a …","Integer value indicating version of this standard …","The implementation supports the X/Open Encryption Option …","The implementation supports the Issue 4, Version 2 Enhanced","","The implementation supports the X/Open Realtime Option …","The implementation supports the X/Open Realtime Threads …","The implementation supports the Issue 4, Version 2 Shared …","The implementation supports the XSI STREAMS Option Group.","The implementation supports the XSI option","Integer value indicating version of the X/Open Portability …","Checks the file named by <code>path</code> for accessibility according …","","Alarm signal scheduling.","Returns the set containing all flags.","Get the raw <code>uid_t</code> wrapped by <code>self</code>.","Get the raw <code>gid_t</code> wrapped by <code>self</code>.","Get the raw <code>pid_t</code> wrapped by <code>self</code>.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Change the current working directory of the calling …","Change the ownership of the file at <code>path</code> to be owned by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Close a raw file descriptor","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns Uid of calling process. This is practically a more …","Returns Gid of calling process. This is practically a more …","Daemonize this process by detaching from the controlling …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Home directory","Create a copy of the specified file descriptor (see dup(2)…","Create a copy of the specified file descriptor using the …","Create a new copy of the specified file descriptor using …","Returns effective Uid of calling process. This is …","Returns effective Gid of calling process. This is …","","","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","Replace the current process image with a new one (see …","Replace the current process image with a new one (see …","Execute program relative to a directory file descriptor …","Replace the current process image with a new one and …","Replace the current process image with a new one and …","","Change the current working directory of the process to the …","Change the ownership of the file referred to by the open …","Change the ownership of the file at <code>path</code> to be owned by …","Synchronize the data of a file","Replace the current process image with a new one (see …","","","","","","","","","","","","","","","","","","","","","","","Create a new child process duplicating the parent process (…","Like <code>pathconf</code>, but works with file descriptors instead of …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Get a group by GID.","","Get a user by name.","Get a group by name.","Creates <code>Uid</code> from raw <code>uid_t</code>.","Creates <code>Gid</code> from raw <code>gid_t</code>.","Creates <code>Pid</code> from raw <code>pid_t</code>.","Get a user by UID.","Synchronize changes to a file","Truncate a file to a specified length","User information","Returns the current directory as a <code>PathBuf</code>","Get the effective group ID","Get the effective user ID","Get the real group ID","Calculate the supplementary group access list.","Get the list of supplementary group IDs of the calling …","Get the host name and store it in the provided buffer, …","","Get the group id of the calling process (see getpgrp(3)).","Get the pid of this process (see getpid(2)).","Get the pid of this processes’ parent (see getpid(2)).","Gets the real, effective, and saved group IDs.","Gets the real, effective, and saved user IDs.","Get the process group ID of a session leader getsid(2).","Get the caller’s thread ID (see gettid(2).","Get a real user ID","Group ID","Group ID","","","","","","","Initialize the supplementary group access list.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Return <code>true</code> if this is the child process of the <code>fork()</code>","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if this is the parent process of the <code>fork()</code>","Returns true if the <code>Uid</code> represents privileged user - root. …","","Link one file to another file","Move the read/write file offset.","","List of Group members","Creates new directory <code>path</code> with access rights <code>mode</code>.  (see …","Creates new fifo special file (named pipe) with path <code>path</code> …","Creates new fifo special file (named pipe) with path <code>path</code> …","Creates a regular file which persists even after process …","Username","Group name","Returns the complement of this set of flags.","Returns PID of parent of calling process","","","User password (probably encrypted)","Group password","Get path-dependent configurable system variables (see …","Suspend the thread until a signal is received.","Create an interprocess channel.","Like <code>pipe</code>, but allows setting certain file descriptor …","","Read from a raw file descriptor.","","","Removes the specified flags in-place.","","","Inserts or removes the specified flags depending on the …","Set the effective group ID","Set the effective user ID","Set the group identity used for filesystem checks …","Set the user identity used for filesystem checks …","Set the group ID","Set the list of supplementary group IDs for the calling …","Set the system host name (see sethostname(2)).","Set a process group ID (see setpgid(2)).","Sets the real, effective, and saved gid. (see setresuid(2))","Sets the real, effective, and saved uid. (see setresuid(2))","Create new session and set process group id (see setsid(2)…","Set the user ID","Path to shell","Suspend execution for an interval of time","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Creates a symbolic link at <code>path2</code> which points to <code>path1</code>.","Returns the symmetric difference between the flags in <code>self</code> …","Commit filesystem caches to disk","Get configurable system variables (see sysconf(3))","Get the terminal foreground process group (see tcgetpgrp(3)…","Set the terminal foreground process group (see tcgetpgrp(3)…","Returns PID of calling process","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","Truncate a file to a specified length","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the name of the terminal device that is open on file …","","","","","","","","","","","","","","","","User ID","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Remove a directory entry","Remove a directory entry","Write to a raw file descriptor.","","Disable process accounting","Enable process accounting","Cancel an previously set alarm signal.","Schedule an alarm signal."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,9,9,0,9,0,9,9,0,0,9,9,0,5,7,5,10,7,8,9,5,10,7,8,9,8,9,8,9,5,10,5,10,7,8,9,5,10,7,8,9,8,8,5,10,7,8,9,5,5,10,7,8,9,5,5,10,7,8,9,8,5,10,7,8,9,5,10,7,5,10,7,5,5,8,9,5,10,7,8,9,5,10,7,8,9,5,10,7,8,9,0,24,24,0,24,24,24,24,24,24,24,24,24,24,24,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,0,0,26,26,26,26,26,26,26,26,26,26,26,0,26,26,26,26,0,26,26,26,26,26,30,26,26,26,26,26,26,33,33,33,33,33,0,38,38,38,38,38,38,36,46,46,46,46,46,46,46,46,46,46,46,35,35,35,35,46,46,46,46,46,0,0,0,0,42,42,42,42,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,43,43,43,43,43,43,0,34,34,34,0,37,37,37,37,0,0,42,42,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,42,37,38,43,33,20,34,35,36,42,37,38,43,33,20,34,35,36,37,38,43,33,20,34,35,36,37,38,33,20,34,35,36,37,38,0,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,37,38,0,0,0,33,33,33,33,33,20,20,20,20,20,34,34,34,34,34,35,35,35,35,35,36,36,36,36,36,46,42,37,37,37,37,37,38,38,38,38,38,43,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,0,0,33,20,34,35,36,37,38,43,0,0,0,0,33,20,34,35,36,37,38,0,0,33,20,34,35,36,37,38,0,33,20,34,35,36,37,38,33,20,34,35,36,37,38,33,20,34,35,36,37,38,0,33,20,34,35,36,42,37,38,43,33,20,34,35,36,37,38,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,46,42,37,38,43,33,20,34,35,36,37,38,0,0,0,0,52,52,53,52,53,52,52,52,52,53,52,53,52,53,52,52,53,52,53,0,52,53,52,52,53,53,52,53,52,52,53,52,53,52,53,0,54,54,0,55,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,0,54,55,54,55,54,55,54,55,54,55,0,54,54,54,54,54,55,55,55,55,55,54,55,54,55,54,55,54,55,54,55,54,55,0,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,54,55,59,59,59,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,0,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,58,58,58,58,59,59,59,59,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,0,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,58,59,0,0,58,59,62,0,0,0,0,61,61,61,61,61,61,61,61,62,61,62,61,62,61,62,61,62,61,62,61,62,61,62,61,62,63,65,61,62,63,65,61,62,63,61,62,63,61,62,61,62,61,62,63,61,62,61,62,61,62,63,61,62,63,61,62,63,61,61,61,61,61,62,62,62,62,62,63,65,61,62,63,65,61,62,61,62,61,62,61,62,61,62,63,61,62,61,62,61,62,61,62,63,65,61,62,61,62,63,0,0,0,0,0,0,0,0,0,0,63,63,61,62,61,62,61,62,61,62,61,62,61,62,61,62,61,62,63,61,62,61,62,63,65,61,62,63,65,61,62,63,65,61,62,0,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,0,0,0,0,66,66,66,66,66,66,66,66,68,67,66,69,68,67,66,69,66,66,66,66,66,66,67,66,66,66,66,68,67,66,66,66,66,66,69,68,67,66,69,66,66,66,66,66,0,0,68,66,66,66,68,67,66,69,67,69,66,66,67,68,69,66,66,66,66,66,66,66,66,67,66,68,67,66,69,68,67,66,69,68,67,66,69,66,70,70,70,70,70,70,70,70,70,70,0,0,70,71,70,70,70,70,70,70,70,71,70,71,70,71,70,71,70,70,70,70,70,70,71,70,71,70,71,70,71,70,70,70,70,70,71,70,70,70,70,70,71,70,70,70,70,71,70,70,70,71,70,70,0,0,70,71,70,71,70,70,70,71,70,70,71,70,71,70,71,70,70,0,0,0,0,0,75,76,77,78,75,76,77,78,75,76,77,78,76,77,78,75,76,77,75,76,77,75,75,75,76,77,78,75,78,0,84,76,77,78,75,0,76,77,75,76,77,78,75,75,77,78,0,0,0,0,75,75,77,76,77,78,76,77,78,75,76,77,78,75,76,77,78,75,0,75,75,76,76,76,76,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,85,85,85,85,85,85,85,85,85,87,85,87,0,85,87,85,87,85,85,85,87,87,85,85,85,87,85,87,85,85,85,85,85,85,87,85,87,85,85,85,85,85,87,85,85,85,85,87,85,85,87,87,85,85,85,0,0,0,85,87,0,85,85,85,85,87,85,85,87,85,87,85,87,85,87,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,0,88,0,0,88,95,94,95,94,95,0,0,0,0,96,96,0,89,93,0,97,89,93,97,88,94,95,96,89,93,97,88,94,95,96,89,88,94,95,96,88,94,95,96,94,95,96,89,97,97,88,94,95,96,88,94,95,96,89,93,89,97,89,93,97,88,94,95,96,89,93,97,88,94,95,96,89,89,89,89,89,89,88,94,95,96,89,93,97,88,94,95,96,93,93,89,93,93,89,89,94,95,96,89,89,89,89,88,94,95,96,89,93,97,88,94,95,96,89,93,97,88,94,95,96,89,93,97,88,94,95,96,97,89,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,102,0,103,103,103,0,0,0,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,103,102,104,101,103,102,104,101,103,102,104,101,103,102,104,101,102,101,102,101,102,104,101,102,101,102,104,0,0,0,0,101,103,102,104,101,103,102,104,104,101,102,101,101,101,101,101,103,102,102,102,102,102,104,101,103,102,104,101,102,101,102,101,102,101,102,101,103,102,104,101,102,101,102,101,102,101,103,102,104,101,102,101,102,104,101,102,101,102,101,102,101,102,101,102,101,102,101,102,101,103,102,104,101,102,101,103,102,104,101,103,102,104,101,103,102,104,101,102,105,105,105,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,0,107,107,107,109,107,107,107,107,107,107,107,107,107,107,107,107,107,107,109,107,107,107,107,107,0,0,0,0,106,107,109,106,107,109,107,109,107,109,107,109,107,109,107,109,107,109,107,109,106,108,110,107,109,106,108,110,107,109,106,108,107,109,106,108,107,109,108,107,109,107,109,110,107,109,107,109,107,109,108,107,109,108,107,109,107,107,107,107,107,109,109,109,109,109,106,108,110,107,109,106,108,110,107,109,107,109,107,109,107,109,106,107,109,108,106,107,109,107,109,107,109,107,109,106,108,110,107,109,107,109,110,110,107,109,107,109,108,106,107,109,106,107,109,107,109,107,109,107,109,107,109,106,108,107,109,107,109,106,108,110,107,109,106,108,110,107,109,106,108,110,107,109,110,0,0,0,0,112,112,0,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,0,112,112,112,112,112,112,112,112,112,112,112,112,112,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,117,117,115,115,0,116,116,116,0,0,0,0,113,113,113,113,113,113,0,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,118,116,117,113,114,115,118,116,117,113,114,115,118,116,117,113,114,115,118,116,117,113,114,115,118,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,118,116,117,113,114,115,118,116,117,113,114,115,116,117,113,113,113,113,113,114,114,114,114,114,115,115,115,115,115,118,116,116,116,116,116,117,117,117,117,117,113,114,115,118,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,118,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,118,116,117,113,114,115,116,117,113,114,115,116,117,0,0,0,0,0,0,0,0,0,0,113,114,115,116,117,113,114,115,118,116,117,113,114,115,116,117,113,114,115,116,117,0,0,113,114,115,116,117,113,114,115,116,117,113,114,115,116,117,113,114,115,118,116,117,113,114,115,116,117,113,114,115,118,116,117,113,114,115,118,116,117,113,114,115,118,116,117,113,114,115,116,117,120,120,120,120,120,120,0,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,0,120,120,120,120,120,120,120,120,120,120,0,120,120,120,120,120,120,120,120,120,120,0,0,0,0,0,0,124,124,124,125,125,125,125,125,125,125,125,124,124,124,124,124,124,124,124,124,123,123,123,123,123,123,123,123,123,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,0,123,0,123,123,123,123,123,123,123,124,125,123,124,125,123,124,125,123,124,125,123,124,125,123,123,0,123,0,123,123,124,125,123,124,125,123,123,124,125,123,123,123,123,123,124,125,123,123,123,123,123,0,0,0,124,125,123,123,0,123,123,124,125,123,123,123,0,123,124,125,123,0,123,0,123,0,0,0,0,123,123,123,0,0,0,124,125,123,123,0,124,125,123,124,125,123,124,125,123,123,0,0,132,133,133,133,130,130,130,130,130,130,130,130,130,130,0,0,0,132,130,131,130,130,130,130,130,130,130,131,131,131,132,133,131,130,132,133,131,130,132,133,131,130,132,133,131,130,132,133,130,130,130,131,130,130,130,132,133,131,130,132,133,131,130,130,132,133,131,130,130,130,130,130,132,133,131,130,130,130,130,130,132,133,131,130,131,131,131,130,130,130,132,133,131,130,130,130,130,131,132,133,130,0,0,0,0,0,130,130,131,131,131,131,131,131,130,130,130,132,133,131,130,130,132,133,131,130,132,133,131,130,132,133,131,130,130,134,134,134,134,134,0,134,134,134,134,134,134,134,134,134,134,134,134,0,0,134,134,134,134,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,0,136,136,136,136,136,136,136,136,136,0,136,136,136,0,0,136,136,136,136,0,0,0,138,139,138,139,138,138,138,138,138,138,138,138,138,139,138,139,138,138,138,138,139,139,138,139,139,0,138,0,139,138,138,139,138,139,138,139,0,0,148,142,142,142,142,142,142,142,122,122,122,122,122,122,122,122,122,122,0,122,122,0,122,122,122,122,122,122,122,122,122,122,122,122,0,122,122,122,122,122,122,122,146,146,146,0,0,148,148,0,0,148,0,0,98,0,98,98,0,0,0,74,142,74,100,122,74,122,142,142,142,142,142,142,142,122,145,142,146,74,147,148,149,98,100,122,145,142,146,74,147,148,149,98,100,74,122,145,142,146,74,147,148,149,98,100,122,145,142,146,74,147,148,149,98,100,122,142,146,142,142,74,142,142,74,122,145,142,146,74,148,149,98,100,122,145,142,146,74,148,149,98,100,142,74,149,122,122,145,142,142,142,142,142,146,74,147,148,149,98,100,122,145,142,146,74,147,148,149,98,100,100,142,142,142,142,74,122,149,122,145,142,146,74,148,149,98,100,142,142,142,122,145,142,146,74,147,148,149,98,100,145,74,147,142,142,74,122,0,0,149,149,100,145,147,142,122,142,146,0,0,142,74,142,0,100,0,0,142,142,142,74,74,74,74,74,122,145,142,146,74,147,148,149,98,100,122,142,122,122,145,142,146,74,147,148,149,98,100,122,145,142,146,74,147,148,149,98,100,122,145,142,146,74,147,148,149,98,100,0,142,74,340,341,340,341,341,150,150,0,0,0,0,0,150,151,150,150,150,150,150,150,150,152,150,151,152,150,151,152,150,152,150,150,150,150,150,151,150,152,150,151,152,150,151,150,152,150,150,150,150,150,151,152,150,151,150,150,150,150,152,150,151,150,150,150,152,150,151,151,150,150,151,151,150,150,151,150,150,151,0,0,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,150,150,150,152,150,150,152,150,151,152,150,151,152,150,151,150,151,0,162,194,0,188,188,188,194,194,194,194,194,194,189,194,194,194,0,0,0,179,194,194,0,194,194,162,194,194,0,0,0,0,186,188,186,0,0,186,188,186,194,194,194,194,194,162,0,194,158,158,158,158,158,158,158,158,158,158,194,0,194,194,162,194,0,180,180,180,180,180,180,180,180,180,180,180,180,180,180,194,194,194,194,179,179,194,189,0,0,194,194,186,188,153,153,157,157,157,157,157,157,186,188,186,188,186,186,186,194,0,179,0,0,194,0,0,0,0,0,0,0,0,179,180,0,0,194,188,180,186,188,162,194,0,0,194,192,193,192,193,208,214,162,194,0,194,189,194,197,0,0,154,197,184,156,156,157,153,158,159,160,161,161,162,161,161,160,161,161,175,175,160,160,164,156,154,169,171,173,161,161,161,161,161,161,161,161,0,157,153,158,157,153,158,157,153,158,157,153,158,157,153,158,157,153,158,157,153,158,165,174,172,163,176,160,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,197,199,189,190,162,171,173,191,159,192,193,194,165,174,172,163,176,160,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,197,199,189,190,162,171,173,191,159,192,193,194,184,169,165,174,172,163,176,160,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,189,190,162,171,173,191,159,192,193,194,165,174,172,163,176,160,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,189,190,162,171,173,191,159,192,193,194,157,153,158,199,178,178,178,0,184,197,157,153,158,0,157,153,158,190,157,153,158,157,153,158,165,174,172,163,176,160,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,189,190,162,171,173,191,159,192,193,194,165,174,172,163,176,160,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,189,190,162,171,173,191,159,192,193,194,157,153,158,175,175,162,184,171,165,174,172,163,176,160,160,161,161,164,164,156,156,154,154,169,169,177,178,179,180,157,157,157,157,157,153,153,153,153,153,158,158,158,158,158,181,182,184,185,186,187,188,197,199,189,190,162,162,171,171,173,173,191,191,159,159,192,192,193,193,194,165,174,172,163,176,160,161,161,161,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,197,199,189,190,190,162,171,171,173,173,191,159,192,193,194,157,153,158,157,153,158,157,153,158,194,157,153,158,175,160,161,164,156,154,169,162,171,173,191,159,192,193,171,173,208,0,0,0,190,164,154,165,174,172,163,176,160,161,164,156,154,169,177,178,180,157,153,158,189,162,171,173,191,159,192,193,194,154,187,187,154,157,153,158,157,153,158,157,153,158,165,174,172,163,176,160,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,197,199,189,190,162,171,173,191,159,192,193,194,185,197,199,171,173,193,157,153,158,157,153,158,175,175,160,161,0,177,177,177,177,177,177,177,0,160,164,156,169,181,182,190,173,191,159,193,160,162,162,162,162,192,192,162,185,157,153,158,159,157,153,158,160,160,164,190,154,169,171,173,193,154,0,0,0,0,157,153,158,165,165,0,171,191,0,0,0,0,214,157,153,158,0,0,172,172,172,172,172,174,174,174,174,175,175,160,0,0,0,0,0,0,0,0,0,176,157,153,158,157,153,158,163,163,157,153,158,187,165,174,172,163,176,160,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,189,190,162,171,173,191,159,192,193,194,191,159,192,193,162,193,160,161,164,156,154,169,162,171,173,191,159,192,193,157,153,158,165,174,172,163,176,160,161,164,156,154,169,177,178,179,179,180,157,153,158,181,182,184,185,186,187,188,197,199,189,190,162,171,173,191,159,192,193,194,165,174,172,163,176,160,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,197,199,189,190,162,171,173,191,159,192,193,194,165,174,172,163,176,160,161,164,156,154,169,177,178,179,180,157,153,158,181,182,184,185,186,187,188,197,199,189,190,162,171,173,191,159,192,193,194,190,157,153,158,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,266,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,216,217,218,219,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,267,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,230,232,233,234,235,236,237,238,239,240,243,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,0,0,0,276,277,0,276,277,0,274,274,274,274,274,274,274,274,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,274,21,274,21,274,21,274,21,274,21,274,21,274,21,274,21,273,274,21,276,277,273,274,21,276,277,273,274,21,276,277,273,274,21,276,277,274,21,274,21,274,21,0,274,21,274,21,273,274,21,273,274,21,274,21,0,0,273,274,274,274,274,274,21,21,21,21,21,276,277,273,274,21,276,277,274,21,274,21,274,21,274,21,0,0,0,273,274,21,274,21,274,21,274,21,273,274,21,276,277,274,21,274,21,0,0,0,0,0,0,0,0,0,274,21,274,21,274,21,274,21,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,0,274,21,274,21,274,21,273,274,21,276,277,274,21,273,274,21,276,277,273,274,21,276,277,273,274,21,276,277,0,274,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,279,279,279,279,279,281,279,281,279,281,279,281,281,281,279,279,279,279,279,281,279,281,0,0,279,281,279,279,0,279,281,279,281,279,281,279,281,0,283,283,283,283,283,283,283,283,283,283,283,283,0,283,283,283,283,283,283,283,283,284,284,284,284,283,284,283,284,283,284,283,284,283,283,283,283,283,283,283,284,283,284,283,284,284,284,284,284,283,283,283,283,283,284,284,283,284,283,283,283,283,0,283,284,283,283,283,283,284,283,283,284,283,283,283,283,0,283,283,283,283,284,283,283,284,283,284,283,284,283,0,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,0,287,287,287,287,287,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,289,290,290,290,0,291,291,291,291,291,290,290,290,290,290,291,291,291,291,291,291,291,291,0,292,292,292,292,292,292,292,292,290,290,290,292,0,0,291,292,289,292,289,289,289,289,289,289,292,289,289,289,289,289,0,0,0,290,290,290,292,290,290,290,290,290,290,290,290,0,291,289,291,292,0,0,290,290,290,290,290,296,297,296,297,296,297,297,295,295,295,292,0,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,290,290,290,298,298,290,0,289,290,291,292,289,290,291,292,289,290,291,292,289,290,291,292,289,290,291,292,289,290,291,292,289,290,291,292,289,290,291,292,82,294,295,296,297,298,289,290,291,292,82,294,295,296,297,298,289,290,291,292,0,0,0,0,0,0,82,294,295,296,297,298,289,290,291,292,82,294,295,296,297,298,289,290,291,292,294,295,296,297,298,289,290,291,292,289,290,291,292,289,290,291,292,82,82,289,290,291,292,289,290,291,292,82,294,295,296,297,298,289,290,291,292,82,294,295,296,297,298,289,290,291,292,289,290,291,292,82,294,295,296,297,298,289,289,289,289,289,290,290,290,290,290,291,291,291,291,291,292,292,292,292,292,82,82,294,295,296,297,298,289,290,291,292,289,290,291,292,289,290,291,292,289,290,291,292,289,290,291,292,294,295,296,297,298,289,290,291,292,82,289,290,291,292,289,290,291,292,289,290,291,292,82,294,295,296,297,298,289,290,291,292,289,290,291,292,289,290,291,292,82,289,290,291,292,82,294,295,296,297,298,289,290,291,292,289,290,291,292,289,290,291,292,289,290,291,292,289,290,291,292,289,290,291,292,0,0,0,0,0,0,0,82,294,295,296,297,298,289,290,291,292,289,290,291,292,82,294,294,295,296,297,298,289,290,291,292,82,294,295,296,297,298,289,290,291,292,82,294,295,296,297,298,289,290,291,292,289,290,291,292,0,0,0,73,140,73,140,73,140,73,140,73,140,73,140,73,140,73,140,73,140,73,140,73,140,73,73,140,140,73,73,73,140,140,73,73,73,140,342,73,140,342,73,140,342,73,140,342,73,140,342,73,140,73,140,342,342,73,140,342,73,140,342,342,73,140,342,73,140,73,140,342,73,140,73,140,0,0,73,140,73,140,73,140,73,140,73,73,140,140,73,140,342,0,307,307,307,0,0,306,306,306,306,306,306,306,306,306,306,306,306,306,312,312,312,312,312,0,0,307,307,307,310,310,309,0,0,0,309,310,311,309,310,309,310,309,310,309,310,309,310,309,310,309,310,307,309,311,312,310,307,309,311,312,310,307,309,312,310,307,309,312,310,309,312,310,309,310,309,310,309,310,311,309,310,307,309,312,310,307,309,312,310,309,310,307,309,309,309,309,309,311,312,310,310,310,310,310,307,309,311,312,310,309,310,309,310,309,310,309,310,311,311,309,312,310,309,310,309,310,309,310,307,309,311,312,310,309,310,309,310,311,309,310,309,312,310,309,310,309,311,310,309,310,309,310,309,310,307,309,312,310,309,310,307,309,311,312,310,307,309,311,312,310,307,309,311,312,310,309,310,311,311,0,0,313,314,314,313,314,313,314,313,314,313,314,313,314,313,314,313,314,313,313,313,314,313,314,313,314,0,0,0,0,0,0,0,314,313,314,313,314,313,314,313,0,0,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,0,316,320,319,319,0,320,320,320,319,319,319,319,319,318,318,318,318,318,318,0,0,318,318,318,318,318,318,318,318,318,318,318,318,319,320,318,319,320,318,319,320,318,319,320,318,320,318,318,318,318,318,319,320,318,319,320,318,318,318,318,318,318,319,320,318,319,320,318,318,318,318,319,318,319,320,318,318,318,318,319,320,318,318,318,318,320,319,318,318,318,318,318,318,319,320,318,318,319,320,318,319,320,318,319,320,318,0,0,0,308,308,308,308,308,308,308,308,308,308,308,0,308,308,308,0,0,0,0,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,0,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,332,332,332,332,332,0,332,332,332,332,332,332,332,326,332,332,331,323,0,327,0,332,332,0,0,332,332,332,331,332,0,331,331,332,332,331,332,327,330,329,332,332,331,331,331,331,331,331,331,331,332,332,332,332,326,0,0,332,0,332,323,330,0,0,332,332,332,332,331,332,328,328,328,328,328,329,0,332,332,332,0,0,0,323,0,323,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,331,332,331,332,332,332,332,332,332,332,332,332,332,332,331,332,332,331,332,332,332,332,332,332,332,332,332,332,332,332,332,331,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,332,331,332,332,332,332,332,332,332,332,332,332,0,0,0,323,324,325,83,323,323,323,323,323,323,323,324,325,83,326,327,328,329,330,331,332,333,334,323,335,336,324,325,83,326,327,328,329,330,331,332,333,334,323,335,336,0,0,0,324,325,83,326,327,328,329,330,331,332,333,334,323,335,336,324,325,83,326,327,328,329,330,331,332,333,334,323,335,336,0,83,323,323,323,324,325,0,323,335,0,0,0,324,325,333,334,323,324,325,83,331,332,333,334,323,335,336,324,325,83,331,332,333,334,323,335,336,0,0,0,0,0,323,0,0,0,0,0,324,324,325,325,83,83,326,327,328,329,330,331,332,333,334,323,323,323,323,323,335,336,0,0,324,325,83,326,327,328,329,330,331,332,333,334,323,335,335,336,336,323,323,323,336,323,335,336,324,325,83,335,0,0,335,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,335,336,324,325,83,331,332,323,0,323,323,323,324,325,83,326,327,328,329,330,331,332,333,334,323,335,336,323,326,323,326,324,0,0,0,0,336,0,0,0,0,335,336,323,83,83,323,335,336,0,0,0,0,0,0,333,334,323,333,334,323,0,0,0,0,0,0,0,0,0,0,0,0,335,0,323,323,0,323,0,0,0,0,83,324,325,83,326,327,328,329,330,331,332,333,334,323,335,336,324,325,83,323,0,324,325,83,326,327,328,329,330,331,332,333,334,323,335,336,324,325,83,326,327,328,329,330,331,332,333,334,323,335,336,0,324,325,83,326,327,328,329,330,331,332,333,334,323,335,336,335,323,0,0,0,343,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],0,[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[3,4],0,0,0,0,0,0,0,0,0,0,0,0,[5,6],[7,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[9,9],[[]],[[]],[5],[10],[[5,5],1],[[10,10],1],[[7,7],1],[[8,8],1],[[9,9],1],[[],1],[[],1],[[],1],[[],1],[[],1],[8,11],[8,[[12,[9]]]],[[5,13],14],[[10,13],14],[[7,13],14],[[8,13],14],[[9,13],14],[15,[[4,[5]]]],[[]],[[]],[[]],[[]],[[]],[6,[[4,[5]]]],[[5,16]],[[10,16]],[[7,16]],[[8,16]],[[9,16]],[8,17],[[]],[[]],[[]],[[]],[[]],[5],[[]],[[]],[5,10],[10,12],[7,12],[[[0,[18,19]],20,21],[[4,[5]]]],[[6,[0,[18,19]],20,21],[[4,[5]]]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[]],[[]],[[],[[22,[24]]]],[24,24],[[]],[[24,13],14],[[24,13],14],[[]],[[]],[[]],[[],25],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26,27],0,[26,[[12,[26]]]],[[]],[[]],[[]],[26,26],[[]],[26,28],[[26,26],1],[[],1],[[],29],[[26,13],14],[[26,13],14],[[]],[26,27],[29,26],[29,26],[[]],[[],27],[[],26],[[[0,[30,[31,[[0,[30,[31,[[0,[30,[31,[[0,[30,[31,[[0,[30,31]]]]]]]]]]]]]]]]]]],[[4,[[0,[30,[31,[[0,[30,[31,[[0,[30,[31,[[0,[30,31]]]]]]]]]]]]]]]]]],[[]],[[]],[[],25],[32,[[22,[26,32]]]],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],33],[[],20],[[],34],[[],35],[[],36],[[],37],[[],38],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[33,39],[20,39],[34,40],[35,39],[36,39],[37,41],[38,39],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,33],[20,20],[34,34],[35,35],[36,36],[42,42],[37,37],[38,38],[43,43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,33],44],[[20,20],44],[[34,34],44],[[35,35],44],[[36,36],44],[[37,37],44],[[38,38],44],[[43,43],44],[33,33],[20,20],[34,34],[35,35],[36,36],[37,37],[38,38],[[33,33],1],[[20,20],1],[[34,34],1],[[35,35],1],[[36,36],1],[[37,37],1],[[38,38],1],[[6,[12,[45]],6,[12,[45]],2],[[4,[2]]]],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[],33],[[],20],[[],34],[[],35],[[],36],[[],37],[[],38],[[33,33],1],[[20,20],1],[[34,34],1],[[35,35],1],[[36,36],1],[[46,46],1],[[42,42],1],[[37,37],1],[[38,38],1],[[43,43],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[33,47]],[[20,47]],[[34,47]],[[35,47]],[[36,47]],[[37,47]],[[38,47]],[[6,38,48,48],4],[[6,46],[[4,[39]]]],[[6,42],4],[[33,13],14],[[33,13],14],[[33,13],14],[[33,13],14],[[33,13],14],[[20,13],14],[[20,13],14],[[20,13],14],[[20,13],14],[[20,13],14],[[34,13],14],[[34,13],14],[[34,13],14],[[34,13],14],[[34,13],14],[[35,13],14],[[35,13],14],[[35,13],14],[[35,13],14],[[35,13],14],[[36,13],14],[[36,13],14],[[36,13],14],[[36,13],14],[[36,13],14],[[46,13],14],[[42,13],14],[[37,13],14],[[37,13],14],[[37,13],14],[[37,13],14],[[37,13],14],[[38,13],14],[[38,13],14],[[38,13],14],[[38,13],14],[[38,13],14],[[43,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,[[12,[33]]]],[39,[[12,[20]]]],[40,[[12,[34]]]],[39,[[12,[35]]]],[39,[[12,[36]]]],[41,[[12,[37]]]],[39,[[12,[38]]]],[39,33],[39,20],[40,34],[39,35],[39,36],[41,37],[39,38],[39,33],[39,20],[40,34],[39,35],[39,36],[41,37],[39,38],[47,33],[47,20],[47,34],[47,35],[47,36],[47,37],[47,38],[[33,16]],[[20,16]],[[34,16]],[[35,16]],[[36,16]],[[46,16]],[[42,16]],[[37,16]],[[38,16]],[[43,16]],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[33,33],1],[[20,20],1],[[34,34],1],[[35,35],1],[[36,36],1],[[37,37],1],[[38,38],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[33,1],[20,1],[34,1],[35,1],[36,1],[37,1],[38,1],[33,1],[20,1],[34,1],[35,1],[36,1],[37,1],[38,1],[33,33],[20,20],[34,34],[35,35],[36,36],[37,37],[38,38],[[[0,[18,19]],20,21],[[4,[6]]]],[[6,[0,[18,19]],20,21],[[4,[6]]]],[[33,33],[[12,[44]]]],[[20,20],[[12,[44]]]],[[34,34],[[12,[44]]]],[[35,35],[[12,[44]]]],[[36,36],[[12,[44]]]],[[37,37],[[12,[44]]]],[[38,38],[[12,[44]]]],[[43,43],[[12,[44]]]],[[6,48,48,43],4],[[6,48,48],4],[[[0,[18,19]]],[[4,[49]]]],[[6,[0,[18,19]]],[[4,[49]]]],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[[12,[6]],[0,[18,19]],[12,[6]],[0,[18,19]]],4],[[[12,[6]],[0,[18,19]],[12,[6]],[0,[18,19]],34],4],[[33,33,1]],[[20,20,1]],[[34,34,1]],[[35,35,1]],[[36,36,1]],[[37,37,1]],[[38,38,1]],[[6,[12,[45]],6,[12,[45]],2,37],[[4,[2]]]],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[6,6,2,37],[[4,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[33,33]],[[20,20]],[[34,34]],[[35,35]],[[36,36]],[[37,37]],[[38,38]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[33,33],33],[[20,20],20],[[34,34],34],[[35,35],35],[[36,36],36],[[37,37],37],[[38,38],38],[[6,[51,[50]],37],[[4,[2]]]],[[],1],0,0,0,[[]],[[]],[[]],[[]],0,[52,52],[[]],0,[53],[[52,52],1],[[53,53],1],[[],1],[[],1],0,[[52,13],14],[[53,13],14],[[]],[[]],[[],[[4,[53]]]],[[52,16]],[[53,16]],0,[[]],[[]],[[]],0,[53,12],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],0,0,0,0,0,0,[[],54],[[],55],[[54,54],54],[[55,55],55],[[54,54]],[[55,55]],[[54,54],54],[[55,55],55],[[54,54]],[[55,55]],[54,41],[55,39],[[54,54],54],[[55,55],55],[[54,54]],[[55,55]],[[]],[[]],[[]],[[]],[54,54],[55,55],[[]],[[]],[[54,54],44],[[55,55],44],[54,54],[55,55],[[54,54],1],[[55,55],1],[[11,55],4],[[54,54],54],[[55,55],55],[[],54],[[],55],[[54,54],1],[[55,55],1],[[],1],[[],1],[[54,47]],[[55,47]],[[56,11,54],4],[[54,13],14],[[54,13],14],[[54,13],14],[[54,13],14],[[54,13],14],[[55,13],14],[[55,13],14],[[55,13],14],[[55,13],14],[[55,13],14],[[]],[[]],[41,[[12,[54]]]],[39,[[12,[55]]]],[41,54],[39,55],[41,54],[39,55],[47,54],[47,55],[[54,16]],[[55,16]],[[[51,[57]],11],4],[[54,54]],[[55,55]],[[54,54],54],[[55,55],55],[[54,54],1],[[55,55],1],[[]],[[]],[54,1],[55,1],[54,1],[55,1],[54,54],[55,55],[[54,54],[[12,[44]]]],[[55,55],[[12,[44]]]],[[54,54]],[[55,55]],[[54,54,1]],[[55,55,1]],[[54,54],54],[[55,55],55],[[54,54]],[[55,55]],[[54,54],54],[[55,55],55],[[]],[[]],[[54,54]],[[55,55]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[54,54],54],[[55,55],55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],58],[[],59],[[58,58],58],[[59,59],59],[[58,58]],[[59,59]],[[58,58],58],[[59,59],59],[[58,58]],[[59,59]],[58,60],[59,39],[[58,58],58],[[59,59],59],[[58,58]],[[59,59]],[[]],[[]],[[]],[[]],[58,58],[59,59],[[]],[[]],[[58,58],44],[[59,59],44],[58,58],[59,59],[[58,58],1],[[59,59],1],[[58,58],58],[[59,59],59],[[],58],[[],59],[[58,58],1],[[59,59],1],[[],1],[[],1],[[58,47]],[[59,47]],[[58,13],14],[[58,13],14],[[58,13],14],[[58,13],14],[[58,13],14],[[59,13],14],[[59,13],14],[[59,13],14],[[59,13],14],[[59,13],14],[[]],[[]],[60,[[12,[58]]]],[39,[[12,[59]]]],[60,58],[39,59],[60,58],[39,59],[47,58],[47,59],[[58,16]],[[59,16]],[[58,58]],[[59,59]],[[58,58],58],[[59,59],59],[[58,58],1],[[59,59],1],[[]],[[]],[58,1],[59,1],[58,1],[59,1],[[[12,[[0,[18,19]]]],[0,[18,19]],[12,[[0,[18,19]]]],58,[12,[[0,[18,19]]]]],4],[58,58],[59,59],[[58,58],[[12,[44]]]],[[59,59],[[12,[44]]]],[[58,58]],[[59,59]],[[58,58,1]],[[59,59,1]],[[58,58],58],[[59,59],59],[[58,58]],[[59,59]],[[58,58],58],[[59,59],59],[[]],[[]],[[58,58]],[[59,59]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[[0,[18,19]]],4],[[[0,[18,19]],59],4],[[58,58],58],[[59,59],59],0,0,0,0,0,0,0,0,0,0,0,0,[[],61],[[],62],[[61,61],61],[[62,62],62],[[61,61]],[[62,62]],[[61,61],61],[[62,62],62],[[61,61]],[[62,62]],[61,39],[62,39],[[61,61],61],[[62,62],62],[[61,61]],[[62,62]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,61],[62,62],[63,63],[[]],[[]],[[]],[[61,61],44],[[62,62],44],[61,61],[62,62],[[61,61],1],[[62,62],1],[63,64],[[61,61],61],[[62,62],62],[[],61],[[],62],[[61,61],1],[[62,62],1],[[63,63],1],[[],1],[[],1],[[],1],[[61,47]],[[62,47]],[63,64],[[61,13],14],[[61,13],14],[[61,13],14],[[61,13],14],[[61,13],14],[[62,13],14],[[62,13],14],[[62,13],14],[[62,13],14],[[62,13],14],[[63,13],14],[[65,13],14],[[]],[[]],[[]],[[]],[39,[[12,[61]]]],[39,[[12,[62]]]],[39,61],[39,62],[39,61],[39,62],[47,61],[47,62],[[61,16]],[[62,16]],[[63,16]],[[61,61]],[[62,62]],[[61,61],61],[[62,62],62],[[61,61],1],[[62,62],1],[[]],[[]],[[]],[[]],[61,1],[62,1],[61,1],[62,1],[63,64],0,[65,4],[65,[[4,[63]]]],[[11,61,21,[12,[63]]],[[4,[65]]]],[[65,[51,[57]],40],[[4,[2]]]],[65,[[4,[63]]]],[[65,[51,[57]],40],4],[65,[[4,[63]]]],[[65,63],[[4,[63]]]],[11,4],[63,64],[[64,64,64,64],63],[61,61],[62,62],[[61,61],[[12,[44]]]],[[62,62],[[12,[44]]]],[[61,61]],[[62,62]],[[61,61,1]],[[62,62,1]],[[61,61],61],[[62,62],62],[[61,61]],[[62,62]],[[61,61],61],[[62,62],62],[[]],[[]],[[]],[[61,61]],[[62,62]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[61,61],61],[[62,62],62],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],66],[[66,66],66],[[66,66]],[[66,66],66],[[66,66]],[66,39],[[66,66],66],[[66,66]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,66],[[]],[[66,66],44],[66,66],[[66,66],1],[[66,66],66],[67],[[],66],[[66,66],1],[[],1],[[66,47]],[[68,13],14],[[67,13],14],[[66,13],14],[[66,13],14],[[66,13],14],[[66,13],14],[[66,13],14],[[69,13],14],[[]],[[]],[[]],[[]],[39,[[12,[66]]]],[39,66],[39,66],[47,66],[[66,16]],[[],[[4,[67]]]],[[[0,[18,19]]],[[4,[41]]]],[68,41],[[66,66]],[[66,66],66],[[66,66],1],[[]],[[]],[[]],[[]],[67],[[]],[66,1],[66,1],[67,69],[68,11],[69,12],[66,66],[[66,66],[[12,[44]]]],[[66,66]],[[66,66,1]],[[66,66],66],[[66,66]],[[66,66],66],[[]],[67,[[51,[68]]]],[[66,66]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[66,66],66],0,0,0,0,0,0,0,0,0,0,0,0,[[],70],[71,6],[[70,70],70],[[70,70]],[[70,70],70],[[70,70]],[70,72],[[70,70],70],[[70,70]],[[]],[[]],[[]],[[]],[71,71],[70,70],[[]],[[]],[[70,70],44],[70,70],[[70,70],1],[[70,70],70],[[],70],[[71,71],1],[[70,70],1],[[],1],[[],1],[71,70],[[70,47]],[[71,13],14],[[70,13],14],[[70,13],14],[[70,13],14],[[70,13],14],[[70,13],14],[[]],[[]],[72,[[12,[70]]]],[72,70],[72,70],[47,70],[[71,16]],[[70,16]],[[70,70]],[[70,70],70],[[70,70],1],[[]],[[]],[70,1],[70,1],[[6,70],71],[70,70],[[70,70],[[12,[44]]]],[[[51,[71]],39],[[4,[39]]]],[[[51,[71]],[12,[73]],74],[[4,[39]]]],[[70,70]],[71,[[12,[70]]]],[[70,70,1]],[[71,70]],[[70,70],70],[[70,70]],[[70,70],70],[[]],[[]],[[70,70]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[70,70],70],0,0,0,0,0,[75,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[76,76],[77,77],[78,78],[[]],[[]],[[]],[75],[[76,76],1],[[77,77],1],[[75,75],1],[[],1],[[],1],[[],1],[75,79],[75,79],[[76,13],[[22,[80]]]],[[77,13],14],[[78,13],14],[[75,13],14],0,[[[81,[[12,[76]]]],[81,[[12,[82]]]]],[[4,[78]]]],[83,84],[[]],[[]],[[]],[[]],[75,4],[[76,16]],[[77,16]],[[75,16]],[[]],[[]],[[]],[[]],[75,6],0,0,[[[81,[[12,[76]]]],[81,[[12,[82]]]]],[[4,[77]]]],[20,[[4,[75]]]],[75,[[4,[25]]]],[75,[[4,[25]]]],[[75,[51,[57]]],[[79,[2]]]],[[75,[51,[57]]],[[79,[2]]]],0,[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[75,4],[[75,[51,[57]]],[[79,[2]]]],[[75,[51,[57]]],[[79,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],85],[[85,85],85],[[85,85]],[[85,85],85],[[85,85]],[85,39],[[85,85],85],[[85,85]],[[]],[[]],[[]],[[]],[[86,[51,[57]],85,[12,[39]]],[[4,[83]]]],[85,85],[87,87],[[]],[[]],[[85,85],44],[85,85],[[85,85],1],[[],2],[[],87],[[85,85],85],[[],85],[[85,85],1],[[87,87],1],[[],1],[[],1],[[85,47]],[[85,13],14],[[85,13],14],[[85,13],14],[[85,13],14],[[85,13],14],[[87,13],14],[[]],[[]],[39,[[12,[85]]]],[39,85],[39,85],[47,85],[[85,16]],[[87,16]],[[85,85]],[[85,85],85],[[85,85],1],[[]],[[]],[85,1],[85,1],[[87,2],[[4,[1]]]],[[],87],[85,85],[[85,85],[[12,[44]]]],[[85,85]],[83,[[4,[87]]]],[[83,87],4],[[],4],[[85,85,1]],[[87,2],4],[[6,85],4],[[85,85],85],[[85,85]],[[85,85],85],[[]],[[]],[[85,85]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[85,85],85],[[87,2],4],[85,4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,[[4,[88]]]],[[[91,[[90,[89]]]]],[[4,[92]]]],[[93,2],[[4,[92]]]],[[[51,[[91,[89]]]],[12,[73]]],4],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[91,[[90,[89]]]]],[[4,[88]]]],[88,88],[94,94],[95,95],[96,96],[[]],[[]],[[]],[[]],[[94,94],44],[[95,95],44],[[96,96],44],[89],[[97,6,48,[51,[57]],39,98,95],97],[[97,6,48,[51,[57]],39,98,95],97],[[88,88],1],[[94,94],1],[[95,95],1],[[96,96],1],[[],1],[[],1],[[],1],[[],1],[[[91,[[90,[89]]]]],4],[[93,2],4],[89,6],[97,93],[[89,13],14],[[93,13],14],[[97,13],14],[[88,13],14],[[94,13],14],[[95,13],14],[[96,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,39,98],[[91,[[90,[89]]]]]],[[6,48,99,2,39,98,95],[[91,[[90,[89]]]]]],[[6,48,[51,[57]],39,98,95],[[91,[[90,[89]]]]]],[[6,48,99,2,39,98,95],[[91,[[90,[89]]]]]],[[6,48,[51,[57]],39,98,95],[[91,[[90,[89]]]]]],[[[91,[[90,[89]]]],96],4],[[88,16]],[[94,16]],[[95,16]],[[96,16]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[93,1],[93,2],[89,[[12,[95]]]],[[93,94,98],4],[[93,94,98],4],[89,2],[89,48],[[94,94],[[12,[44]]]],[[95,95],[[12,[44]]]],[[96,96],[[12,[44]]]],[89,39],[[[91,[[90,[89]]]]],4],[[[91,[[90,[89]]]],98]],[89,100],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[2,97],[[[91,[[90,[89]]]]],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],101],[[],102],[[101,101],101],[[102,102],102],[[101,101]],[[102,102]],[[101,101],101],[[102,102],102],[[101,101]],[[102,102]],[101,39],[102,39],[[101,101],101],[[102,102],102],[[101,101]],[[102,102]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[101,101],[103,103],[102,102],[104,104],[[]],[[]],[[]],[[]],[[101,101],44],[[102,102],44],[101,101],[102,102],[[101,101],1],[[102,102],1],[104,17],[[101,101],101],[[102,102],102],[[],101],[[],102],[[],104],[[],[[4,[6]]]],[102,[[4,[6]]]],[[6,103,6,[81,[[12,[104]]]]],4],[[6,[51,[104]],92],[[4,[2]]]],[[101,101],1],[[103,103],1],[[102,102],1],[[104,104],1],[[],1],[[],1],[[],1],[[],1],[104,101],[[101,47]],[[102,47]],[[101,13],14],[[101,13],14],[[101,13],14],[[101,13],14],[[101,13],14],[[103,13],14],[[102,13],14],[[102,13],14],[[102,13],14],[[102,13],14],[[102,13],14],[[104,13],14],[[]],[[]],[[]],[[]],[39,[[12,[101]]]],[39,[[12,[102]]]],[39,101],[39,102],[39,101],[39,102],[47,101],[47,102],[[101,16]],[[103,16]],[[102,16]],[[104,16]],[[101,101]],[[102,102]],[[101,101],101],[[102,102],102],[[101,101],1],[[102,102],1],[[]],[[]],[[]],[[]],[101,1],[102,1],[101,1],[102,1],[[101,17],104],[101,101],[102,102],[[101,101],[[12,[44]]]],[[102,102],[[12,[44]]]],[[101,101]],[[102,102]],[[101,101,1]],[[102,102,1]],[[101,101],101],[[102,102],102],[[101,101]],[[102,102]],[[101,101],101],[[102,102],102],[[]],[[]],[[]],[[]],[[101,101]],[[102,102]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[101,101],101],[[102,102],102],0,0,0,0,[[],105],[[105,105],105],[[105,105]],[[105,105],105],[[105,105]],[105,39],[[105,105],105],[[105,105]],[[]],[[]],[105,105],[[]],[[105,105],44],[105,105],[[105,105],1],[[105,105],105],[[],105],[[105,105],1],[[],1],[[41,105],[[4,[6]]]],[[105,47]],[[105,13],14],[[105,13],14],[[105,13],14],[[105,13],14],[[105,13],14],[[]],[39,[[12,[105]]]],[39,105],[39,105],[47,105],[[105,16]],[[105,105]],[[105,105],105],[[105,105],1],[[]],[105,1],[105,1],[105,105],[[105,105],[[12,[44]]]],[[105,105]],[[105,105,1]],[[105,105],105],[[105,105]],[[105,105],105],[[]],[[105,105]],[[],22],[[],22],[[],23],[[105,105],105],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[106,[0,[18,19]],107],[[4,[108]]]],[[],107],[[],109],[106,6],[[107,107],107],[[109,109],109],[[107,107]],[[109,109]],[[107,107],107],[[109,109],109],[[107,107]],[[109,109]],[107,40],[109,39],[[107,107],107],[[109,109],109],[[107,107]],[[109,109]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[107,107],[109,109],[106,106],[108,108],[[]],[[]],[[]],[[]],[[107,107],44],[[109,109],44],[[108,108],44],[107,107],[109,109],[[107,107],1],[[109,109],1],0,[[107,107],107],[[109,109],109],[[],107],[[],109],[[107,107],1],[[109,109],1],[[108,108],1],[[],1],[[],1],[[],1],[[107,47]],[[109,47]],[[107,13],14],[[107,13],14],[[107,13],14],[[107,13],14],[[107,13],14],[[109,13],14],[[109,13],14],[[109,13],14],[[109,13],14],[[109,13],14],[[106,13],14],[[108,13],14],[[110,13],14],[[]],[[]],[[]],[[]],[[]],[40,[[12,[107]]]],[39,[[12,[109]]]],[40,107],[39,109],[40,107],[39,109],[47,107],[47,109],[6,106],[[107,16]],[[109,16]],[[108,16]],[109,[[4,[106]]]],[[107,107]],[[109,109]],[[107,107],107],[[109,109],109],[[107,107],1],[[109,109],1],[[]],[[]],[[]],[[]],[[]],[107,1],[109,1],[107,1],[109,1],0,0,[107,107],[109,109],[[107,107],[[12,[44]]]],[[109,109],[[12,[44]]]],[[108,108],[[12,[44]]]],[106,[[4,[[111,[110]]]]]],[[107,107]],[[109,109]],[[106,108],4],[[107,107,1]],[[109,109,1]],[[107,107],107],[[109,109],109],[[107,107]],[[109,109]],[[107,107],107],[[109,109],109],[[]],[[]],[[]],[[]],[[107,107]],[[109,109]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[107,107],107],[[109,109],109],0,0,0,0,0,0,0,0,[[],112],[[112,112],112],[[112,112]],[[112,112],112],[[112,112]],[112,41],[[112,112],112],[[112,112]],[[]],[[]],[112,112],[[]],[[112,112],44],[112,112],[[112,112],1],[[112,112],112],[[],112],[[112,112],1],[[],1],[[112,47]],[[112,13],14],[[112,13],14],[[112,13],14],[[112,13],14],[[112,13],14],[[]],[41,[[12,[112]]]],[41,112],[41,112],[47,112],[[112,16]],[[112,112]],[[112,112],112],[[112,112],1],[[]],[112,1],[112,1],[[11,112],[[4,[6]]]],[112,112],[[112,112],[[12,[44]]]],[[112,112]],[[112,112,1]],[[112,112],112],[[112,112]],[[112,112],112],[[]],[[112,112]],[[],22],[[],22],[[],23],[[112,112],112],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],113],[[],114],[[],115],[[],116],[[],117],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[117,117],117],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[117,117]],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[117,117],117],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[117,117]],[113,39],[114,39],[115,39],[116,39],[117,39],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[117,117],117],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[117,117]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[113,113],[114,114],[115,115],[118,118],[116,116],[117,117],[[]],[[]],[[]],[[]],[[]],[[]],[[113,113],44],[[114,114],44],[[115,115],44],[[118,118],44],[[116,116],44],[[117,117],44],[113,113],[114,114],[115,115],[116,116],[117,117],[[113,113],1],[[114,114],1],[[115,115],1],[[116,116],1],[[117,117],1],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[117,117],117],[[],113],[[],114],[[],115],[[],116],[[],117],[[113,113],1],[[114,114],1],[[115,115],1],[[118,118],1],[[116,116],1],[[117,117],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[113,47]],[[114,47]],[[115,47]],[[116,47]],[[117,47]],[[113,13],14],[[113,13],14],[[113,13],14],[[113,13],14],[[113,13],14],[[114,13],14],[[114,13],14],[[114,13],14],[[114,13],14],[[114,13],14],[[115,13],14],[[115,13],14],[[115,13],14],[[115,13],14],[[115,13],14],[[118,13],14],[[116,13],14],[[116,13],14],[[116,13],14],[[116,13],14],[[116,13],14],[[117,13],14],[[117,13],14],[[117,13],14],[[117,13],14],[[117,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[39,[[12,[113]]]],[39,[[12,[114]]]],[39,[[12,[115]]]],[39,[[12,[116]]]],[39,[[12,[117]]]],[39,113],[39,114],[39,115],[39,116],[39,117],[39,113],[39,114],[39,115],[39,116],[39,117],[47,113],[47,114],[47,115],[47,116],[47,117],[[113,16]],[[114,16]],[[115,16]],[[118,16]],[[116,16]],[[117,16]],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[117,117]],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[117,117],117],[[113,113],1],[[114,114],1],[[115,115],1],[[116,116],1],[[117,117],1],[[]],[[]],[[]],[[]],[[]],[[]],[113,1],[114,1],[115,1],[116,1],[117,1],[113,1],[114,1],[115,1],[116,1],[117,1],[[99,119,118],4],[[99,119],4],[117,4],[[99,119,113,114,6,48],[[4,[99]]]],[[99,119,113],4],[[99,119,119,115,[12,[99]]],[[4,[99]]]],[[99,119,116],4],[[99,119],4],[[],4],[[99,119],4],[113,113],[114,114],[115,115],[116,116],[117,117],[[113,113],[[12,[44]]]],[[114,114],[[12,[44]]]],[[115,115],[[12,[44]]]],[[118,118],[[12,[44]]]],[[116,116],[[12,[44]]]],[[117,117],[[12,[44]]]],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[117,117]],[[113,113,1]],[[114,114,1]],[[115,115,1]],[[116,116,1]],[[117,117,1]],[[[0,[18,19]],20,21],[[4,[6]]]],[[[0,[18,19]]],4],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[117,117],117],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[117,117]],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[117,117],117],[[]],[[]],[[]],[[]],[[]],[[]],[[113,113]],[[114,114]],[[115,115]],[[116,116]],[[117,117]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[113,113],113],[[114,114],114],[[115,115],115],[[116,116],116],[[117,117],117],0,0,0,0,0,0,0,0,0,0,0,0,[[],120],[[120,120],120],[[120,120]],[[120,120],120],[[120,120]],[120,39],[[120,120],120],[[120,120]],[[]],[[]],[120,120],[[]],[[120,120],44],[120,120],[[120,120],1],[[120,120],120],[[],120],[[120,120],1],[[],1],[[120,47]],[[120,13],14],[[120,13],14],[[120,13],14],[[120,13],14],[[120,13],14],[[]],[39,[[12,[120]]]],[39,120],[39,120],[47,120],[[],[[4,[120]]]],[[120,16]],[[120,120]],[[120,120],120],[[120,120],1],[[]],[120,1],[120,1],[120,120],[[120,120],[[12,[44]]]],[[120,120]],[120,[[4,[120]]]],[[120,120,1]],[[120,120],120],[[120,120]],[[120,120],120],[[]],[[120,120]],[[],22],[[],22],[[],23],[[120,120],120],0,[[121,[81,[[12,[122]]]]],4],[[],121],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],123],[83,4],[[123,123],123],[[123,123]],[[123,123],123],[[123,123]],[123,39],[[123,123],123],[[123,123]],[[]],[[]],[[]],[[]],[[]],[[]],[124,124],[125,125],[123,123],[[]],[[]],[[]],[[124,124],44],[[125,125],44],[[123,123],44],[123,123],[[83,[81,[[12,[122]]]]],4],[[123,123],1],[[83,[81,[[12,[122]]]]],4],[[123,123],123],[[],123],[[124,124],1],[[125,125],1],[[123,123],1],[[],1],[[],1],[[],1],[[123,47]],[[124,13],14],[[125,13],14],[[123,13],14],[[123,13],14],[[123,13],14],[[123,13],14],[[123,13],14],[[]],[[]],[[]],[39,[[12,[123]]]],[39,123],[39,123],[47,123],[83,[[4,[126]]]],[83,[[4,[127]]]],[83,[[4,[128]]]],[[124,16]],[[125,16]],[[123,16]],[[123,123]],[83,4],[[123,123],123],[[123,123],1],[[]],[[]],[[]],[123,1],[123,1],[83,4],[123,123],[[124,124],[[12,[44]]]],[[125,125],[[12,[44]]]],[[123,123],[[12,[44]]]],[[83,129],[[4,[126]]]],[[123,123]],[[83,123],4],[[123,123,1]],[[83,123],4],[[83,127],4],[[83,128],4],[[83,[81,[[12,[122]]]]],4],[[123,123],123],[[123,123]],[[123,123],123],[[83,[81,[[12,[122]]]]],4],[[83,[81,[[12,[122]]]]],4],[[83,[81,[[12,[122]]]]],4],[[]],[[]],[[]],[[123,123]],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[123,123],123],[[83,129,99],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],130],[131,[[12,[17]]]],[[130,130],130],[[130,130]],[[130,130],130],[[130,130]],[130,40],[[130,130],130],[[130,130]],[131,[[12,[17]]]],[131,[[12,[17]]]],[131,[[12,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[132,132],[133,133],[131,131],[130,130],[[]],[[]],[[]],[[]],[[132,132],44],[[133,133],44],[[130,130],44],[130,130],[[130,130],1],[[],131],[[],130],[[130,130],130],[[],130],[[132,132],1],[[133,133],1],[[131,131],1],[[130,130],1],[[],1],[[],1],[[],1],[[],1],[[130,47]],[[132,13],14],[[133,13],14],[[131,13],14],[[130,13],14],[[130,13],14],[[130,13],14],[[130,13],14],[[130,13],14],[[]],[[]],[[]],[[]],[40,[[12,[130]]]],[40,130],[40,130],[47,130],[[132,16]],[[133,16]],[[131,16]],[[130,16]],[131,[[12,[17]]]],[131,[[12,[17]]]],[131,[[12,[17]]]],[[130,130]],[[130,130],130],[[130,130],1],[[]],[[]],[[]],[[]],[130,1],[130,1],[130,130],[131,[[12,[17]]]],[[132,132],[[12,[44]]]],[[133,133],[[12,[44]]]],[[130,130],[[12,[44]]]],[[132,[0,[18,19]],39],[[4,[131]]]],[[132,[0,[18,19]]],4],[[132,[0,[18,19]],133,[0,[18,19]]],4],[[132,[0,[18,19]],39,131,130],4],[[132,[12,[[0,[18,19]]]]],4],[[130,130]],[[130,130,1]],[[131,17]],[[131,17]],[[131,17]],[[131,17]],[[131,17]],[[131,17]],[[130,130],130],[[130,130]],[[130,130],130],[[]],[[]],[[]],[[]],[[130,130]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[130,130],130],0,0,0,0,0,0,[[]],[[]],[134,134],[[]],[[134,134],44],[[134,134],1],[[],1],[[134,13],14],[[]],[[134,16]],[[]],[[134,134],[[12,[44]]]],[134,[[4,[135]]]],[1,4],[[]],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[136,136],[[]],[[136,136],44],[[136,136],1],[[],1],[[136,13],14],[[]],[136,4],[[136,16]],[[]],[[136,136],[[12,[44]]]],0,[[136,137,137],4],[[]],[[],22],[[],22],[[],23],0,0,0,[[]],[[]],[[]],[[]],[138],[138,138],[[]],[[138,6],1],[[],138],[[138,138],1],[[],1],[[138,[12,[6]]],139],[[138,13],14],[[139,13],14],[[]],[[]],[[138,16]],[138,[[12,[6]]]],[[138,6]],[[]],[[]],[[]],[[],138],[139,[[12,[6]]]],[139,[[12,[6]]]],[[[81,[[12,[39]]]],[81,[[12,[138]]]],[81,[[12,[138]]]],[81,[[12,[138]]]],[81,[[12,[73]]]],[81,[[12,[74]]]]],[[4,[39]]]],[[138,6]],[[[81,[[12,[39]]]],[81,[[12,[138]]]],[81,[[12,[138]]]],[81,[[12,[138]]]],[81,[[12,[140]]]]],[[4,[39]]]],[139],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[6,6,[12,[48]],2],[[4,[2]]]],[[6,6,[12,[141]],2],[[4,[2]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[74,122]],[[],142],[[],74],[100,143],[122,28],[74,144],[122,28],[[142,142],142],[[142,142]],[[142,142],142],[[142,142]],[142,39],[[142,142],142],[[142,142]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74],[122,122],[145,145],[142,142],[146,146],[74,74],[147,147],[148,148],[149,149],[98,98],[100,100],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[122,122],44],[[142,142],44],[[146,146],44],[142,142],[[142,142],1],[[74,122],1],[[142,142],142],[[],142],[[],74],[[122,122],1],[[145,145],1],[[142,142],1],[[146,146],1],[[74,74],1],[[148,148],1],[[149,149],1],[[98,98],1],[[100,100],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[142,47]],[[74,47]],[149,142],[[122,13],14],[[122,13],14],[[145,13],14],[[142,13],14],[[142,13],14],[[142,13],14],[[142,13],14],[[142,13],14],[[146,13],14],[[74,13],14],[[147,13],14],[[148,13],14],[[149,13],14],[[98,13],14],[[100,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[143,100],[39,[[12,[142]]]],[39,142],[39,142],[47,142],[47,74],[28,[[4,[122]]]],[149,148],[[122,16]],[[145,16]],[[142,16]],[[146,16]],[[74,16]],[[148,16]],[[149,16]],[[98,16]],[[100,16]],[[142,142]],[[142,142],142],[[142,142],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[74],[[]],[142,1],[142,1],[74,147],[[],145],[[83,[81,[[12,[122]]]]],4],[[83,[81,[[12,[122]]]]],4],[149,74],[[148,142,74],149],[98,100],[145,[[12,[122]]]],[147,[[12,[122]]]],[142,142],[[122,122],[[12,[44]]]],[[142,142],[[12,[44]]]],[[146,146],[[12,[44]]]],[[146,[12,[74]],[12,[74]]],4],[122,4],[[142,142]],[[74,122]],[[142,142,1]],[[122,149],[[4,[149]]]],[100,143],[[122,148],[[4,[148]]]],[[146,[12,[74]],[12,[74]]],4],[[142,142],142],[[142,142]],[[142,142],142],[74,4],[[],[[4,[74]]]],[74,4],[[74,146],[[4,[74]]]],[74,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[142,142]],[[],22],[29,[[4,[122]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[142,142],142],[74,[[4,[122]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[],150],[151,6],[[150,150],150],[[150,150]],[[150,150],150],[[150,150]],[150,39],[[150,150],150],[[150,150]],[[]],[[]],[[]],[[]],[[]],[[]],[152,152],[150,150],[[]],[[]],[[150,150],44],[150,150],[[150,150],1],[[150,150],150],[151],[[],150],[[152,152],1],[[150,150],1],[[151,151],1],[[],1],[[],1],[[],1],[[150,47]],[[152,13],[[22,[80]]]],[[150,13],14],[[150,13],14],[[150,13],14],[[150,13],14],[[150,13],14],[[151,13],14],[[]],[[]],[[]],[39,[[12,[150]]]],[39,150],[39,150],[47,150],[[152,16]],[[150,16]],[[151,16]],[[150,150]],[[150,150],150],[[150,150],1],[[]],[[]],[[]],[[]],[150,1],[150,1],[74,[[4,[151]]]],[151,12],[150,150],[[150,150],[[12,[44]]]],[151,[[4,[[12,[152]]]]]],[[150,150]],[[150,150,1]],[[151,74],4],0,0,[[6,74,150],[[4,[6]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[150,150],150],[[150,150]],[[150,150],150],[[]],[[]],[[150,150]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[150,150],150],[[74,150],[[4,[151]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[6,[[4,[6]]]],[[6,153],[[4,[6]]]],[154,[[12,[[155,[57]]]]]],0,0,[156,11],[156,11],[[],157],[[],153],[[],158],[[],159],[160,[[12,[[51,[57]]]]]],[161,[[12,[156]]]],[161,[[12,[156]]]],[162],[161,[[12,[154]]]],[161,[[12,[154]]]],[160,163],[161,[[12,[164]]]],[161,[[12,[164]]]],[[],165],[[],165],[160,163],[160,163],[164,166],[156,167],[154,168],[169,170],[171,172],[173,174],[161,[[12,[173]]]],[161,[[12,[171]]]],[161,[[12,[171]]]],[161,[[12,[173]]]],[161,[[12,[160]]]],[161,[[12,[160]]]],[161,[[12,[169]]]],[161,[[12,[169]]]],[[6,175],4],[[157,157],157],[[153,153],153],[[158,158],158],[[157,157]],[[153,153]],[[158,158]],[[157,157],157],[[153,153],153],[[158,158],158],[[157,157]],[[153,153]],[[158,158]],[157,41],[153,39],[158,39],[[157,157],157],[[153,153],153],[[158,158],158],[[157,157]],[[153,153]],[[158,158]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[169,40],[165,165],[174,174],[172,172],[163,163],[176,176],[160,160],[161,161],[164,164],[156,156],[154,154],[169,169],[177,177],[178,178],[179,179],[180,180],[157,157],[153,153],[158,158],[181,181],[182,182],[[[184,[183]]],[[184,[183]]]],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[162,162],[171,171],[173,173],[191,191],[159,159],[192,192],[193,193],[194,194],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[157,157],44],[[153,153],44],[[158,158],44],0,0,0,0,0,[184,185],0,[157,157],[153,153],[158,158],[[6,175],4],[[157,157],1],[[153,153],1],[[158,158],1],[[],190],[[157,157],157],[[153,153],153],[[158,158],158],[[],157],[[],153],[[],158],[[165,165],1],[[174,174],1],[[172,172],1],[[163,163],1],[[176,176],1],[[160,160],1],[[161,161],1],[[164,164],1],[[156,156],1],[[154,154],1],[[169,169],1],[[177,177],1],[[178,178],1],[[179,179],1],[[180,180],1],[[157,157],1],[[153,153],1],[[158,158],1],[[181,181],1],[[182,182],1],[[[184,[31]],[184,[31]]],1],[[185,185],1],[[186,186],1],[[187,187],1],[[188,188],1],[[189,189],1],[[190,190],1],[[162,162],1],[[171,171],1],[[173,173],1],[[191,191],1],[[159,159],1],[[192,192],1],[[193,193],1],[[194,194],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[157,47]],[[153,47]],[[158,47]],[[],[[12,[194]]]],[[],[[12,[194]]]],[162,194],0,[171,40],[[165,13],[[22,[80]]]],[[174,13],[[22,[80]]]],[[172,13],[[22,[80]]]],[[163,13],[[22,[80]]]],[[176,13],[[22,[80]]]],[[160,13],14],[[160,13],14],[[161,13],14],[[161,13],14],[[164,13],14],[[164,13],14],[[156,13],14],[[156,13],14],[[154,13],14],[[154,13],14],[[169,13],14],[[169,13],14],[[177,13],[[22,[80]]]],[[178,13],[[22,[80]]]],[[179,13],14],[[180,13],14],[[157,13],14],[[157,13],14],[[157,13],14],[[157,13],14],[[157,13],14],[[153,13],14],[[153,13],14],[[153,13],14],[[153,13],14],[[153,13],14],[[158,13],14],[[158,13],14],[[158,13],14],[[158,13],14],[[158,13],14],[[181,13],14],[[182,13],14],[[[184,[195]],13],14],[[185,13],14],[[186,13],14],[[187,13],14],[[188,13],14],[[[197,[[0,[[196,[[51,[50]]]],195]],[0,[[196,[[51,[188]]]],195]],[0,[175,195]]]],13],14],[[[199,[[0,[[196,[[51,[198]]]],195]]]],13],14],[[189,13],14],[[190,13],14],[[162,13],14],[[162,13],14],[[171,13],14],[[171,13],14],[[173,13],14],[[173,13],14],[[191,13],14],[[191,13],14],[[159,13],14],[[159,13],14],[[192,13],14],[[192,13],14],[[193,13],14],[[193,13],14],[[194,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[200,161],[[]],[201,161],[202,161],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[203,190],[[]],[[]],[201,171],[[]],[[]],[202,173],[[]],[[]],[[]],[[]],[[]],[41,[[12,[157]]]],[39,[[12,[153]]]],[39,[[12,[158]]]],[41,157],[39,153],[39,158],[41,157],[39,153],[39,158],[29,[[12,[194]]]],[47,157],[47,153],[47,158],[[165,[12,[204]]],[[12,[18]]]],[[165,[12,[204]]],[[12,[160]]]],[[165,[12,[204]]],[[12,[161]]]],[[165,[12,[204]]],[[12,[164]]]],[[165,[12,[204]]],[[12,[156]]]],[[165,[12,[204]]],[[12,[154]]]],[[165,[12,[204]]],[[12,[169]]]],[[165,[12,[204]]],[[12,[162]]]],[[165,[12,[204]]],[[12,[171]]]],[[165,[12,[204]]],[[12,[173]]]],[205,191],[206,159],[207,192],[200,193],[28,[[22,[171]]]],[28,[[22,[173]]]],[6,4],[6,[[4,[175]]]],[6,[[4,[175]]]],[[6,208],4],[190,209],[164,40],[154,2],[[165,16]],[[174,16]],[[172,16]],[[163,16]],[[176,16]],[[160,16]],[[161,16]],[[164,16]],[[156,16]],[[154,16]],[[169,16]],[[177,16]],[[178,16]],[[180,16]],[[157,16]],[[153,16]],[[158,16]],[[189,16]],[[162,16]],[[171,16]],[[173,16]],[[191,16]],[[159,16]],[[192,16]],[[193,16]],[[194,16]],[154,210],0,0,[154,2],[[157,157]],[[153,153]],[[158,158]],[[157,157],157],[[153,153],153],[[158,158],158],[[157,157],1],[[153,153],1],[[158,158],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[171,205],[173,211],[193,192],[157,1],[153,1],[158,1],[157,1],[153,1],[158,1],[[],204],[[],204],[160,204],[161,204],[[6,2],4],0,0,0,0,0,0,0,0,[[[0,[18,19]]],[[4,[160]]]],[[40,40],164],[[28,28],156],[[40,40],169],[[206,[12,[206]]],181],[205,182],[[],190],[[57,57,57,57,210],173],[[210,210,210,210,210,210,210,210],191],[[57,57,57,57],159],[[192,210],193],[[[51,[57]]],[[4,[160]]]],[[28,28],162],[193,162],[[40,40],162],[[[0,[18,19]]],[[4,[162]]]],[[57,57,57,57],192],[[210,210,210,210,210,210,210,210],192],[[40,40],162],[185,[[12,[186]]]],[157,157],[153,153],[158,158],[159,[[155,[57]]]],[[157,157],[[12,[44]]]],[[153,153],[[12,[44]]]],[[158,158],[[12,[44]]]],[160,[[12,[212]]]],[160,2],[164,40],[190,84],[154,57],[169,40],[171,210],[173,210],[193,210],[154,210],[[6,[51,[57]],158],[[4,[2]]]],[[6,[51,[57]]],4],[[6,47,158,[12,[73]]],[[4,[[111,[[184,[[0,[213,175]]]]]]]]]],[[6,[51,[198]],[12,[[111,[57]]]],158],[[4,[[184,[175]]]]]],[[157,157]],[[153,153]],[[158,158]],0,0,0,[171,40],[191,[[155,[210]]]],[[6,[51,[57]],158],[[4,[2]]]],[[6,47,158],[[4,[[111,[2]]]]]],[[6,[51,[50]],[51,[188]],158,[12,[175]]],[[4,[2]]]],[[6,[51,[57]],175,158],[[4,[2]]]],[6,4],[[157,157,1]],[[153,153,1]],[[158,158,1]],[[6,214],4],[[6,189],4],0,0,0,0,0,0,0,0,0,[[],204],[[],204],[[],204],0,0,0,0,[[176,2],[[4,[162]]]],0,[[194,179,153,[81,[[12,[180]]]]],[[4,[6]]]],[[194,179,[81,[[12,[180]]]],153],4],0,0,[[157,157],157],[[153,153],153],[[158,158],158],[[157,157]],[[153,153]],[[158,158]],0,0,[[157,157],157],[[153,153],153],[[158,158],158],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[191,205],[159,206],[192,207],[193,200],[162,25],[193,25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[157,157]],[[153,153]],[[158,158]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[29,[[4,[179]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[190,215],[[157,157],157],[[153,153],153],[[158,158],158],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[216,216],[217,217],[218,218],[219,219],[220,220],[221,221],[222,222],[223,223],[224,224],[225,225],[226,226],[227,227],[228,228],[229,229],[230,230],[231,231],[232,232],[233,233],[234,234],[235,235],[236,236],[237,237],[238,238],[239,239],[240,240],[241,241],[242,242],[243,243],[244,244],[245,245],[246,246],[247,247],[248,248],[249,249],[250,250],[251,251],[252,252],[253,253],[254,254],[255,255],[256,256],[257,257],[258,258],[259,259],[260,260],[261,261],[262,262],[263,263],[264,264],[265,265],[[[266,[183]]],[[266,[183]]]],[267,267],[268,268],[269,269],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],266],[[216,216],1],[[217,217],1],[[218,218],1],[[219,219],1],[[220,220],1],[[221,221],1],[[222,222],1],[[223,223],1],[[224,224],1],[[225,225],1],[[226,226],1],[[227,227],1],[[228,228],1],[[229,229],1],[[230,230],1],[[231,231],1],[[232,232],1],[[233,233],1],[[234,234],1],[[235,235],1],[[236,236],1],[[237,237],1],[[238,238],1],[[239,239],1],[[240,240],1],[[241,241],1],[[242,242],1],[[243,243],1],[[244,244],1],[[245,245],1],[[246,246],1],[[247,247],1],[[248,248],1],[[249,249],1],[[250,250],1],[[251,251],1],[[252,252],1],[[253,253],1],[[254,254],1],[[255,255],1],[[256,256],1],[[257,257],1],[[258,258],1],[[259,259],1],[[260,260],1],[[261,261],1],[[262,262],1],[[263,263],1],[[264,264],1],[[267,267],1],[[268,268],1],[[269,269],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[216,13],14],[[217,13],14],[[218,13],14],[[219,13],14],[[220,13],14],[[221,13],14],[[222,13],14],[[223,13],14],[[224,13],14],[[225,13],14],[[226,13],14],[[227,13],14],[[228,13],14],[[229,13],14],[[230,13],14],[[231,13],14],[[232,13],14],[[233,13],14],[[234,13],14],[[235,13],14],[[236,13],14],[[237,13],14],[[238,13],14],[[239,13],14],[[240,13],14],[[241,13],14],[[242,13],14],[[243,13],14],[[244,13],14],[[245,13],14],[[246,13],14],[[247,13],14],[[248,13],14],[[249,13],14],[[250,13],14],[[251,13],14],[[252,13],14],[[253,13],14],[[254,13],14],[[255,13],14],[[256,13],14],[[257,13],14],[[258,13],14],[[259,13],14],[[260,13],14],[[261,13],14],[[262,13],14],[[263,13],14],[[264,13],14],[[265,13],14],[[[266,[195]],13],14],[[267,13],14],[[268,13],14],[[269,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[216,6],[[4,[1]]]],[[217,6],[[4,[1]]]],[[218,6],[[4,[1]]]],[[219,6],[[4,[270]]]],[[222,6],[[4,[57]]]],[[223,6],[[4,[1]]]],[[224,6],[[4,[1]]]],[[225,6],[[4,[140]]]],[[226,6],[[4,[140]]]],[[227,6],[[4,[1]]]],[[228,6],[[4,[1]]]],[[229,6],[[4,[29]]]],[[230,6],[[4,[1]]]],[[231,6],[[4,[190]]]],[[232,6],[[4,[40]]]],[[233,6],[[4,[40]]]],[[234,6],[[4,[40]]]],[[235,6],[[4,[40]]]],[[236,6],[[4,[40]]]],[[237,6],[[4,[2]]]],[[238,6],[[4,[2]]]],[[241,6],[[4,[179]]]],[[242,6],[[4,[1]]]],[[243,6],[[4,[49]]]],[[244,6],[[4,[174]]]],[[245,6],[[4,[172]]]],[[246,6],[[4,[157]]]],[[247,6],[[4,[1]]]],[[248,6],[[4,[1]]]],[[249,6],[[4,[1]]]],[[250,6],[[4,[40]]]],[[251,6],[[4,[1]]]],[[252,6],[[4,[49]]]],[[253,6],[[4,[1]]]],[[254,6],[[4,[1]]]],[[255,6],[[4,[39]]]],[[256,6],[[4,[1]]]],[[257,6],[[4,[271]]]],[[258,6],[[4,[39]]]],[[259,6],[[4,[1]]]],[[260,6],[[4,[1]]]],[[261,6],[[4,[1]]]],[[262,6],[[4,[39]]]],[[263,6],[[4,[39]]]],[[264,6],[[4,[1]]]],[[267,6],[[4,[40]]]],[[216,16]],[[217,16]],[[218,16]],[[219,16]],[[220,16]],[[221,16]],[[222,16]],[[223,16]],[[224,16]],[[225,16]],[[226,16]],[[227,16]],[[228,16]],[[229,16]],[[230,16]],[[231,16]],[[232,16]],[[233,16]],[[234,16]],[[235,16]],[[236,16]],[[237,16]],[[238,16]],[[239,16]],[[240,16]],[[241,16]],[[242,16]],[[243,16]],[[244,16]],[[245,16]],[[246,16]],[[247,16]],[[248,16]],[[249,16]],[[250,16]],[[251,16]],[[252,16]],[[253,16]],[[254,16]],[[255,16]],[[256,16]],[[257,16]],[[258,16]],[[259,16]],[[260,16]],[[261,16]],[[262,16]],[[263,16]],[[264,16]],[[267,16]],[[268,16]],[[269,16]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[216,6,1],4],[[217,6,1],4],[[218,6,1],4],[[219,6,270],4],[[220,6,181],4],[[221,6,181],4],[[222,6,57],4],[[223,6,1],4],[[224,6,1],4],[[225,6,140],4],[[226,6,140],4],[[227,6,1],4],[[228,6,1],4],[[230,6,1],4],[[232,6,40],4],[[233,6,40],4],[[234,6,40],4],[[235,6,40],4],[[236,6,40],4],[[237,6,2],4],[[238,6,2],4],[[239,6,2],4],[[240,6,2],4],[[243,6,49],4],[[246,6,157],4],[[247,6,1],4],[[248,6,1],4],[[249,6,1],4],[[250,6,40],4],[[251,6,1],4],[[252,6,49],4],[[253,6,1],4],[[254,6,1],4],[[255,6,39],4],[[256,6,1],4],[[257,6,271],4],[[258,6,39],4],[[259,6,1],4],[[260,6,1],4],[[261,6,1],4],[[262,6,39],4],[[263,6,39],4],[[264,6,1],4],[[265,6,2],4],[[[266,[[0,[[196,[[51,[57]]]],183]]]],6,[0,[[196,[[51,[57]]]],183]]],4],[[267,6,40],4],[[268,6,182],4],[[269,6,182],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,0,[[272,273],29],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],274],[[],21],[[274,274],274],[[21,21],21],[[274,274]],[[21,21]],[[274,274],274],[[21,21],21],[[274,274]],[[21,21]],[274,275],[21,275],[[274,274],274],[[21,21],21],[[274,274]],[[21,21]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[273,273],[274,274],[21,21],[276,276],[277,277],[[]],[[]],[[]],[[]],[[]],[[274,274],44],[[21,21],44],[274,274],[21,21],[[274,274],1],[[21,21],1],0,[[274,274],274],[[21,21],21],[[],274],[[],21],[[273,273],1],[[274,274],1],[[21,21],1],[[],1],[[],1],[[],1],[[274,47]],[[21,47]],[[6,21],4],[[[12,[6]],[0,[18,19]],21,276],4],[[273,13],[[22,[80]]]],[[274,13],14],[[274,13],14],[[274,13],14],[[274,13],14],[[274,13],14],[[21,13],14],[[21,13],14],[[21,13],14],[[21,13],14],[[21,13],14],[[276,13],14],[[277,13],14],[[]],[[]],[[]],[[]],[[]],[275,[[12,[274]]]],[275,[[12,[21]]]],[275,274],[275,21],[275,274],[275,21],[47,274],[47,21],[6,[[4,[273]]]],[[6,[0,[18,19]],33],[[4,[273]]]],[[6,73,73],4],[[273,16]],[[274,16]],[[21,16]],[[274,274]],[[21,21]],[[274,274],274],[[21,21],21],[[274,274],1],[[21,21],1],[[]],[[]],[[]],[[]],[[]],[274,1],[21,1],[274,1],[21,1],[[[0,[18,19]]],[[4,[273]]]],[[[0,[18,19]],140,140],4],[278,17],[[17,17],278],[278,17],[[6,[0,[18,19]],21],4],[[[0,[18,19]],274,21,278],4],[[6,[0,[18,19]],274,21,278],4],0,[274,274],[21,21],[[274,274],[[12,[44]]]],[[21,21],[[12,[44]]]],[[274,274]],[[21,21]],[[274,274,1]],[[21,21,1]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[18,19]]],[[4,[273]]]],[[274,274],274],[[21,21],21],[[274,274]],[[21,21]],[[274,274],274],[[21,21],21],[[]],[[]],[[]],[[]],[[]],[[274,274]],[[21,21]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[21,21],[[274,274],274],[[21,21],21],[[[12,[6]],[0,[18,19]],73,73,277],4],[[[0,[18,19]],140,140],4],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[279,280],[279,60],[279,60],[279,60],[[]],[[]],[[]],[[]],[279,279],[281,281],[[]],[[]],[[281,281],1],[[],1],[279,60],[279,60],[279,282],[279,281],[[279,13],14],[[281,13],14],[[]],[[]],0,[56,[[4,[279]]]],[[]],[[]],[279,280],[279,280],[[[0,[18,19]]],[[4,[279]]]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],283],[[283,283],283],[[283,283]],[[283,283],283],[[283,283]],[283,60],[[283,283],283],[[283,283]],[284,60],[284,285],[284,285],[284,285],[[]],[[]],[[]],[[]],[283,283],[284,284],[[]],[[]],[[283,283],44],[283,283],[[283,283],1],[[],283],[[283,283],283],[[],283],[[283,283],1],[[284,284],1],[[],1],[[],1],[[283,47]],[284,286],[284,286],[284,286],[284,60],[284,283],[[283,13],14],[[283,13],14],[[283,13],14],[[283,13],14],[[283,13],14],[[284,13],14],[284,60],[[]],[[]],[60,[[12,[283]]]],[60,283],[60,283],[47,283],[56,[[4,[284]]]],[[283,16]],[[284,16]],[[283,283]],[[283,283],283],[[283,283],1],[[]],[[]],[283,1],[283,1],[284,60],[283,283],[[283,283],[[12,[44]]]],[[283,283]],[[283,283,1]],[[[0,[18,19]]],[[4,[284]]]],[[283,283],283],[[283,283]],[[283,283],283],[[]],[[]],[[283,283]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[283,283],283],0,[[]],[[]],[287,287],[[]],[[287,287],1],[[],1],[[287,13],14],[[]],[[287,16]],[[]],[287],[287,210],[287,17],[287,17],[287,17],[287,17],[[],[[4,[287]]]],[[]],[[],22],[[],22],[[],23],[287,288],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],289],[[],290],[[],291],[[],292],[[289,289],289],[[290,290],290],[[291,291],291],[[292,292],292],[[289,289]],[[290,290]],[[291,291]],[[292,292]],[[289,289],289],[[290,290],290],[[291,291],291],[[292,292],292],[[289,289]],[[290,290]],[[291,291]],[[292,292]],[289,293],[290,293],[291,293],[292,293],[[289,289],289],[[290,290],290],[[291,291],291],[[292,292],292],[[289,289]],[[290,290]],[[291,291]],[[292,292]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[82,294],[82,294],[82],[[82,294],4],[[82,294],4],[[82,294],4],[82,82],[294,294],[295,295],[296,296],[297,297],[298,298],[289,289],[290,290],[291,291],[292,292],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[294,294],44],[[295,295],44],[[296,296],44],[[297,297],44],[[298,298],44],[[289,289],44],[[290,290],44],[[291,291],44],[[292,292],44],[289,289],[290,290],[291,291],[292,292],[[289,289],1],[[290,290],1],[[291,291],1],[[292,292],1],0,0,[[289,289],289],[[290,290],290],[[291,291],291],[[292,292],292],[[],289],[[],290],[[],291],[[],292],[[82,82],1],[[294,294],1],[[295,295],1],[[296,296],1],[[297,297],1],[[298,298],1],[[289,289],1],[[290,290],1],[[291,291],1],[[292,292],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[289,47]],[[290,47]],[[291,47]],[[292,47]],[[82,13],14],[[294,13],14],[[295,13],14],[[296,13],14],[[297,13],14],[[298,13],14],[[289,13],14],[[289,13],14],[[289,13],14],[[289,13],14],[[289,13],14],[[290,13],14],[[290,13],14],[[290,13],14],[[290,13],14],[[290,13],14],[[291,13],14],[[291,13],14],[[291,13],14],[[291,13],14],[[291,13],14],[[292,13],14],[[292,13],14],[[292,13],14],[[292,13],14],[[292,13],14],[299,82],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[293,[[12,[289]]]],[293,[[12,[290]]]],[293,[[12,[291]]]],[293,[[12,[292]]]],[293,289],[293,290],[293,291],[293,292],[293,289],[293,290],[293,291],[293,292],[47,289],[47,290],[47,291],[47,292],[[294,16]],[[295,16]],[[296,16]],[[297,16]],[[298,16]],[[289,16]],[[290,16]],[[291,16]],[[292,16]],0,[[289,289]],[[290,290]],[[291,291]],[[292,292]],[[289,289],289],[[290,290],290],[[291,291],291],[[292,292],292],[[289,289],1],[[290,290],1],[[291,291],1],[[292,292],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[289,1],[290,1],[291,1],[292,1],[289,1],[290,1],[291,1],[292,1],0,[289,289],[290,290],[291,291],[292,292],0,[[294,294],[[12,[44]]]],[[295,295],[[12,[44]]]],[[296,296],[[12,[44]]]],[[297,297],[[12,[44]]]],[[298,298],[[12,[44]]]],[[289,289],[[12,[44]]]],[[290,290],[[12,[44]]]],[[291,291],[[12,[44]]]],[[292,292],[[12,[44]]]],[[289,289]],[[290,290]],[[291,291]],[[292,292]],[[289,289,1]],[[290,290,1]],[[291,291,1]],[[292,292,1]],[[289,289],289],[[290,290],290],[[291,291],291],[[292,292],292],[[289,289]],[[290,290]],[[291,291]],[[292,292]],[[289,289],289],[[290,290],290],[[291,291],291],[[292,292],292],[6,4],[[6,297],4],[[6,296],4],[6,[[4,[82]]]],[6,[[4,[83]]]],[[6,39],4],[[6,295,82],4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[289,289]],[[290,290]],[[291,291]],[[292,292]],[[],22],[[],22],[300,[[4,[294]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[289,289],289],[[290,290],290],[[291,291],291],[[292,292],292],0,0,0,[[73,73],73],[[140,140],140],[73,301],[140,302],[73,301],[140,302],[[]],[[]],[[]],[[]],[73,73],[140,140],[[]],[[]],[[73,73],44],[[140,140],44],[[73,29],73],[[140,29],140],[[73,73],1],[[140,140],1],[[],1],[[],1],[[73,13],14],[[73,13],14],[[140,13],14],[[140,13],14],[301,73],[288,73],[[]],[[]],[302,140],[288,73],[301,73],[[73,16]],[[140,16]],[303],[[]],[[]],[303],[303,73],[303,140],[303],[303,73],[303,140],[303],[[73,29],73],[[140,29],140],[303],[303,73],[303,140],[73,73],[140,140],[[],303],[[],303],[73,303],[140,303],[[],303],[73,303],[140,303],[[],303],[[],303],[73,303],[140,303],[[],303],[73,303],[140,303],[[73,73],[[12,[44]]]],[[140,140],[[12,[44]]]],[303],[303,73],[303,140],[[73,73],73],[[140,140],140],0,0,[[]],[[]],[[],25],[[],25],[[],22],[[],22],[[],22],[[],22],[73,126],[73,304],[140,304],[140,305],[[],23],[[],23],[[]],0,0,0,0,0,0,[[]],[[]],[306],[[306,13],14],[[]],[306,[[4,[[12,[307]]]]]],[[]],[[308,100],[[4,[306]]]],[306,29],[[306,307,309],4],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],309],[[],310],[311,6],[[309,309],309],[[310,310],310],[[309,309]],[[310,310]],[[309,309],309],[[310,310],310],[[309,309]],[[310,310]],[309,39],[310,39],[[309,309],309],[[310,310],310],[[309,309]],[[310,310]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[307,307],[309,309],[312,312],[310,310],[[]],[[]],[[]],[[]],[[309,309],44],[[312,312],44],[[310,310],44],[309,309],[310,310],[[309,309],1],[[310,310],1],[[309,309],309],[[310,310],310],[311],[[],309],[[],310],[[307,307],1],[[309,309],1],[[312,312],1],[[310,310],1],[[],1],[[],1],[[],1],[[],1],[[309,47]],[[310,47]],[[307,13],14],[[309,13],14],[[309,13],14],[[309,13],14],[[309,13],14],[[309,13],14],[[311,13],14],[[312,13],14],[[310,13],14],[[310,13],14],[[310,13],14],[[310,13],14],[[310,13],14],[[]],[[]],[[]],[[]],[[]],[39,[[12,[309]]]],[39,[[12,[310]]]],[39,309],[39,310],[39,309],[39,310],[47,309],[47,310],[6,311],[311,[[4,[[12,[307]]]]]],[[309,16]],[[312,16]],[[310,16]],[[309,309]],[[310,310]],[[309,309],309],[[310,310],310],[[309,309],1],[[310,310],1],[[]],[[]],[[]],[[]],[[]],[309,1],[310,1],[309,1],[310,1],[[312,310],[[4,[311]]]],[309,309],[310,310],[[309,309],[[12,[44]]]],[[312,312],[[12,[44]]]],[[310,310],[[12,[44]]]],[[309,309]],[[310,310]],[[309,309,1]],[[311,307,309],4],[[310,310,1]],[[309,309],309],[[310,310],310],[[309,309]],[[310,310]],[[309,309],309],[[310,310],310],[[]],[[]],[[]],[[]],[[309,309]],[[310,310]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[],23],[[],23],[[309,309],309],[[310,310],310],[311,4],[311,4],0,0,[313,[[51,[57]]]],0,[[]],[[]],[[]],[[]],[314,314],[[[313,[183]]],[[313,[183]]]],[[]],[[]],[[314,314],1],[[[313,[31]],[313,[31]]],1],[[],1],[[],1],[[314,13],14],[[[313,[195]],13],14],[[]],[[]],[[[51,[57]]],[[313,[[51,[57]]]]]],[[[51,[57]]],[[313,[[51,[57]]]]]],[[314,16]],[[[313,[315]],16]],[[]],[[]],0,[[6,[51,[57]],48],[[4,[2]]]],[[6,[51,[198]],48],[[4,[2]]]],[[83,[51,[198]],[51,[314]]],[[4,[2]]]],[[83,[51,[50]],[51,[314]]],[[4,[2]]]],[[6,[51,[57]],48],[[4,[2]]]],[[6,[51,[50]],48],[[4,[2]]]],[[6,[51,[198]]],[[4,[2]]]],[[]],[[]],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[6,[51,[50]]],[[4,[2]]]],0,[[]],[[]],[316,316],[[]],[[316,316],1],[[],1],[[316,13],14],[[]],[[316,16]],[[]],[316,317],[316,317],[316,317],[316,317],[[]],[[],22],[[],22],[[],23],[[],[[4,[316]]]],[316,317],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],318],[[318,318],318],[[318,318]],[[318,318],318],[[318,318]],[318,39],[[318,318],318],[[318,318]],[[]],[[]],[[]],[[]],[[]],[[]],[318,318],[319,319],[320,320],[[]],[[]],[[]],[[318,318],44],[[320,320],44],[318,318],[[318,318],1],[[318,318],318],[[],318],[[318,318],1],[[319,319],1],[[320,320],1],[[],1],[[],1],[[],1],[[318,47]],[[318,13],14],[[318,13],14],[[318,13],14],[[318,13],14],[[318,13],14],[[319,13],14],[[320,13],14],[[]],[[]],[[]],[39,[[12,[318]]]],[39,318],[39,318],[47,318],[[83,29],[[4,[319]]]],[[318,16]],[[319,16]],[[320,16]],[[318,318]],[[318,318],318],[[318,318],1],[[]],[[]],[[]],[318,1],[318,1],[318,318],[[318,318],[[12,[44]]]],[[320,320],[[12,[44]]]],[319,[[12,[83]]]],[[318,318]],[[318,318,1]],[[318,318],318],[[318,318]],[[318,318],318],[[]],[[]],[[]],[[318,318]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],23],[[],23],[[],23],[[318,318],318],[[],[[4,[319]]]],[[320,318],[[4,[319]]]],[[[81,[[12,[83]]]],[12,[318]]],[[4,[319]]]],0,0,0,0,0,0,0,0,0,0,0,0,[308,321],[[]],[[]],[83,[[4,[308]]]],[308,[[4,[73]]]],[308,[[4,[73]]]],[[308,73],4],[308,308],[[]],[[308,308],44],[[308,308],1],[[],1],[[308,13],14],[[308,13],14],[[]],[321,308],[321,308],[[308,16]],[[]],[308,[[4,[73]]]],[[308,308],[[12,[44]]]],[83,[[4,[308]]]],[308,[[4,[73]]]],[[308,73],4],[[]],[[],25],[[],22],[[],22],[[],23],0,[[]],[[]],[322,322],[[]],[[322,322],1],[[],1],[[322,13],14],[[]],[[],[[4,[322]]]],[[322,16]],[[]],[322,4],[322,74],[322,74],[[]],[[],22],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[18,19]],323],4],0,0,[[],323],[324,215],[325,209],[83,84],[[323,323],323],[[323,323]],[[323,323],323],[[323,323]],[323,39],[[323,323],323],[[323,323]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[18,19]]],4],[[[0,[18,19]],[12,[324]],[12,[325]]],4],[[[0,[18,19]]],4],[324,324],[325,325],[83,83],[326,326],[327,327],[328,328],[329,329],[330,330],[331,331],[332,332],[333,333],[334,334],[323,323],[335,335],[336,336],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,4],[[83,83],44],[[323,323],44],[323,323],[[323,323],1],[[],324],[[],325],[[1,1],4],[[323,323],323],0,[6,[[4,[6]]]],[[6,6],[[4,[6]]]],[[6,6,20],[[4,[6]]]],[[],324],[[],325],0,0,[[],323],[[324,324],1],[[325,325],1],[[83,83],1],[[331,331],1],[[332,332],1],[[333,333],1],[[334,334],1],[[323,323],1],[[335,335],1],[[336,336],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[11,[51,[[196,[11]]]]],[[4,[135]]]],[[11,[51,[[196,[11]]]],[51,[[196,[11]]]]],[[4,[135]]]],[[6,11,[51,[[196,[11]]]],[51,[[196,[11]]]],33],[[4,[135]]]],[[11,[51,[[196,[11]]]]],[[4,[135]]]],[[11,[51,[[196,[11]]]],[51,[[196,[11]]]]],[[4,[135]]]],[[323,47]],[6,4],[[6,[12,[324]],[12,[325]]],4],[[[12,[6]],[0,[18,19]],[12,[324]],[12,[325]],327],4],[6,4],[[6,[51,[[196,[11]]]],[51,[[196,[11]]]]],[[4,[135]]]],[[324,13],14],[[324,13],14],[[325,13],14],[[325,13],14],[[83,13],14],[[83,13],14],[[326,13],14],[[327,13],14],[[328,13],14],[[329,13],14],[[330,13],14],[[331,13],14],[[332,13],14],[[333,13],14],[[334,13],14],[[323,13],14],[[323,13],14],[[323,13],14],[[323,13],14],[[323,13],14],[[335,13],14],[[336,13],14],[[],[[4,[326]]]],[[6,331],[[4,[[12,[126]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[337,335],[338,336],[[]],[39,[[12,[323]]]],[39,323],[39,323],[325,[[4,[[12,[336]]]]]],[47,323],[28,[[4,[[12,[335]]]]]],[28,[[4,[[12,[336]]]]]],[215,324],[209,325],[84,83],[324,[[4,[[12,[335]]]]]],[6,4],[[6,48],4],0,[[],[[4,[339]]]],[[],325],[[],324],[[],325],[[11,325],[[4,[[111,[325]]]]]],[[],[[4,[[111,[325]]]]]],[[[51,[57]]],[[4,[11]]]],[[[12,[83]]],[[4,[83]]]],[[],83],[[],83],[[],83],[[],[[4,[334]]]],[[],[[4,[333]]]],[[[12,[83]]],[[4,[83]]]],[[],83],[[],324],0,0,[[324,16]],[[325,16]],[[83,16]],[[331,16]],[[332,16]],[[323,16]],[[11,325],4],[[323,323]],[[323,323],323],[[323,323],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[323,1],[326,1],[323,1],[326,1],[324,1],[6,[[4,[1]]]],[[[12,[6]],[0,[18,19]],[12,[6]],[0,[18,19]],329],4],[[6,48,328],[[4,[48]]]],[[6,141,328],[[4,[141]]]],0,[[[0,[18,19]],21],4],[[[0,[18,19]],21],4],[[[12,[6]],[0,[18,19]],21],4],[[[0,[18,19]]],4],0,0,[323,323],[[],83],[[83,83],[[12,[44]]]],[[323,323],[[12,[44]]]],0,0,[[[0,[18,19]],331],[[4,[[12,[126]]]]]],[[]],[[],[[22,[27]]]],[20,4],[[[0,[18,19]],[0,[18,19]]],4],[[6,[51,[57]]],[[4,[2]]]],0,0,[[323,323]],0,0,[[323,323,1]],[325,4],[324,4],[325,325],[324,324],[325,4],[[[51,[325]]],4],[[[196,[317]]],4],[[83,83],4],[[325,325,325],4],[[324,324,324],4],[[],[[4,[83]]]],[324,4],0,[41,41],[[323,323],323],[[323,323]],[[[0,[18,19]],[12,[6]],[0,[18,19]]],4],[[323,323],323],[[]],[332,[[4,[[12,[126]]]]]],[39,[[4,[83]]]],[[39,83],4],[[],83],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[],25],[[323,323]],[[[0,[18,19]],48],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[6,[[4,[339]]]],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],[[],23],0,[[323,323],323],[[[0,[18,19]]],4],[[[12,[6]],[0,[18,19]],330],4],[[6,[51,[57]]],[[4,[2]]]],0,[[],4],[[[0,[18,19]]],4],[[],[[12,[41]]]],[41,[[12,[41]]]]],"c":[172,245,280,286,288,301,305,1514,3312,3423,3448,3451,3452,3454,3458,3468,3485,3537,3554,3559,3560,3561,3562,3565,4197,4254,4255,6429,6431,6449,6450],"p":[[15,"bool"],[15,"usize"],[8,"FnOnce"],[6,"Result"],[3,"Dir"],[6,"RawFd"],[3,"OwningIter"],[3,"Entry"],[4,"Type"],[3,"Iter"],[3,"CStr"],[4,"Option"],[3,"Formatter"],[6,"Result"],[8,"IntoRawFd"],[8,"Hasher"],[15,"u64"],[8,"Sized"],[8,"NixPath"],[3,"OFlag"],[3,"Mode"],[4,"Result"],[3,"TypeId"],[3,"ClearEnvError"],[3,"String"],[4,"Errno"],[6,"Error"],[15,"str"],[15,"i32"],[8,"ErrnoSentinel"],[8,"PartialEq"],[3,"Error"],[3,"AtFlags"],[3,"RenameFlags"],[3,"SealFlag"],[3,"FdFlag"],[3,"SpliceFFlags"],[3,"FallocateFlags"],[6,"c_int"],[15,"u32"],[6,"c_uint"],[4,"FlockArg"],[4,"PosixFadviseAdvice"],[4,"Ordering"],[6,"loff_t"],[4,"FcntlArg"],[8,"IntoIterator"],[6,"off_t"],[3,"OsString"],[3,"IoSlice"],[15,"slice"],[3,"InterfaceAddress"],[3,"InterfaceAddressIterator"],[3,"ModuleInitFlags"],[3,"DeleteModuleFlags"],[8,"AsRawFd"],[15,"u8"],[3,"MsFlags"],[3,"MntFlags"],[6,"c_ulong"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[6,"mq_attr_member_t"],[3,"MqdT"],[3,"InterfaceFlags"],[3,"Interfaces"],[3,"Interface"],[3,"InterfacesIter"],[3,"PollFlags"],[3,"PollFd"],[6,"c_short"],[3,"TimeSpec"],[3,"SigSet"],[3,"PtyMaster"],[3,"Winsize"],[3,"OpenptyResult"],[3,"ForkptyResult"],[6,"Result"],[3,"Error"],[8,"Into"],[3,"Termios"],[3,"Pid"],[6,"SessionId"],[3,"CloneFlags"],[6,"CloneCb"],[3,"CpuSet"],[4,"AioCancelStat"],[3,"AioCb"],[3,"Box"],[3,"Pin"],[15,"isize"],[3,"LioCb"],[4,"LioMode"],[4,"LioOpcode"],[4,"AioFsyncMode"],[3,"LioCbBuilder"],[4,"SigevNotify"],[4,"c_void"],[3,"SigEvent"],[3,"EpollFlags"],[3,"EpollCreateFlags"],[4,"EpollOp"],[3,"EpollEvent"],[3,"EfdFlags"],[3,"Inotify"],[3,"AddWatchFlags"],[3,"WatchDescriptor"],[3,"InitFlags"],[3,"InotifyEvent"],[3,"Vec"],[3,"MemFdCreateFlag"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MRemapFlags"],[3,"MsFlags"],[3,"MlockAllFlags"],[4,"MmapAdvise"],[6,"size_t"],[3,"Persona"],[6,"Pthread"],[4,"Signal"],[3,"Options"],[4,"Request"],[4,"Event"],[6,"c_long"],[3,"user_regs_struct"],[3,"siginfo_t"],[6,"AddressType"],[3,"QuotaValidFlags"],[3,"Dqblk"],[4,"QuotaType"],[4,"QuotaFmt"],[4,"RebootMode"],[4,"Infallible"],[4,"Resource"],[6,"rlim_t"],[3,"FdSet"],[3,"Fds"],[3,"TimeVal"],[6,"off64_t"],[3,"SaFlags"],[3,"sigevent"],[3,"sigset_t"],[3,"SignalIterator"],[4,"SigmaskHow"],[3,"SigSetIter"],[4,"SigHandler"],[3,"SigAction"],[3,"SfdFlags"],[3,"SignalFd"],[3,"siginfo"],[3,"SockFlag"],[3,"LinkAddr"],[15,"array"],[3,"AlgAddr"],[3,"TimestampingFlag"],[3,"MsgFlags"],[3,"Ipv4Addr"],[3,"UnixAddr"],[19,"SockaddrStorage"],[4,"SockAddr"],[3,"sockaddr_un"],[3,"NetlinkAddr"],[3,"sockaddr"],[3,"sockaddr_nl"],[3,"sockaddr_alg"],[3,"sockaddr_ll"],[3,"VsockAddr"],[3,"sockaddr_vm"],[3,"SockaddrIn6"],[3,"sockaddr_in6"],[3,"SockaddrIn"],[3,"sockaddr_in"],[8,"SockaddrLike"],[3,"sockaddr_storage"],[3,"msghdr"],[3,"cmsghdr"],[4,"SockType"],[4,"SockProtocol"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[8,"Clone"],[3,"RecvMsg"],[3,"CmsgIterator"],[4,"ControlMessageOwned"],[3,"Timestamps"],[4,"ControlMessage"],[4,"Shutdown"],[3,"UnixCredentials"],[3,"Ipv6Addr"],[4,"IpAddr"],[4,"InetAddr"],[4,"AddressFamily"],[8,"Debug"],[8,"AsRef"],[3,"SendMmsgData"],[3,"IoSliceMut"],[3,"RecvMmsgData"],[4,"SocketAddr"],[3,"SocketAddrV6"],[3,"SocketAddrV4"],[3,"ucred"],[6,"socklen_t"],[3,"Ipv6Addr"],[3,"Ipv4Addr"],[4,"IpAddr"],[8,"GetSockOpt"],[6,"gid_t"],[15,"u16"],[6,"in_addr_t"],[3,"Path"],[8,"Copy"],[8,"SetSockOpt"],[6,"uid_t"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"IpFreebind"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"TcpKeepCount"],[3,"TcpRepair"],[3,"TcpKeepInterval"],[3,"TcpUserTimeout"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"BindToDevice"],[3,"OriginalDst"],[3,"Ip6tOriginalDst"],[3,"Timestamping"],[3,"ReceiveTimestamp"],[3,"ReceiveTimestampns"],[3,"IpTransparent"],[3,"Mark"],[3,"PassCred"],[3,"TcpCongestion"],[3,"Ipv4PacketInfo"],[3,"Ipv6RecvPacketInfo"],[3,"UdpGsoSegment"],[3,"UdpGroSegment"],[3,"TxTime"],[3,"RxqOvfl"],[3,"Ipv6V6Only"],[3,"Ipv4RecvErr"],[3,"Ipv6RecvErr"],[3,"Ipv4Ttl"],[3,"Ipv6Ttl"],[3,"Ipv6DontFrag"],[3,"AlgSetAeadAuthSize"],[3,"AlgSetKey"],[3,"TcpMaxSeg"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"linger"],[3,"sock_txtime"],[15,"i8"],[3,"FileStat"],[3,"SFlag"],[6,"mode_t"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[6,"dev_t"],[3,"Statfs"],[6,"__fsword_t"],[3,"FsType"],[6,"fsid_t"],[3,"FsFlags"],[3,"Statvfs"],[6,"fsblkcnt_t"],[6,"fsfilcnt_t"],[3,"SysInfo"],[3,"Duration"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[6,"tcflag_t"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"termios"],[6,"speed_t"],[3,"timespec"],[3,"timeval"],[15,"i64"],[6,"time_t"],[6,"suseconds_t"],[3,"Timer"],[4,"Expiration"],[3,"ClockId"],[3,"TimerSetTimeFlags"],[3,"TimerFlags"],[3,"TimerFd"],[4,"ClockId"],[3,"IoVec"],[3,"RemoteIoVec"],[8,"Hash"],[3,"UtsName"],[3,"OsStr"],[3,"WaitPidFlag"],[4,"WaitStatus"],[4,"Id"],[6,"clockid_t"],[3,"UContext"],[3,"AccessFlags"],[3,"Uid"],[3,"Gid"],[4,"ForkResult"],[4,"FchownatFlags"],[4,"Whence"],[4,"LinkatFlags"],[4,"UnlinkatFlags"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"ResUid"],[3,"ResGid"],[3,"User"],[3,"Group"],[3,"passwd"],[3,"group"],[3,"PathBuf"],[13,"SigevSignal"],[13,"SigevThreadId"],[8,"TimeValLike"],[13,"Parent"]]},\
"nom":{"doc":"nom, eating data byte by byte","t":"DDIIIEENNIIQNIIIDIGNNIIIIDQQQQQDEINDIINIINILLLLKKALLLLLLLLLLLLLLLLLLAAALLLLAKKKLLLLLLAOOKKKKLLLLLLLLLLLLLLLLKLLLLLLLLLLLKKKKLLKKKKALLLLLLALKAKLLKLLLLLLKKAKKLKKKKKKKKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLFFAAFFFFFFIIFKFKAAFFFFFFFFFFFFFFFFFFFFFFFFFFFFAFFFFFFFAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFLLFFFFFFLFLFLFFFFFLFFFFFFFLLLFFNNNNNNNINNNNDENNNNNINNNNNNNNNNNNNNNNNNNNINNNNNNNNNNNNNNNNNNNDENLLKLLFLLLLLLLLLLLLLLMFLLLLFFLLLLLLFMLLLLLLLLLLLLKLLKLLLMLLLLFLLLLLLLLLLLLLLLLLLLAFFFFFFFFFFFFFFFFNENNLLLLALLLLLALLLLFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFIFFKFFFF","n":["And","AndThen","AsBytes","AsChar","Compare","CompareResult","Err","Error","Error","ErrorConvert","ExtendInto","Extender","Failure","FindSubstring","FindToken","Finish","FlatMap","HexDisplay","IResult","Incomplete","Incomplete","InputIter","InputLength","InputTake","InputTakeAtPosition","Into","Item","Item","Item","Iter","IterElem","Map","Needed","Offset","Ok","Or","ParseTo","Parser","Size","Slice","ToUsize","Unknown","UnspecializedInput","and","and","and_then","and_then","as_bytes","as_char","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","bytes","character","clone","clone","clone_into","clone_into","combinator","compare","compare_no_case","convert","convert","eq","eq","eq","equivalent","equivalent","error","error_node_position","error_position","extend_into","find_substring","find_token","finish","finish","flat_map","flat_map","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","input_len","into","into","into","into","into","into","into","into","into","into","into","is_alpha","is_alphanum","is_dec_digit","is_hex_digit","is_incomplete","is_known","is_oct_digit","iter_elements","iter_indices","len","lib","map","map","map","map","map_input","map_input","multi","new","new_builder","number","offset","or","or","parse","parse","parse","parse","parse","parse","parse","parse_to","position","sequence","slice","slice_index","source","split_at_position","split_at_position1","split_at_position1_complete","split_at_position_complete","take","take_split","to_hex","to_hex_from","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_usize","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","bits","bytes","complete","streaming","bool","tag","take","bool","tag","take","Alt","Permutation","alt","choice","permutation","permutation","complete","streaming","escaped","escaped_transform","is_a","is_not","tag","tag_no_case","take","take_till","take_till1","take_until","take_until1","take_while","take_while1","take_while_m_n","escaped","escaped_transform","is_a","is_not","tag","tag_no_case","take","take_till","take_till1","take_until","take_until1","take_while","take_while1","take_while_m_n","complete","is_alphabetic","is_alphanumeric","is_digit","is_hex_digit","is_newline","is_oct_digit","is_space","streaming","alpha0","alpha1","alphanumeric0","alphanumeric1","anychar","char","crlf","digit0","digit1","hex_digit0","hex_digit1","i128","i16","i32","i64","i8","line_ending","multispace0","multispace1","newline","none_of","not_line_ending","oct_digit0","oct_digit1","one_of","satisfy","space0","space1","tab","u128","u16","u32","u64","u8","alpha0","alpha1","alphanumeric0","alphanumeric1","anychar","char","crlf","digit0","digit1","hex_digit0","hex_digit1","i128","i16","i32","i64","i8","line_ending","multispace0","multispace1","newline","none_of","not_line_ending","oct_digit0","oct_digit1","one_of","satisfy","space0","space1","tab","u128","u16","u32","u64","u8","ParserIterator","all_consuming","borrow","borrow_mut","complete","cond","consumed","cut","eof","fail","finish","flat_map","from","into","into","iterator","map","map_opt","map_parser","map_res","next","not","opt","peek","recognize","rest","rest_len","success","try_from","try_into","type_id","value","verify","Alpha","AlphaNumeric","Alt","Char","Char","Complete","Context","ContextError","Count","CrLf","Digit","Eof","Error","ErrorKind","Escaped","EscapedTransform","Fail","Fix","Float","FromExternalError","HexDigit","IsA","IsNot","LengthValue","LengthValueFn","Many0","Many0Count","Many1","Many1Count","ManyMN","ManyTill","MapOpt","MapRes","MultiSpace","Nom","NonEmpty","NoneOf","Not","OctDigit","OneOf","ParseError","Permutation","RegexpCapture","RegexpCaptures","RegexpFind","RegexpMatch","RegexpMatches","Satisfy","SeparatedList","SeparatedNonEmptyList","Space","Switch","Tag","TagBits","TagClosure","TakeTill1","TakeUntil","TakeWhile1","TakeWhileMN","TooLarge","VerboseError","VerboseErrorKind","Verify","add_context","add_context","append","append","append","append_error","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","code","context","convert","convert","convert","convert","convert_error","dbg_dmp","description","eq","eq","eq","eq","equivalent","error_to_u32","errors","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_char","from_char","from_error_kind","from_error_kind","from_error_kind","from_external_error","from_external_error","from_external_error","hash","input","into","into","into","into","make_error","new","or","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","std","count","fill","fold_many0","fold_many1","fold_many_m_n","length_count","length_data","length_value","many0","many0_count","many1","many1_count","many_m_n","many_till","separated_list0","separated_list1","Big","Endianness","Little","Native","borrow","borrow_mut","clone","clone_into","complete","eq","equivalent","fmt","from","into","streaming","to_owned","try_from","try_into","type_id","be_f32","be_f64","be_i128","be_i16","be_i24","be_i32","be_i64","be_i8","be_u128","be_u16","be_u24","be_u32","be_u64","be_u8","double","f32","f64","float","hex_u32","i128","i16","i24","i32","i64","i8","le_f32","le_f64","le_i128","le_i16","le_i24","le_i32","le_i64","le_i8","le_u128","le_u16","le_u24","le_u32","le_u64","le_u8","recognize_float","recognize_float_parts","u128","u16","u24","u32","u64","u8","be_f32","be_f64","be_i128","be_i16","be_i24","be_i32","be_i64","be_i8","be_u128","be_u16","be_u24","be_u32","be_u64","be_u8","double","f32","f64","float","hex_u32","i128","i16","i24","i32","i64","i8","le_f32","le_f64","le_i128","le_i16","le_i24","le_i32","le_i64","le_i8","le_u128","le_u16","le_u24","le_u32","le_u64","le_u8","recognize_float","recognize_float_parts","u128","u16","u24","u32","u64","u8","Tuple","delimited","pair","parse","preceded","separated_pair","terminated","tuple"],"q":[[0,"nom"],[200,"nom::bits"],[204,"nom::bits::complete"],[207,"nom::bits::streaming"],[210,"nom::branch"],[216,"nom::bytes"],[218,"nom::bytes::complete"],[232,"nom::bytes::streaming"],[246,"nom::character"],[255,"nom::character::complete"],[289,"nom::character::streaming"],[323,"nom::combinator"],[356,"nom::error"],[499,"nom::lib"],[500,"nom::multi"],[516,"nom::number"],[535,"nom::number::complete"],[582,"nom::number::streaming"],[629,"nom::sequence"]],"d":["Implementation of <code>Parser::and</code>","Implementation of <code>Parser::and_then</code>","Helper trait for types that can be viewed as a byte slice","Transforms common types to a char for basic token parsing","Abstracts comparison operations","Indicates whether a comparison was successful, an error, or","The <code>Err</code> enum indicates the parser was not successful","The parser had an error (recoverable)","Comparison failed","Equivalent From implementation to avoid orphan rules in …","Abstracts something which can extend an <code>Extend</code>. Used to …","The type that will be produced","The parser had an unrecoverable error: we got to the right …","Look for a substring in self","Look for a token in self","Helper trait to convert a parser’s result to a more …","Implementation of <code>Parser::flat_map</code>","Helper trait to show a byte slice as a hex dump","Holds the result of parsing functions","There was not enough data","We need more data to be sure","Abstracts common iteration operations on the input type","Abstract method to calculate the input length","Abstracts slicing operations","Methods to take as much input as possible until the …","Implementation of <code>Parser::into</code>","The current input type is a sequence of that <code>Item</code> type.","The current input type is a sequence of that <code>Item</code> type.","The current input type is a sequence of that <code>Item</code> type.","An iterator over the input type, producing the item and …","An iterator over the input type, producing the item","Implementation of <code>Parser::map</code>","Contains information on needed data if a parser returned …","Useful functions to calculate the offset between slices …","Comparison was successful","Implementation of <code>Parser::or</code>","Used to integrate <code>str</code>’s <code>parse()</code> method","All nom parsers implement this trait","Contains the required data size in bytes","Slicing operations using ranges.","Helper trait to convert numbers to usize.","Needs more data, but we do not know how much","Dummy trait used for default implementations (currently …","Applies a second parser after the first one, return their …","Applies a second parser after the first one, return their …","Applies a second parser over the output of the first one","Applies a second parser over the output of the first one","Casts the input type to a byte slice","makes a char from self","Bit level parsers","","","","","","","","","","","","","","","","","","","Choice combinators","Parsers recognizing bytes streams","Character specific parsers and combinators","","","","","General purpose combinators","Compares self to another value for equality","Compares self to another value for equality independently …","Transform to another error type","Automatically converts between errors if the underlying …","","","","","","Error management","Creates a parse error from a <code>nom::ErrorKind</code>, the position …","Creates a parse error from a <code>nom::ErrorKind</code> and the …","Accumulate the input into an accumulator","Returns the byte position of the substring if it is found","Returns true if self contains the token","converts the parser’s result to a type that is more …","","Creates a second parser from the output of the first one, …","Creates a second parser from the output of the first one, …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the input length, as indicated by its name, and …","automatically converts the parser’s output and error …","automatically converts the parser’s output and error …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tests that self is an alphabetic character","Tests that self is an alphabetic character or a decimal …","Tests that self is a decimal digit","Tests that self is an hex digit","Tests if the result is Incomplete","Indicates if we know how many bytes we need","Tests that self is an octal digit","Returns an iterator over the elements","Returns an iterator over the elements and their byte …","Gets the len in bytes for self","Lib module to re-export everything needed from <code>std</code> or <code>core</code>/…","Maps a function over the result of a parser","Maps a function over the result of a parser","Maps a <code>Needed</code> to <code>Needed</code> by applying a function to a …","Applies the given function to the inner error","Maps <code>Err&lt;error::Error&lt;T&gt;&gt;</code> to <code>Err&lt;error::Error&lt;U&gt;&gt;</code> with the …","Maps <code>Err&lt;(T, ErrorKind)&gt;</code> to <code>Err&lt;(U, ErrorKind)&gt;</code> with the …","Combinators applying their child parser multiple times","Creates <code>Needed</code> instance, returns <code>Needed::Unknown</code> if the …","Create a new <code>Extend</code> of the correct type","Parsers recognizing numbers","Offset between the first byte of self and the first byte …","Applies a second parser over the input if the first one …","Applies a second parser over the input if the first one …","A parser takes in input type, and returns a <code>Result</code> …","","","","","","","Succeeds if <code>parse()</code> succeeded. The byte slice …","Finds the byte position of the element","Combinators applying parsers in sequence","Slices self according to the range argument","Get the byte offset from the element’s position in the …","","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Looks for the first element of the input type for which …","Returns a slice of <code>count</code> bytes. panics if count &gt; length","Split the stream at the <code>count</code> byte offset. panics if count …","Converts the value of <code>self</code> to a hex dump, returning the …","Converts the value of <code>self</code> to a hex dump beginning at <code>from</code> …","","Obtaining ownership","","Obtaining ownership","Obtaining ownership","Obtaining ownership","","converts self to usize","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a byte-level input to a bit-level input, for …","Counterpart to <code>bits</code>, <code>bytes</code> transforms its bit stream input …","Bit level parsers","Bit level parsers","Parses one specific bit as a bool.","Generates a parser taking <code>count</code> bits and comparing them to …","Generates a parser taking <code>count</code> bits","Parses one specific bit as a bool.","Generates a parser taking <code>count</code> bits and comparing them to …","Generates a parser taking <code>count</code> bits","Helper trait for the alt() combinator.","Helper trait for the permutation() combinator.","Tests a list of parsers one by one until one succeeds.","Tests each parser in the tuple and returns the result of …","Applies a list of parsers in any order.","Tries to apply all parsers in the tuple in various orders …","Parsers recognizing bytes streams, complete input version","Parsers recognizing bytes streams, streaming version","Matches a byte string with escaped characters.","Matches a byte string with escaped characters.","Returns the longest slice of the matches the pattern.","Parse till certain characters are met.","Recognizes a pattern","Recognizes a case insensitive pattern.","Returns an input slice containing the first N input …","Returns the longest input slice (if any) till a predicate …","Returns the longest (at least 1) input slice till a …","Returns the input slice up to the first occurrence of the …","Returns the non empty input slice up to the first …","Returns the longest input slice (if any) that matches the …","Returns the longest (at least 1) input slice that matches …","Returns the longest (m &lt;= len &lt;= n) input slice  that …","Matches a byte string with escaped characters.","Matches a byte string with escaped characters.","Returns the longest slice of the matches the pattern.","Parse till certain characters are met.","Recognizes a pattern.","Recognizes a case insensitive pattern.","Returns an input slice containing the first N input …","Returns the longest input slice (if any) till a predicate …","Returns the longest (at least 1) input slice till a …","Returns the input slice up to the first occurrence of the …","Returns the non empty input slice up to the first …","Returns the longest input slice (if any) that matches the …","Returns the longest (at least 1) input slice that matches …","Returns the longest (m &lt;= len &lt;= n) input slice  that …","Character specific parsers and combinators, complete input …","Tests if byte is ASCII alphabetic: A-Z, a-z","Tests if byte is ASCII alphanumeric: A-Z, a-z, 0-9","Tests if byte is ASCII digit: 0-9","Tests if byte is ASCII hex digit: 0-9, A-F, a-f","Tests if byte is ASCII newline: \\\\n","Tests if byte is ASCII octal digit: 0-7","Tests if byte is ASCII space or tab","Character specific parsers and combinators, streaming …","Recognizes zero or more lowercase and uppercase ASCII …","Recognizes one or more lowercase and uppercase ASCII …","Recognizes zero or more ASCII numerical and alphabetic …","Recognizes one or more ASCII numerical and alphabetic …","Matches one byte as a character. Note that the input type …","Recognizes one character.","Recognizes the string “\\\\r\\\\n”.","Recognizes zero or more ASCII numerical characters: 0-9","Recognizes one or more ASCII numerical characters: 0-9","Recognizes zero or more ASCII hexadecimal numerical …","Recognizes one or more ASCII hexadecimal numerical …","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes an end of line (both ‘\\\\n’ and ‘\\\\r\\\\n’).","Recognizes zero or more spaces, tabs, carriage returns and …","Recognizes one or more spaces, tabs, carriage returns and …","Matches a newline character ‘\\\\n’.","Recognizes a character that is not in the provided …","Recognizes a string of any char except ‘\\\\r\\\\n’ or ‘\\\\n…","Recognizes zero or more octal characters: 0-7","Recognizes one or more octal characters: 0-7","Recognizes one of the provided characters.","Recognizes one character and checks that it satisfies a …","Recognizes zero or more spaces and tabs.","Recognizes one or more spaces and tabs.","Matches a tab character ‘\\\\t’.","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes zero or more lowercase and uppercase ASCII …","Recognizes one or more lowercase and uppercase ASCII …","Recognizes zero or more ASCII numerical and alphabetic …","Recognizes one or more ASCII numerical and alphabetic …","Matches one byte as a character. Note that the input type …","Recognizes one character.","Recognizes the string “\\\\r\\\\n”.","Recognizes zero or more ASCII numerical characters: 0-9","Recognizes one or more ASCII numerical characters: 0-9","Recognizes zero or more ASCII hexadecimal numerical …","Recognizes one or more ASCII hexadecimal numerical …","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Recognizes an end of line (both ‘\\\\n’ and ‘\\\\r\\\\n’).","Recognizes zero or more spaces, tabs, carriage returns and …","Recognizes one or more spaces, tabs, carriage returns and …","Matches a newline character ‘\\\\n’.","Recognizes a character that is not in the provided …","Recognizes a string of any char except ‘\\\\r\\\\n’ or ‘\\\\n…","Recognizes zero or more octal characters: 0-7","Recognizes one or more octal characters: 0-7","Recognizes one of the provided characters.","Recognizes one character and checks that it satisfies a …","Recognizes zero or more spaces and tabs.","Recognizes one or more spaces and tabs.","Matches a tab character ‘\\\\t’.","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","will parse a number in text form to a number","Main structure associated to the iterator function.","Succeeds if all the input has been consumed by its child …","","","Transforms Incomplete into <code>Error</code>.","Calls the parser if the condition is met.","if the child parser was successful, return the consumed …","Transforms an <code>Err::Error</code> (recoverable) to <code>Err::Failure</code> …","returns its input if it is at the end of input data","A parser which always fails.","Returns the remaining input if parsing was successful, or …","Creates a new parser from the output of the first parser, …","Returns the argument unchanged.","automatically converts the child parser’s result to …","Calls <code>U::from(self)</code>.","Creates an iterator from input data and a parser.","Maps a function on the result of a parser.","Applies a function returning an <code>Option</code> over the result of …","Applies a parser over the result of another one.","Applies a function returning a <code>Result</code> over the result of a …","","Succeeds if the child parser returns an error.","Optional parser, will return <code>None</code> on <code>Err::Error</code>.","Tries to apply its parser without consuming the input.","If the child parser was successful, return the consumed …","Return the remaining input.","Return the length of the remaining input.","a parser which always succeeds with given value without …","","","","Returns the provided value if the child parser succeeds.","Returns the result of the child parser if it satisfies a …","","","","Indicates which character was expected by the <code>char</code> function","","","Static string added by the <code>context</code> function","This trait is required by the <code>context</code> combinator to add a …","","","","","default error type, only contains the error’ location …","Indicates which parser returned an error","","","","","","This trait is required by the <code>map_res</code> combinator to …","","","","","","","","","","","","","","","Error kind given by various nom parsers","","","","","","This trait must be implemented by the error type of a nom …","","","","","","","","","","","","","","","","","","","","This error type accumulates errors and their position when …","Error context for <code>VerboseError</code>","","Creates a new error from an input position, a static …","","Combines an existing error with a new one created from the …","","","Combines an existing error with a new one created from the …","","","","","","","","","","","","","","","nom error code","Create a new error from an input position, a static string …","","","","","Transforms a <code>VerboseError</code> into a trace with input position …","Prints a message and the input if the parser fails.","Converts an ErrorKind to a text description","","","","","","Converts an ErrorKind to a number","List of errors accumulated by <code>VerboseError</code>, containing the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an error from an input position and an expected …","","Creates an error from the input position and an ErrorKind","","","Creates a new error from an input position, an ErrorKind …","Create a new error from an input position and an external …","Create a new error from an input position and an external …","","position of the error in the input data","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an error from the input position and an ErrorKind","creates a new basic error","Combines two existing errors. This function is used to …","","","","","","","","","","","","","","","","","","internal std exports for no_std compatibility","Runs the embedded parser <code>count</code> times, gathering the …","Runs the embedded parser repeatedly, filling the given …","Repeats the embedded parser, calling <code>g</code> to gather the …","Repeats the embedded parser, calling <code>g</code> to gather the …","Repeats the embedded parser <code>m..=n</code> times, calling <code>g</code> to …","Gets a number from the first parser, then applies the …","Gets a number from the parser and returns a subslice of …","Gets a number from the first parser, takes a subslice of …","Repeats the embedded parser, gathering the results in a <code>Vec</code>…","Repeats the embedded parser, counting the results","Runs the embedded parser, gathering the results in a <code>Vec</code>.","Runs the embedded parser, counting the results.","Repeats the embedded parser <code>m..=n</code> times","Applies the parser <code>f</code> until the parser <code>g</code> produces a result.","Alternates between two parsers to produce a list of …","Alternates between two parsers to produce a list of …","Big endian","Configurable endianness","Little endian","Will match the host’s endianness","","","","","Parsers recognizing numbers, complete input version","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Parsers recognizing numbers, streaming version","","","","","Recognizes a big endian 4 bytes floating point number.","Recognizes a big endian 8 bytes floating point number.","Recognizes a big endian signed 16 bytes integer.","Recognizes a big endian signed 2 bytes integer.","Recognizes a big endian signed 3 bytes integer.","Recognizes a big endian signed 4 bytes integer.","Recognizes a big endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a big endian unsigned 16 bytes integer.","Recognizes a big endian unsigned 2 bytes integer.","Recognizes a big endian unsigned 3 byte integer.","Recognizes a big endian unsigned 4 bytes integer.","Recognizes a big endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in text format and …","Recognizes a 4 byte floating point number","Recognizes an 8 byte floating point number","Recognizes floating point number in text format and …","Recognizes a hex-encoded integer.","Recognizes a signed 16 byte integer","Recognizes a signed 2 byte integer","Recognizes a signed 3 byte integer","Recognizes a signed 4 byte integer","Recognizes a signed 8 byte integer","Recognizes a signed 1 byte integer","Recognizes a little endian 4 bytes floating point number.","Recognizes a little endian 8 bytes floating point number.","Recognizes a little endian signed 16 bytes integer.","Recognizes a little endian signed 2 bytes integer.","Recognizes a little endian signed 3 bytes integer.","Recognizes a little endian signed 4 bytes integer.","Recognizes a little endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a little endian unsigned 16 bytes integer.","Recognizes a little endian unsigned 2 bytes integer.","Recognizes a little endian unsigned 3 byte integer.","Recognizes a little endian unsigned 4 bytes integer.","Recognizes a little endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in a byte string and …","Recognizes a floating point number in text format","Recognizes an unsigned 16 byte integer","Recognizes an unsigned 2 bytes integer","Recognizes an unsigned 3 byte integer","Recognizes an unsigned 4 byte integer","Recognizes an unsigned 8 byte integer","Recognizes an unsigned 1 byte integer","Recognizes a big endian 4 bytes floating point number.","Recognizes a big endian 8 bytes floating point number.","Recognizes a big endian signed 16 bytes integer.","Recognizes a big endian signed 2 bytes integer.","Recognizes a big endian signed 3 bytes integer.","Recognizes a big endian signed 4 bytes integer.","Recognizes a big endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a big endian unsigned 16 bytes integer.","Recognizes a big endian unsigned 2 bytes integer.","Recognizes a big endian unsigned 3 byte integer.","Recognizes a big endian unsigned 4 bytes integer.","Recognizes a big endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes floating point number in text format and …","Recognizes a 4 byte floating point number","Recognizes an 8 byte floating point number","Recognizes floating point number in text format and …","Recognizes a hex-encoded integer.","Recognizes a signed 16 byte integer","Recognizes a signed 2 byte integer","Recognizes a signed 3 byte integer","Recognizes a signed 4 byte integer","Recognizes a signed 8 byte integer","Recognizes a signed 1 byte integer","Recognizes a little endian 4 bytes floating point number.","Recognizes a little endian 8 bytes floating point number.","Recognizes a little endian signed 16 bytes integer.","Recognizes a little endian signed 2 bytes integer.","Recognizes a little endian signed 3 bytes integer.","Recognizes a little endian signed 4 bytes integer.","Recognizes a little endian signed 8 bytes integer.","Recognizes a signed 1 byte integer.","Recognizes a little endian unsigned 16 bytes integer.","Recognizes a little endian unsigned 2 bytes integer.","Recognizes a little endian unsigned 3 bytes integer.","Recognizes a little endian unsigned 4 bytes integer.","Recognizes a little endian unsigned 8 bytes integer.","Recognizes an unsigned 1 byte integer.","Recognizes a floating point number in text format and …","Recognizes a floating point number in text format","Recognizes an unsigned 16 byte integer","Recognizes an unsigned 2 bytes integer","Recognizes an unsigned 3 byte integer","Recognizes an unsigned 4 byte integer","Recognizes an unsigned 8 byte integer","Recognizes an unsigned 1 byte integer","Helper trait for the tuple combinator.","Matches an object from the first parser and discards it, …","Gets an object from the first parser, then gets another …","Parses the input and returns a tuple of results of each …","Matches an object from the first parser and discards it, …","Gets an object from the first parser, then matches an …","Gets an object from the first parser, then matches an …","Applies a tuple of parsers one by one and returns their …"],"i":[0,0,0,0,0,0,0,10,11,0,0,51,10,0,0,0,0,0,0,10,11,0,0,0,0,0,50,49,51,50,50,0,0,0,11,0,0,0,8,0,0,8,0,2,2,2,2,79,81,0,26,20,4,3,29,24,8,10,11,26,20,4,3,29,24,8,10,11,0,0,0,8,10,8,10,0,54,54,39,10,8,10,11,8,10,0,0,0,51,82,52,83,18,2,2,8,10,10,11,26,20,4,3,29,24,8,10,11,47,2,2,26,20,4,3,29,24,8,10,11,81,81,81,81,10,8,81,50,50,81,0,2,2,8,10,10,10,0,8,51,0,46,2,2,2,26,20,4,3,29,24,78,50,0,38,50,10,49,49,49,49,48,48,84,84,8,10,10,10,10,10,10,43,26,20,4,3,29,24,8,10,11,26,20,4,3,29,24,8,10,11,26,20,4,3,29,24,8,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,65,0,0,0,0,0,0,65,0,65,0,65,0,0,0,0,0,65,0,0,0,0,0,0,0,65,65,65,0,0,32,32,32,70,32,32,70,0,32,32,32,32,0,0,32,32,32,32,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,70,32,32,32,32,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,32,71,69,30,28,69,0,28,69,70,32,28,69,70,32,69,70,32,69,70,32,28,0,28,28,69,69,0,0,32,28,69,70,32,32,0,69,28,28,69,69,70,32,28,69,70,32,30,69,30,28,69,67,28,69,32,28,28,69,70,32,0,28,30,69,70,32,28,69,28,69,70,32,28,69,70,32,28,69,70,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,75,0,75,75,75,75,75,75,0,75,75,75,75,75,0,75,75,75,75,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],[[3,[1,2]]]],[[1,2],[[3,[1,2]]]],[[1,2],[[4,[1,2]]]],[[1,2],[[4,[1,2]]]],[[],[[6,[5]]]],[[],7],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[8,8],[[[10,[9]]],[[10,[9]]]],[[]],[[]],0,[[],11],[[],11],[[]],[10,[[10,[12]]]],[[8,8],13],[[[10,[14]],[10,[14]]],13],[[11,11],13],[[],13],[[],13],0,0,0,[[]],[[],[[16,[15]]]],[[],13],[[],17],[18,17],[[1,19],[[20,[1,19]]]],[[1,19],[[20,[1,19]]]],[[8,21],22],[[[10,[23]],21],22],[[[10,[23]],21],22],[[11,21],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[1,[[24,[1,12,12]]]],[1,[[24,[1,12,12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[10,13],[8,13],[[],13],[[]],[[]],[[],15],0,[[1,25],[[26,[1,25]]]],[[1,25],[[26,[1,25]]]],[[8,25],8],[[10,27],10],[[[10,[28]],27],[[10,[28]]]],[[10,27],10],0,[15,8],[[]],0,[[],15],[[1,2],[[29,[1,2]]]],[[1,2],[[29,[1,2]]]],[[],18],[[[26,[2,25]]],18],[[[20,[2,25]]],18],[[[4,[2,2]]],18],[[[3,[2,2]]],18],[[[29,[[2,[9,[30,[9]]]],[2,[9,[30,[9]]]]]],9],[[18,[9,[30,[9]]]]]],[[[24,[[2,[9]],12,[0,[[30,[9]],12]]]],9],[[18,[9,12,[0,[[30,[9]],12]]]]]],[[],16],[25,[[16,[15]]]],0,[[]],[15,[[17,[15,8]]]],[[[10,[23]]],[[16,[31]]]],[25,[[18,[30]]]],[[25,32],[[18,[30]]]],[[25,32],[[18,[30]]]],[25,[[18,[30]]]],[15],[15],[15,33],[[15,15],33],[[]],[[[10,[[28,[34]]]]],[[10,[[28,[33]]]]]],[[]],[10,10],[[[10,[[28,[[6,[5]]]]]]],[[10,[[28,[[35,[5]]]]]]]],[10,10],[[],33],[[],15],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[2,[[0,[30,[39,[[30,[[38,[[37,[15]]]]]]]]]]]]],19],[[[2,[[0,[[38,[[37,[15]]]],9]],[0,[[30,[[0,[[38,[[37,[15]]]],9]]]],[39,[30]]]]]]],19],0,0,[[],[[18,[13,30]]]],[[[0,[[12,[5]],40,[41,[15]],[42,[15]],14]],43],25],[43,25],[[],[[18,[13,30]]]],[[[0,[[12,[5]],40,[41,[15]],[42,[15]],14]],43],25],[43,25],0,0,[[[44,[9,[30,[9]]]]],19],[[],18],[[[45,[9,[30,[9]]]]],19],[[],18],0,0,[[[2,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50]],[30,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50]]]]]],7,[2,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50]],[30,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50]]]]]]],19],[[[2,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50,51]],51,[30,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50,51]]]]]],7,[2,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50,51]],51,[30,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50,51]]]]]]],19],[52,25],[52,25],[[[0,[47,9]]],25],[[[0,[47,9]]],25],[43,25],[25,25],[25,25],[[[0,[47,9]]],25],[[[0,[47,9]]],25],[25,25],[25,25],[[15,15,25],25],[[[2,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50]],[30,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50]]]]]],7,[2,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50]],[30,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50]]]]]]],19],[[[2,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50,51]],51,[30,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50,51]]]]]],7,[2,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50,51]],51,[30,[[0,[9,46,47,48,49,[38,[[37,[15]]]],50,51]]]]]]],19],[52,25],[52,25],[[[0,[47,9]]],25],[[[0,[47,9]]],25],[43,25],[25,25],[25,25],[9,25],[9,25],[25,25],[25,25],[[15,15,25],25],0,[5,13],[5,13],[5,13],[5,13],[5,13],[5,13],[5,13],0,[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[[[0,[50,47,[38,[[37,[15]]]]]]],[[18,[[0,[50,47,[38,[[37,[15]]]]]],7,[30,[[0,[50,47,[38,[[37,[15]]]]]]]]]]]],[7,25],[[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],50,[54,[34]]]]],[[18,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],50,[54,[34]]]],[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],50,[54,[34]]]],[30,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],50,[54,[34]]]]]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]],[[18,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]],55,[30,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]],[[18,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]],56,[30,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]],[[18,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]],57,[30,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]],[[18,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]],58,[30,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]],[[18,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]],59,[30,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]]]]]]],[[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]]],[[18,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]],[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]],[30,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]]]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[[[0,[[38,[[37,[15]]]],50]]],[[18,[[0,[[38,[[37,[15]]]],50]],7,[30,[[0,[[38,[[37,[15]]]],50]]]]]]]],[52,25],[[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]]],[[18,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]],[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]],[30,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]]]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[52,25],[25,25],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[[[0,[[38,[[37,[15]]]],50]]],[[18,[[0,[[38,[[37,[15]]]],50]],7,[30,[[0,[[38,[[37,[15]]]],50]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47]]],[[18,[[0,[50,[38,[[37,[15]]]],47]],61,[30,[[0,[50,[38,[[37,[15]]]],47]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47]]],[[18,[[0,[50,[38,[[37,[15]]]],47]],62,[30,[[0,[50,[38,[[37,[15]]]],47]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47]]],[[18,[[0,[50,[38,[[37,[15]]]],47]],63,[30,[[0,[50,[38,[[37,[15]]]],47]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47]]],[[18,[[0,[50,[38,[[37,[15]]]],47]],64,[30,[[0,[50,[38,[[37,[15]]]],47]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47]]],[[18,[[0,[50,[38,[[37,[15]]]],47]],5,[30,[[0,[50,[38,[[37,[15]]]],47]]]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[[[0,[50,47,[38,[[37,[15]]]]]]],[[18,[[0,[50,47,[38,[[37,[15]]]]]],7,[30,[[0,[50,47,[38,[[37,[15]]]]]]]]]]]],[7,25],[[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,[54,[34]]]]],[[18,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,[54,[34]]]],[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,[54,[34]]]],[30,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,[54,[34]]]]]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]],[[18,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]],55,[30,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]],[[18,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]],56,[30,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]],[[18,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]],57,[30,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]],[[18,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]],58,[30,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]],[[18,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]],59,[30,[[0,[50,[38,[[37,[15]]]],47,48,9,[54,[[6,[5]]]]]]]]]]]],[[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]]],[[18,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]],[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]],[30,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]]]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],7,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[52,25],[[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]]],[[18,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]],[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]],[30,[[0,[[38,[[53,[15]]]],[38,[[37,[15]]]],[38,[[60,[15]]]],50,47,[54,[34]]]]]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[52,25],[25,25],[49,[[18,[49,49,[30,[49]]]]]],[49,[[18,[49,49,[30,[49]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],7,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47]]],[[18,[[0,[50,[38,[[37,[15]]]],47]],61,[30,[[0,[50,[38,[[37,[15]]]],47]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47]]],[[18,[[0,[50,[38,[[37,[15]]]],47]],62,[30,[[0,[50,[38,[[37,[15]]]],47]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47]]],[[18,[[0,[50,[38,[[37,[15]]]],47]],63,[30,[[0,[50,[38,[[37,[15]]]],47]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47]]],[[18,[[0,[50,[38,[[37,[15]]]],47]],64,[30,[[0,[50,[38,[[37,[15]]]],47]]]]]]]],[[[0,[50,[38,[[37,[15]]]],47]]],[[18,[[0,[50,[38,[[37,[15]]]],47]],5,[30,[[0,[50,[38,[[37,[15]]]],47]]]]]]]],0,[[[2,[47,[30,[47]]]]],19],[[]],[[]],[[[2,[9,[30,[9]]]]],19],[[13,[2,[30]]],19],[[[2,[[0,[9,46,[38,[[60,[15]]]]]],[30,[[0,[9,46,[38,[[60,[15]]]]]]]]]]],19],[[[2,[30]]],19],[[[0,[47,9]]],[[18,[[0,[47,9]],[0,[47,9]],[30,[[0,[47,9]]]]]]]],[[],[[18,[30]]]],[[[65,[9]]],[[18,[9]]]],[[[2,[30]],19],19],[[]],[[[2,[66,[0,[[66,[30]],30]]]]],19],[[]],[[[2,[30]]],[[65,[30,[2,[30]]]]]],[[2,19],19],[[[2,[9,[30,[9]]]],19],19],[[[2,[30]],[2,[30]]],19],[[[2,[9,[67,[9]]]],19],19],[[[65,[9,19]]],16],[[[2,[9,[30,[9]]]]],19],[[[2,[9,[30,[9]]]]],19],[[[2,[9,[30,[9]]]]],19],[[[2,[[0,[9,46,[38,[[60,[15]]]]]],[30,[[0,[9,46,[38,[[60,[15]]]]]]]]]]],19],[[[0,[[38,[[37,[15]]]],47]]],[[18,[[0,[[38,[[37,[15]]]],47]],[0,[[38,[[37,[15]]]],47]],[30,[[0,[[38,[[37,[15]]]],47]]]]]]]],[47,[[18,[47,15,[30,[47]]]]]],[9,25],[[],17],[[],17],[[],36],[[9,[2,[30]]],19],[[[2,[9,[68,[1]],[30,[9]]]],25],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[34],[[34,69],69],[32],[[32,28],28],[[32,69],69],[[32,30],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[69,[9]]],[[69,[9]]]],[70,70],[32,32],[[]],[[]],[[]],0,[[34,[2,[9,[71,[9]]]]],19],[28,28],[28,28],[69,69],[69,69],[[72,[69,[72]]],33],[[25,34],25],[32,34],[[[28,[14]],[28,[14]]],13],[[[69,[14]],[69,[14]]],13],[[70,70],13],[[32,32],13],[[],13],[32,63],0,[[[28,[73]],21],22],[[[28,[23]],21],22],[[[69,[23]],21],22],[[[69,[73]],21],22],[[70,21],22],[[32,21],22],[[]],[[]],[[]],[[]],[7],[7,69],[32],[32,28],[32,69],[32],[32,28],[32,69],[[32,74]],0,[[]],[[]],[[]],[[]],[32,30],[32,28],[[]],[[]],[[]],[[]],[[],33],[[],33],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],36],[[],36],[[],36],[[],36],0,[[[2,[[0,[9,14]],[30,[[0,[9,14]]]]]],15],19],[[25,6],19],[[[2,[[0,[9,47]],[30,[[0,[9,47]]]]]],19,19],19],[[[2,[[0,[9,47]],[30,[[0,[9,47]]]]]],19,19],19],[[15,15,[2,[[0,[9,47]],[30,[[0,[9,47]]]]]],19,19],19],[[[2,[9,43,[30,[9]]]],[2,[9,[30,[9]]]]],19],[[[2,[[0,[47,48]],43,[30,[[0,[47,48]]]]]]],19],[[[2,[[0,[9,47,48]],43,[30,[[0,[9,47,48]]]]]],[2,[[0,[9,47,48]],[30,[[0,[9,47,48]]]]]]],19],[[[2,[[0,[9,47]],[30,[[0,[9,47]]]]]]],19],[[[2,[[0,[9,47]],[30,[[0,[9,47]]]]]]],19],[[[2,[[0,[9,47]],[30,[[0,[9,47]]]]]]],19],[[[2,[[0,[9,47]],[30,[[0,[9,47]]]]]]],19],[[15,15,[2,[[0,[9,47]],[30,[[0,[9,47]]]]]]],19],[[[2,[[0,[9,47]],[30,[[0,[9,47]]]]]],[2,[[0,[9,47]],[30,[[0,[9,47]]]]]]],19],[[[2,[[0,[9,47]],[30,[[0,[9,47]]]]]],[2,[[0,[9,47]],[30,[[0,[9,47]]]]]]],19],[[[2,[[0,[9,47]],[30,[[0,[9,47]]]]]],[2,[[0,[9,47]],[30,[[0,[9,47]]]]]]],19],0,0,0,0,[[]],[[]],[75,75],[[]],0,[[75,75],13],[[],13],[[75,21],22],[[]],[[]],0,[[]],[[],17],[[],17],[[],36],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],76,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],77,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],55,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],56,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],57,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],57,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],58,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],59,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],61,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],62,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],63,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],63,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],64,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],5,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],[38,[[53,[15]]]],9,46,[78,[77]],[54,[34]],50,47,48,49,79,[54,[[6,[5]]]]]]],[[18,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],[38,[[53,[15]]]],9,46,[78,[77]],[54,[34]],50,47,48,49,79,[54,[[6,[5]]]]]],77,[30,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],[38,[[53,[15]]]],9,46,[78,[77]],[54,[34]],50,47,48,49,79,[54,[[6,[5]]]]]]]]]]]],[75],[75],[[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],[38,[[53,[15]]]],9,46,[78,[76]],[54,[34]],50,47,48,49,79,[54,[[6,[5]]]]]]],[[18,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],[38,[[53,[15]]]],9,46,[78,[76]],[54,[34]],50,47,48,49,79,[54,[[6,[5]]]]]],76,[30,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],[38,[[53,[15]]]],9,46,[78,[76]],[54,[34]],50,47,48,49,79,[54,[[6,[5]]]]]]]]]]]],[[[6,[5]]],[[18,[[6,[5]],63,[30,[[6,[5]]]]]]]],[75],[75],[75],[75],[75],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],59,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],76,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],77,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],55,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],56,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],57,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],57,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],58,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],59,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],61,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],62,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],63,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],63,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],64,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],5,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,49]]],[[18,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,49]],[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,49]],[30,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,49]]]]]]]],[[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],[38,[[53,[15]]]],9,46,50,48,49,47,[54,[[6,[5]]]],79]]],[[18,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],[38,[[53,[15]]]],9,46,50,48,49,47,[54,[[6,[5]]]],79]],[30,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],[38,[[53,[15]]]],9,46,50,48,49,47,[54,[[6,[5]]]],79]]]]]]]],[75],[75],[75],[75],[75],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],5,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],76,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],77,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],55,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],56,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],57,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],57,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],58,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],59,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],61,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],62,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],63,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],63,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],64,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],5,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,47,48,[78,[77]],[54,[34]],49,79,[54,[[6,[5]]]]]]],[[18,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,47,48,[78,[77]],[54,[34]],49,79,[54,[[6,[5]]]]]],77,[30,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,47,48,[78,[77]],[54,[34]],49,79,[54,[[6,[5]]]]]]]]]]]],[75],[75],[[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,47,48,[78,[76]],[54,[34]],49,79,[54,[[6,[5]]]]]]],[[18,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,47,48,[78,[76]],[54,[34]],49,79,[54,[[6,[5]]]]]],76,[30,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,47,48,[78,[76]],[54,[34]],49,79,[54,[[6,[5]]]]]]]]]]]],[[[6,[5]]],[[18,[[6,[5]],63,[30,[[6,[5]]]]]]]],[75],[75],[75],[75],[75],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],59,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],76,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],77,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],55,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],56,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],57,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],57,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],58,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],59,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],61,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],62,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],63,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],63,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],64,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],5,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],[[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,49,47]]],[[18,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,49,47]],[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,49,47]],[30,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,49,47]]]]]]]],[[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,[78,[57]],49,48,47,[54,[[6,[5]]]],79]]],[[18,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,[78,[57]],49,48,47,[54,[[6,[5]]]],79]],[30,[[0,[[38,[[37,[15]]]],[38,[[60,[15]]]],9,46,50,[78,[57]],49,48,47,[54,[[6,[5]]]],79]]]]]]]],[75],[75],[75],[75],[75],[[[0,[[38,[[37,[15]]]],50,47]]],[[18,[[0,[[38,[[37,[15]]]],50,47]],5,[30,[[0,[[38,[[37,[15]]]],50,47]]]]]]]],0,[[[2,[30]],[2,[30]],[2,[30]]],19],[[[2,[30]],[2,[30]]],19],[[],18],[[[2,[30]],[2,[30]]],19],[[[2,[30]],[2,[30]],[2,[30]]],19],[[[2,[30]],[2,[30]]],19],[[[80,[30]]],19]],"c":[],"p":[[8,"Sized"],[8,"Parser"],[3,"And"],[3,"AndThen"],[15,"u8"],[15,"slice"],[15,"char"],[4,"Needed"],[8,"Clone"],[4,"Err"],[4,"CompareResult"],[8,"From"],[15,"bool"],[8,"PartialEq"],[15,"usize"],[4,"Option"],[4,"Result"],[6,"IResult"],[8,"FnMut"],[3,"FlatMap"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Into"],[8,"Fn"],[3,"Map"],[8,"FnOnce"],[3,"Error"],[3,"Or"],[8,"ParseError"],[8,"Error"],[4,"ErrorKind"],[3,"String"],[15,"str"],[3,"Vec"],[3,"TypeId"],[3,"RangeFrom"],[8,"Slice"],[8,"ErrorConvert"],[8,"AddAssign"],[8,"Shl"],[8,"Shr"],[8,"ToUsize"],[8,"Alt"],[8,"Permutation"],[8,"Offset"],[8,"InputLength"],[8,"InputTake"],[8,"InputTakeAtPosition"],[8,"InputIter"],[8,"ExtendInto"],[8,"FindToken"],[3,"Range"],[8,"Compare"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"RangeTo"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"],[3,"ParserIterator"],[8,"Into"],[8,"FromExternalError"],[8,"Borrow"],[3,"VerboseError"],[4,"VerboseErrorKind"],[8,"ContextError"],[8,"Deref"],[8,"Display"],[8,"Hasher"],[4,"Endianness"],[15,"f32"],[15,"f64"],[8,"ParseTo"],[8,"AsBytes"],[8,"Tuple"],[8,"AsChar"],[8,"FindSubstring"],[8,"Finish"],[8,"HexDisplay"]]},\
"num":{"doc":"A collection of numeric types and traits for Rust.","t":"DGDIIIIIDIIQIIIIIGGGIIIIIFKKLLFKKLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLKLLKKLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAFKLLLLLLKKLLLKLLLLLKLLLFLLKLLLLFKLLLLLLLLLLALLLKLLKLLKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLKLLKLLLLLLLLLKLLKLLKLLLLLLLKLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLKLLLLLLLLLLLKLLLLLLLKLLLLLLLLKLLMKAKLLLLLLLKLLKLLKLLKLLKLLKLKLLKLLLLLLKLKKLKLLLALLLLLLKLLLKKLLKKLLKLLKLLLKKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKKLLLLLLLLLLLLLLFKLLLLLLLAFKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLFFFFALMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKFKKLKLLKKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLKLLAKLLLLLLLLLLLLLLLLLLKKFKLLLDDNNDNEIIDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLDGGIDQKKKKKKKKLLKKKKLLKKKLLLKMLKKKKKKKKKKKKKMKKKKKKLLLLIDIDIFKFKFLLLLFLLLFLFKFLFKKLLLLLLLFKMFLLLLKKKFKFKFLLLFKLFLLLLLLLLMMDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLQIFFKGDDGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIQQIIIIIIIIIKNIKKKKKKKKKIIEIIQINKKLKLKIIIIIIIIIIQQQKDIIIKIIIIILIIIIIIIIIIFKKFKKKKKKKKKKLLLLAAFKKKKKKKFKKKKKFFFKLKKKKKLKKKAKLLLKKLLKKLLLLLKLLKKLKLLLKLLKAKAKLLKKKKKKLKKKLKMLKKKKKKKKKKKKKKKKKKKFKAAFKKKKAKKLKKKKKKKKLLAKKFKKKKKKKKKKKLLLLLLKLLKKLLLLLLKLLLKKLLLLLLKKKKKKKKFKIIIKKKKIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLKKKKKKKKKKIIIKKLKLKKKLKLKKKKKKKKKKLKKLKKKLKKKKLKLKKKKKKLKLKLKLKLKLLLKKKKKKLKKKLKKKKKKKKKKKKKLKLKLKLKKKKKKKLKLKLIILKFKLLFKIKKKKLKKLKKKKKKKLKKKAAAAAAAAQQIIIKKLKKLIIIIIIIIKKKKKKKKIIKKKKIQKIIQKKIIIKKKIIIIKKKKKIIIIIIKKKKKKQIFFKIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKIIFKFKKKFK","n":["BigInt","BigRational","BigUint","Bounded","CheckedAdd","CheckedDiv","CheckedMul","CheckedSub","Complex","Float","FromPrimitive","FromStrRadixErr","Integer","Num","NumCast","One","PrimInt","Rational","Rational32","Rational64","Saturating","Signed","ToPrimitive","Unsigned","Zero","abs","abs","abs","abs","abs","abs_sub","abs_sub","abs_sub","abs_sub","acos","acos","acos","acosh","acosh","acosh","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","arg","arg","as_","asin","asin","asin","asinh","asinh","asinh","assign_from_slice","assign_from_slice","atan","atan","atan","atan2","atanh","atanh","atanh","average_ceil","average_ceil","average_floor","average_floor","bigint","bit","bit","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cbrt","cbrt","cbrt","cbrt","cbrt","cbrt","cbrt","ceil","checked_add","checked_add","checked_add","checked_add","checked_div","checked_div","checked_div","checked_div","checked_div_euclid","checked_div_euclid","checked_mul","checked_mul","checked_mul","checked_mul","checked_pow","checked_rem_euclid","checked_rem_euclid","checked_sub","checked_sub","checked_sub","checked_sub","cis","clamp","classify","clone","clone","clone","clone_from","clone_from","clone_into","clone_into","clone_into","cmp","cmp","complex","conj","conj","copysign","cos","cos","cos","cosh","cosh","cosh","count_ones","count_ones","count_zeros","default","default","default","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_ceil","div_ceil","div_ceil","div_euclid","div_euclid","div_floor","div_floor","div_floor","div_mod_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","div_rem","divides","divides","divides","epsilon","eq","eq","eq","equivalent","equivalent","equivalent","exp","exp","exp","exp2","exp2","exp2","exp_m1","expf","expf","extended_gcd","extended_gcd_lcm","extended_gcd_lcm","fdiv","finv","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_be","from_be_bytes","from_be_bytes","from_biguint","from_bytes_be","from_bytes_be","from_bytes_le","from_bytes_le","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_i128","from_i128","from_i128","from_i128","from_i16","from_i16","from_i32","from_i32","from_i64","from_i64","from_i64","from_i64","from_i8","from_i8","from_isize","from_isize","from_le","from_le_bytes","from_le_bytes","from_polar","from_radix_be","from_radix_be","from_radix_le","from_radix_le","from_signed_bytes_be","from_signed_bytes_le","from_slice","from_slice","from_str","from_str","from_str","from_str_radix","from_str_radix","from_str_radix","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u16","from_u16","from_u32","from_u32","from_u64","from_u64","from_u64","from_u64","from_u8","from_u8","from_usize","from_usize","gcd","gcd","gcd","gcd_lcm","gcd_lcm","gcd_lcm","hash","hash","hash","hypot","i","im","im","infinity","integer","integer_decode","into","into","into","into_parts","inv","inv","inv","is_even","is_even","is_even","is_finite","is_finite","is_finite","is_infinite","is_infinite","is_infinite","is_multiple_of","is_multiple_of","is_multiple_of","is_nan","is_nan","is_nan","is_negative","is_negative","is_normal","is_normal","is_normal","is_odd","is_odd","is_odd","is_one","is_one","is_one","is_one","is_positive","is_positive","is_sign_negative","is_sign_positive","is_subnormal","is_zero","is_zero","is_zero","is_zero","iter","iter_u32_digits","iter_u32_digits","iter_u64_digits","iter_u64_digits","l1_norm","l1_norm","lcm","lcm","lcm","leading_ones","leading_zeros","ln","ln","ln","ln_1p","log","log","log","log10","log10","log10","log2","log2","log2","magnitude","max","max_value","max_value","min","min_positive_value","min_value","min_value","mod_floor","mod_floor","mod_floor","modpow","modpow","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","nan","neg","neg","neg","neg","neg_infinity","neg_zero","new","new","new","next_multiple_of","next_multiple_of","next_multiple_of","norm","norm_sqr","not","not","nth_root","nth_root","nth_root","nth_root","one","one","one","one","one","parse_bytes","parse_bytes","partial_cmp","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","powc","powc","powf","powf","powf","powi","powi","powi","powu","prev_multiple_of","prev_multiple_of","prev_multiple_of","product","product","product","product","range","range_inclusive","range_step","range_step_inclusive","rational","re","re","recip","recip","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_euclid","rem_euclid","reverse_bits","rotate_left","rotate_right","round","saturating_add","saturating_sub","scale","set_bit","set_bit","set_one","set_one","set_one","set_one","set_zero","set_zero","set_zero","set_zero","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","sign","signed_shl","signed_shr","signum","signum","signum","signum","sin","sin","sin","sin_cos","sinh","sinh","sinh","sqrt","sqrt","sqrt","sqrt","sqrt","sqrt","sqrt","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","sum","sum","swap_bytes","tan","tan","tan","tanh","tanh","tanh","to_be","to_be_bytes","to_be_bytes","to_bigint","to_bigint","to_biguint","to_biguint","to_biguint","to_bytes_be","to_bytes_be","to_bytes_le","to_bytes_le","to_degrees","to_f32","to_f32","to_f32","to_f32","to_f64","to_f64","to_f64","to_f64","to_i128","to_i128","to_i128","to_i128","to_i16","to_i16","to_i32","to_i32","to_i64","to_i64","to_i64","to_i64","to_i8","to_i8","to_isize","to_isize","to_le","to_le_bytes","to_le_bytes","to_owned","to_owned","to_owned","to_polar","to_radians","to_radix_be","to_radix_be","to_radix_le","to_radix_le","to_signed_bytes_be","to_signed_bytes_le","to_str_radix","to_str_radix","to_string","to_string","to_string","to_u128","to_u128","to_u128","to_u128","to_u16","to_u16","to_u32","to_u32","to_u32_digits","to_u32_digits","to_u64","to_u64","to_u64","to_u64","to_u64_digits","to_u64_digits","to_u8","to_u8","to_usize","to_usize","trailing_ones","trailing_ones","trailing_zeros","trailing_zeros","trailing_zeros","traits","trunc","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unscale","unsigned_shl","unsigned_shr","zero","zero","zero","zero","zero","BigInt","BigUint","Minus","NoSign","ParseBigIntError","Plus","Sign","ToBigInt","ToBigUint","TryFromBigIntError","U32Digits","U64Digits","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","count","count","description","description","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","into","into","into","into","into","into_iter","into_iter","into_original","last","last","len","len","mul","neg","next","next","next_back","next_back","nth","partial_cmp","size_hint","size_hint","to_bigint","to_biguint","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","Complex","Complex32","Complex64","ComplexFloat","ParseComplexError","Real","abs","acos","acosh","arg","asin","asinh","atan","atanh","borrow","borrow_mut","cbrt","conj","cos","cosh","description","eq","exp","exp2","expf","fmt","fmt","from","im","im","into","is_finite","is_infinite","is_nan","is_normal","l1_norm","ln","log","log10","log2","powc","powf","powi","re","re","recip","sin","sinh","sqrt","tan","tanh","to_string","try_from","try_into","type_id","Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","clone","clone_into","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","equivalent","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y","Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","end_bound","end_bound","end_bound","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","start_bound","start_bound","start_bound","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Output","Pow","checked_pow","pow","pow","BigRational","ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone_into","clone_into","cmp","default","denom","description","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","equivalent","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_float","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_i128","to_i64","to_integer","to_owned","to_owned","to_string","to_string","to_u128","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero","AsPrimitive","Bounded","Bytes","Bytes","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","E","Empty","Euclid","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatErrorKind","FromBytes","FromPrimitive","FromStrRadixErr","Inv","Invalid","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","Output","Output","Output","PI","ParseFloatError","Pow","PrimInt","RefNum","SQRT_2","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","TAU","ToBytes","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs","abs","abs_sub","abs_sub","abs_sub","acos","acosh","as_","asin","asinh","atan","atan2","atanh","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","cbrt","ceil","checked_add","checked_div","checked_div_euclid","checked_mul","checked_neg","checked_pow","checked_rem","checked_rem_euclid","checked_shl","checked_shr","checked_sub","clamp","clamp_max","clamp_min","classify","copysign","cos","cosh","count_ones","count_zeros","div_euclid","epsilon","exp","exp2","exp_m1","float","floor","fmt","fmt","fmt","fract","from","from","from","from_be","from_be_bytes","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_le","from_le_bytes","from_ne_bytes","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hypot","identities","infinity","int","integer_decode","into","into","inv","is_finite","is_infinite","is_nan","is_negative","is_normal","is_one","is_positive","is_sign_negative","is_sign_positive","is_subnormal","is_zero","kind","leading_ones","leading_zeros","ln","ln_1p","log","log10","log2","max","max_value","max_value","min","min_positive_value","min_value","min_value","mul_add","mul_add","mul_add_assign","nan","neg_infinity","neg_zero","one","one","ops","pow","pow","pow","pow","powf","powi","real","recip","rem_euclid","reverse_bits","rotate_left","rotate_right","round","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","set_one","set_zero","sign","signed_shl","signed_shr","signum","signum","signum","sin","sin_cos","sinh","sqrt","swap_bytes","tan","tanh","to_be","to_be_bytes","to_degrees","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_le","to_le_bytes","to_ne_bytes","to_radians","to_string","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","trailing_ones","trailing_zeros","trunc","try_from","try_from","try_into","try_into","type_id","type_id","unsigned_shl","unsigned_shr","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","zero","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","copysign","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","is_subnormal","is_subnormal","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","bytes","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","Bytes","Bytes","FromBytes","NumBytes","ToBytes","from_be_bytes","from_le_bytes","from_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":[[0,"num"],[1593,"num::bigint"],[1687,"num::cast"],[1722,"num::complex"],[1777,"num::integer"],[1844,"num::iter"],[1940,"num::pow"],[1945,"num::rational"],[2235,"num::traits"],[2503,"num::traits::bounds"],[2510,"num::traits::cast"],[2545,"num::traits::float"],[2656,"num::traits::identities"],[2666,"num::traits::int"],[2686,"num::traits::ops"],[2694,"num::traits::ops::bytes"],[2705,"num::traits::ops::checked"],[2721,"num::traits::ops::euclid"],[2727,"num::traits::ops::inv"],[2730,"num::traits::ops::mul_add"],[2735,"num::traits::ops::overflowing"],[2741,"num::traits::ops::saturating"],[2750,"num::traits::ops::wrapping"],[2762,"num::traits::pow"],[2767,"num::traits::real"],[2815,"num::traits::sign"]],"d":["A big signed integer type.","Alias for arbitrary precision rationals.","A big unsigned integer type.","Numbers which have upper and lower bounds","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs subtraction that returns <code>None</code> instead of wrapping …","A complex number in Cartesian form.","Generic trait for floating point numbers","A generic trait for converting a number to a value.","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","An interface for casting between machine scalars.","Defines a multiplicative identity element for <code>Self</code>.","Generic trait for primitive integers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Useful functions for signed numbers (i.e. numbers that can …","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value.","","","The positive difference of two numbers.","The positive difference of two numbers.","The positive difference of two numbers.","","Computes the arccosine of a number. Return value is in …","","Computes the principal value of the inverse cosine of <code>self</code>.","Inverse hyperbolic cosine function.","","Computes the principal value of inverse hyperbolic cosine …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculate the principal Arg of self.","","Computes the arcsine of a number. Return value is in …","","Computes the principal value of the inverse sine of <code>self</code>.","Inverse hyperbolic sine function.","","Computes the principal value of inverse hyperbolic sine of …","Reinitializes a <code>BigInt</code>.","Assign a value to a <code>BigUint</code>.","Computes the arctangent of a number. Return value is in …","","Computes the principal value of the inverse tangent of <code>self</code>…","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","","Computes the principal value of inverse hyperbolic tangent …","Returns the ceil value of the average of <code>self</code> and <code>other</code>.","Returns the ceil value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>self</code> and <code>other</code>.","","Returns whether the bit in position <code>bit</code> is set, using the …","Returns whether the bit in the given position is set","","","","","","","","","","","","","","","","","","","","","","","","","Determines the fewest bits necessary to express the <code>BigInt</code>,","Determines the fewest bits necessary to express the <code>BigUint</code>…","","","","","","","","","","","","","","","","","","","","Cast from one machine scalar to another.","Take the cubic root of a number.","Returns the truncated principal cube root of <code>self</code> – see …","","","Computes the principal value of the cube root of <code>self</code>.","Returns the truncated principal cube root of <code>self</code> – see …","","Returns the smallest integer greater than or equal to a …","Adds two numbers, checking for overflow. If overflow …","","","","Divides two numbers, checking for underflow, overflow and …","","","","","","Multiplies two numbers, checking for underflow or …","","","","Raises a value to the power of exp, returning <code>None</code> if an …","","","Subtracts two numbers, checking for underflow. If …","","","","Create a new Complex with a given phase: <code>exp(i * phase)</code>. …","A value bounded by a minimum and a maximum","Returns the floating point category of the number. If only …","","","","","","","","","","","","Returns the complex conjugate. i.e. <code>re - i im</code>","","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Computes the cosine of <code>self</code>.","","Hyperbolic cosine function.","Computes the hyperbolic cosine of <code>self</code>.","","Returns the number of ones in the binary representation of …","Returns the number of one bits.","Returns the number of zeros in the binary representation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Ceiled integer division.","","","","","Floored integer division.","","","Simultaneous floored integer division and modulus. Returns …","","","Simultaneous truncated integer division and modulus. …","","","Deprecated, use <code>is_multiple_of</code> instead.","Deprecated, use <code>is_multiple_of</code> instead.","Deprecated, use <code>is_multiple_of</code> instead.","Returns epsilon, a small positive value.","","","","","","","Returns <code>e^(self)</code>, (the exponential function).","","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","Returns <code>2^(self)</code>.","Computes <code>2^(self)</code>.","","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Raises a floating point number to the complex power <code>self</code>.","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","Greatest common divisor, least common multiple, and …","Returns <code>self/other</code> using floating-point operations.","Returns <code>1/self</code> using floating-point operations.","Returns the largest integer less than or equal to a number.","","","","","","","","","","","","","","","","","","","","","Returns the fractional part of a number.","Creates a number from another value that can be converted …","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","Convert an integer from big endian to the target’s …","","","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigUint</code>.","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigUint</code>.","Converts a <code>f32</code> to return an optional value of this type. …","","Converts a <code>f64</code> to return an optional value of this type. …","","","","Converts an <code>i128</code> to return an optional value of this type. …","","","","Converts an <code>i16</code> to return an optional value of this type. …","","Converts an <code>i32</code> to return an optional value of this type. …","","Converts an <code>i64</code> to return an optional value of this type. …","","","","Converts an <code>i8</code> to return an optional value of this type. …","","Converts an <code>isize</code> to return an optional value of this …","","Convert an integer from little endian to the target’s …","","","Convert a polar representation into a complex number.","Creates and initializes a <code>BigInt</code>. Each <code>u8</code> of the input …","Creates and initializes a <code>BigUint</code>. Each <code>u8</code> of the input …","Creates and initializes a <code>BigInt</code>. Each <code>u8</code> of the input …","Creates and initializes a <code>BigUint</code>. Each <code>u8</code> of the input …","Creates and initializes a <code>BigInt</code> from an array of bytes in …","Creates and initializes a <code>BigInt</code> from an array of bytes in …","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigUint</code>.","","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","Convert from a string and radix (typically <code>2..=36</code>).","Creates and initializes a <code>BigInt</code>.","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Creates and initializes a <code>BigUint</code>.","Converts an <code>u128</code> to return an optional value of this type. …","","","","Converts an <code>u16</code> to return an optional value of this type. …","","Converts an <code>u32</code> to return an optional value of this type. …","","Converts an <code>u64</code> to return an optional value of this type. …","","","","Converts an <code>u8</code> to return an optional value of this type. …","","Converts a <code>usize</code> to return an optional value of this type. …","","Greatest Common Divisor (GCD).","Calculates the Greatest Common Divisor (GCD) of the number …","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calculates the Greatest Common Divisor (GCD) and Lowest …","Calculates the Greatest Common Divisor (GCD) and Lowest …","","","","Calculate the length of the hypotenuse of a right-angle …","Returns imaginary unit","","Imaginary portion of the complex number","Returns the infinite value.","","Returns the mantissa, base 2 exponent, and sign as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this <code>BigInt</code> into its <code>Sign</code> and <code>BigUint</code> magnitude, …","","","Returns <code>1/self</code>","Returns <code>true</code> if the number is even.","Returns <code>true</code> if the number is divisible by <code>2</code>.","Returns <code>true</code> if the number is divisible by <code>2</code>.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Checks if the given complex number is finite","","Returns <code>true</code> if this value is positive infinity or …","","Checks if the given complex number is infinite","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is a multiple of <code>other</code>.","Returns <code>true</code> if the number is a multiple of <code>other</code>.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","","Checks if the given complex number is NaN","Returns true if the number is negative and false if the …","","Returns <code>true</code> if the number is neither zero, infinite, …","Checks if the given complex number is normal","","Returns <code>true</code> if the number is odd.","Returns <code>true</code> if the number is not divisible by <code>2</code>.","Returns <code>true</code> if the number is not divisible by <code>2</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","","","","Returns true if the number is positive and false if the …","","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if the number is subnormal.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","","","","Returns an iterator of <code>u32</code> digits representation of the …","Returns an iterator of <code>u32</code> digits representation of the …","Returns an iterator of <code>u64</code> digits representation of the …","Returns an iterator of <code>u64</code> digits representation of the …","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","","Lowest Common Multiple (LCM).","Calculates the Lowest Common Multiple (LCM) of the number …","Calculates the Lowest Common Multiple (LCM) of the number …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the natural logarithm of the number.","Computes the principal value of natural logarithm of <code>self</code>.","","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the base 10 logarithm of the number.","Computes the principal value of log base 10 of <code>self</code>.","","Returns the base 2 logarithm of the number.","","Computes the principal value of log base 2 of <code>self</code>.","Returns the magnitude of the <code>BigInt</code> as a <code>BigUint</code>.","Returns the maximum of the two numbers.","Returns the largest finite number this type can represent","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite number this type can represent","Returns the smallest finite value that this type can …","Floored integer modulo, satisfying:","","","Returns <code>(self ^ exponent) mod modulus</code>","Returns <code>(self ^ exponent) % modulus</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>NaN</code> value.","","","","","Returns the negative infinite value.","Returns <code>-0.0</code>.","Creates and initializes a <code>BigInt</code>.","Create a new Complex","Creates and initializes a <code>BigUint</code>.","Rounds up to nearest multiple of argument.","Rounds up to nearest multiple of argument.","Rounds up to nearest multiple of argument.","Calculate |self|","Returns the square of the norm (since <code>T</code> doesn’t …","","","Returns the truncated principal <code>n</code>th root of <code>self</code> – See …","","Returns the truncated principal <code>n</code>th root of <code>self</code> – see …","","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigUint</code>. The input slice must …","","","","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self ^ exponent</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self ^ exponent</code>.","","","","","","","","","","","Raises <code>self</code> to a complex power.","Raise a number to a floating point power.","","Raises <code>self</code> to a floating point power.","Raise a number to an integer power.","","Raises <code>self</code> to a signed integer power.","Raises <code>self</code> to an unsigned integer power.","Rounds down to nearest multiple of argument.","Rounds down to nearest multiple of argument.","Rounds down to nearest multiple of argument.","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","Real portion of the complex number","Take the reciprocal (inverse) of a number, <code>1/x</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the nearest integer to a number. Round half-way …","Saturating addition operator. Returns a+b, saturating at …","Saturating subtraction operator. Returns a-b, saturating …","Multiplies <code>self</code> by the scalar <code>t</code>.","Sets or clears the bit in the given position, using the two…","Sets or clears the bit in the given position","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","","","","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</codeeturns the sign of the <code>BigInt</code> as a <code>Sign</code>.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns a number that represents the sign of <code>self</code>.","Returns the sign of the number.","","Computes the sine of a number (in radians).","Computes the sine of <code>self</code>.","","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","","Computes the hyperbolic sine of <code>self</code>.","Take the square root of a number.","Returns the truncated principal square root of <code>self</code> – …","","Computes the principal value of the square root of <code>self</code>.","","Returns the truncated principal square root of <code>self</code> – …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reverses the byte order of the integer.","Computes the tangent of a number (in radians).","","Computes the tangent of <code>self</code>.","Hyperbolic tangent function.","Computes the hyperbolic tangent of <code>self</code>.","","Convert <code>self</code> to big endian from the target’s endianness.","","","","","","Converts this <code>BigInt</code> into a <code>BigUint</code>, if it’s not …","","Returns the sign and the byte representation of the <code>BigInt</code> …","Returns the byte representation of the <code>BigUint</code> in …","Returns the sign and the byte representation of the <code>BigInt</code> …","Returns the byte representation of the <code>BigUint</code> in …","Converts radians to degrees.","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","","","","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","","","","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","","","","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","","","","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","","Convert <code>self</code> to little endian from the target’s …","","","","","","Convert to polar form (r, theta), such that …","Converts degrees to radians.","Returns the integer in the requested base in big-endian …","Returns the integer in the requested base in big-endian …","Returns the integer in the requested base in little-endian …","Returns the integer in the requested base in little-endian …","Returns the two’s-complement byte representation of the …","Returns the two’s-complement byte representation of the …","Returns the integer formatted as a string in the given …","Returns the integer formatted as a string in the given …","","","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","","","","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","","Returns the sign and the <code>u32</code> digits representation of the …","Returns the <code>u32</code> digits representation of the <code>BigUint</code> …","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","","","","Returns the sign and the <code>u64</code> digits representation of the …","Returns the <code>u64</code> digits representation of the <code>BigUint</code> …","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","","Returns the number of trailing ones in the binary …","Returns the number of least-significant bits that are ones.","Returns the number of trailing zeros in the binary …","Returns the number of least-significant bits that are zero,","Returns the number of least-significant bits that are zero,","","Return the integer part of a number.","","","","","","","","","","","","","","","","","","Divides <code>self</code> by the scalar <code>t</code>.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","","","","A big signed integer type.","A big unsigned integer type.","","","","","A <code>Sign</code> is a <code>BigInt</code>’s composing element.","A generic trait for converting a value to a <code>BigInt</code>. This …","A generic trait for converting a value to a <code>BigUint</code>.","The error type returned when a checked conversion …","An iterator of <code>u32</code> digits representation of a <code>BigUint</code> or …","An iterator of <code>u64</code> digits representation of a <code>BigUint</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Extract the original value, if available. The value will …","","","","","","Negate <code>Sign</code> value.","","","","","","","","","Converts the value of <code>self</code> to a <code>BigInt</code>.","Converts the value of <code>self</code> to a <code>BigUint</code>.","","","","","","","","","","","","","","","","","","","","","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","A complex number in Cartesian form.","","","Generic trait for floating point complex numbers.","","The type used to represent the real coefficients of this …","Returns the absolute value of the number. See also …","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the argument of the number.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Inverse hyperbolic tangent function.","","","Take the cubic root of a number.","Computes the complex conjugate of the number.","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","","","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>base^(self)</code>.","","","Returns the argument unchanged.","Returns the imaginary part of the number.","Imaginary portion of the complex number","Calls <code>U::from(self)</code>.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","Returns the natural logarithm of the number.","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a real power.","Raises <code>self</code> to a signed integer power.","Returns the real part of the number.","Real portion of the complex number","Take the reciprocal (inverse) of a number, <code>1/x</code>. See also …","Computes the sine of a number (in radians).","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","","","","","Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","","","An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","Alias for arbitrary precision rationals.","","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","","","Returns zero","Gets an immutable reference to the denominator.","","","","","","","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a float into a rational number.","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","","","","","","","","","","","","","","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","Rounds towards zero.","","","","","","","","A generic interface for casting between machine scalars …","Numbers which have upper and lower bounds","","","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Return Euler’s number.","","","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","","","A generic trait for converting a number to a value.","","Unary operator for retrieving the multiplicative inverse, …","","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","An interface for casting between machine scalars.","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","Defines a multiplicative identity element for <code>Self</code>.","The result after applying the operator.","The resulting type after applying the fused multiply-add.","The result after applying the operator.","Return Archimedes’ constant <code>π</code>.","","Binary operator for raising a value to a power.","Generic trait for primitive integers.","The trait for <code>Num</code> references which implement numeric …","Return <code>sqrt(2.0)</code>.","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Useful functions for signed numbers (i.e. numbers that can …","Return the full circle constant <code>τ</code>.","","A generic trait for converting a value to a number.","A trait for values which cannot be negative","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Defines an additive identity element for <code>Self</code>.","Computes the absolute value.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Convert a value to another, using the <code>as</code> operator.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","","","","","","","Cast from one machine scalar to another.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Performs euclid division that returns <code>None</code> instead of …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Raises a value to the power of exp, returning <code>None</code> if an …","Finds the remainder of dividing two numbers, checking for …","Finds the euclid remainder of dividing two numbers, …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Calculates Euclidean division, the matching method for …","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","","Returns the largest integer less than or equal to a number.","","","","Returns the fractional part of a number.","Creates a number from another value that can be converted …","Returns the argument unchanged.","Returns the argument unchanged.","Convert an integer from big endian to the target’s …","Create a number from its representation as a byte array in …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Convert an integer from little endian to the target’s …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Convert from a string and radix (typically <code>2..=36</code>).","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Calculate the length of the hypotenuse of a right-angle …","","Returns the infinite value.","","Returns the mantissa, base 2 exponent, and sign as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the multiplicative inverse of <code>self</code>.","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns true if the number is negative and false if the …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns true if the number is positive and false if the …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if the number is subnormal.","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite number this type can represent","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite number this type can represent","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Returns the <code>NaN</code> value.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","","","Raises a value to the power of exp, using exponentiation …","Raises self to the power of <code>exp</code>, using exponentiation by …","Returns <code>self</code> to the power <code>rhs</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the nearest integer to a number. Round half-way …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Returns the sign of the number.","Returns a number that represents the sign of <code>self</code>.","Returns the sign of the number.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Reverses the byte order of the integer.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Convert <code>self</code> to big endian from the target’s endianness.","Return the memory representation of this number as a byte …","Converts radians to degrees.","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Convert <code>self</code> to little endian from the target’s …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Converts degrees to radians.","","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Return the integer part of a number.","","","","","","","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if the number is subnormal.","Returns <code>true</code> if the number is subnormal.","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","","","","","","","Create a number from its representation as a byte array in …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,1,2,5,0,3,1,2,3,5,5,3,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,20,20,20,20,20,20,20,20,5,5,5,3,5,5,3,5,5,2,20,3,5,5,3,3,5,5,2,20,2,20,0,2,20,2,2,2,2,20,20,20,20,2,2,20,20,2,2,2,2,20,20,20,20,2,2,20,20,2,20,2,2,2,2,20,20,20,20,2,2,20,20,2,5,20,2,5,20,0,0,3,2,2,5,5,20,20,3,70,2,2,20,97,2,2,20,2,20,30,2,2,20,0,2,20,89,2,2,20,5,0,3,2,5,20,2,20,2,5,20,2,20,0,5,5,3,3,5,5,3,5,5,98,20,98,2,5,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,20,20,20,20,20,20,20,20,80,2,20,2,20,80,2,20,80,2,20,80,2,20,80,2,20,3,2,5,20,2,5,20,3,5,5,3,5,5,3,5,5,80,80,2,5,5,3,2,2,2,2,2,2,5,5,5,5,5,5,5,5,20,20,20,20,20,20,3,27,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,20,20,20,20,20,20,20,20,98,2,20,2,2,20,2,20,51,5,51,2,5,20,51,2,5,20,51,5,51,5,51,2,5,20,51,5,51,5,98,2,20,5,2,20,2,20,2,2,2,20,2,5,20,19,2,5,20,51,2,5,20,51,5,51,5,51,2,5,20,51,5,51,5,80,2,20,80,2,20,2,5,20,3,5,5,5,3,0,3,2,5,20,2,5,5,5,80,2,20,3,5,5,3,5,5,80,2,20,3,5,5,1,2,3,5,5,80,2,20,29,2,5,20,1,2,3,3,3,71,2,5,20,0,2,20,2,20,5,5,80,2,20,98,98,3,5,5,3,3,5,5,3,5,5,3,5,5,2,3,88,3,3,3,88,3,80,2,20,2,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,3,5,5,5,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,20,20,20,20,20,20,20,20,3,2,2,5,5,3,3,2,5,20,80,2,20,5,5,2,2,2,2,20,20,0,29,2,5,20,2,20,2,20,0,0,98,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,5,5,3,5,5,3,5,5,5,80,2,20,2,5,5,20,0,0,0,0,0,5,5,3,5,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,20,20,20,20,20,20,20,20,2,20,98,98,98,3,99,99,5,2,20,29,2,5,20,71,2,5,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,2,98,98,0,3,1,2,3,5,5,3,3,5,5,3,2,2,5,5,20,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,5,5,5,5,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,2,2,2,2,2,2,2,2,2,2,2,2,2,2,5,5,5,5,20,20,20,20,20,20,20,20,2,5,5,20,98,3,5,5,3,5,5,98,2,20,2,20,2,2,20,2,20,2,20,3,49,2,5,20,49,2,5,20,49,2,5,20,49,5,49,5,49,2,5,20,49,5,49,5,98,2,20,2,5,20,5,3,2,20,2,20,2,2,2,20,2,5,20,49,2,5,20,49,5,49,5,2,20,49,2,5,20,2,20,49,5,49,5,98,20,98,2,20,0,3,2,5,20,20,20,20,20,20,20,20,20,2,5,20,2,5,20,5,98,98,0,71,2,5,20,0,0,24,24,0,24,0,0,0,0,0,0,59,60,24,54,75,59,60,24,54,75,24,54,75,24,54,75,24,59,60,54,75,24,54,75,24,54,75,24,54,54,75,75,59,60,24,54,75,24,59,60,24,54,75,59,60,75,59,60,59,60,24,24,59,60,59,60,60,24,59,60,92,100,24,54,75,54,75,59,60,24,54,75,59,60,24,54,75,59,60,24,54,75,0,0,0,0,23,0,27,51,51,51,51,51,51,51,51,51,51,51,51,51,51,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,0,101,101,101,101,101,101,101,101,101,78,78,101,101,101,101,78,78,101,101,101,78,78,78,101,5,78,101,101,101,101,101,101,101,101,101,101,101,101,101,5,101,101,101,101,101,101,78,78,78,78,0,0,0,0,0,0,79,0,79,0,82,37,82,37,0,81,37,37,0,80,0,80,0,80,0,80,80,37,37,80,80,37,82,37,0,80,37,0,80,82,37,82,80,80,80,0,80,0,80,0,82,82,80,0,81,80,0,81,37,82,37,82,37,82,37,37,37,0,0,0,0,0,0,68,69,72,73,83,84,68,69,72,73,83,84,68,69,72,73,83,84,68,69,72,73,83,84,68,69,83,68,69,72,73,83,84,68,69,72,73,83,84,68,69,72,73,83,84,68,69,72,73,83,84,68,69,0,0,0,0,0,0,68,69,83,84,68,69,83,68,69,72,73,83,84,68,69,72,73,83,84,68,69,72,73,83,84,68,69,72,73,83,84,91,0,0,0,91,0,0,0,0,0,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,90,87,90,87,87,87,87,87,87,90,87,90,87,87,87,90,87,87,87,87,87,87,87,87,87,87,87,87,87,90,87,87,87,87,87,87,87,87,87,87,90,90,87,87,87,87,90,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,90,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,90,87,90,87,87,87,87,90,87,90,87,90,87,0,0,102,103,0,0,0,0,0,0,0,0,0,4,95,0,4,4,4,4,4,4,4,4,4,0,0,0,0,0,19,0,95,4,4,4,4,4,4,0,0,0,0,0,0,0,0,0,0,104,61,91,4,0,0,0,0,4,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,3,1,0,3,1,3,3,23,3,3,3,3,3,95,96,95,96,0,0,0,3,3,70,97,105,30,106,0,107,105,108,109,89,0,0,0,3,3,3,3,98,98,110,3,3,3,3,0,3,95,96,96,3,27,95,96,98,103,51,51,51,51,51,51,51,51,98,103,103,19,51,51,51,51,51,51,3,0,3,0,3,95,96,104,3,3,3,1,3,29,1,3,3,3,71,96,98,98,3,3,3,3,3,3,88,3,3,3,88,3,3,61,62,3,3,3,0,29,0,0,0,98,91,3,3,0,3,110,98,98,98,3,99,111,112,99,113,29,71,0,98,98,0,3,1,3,3,3,3,98,3,3,98,102,3,49,49,49,49,49,49,49,49,98,102,102,3,96,49,49,49,49,49,49,98,98,3,95,96,95,96,95,96,98,98,114,115,116,117,118,119,0,71,0,0,0,88,120,88,121,0,0,0,0,23,0,27,51,51,51,51,51,51,51,51,51,51,51,51,51,51,49,49,49,49,49,49,49,49,49,49,49,49,49,49,4,4,4,4,4,4,4,4,4,4,0,0,0,4,4,4,4,4,4,4,4,4,3,58,3,3,3,3,3,3,3,3,3,3,58,58,3,3,3,3,58,3,3,3,3,3,58,3,58,3,58,3,58,3,3,58,3,58,3,58,3,58,3,58,3,58,58,3,3,3,3,3,3,3,58,58,3,3,58,58,3,58,3,3,58,3,58,3,58,3,3,3,58,3,58,3,58,3,58,3,3,3,3,3,3,58,3,58,3,3,58,0,0,29,71,0,29,29,71,0,71,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,0,0,0,0,0,0,0,102,103,0,0,0,103,103,103,102,102,102,0,0,0,0,0,0,0,0,70,97,30,106,107,108,109,89,0,0,105,105,110,110,0,104,104,0,0,61,61,62,0,0,0,122,123,124,0,0,0,0,99,111,112,99,113,0,0,0,0,0,0,114,115,116,117,118,119,91,0,0,0,91,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,0,0,1,0,1,1,1,0,1],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[[]],[[]],[2,2],[[[5,[[0,[3,4]]]]]],[[1,1],1],[[]],[[]],[[2,2],2],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]]],[[5,[3]]]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]]],[[5,[3]]]],[[2,6],2],[[2,7],2],[[2,2],2],[[2,8],2],[[2,8],2],[[2,9],2],[[2,10],2],[[2,11],2],[[2,6],2],[[2,12],2],[[2,13],2],[[2,9],2],[[2,7],2],[[2,14],2],[[2,15],2],[[2,13],2],[[2,15],2],[[2,14],2],[[2,2],2],[[2,12],2],[[2,16],2],[[2,12],2],[[2,11],2],[[2,10],2],[[2,6],2],[[2,17],2],[[2,8],2],[[2,17],2],[[2,10],2],[[2,16],2],[[2,2],2],[[2,13],2],[[2,10],2],[[2,15],2],[[2,9],2],[[2,12],2],[[2,11],2],[[2,11],2],[[2,6],2],[[2,7],2],[[2,16],2],[[2,17],2],[[2,2],2],[[2,9],2],[[2,16],2],[[2,14],2],[[2,13],2],[[2,7],2],[[2,14],2],[[2,15],2],[[2,8],2],[[2,17],2],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[20,7],20],[[20,12],20],[[20,13],20],[[20,20],20],[[20,17],20],[[20,13],20],[[20,7],20],[[20,20],20],[[20,12],20],[[20,17],20],[[20,7],20],[[20,15],20],[[20,8],20],[[20,13],20],[[20,8],20],[[20,15],20],[[20,13],20],[[20,15],20],[[20,17],20],[[20,20],20],[[20,8],20],[[20,12],20],[[20,12],20],[[20,7],20],[[20,20],20],[[20,15],20],[[20,8],20],[[20,17],20],[[2,2]],[[2,11]],[[2,2]],[[2,15]],[[2,6]],[[2,13]],[[2,10]],[[2,9]],[[2,12]],[[2,17]],[[2,14]],[[2,8]],[[2,7]],[[2,16]],[[[5,[[0,[18,21]]]],[5,[[0,[18,21]]]]]],[[[5,[[0,[18,21]]]],[0,[18,21]]]],[[[5,[[0,[18,21]]]],[5,[[0,[18,21]]]]]],[[[5,[[0,[18,21]]]],[0,[18,21]]]],[[20,13]],[[20,15]],[[20,7]],[[20,12]],[[20,8]],[[20,17]],[[20,20]],[[20,20]],[[[5,[[0,[3,4]]]]]],[[[5,[3]]],3],[[[5,[[23,[22]]]]],22],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]]],[[5,[3]]]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]]],[[5,[3]]]],[[2,24,[25,[15]]]],[[20,[25,[15]]]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]]],[[5,[3]]]],[[]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]]],[[5,[3]]]],[[]],[[]],[[]],[[]],0,[[2,12],26],[[20,12],26],[[2,2],2],[[2,2],2],[[2,2],2],[[2,2],2],[[20,20],20],[[20,20],20],[[20,20],20],[[20,20],20],[[2,2]],[[2,2]],[[20,20]],[[20,20]],[[2,2],2],[[2,2],2],[[2,2],2],[[2,2],2],[[20,20],20],[[20,20],20],[[20,20],20],[[20,20],20],[[2,2]],[[2,2]],[[20,20]],[[20,20]],[2,12],[20,12],[[2,2],2],[[2,2],2],[[2,2],2],[[2,2],2],[[20,20],20],[[20,20],20],[[20,20],20],[[20,20],20],[[2,2]],[[2,2]],[[20,20]],[[20,20]],[[]],[[]],[[]],[[]],[[]],[[]],0,[27,[[28,[27]]]],[[]],[2,2],[2,2],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]]],[[5,[3]]]],[20,20],[20,20],[[]],[[],28],[[2,2],[[28,[2]]]],[[2,2],[[28,[2]]]],[[20,20],[[28,[20]]]],[[],28],[[2,2],[[28,[2]]]],[[2,2],[[28,[2]]]],[[20,20],[[28,[20]]]],[[2,2],[[28,[2]]]],[[20,20],[[28,[20]]]],[[],28],[[2,2],[[28,[2]]]],[[2,2],[[28,[2]]]],[[20,20],[[28,[20]]]],[[[0,[18,29,30]],17],[[28,[[0,[18,29,30]]]]]],[[2,2],[[28,[2]]]],[[20,20],[[28,[20]]]],[[],28],[[2,2],[[28,[2]]]],[[2,2],[[28,[2]]]],[[20,20],[[28,[20]]]],[3,[[5,[3]]]],[[[31,[[31,[[31,[[31,[31]]]]]]]],[31,[[31,[[31,[[31,[31]]]]]]]],[31,[[31,[[31,[[31,[31]]]]]]]]],[[31,[[31,[[31,[[31,[31]]]]]]]]]],[[],32],[2,2],[[[5,[18]]],[[5,[18]]]],[20,20],[[2,2]],[[20,20]],[[]],[[]],[[]],[[2,2],33],[[20,20],33],0,[[[5,[[0,[18,19,34]]]]],[[5,[[0,[18,19,34]]]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[]],[[]],[[[5,[3]]],[[5,[3]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[]],[[[5,[3]]],[[5,[3]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[],15],[20,12],[[],15],[[],2],[[],[[5,[35]]]],[[],20],[[2,15],2],[[2,7],2],[[2,12],2],[[2,10],2],[[2,15],2],[[2,10],2],[[2,6],2],[[2,6],2],[[2,12],2],[[2,16],2],[[2,6],2],[[2,14],2],[[2,11],2],[[2,17],2],[[2,8],2],[[2,14],2],[[2,17],2],[[2,9],2],[[2,15],2],[[2,16],2],[[2,11],2],[[2,8],2],[[2,11],2],[[2,17],2],[[2,17],2],[[2,7],2],[[2,9],2],[[2,8],2],[[2,10],2],[[2,13],2],[[2,2],2],[[2,7],2],[[2,7],2],[[2,14],2],[[2,12],2],[[2,8],2],[[2,10],2],[[2,9],2],[[2,2],2],[[2,13],2],[[2,13],2],[[2,15],2],[[2,13],2],[[2,12],2],[[2,14],2],[[2,2],2],[[2,9],2],[[2,6],2],[[2,2],2],[[2,16],2],[[2,16],2],[[2,11],2],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[20,20],20],[[20,12],20],[[20,7],20],[[20,7],20],[[20,7],20],[[20,13],20],[[20,15],20],[[20,7],20],[[20,8],20],[[20,20],20],[[20,8],20],[[20,20],20],[[20,15],20],[[20,17],20],[[20,12],20],[[20,12],20],[[20,12],20],[[20,13],20],[[20,17],20],[[20,13],20],[[20,20],20],[[20,15],20],[[20,8],20],[[20,8],20],[[20,13],20],[[20,15],20],[[20,17],20],[[20,17],20],[[2,6]],[[2,7]],[[2,13]],[[2,2]],[[2,11]],[[2,16]],[[2,12]],[[2,15]],[[2,8]],[[2,10]],[[2,14]],[[2,17]],[[2,9]],[[2,2]],[[[5,[[0,[18,21]]]],[0,[18,21]]]],[[[5,[[0,[18,21]]]],[5,[[0,[18,21]]]]]],[[[5,[[0,[18,21]]]],[5,[[0,[18,21]]]]]],[[[5,[[0,[18,21]]]],[0,[18,21]]]],[[20,8]],[[20,15]],[[20,12]],[[20,13]],[[20,17]],[[20,20]],[[20,7]],[[20,20]],[[]],[[2,2],2],[[20,20],20],[[2,2],2],[[20,20],20],[[]],[[2,2],2],[[20,20],20],[[]],[[2,2]],[[20,20]],[[]],[[2,2]],[[20,20]],[[],26],[[2,2],26],[[20,20],26],[[]],[[2,2],26],[[[5,[[36,[[36,[[36,[36]]]]]]]],[5,[[36,[[36,[[36,[36]]]]]]]]],26],[[20,20],26],[[],26],[[],26],[[],26],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]]],[[5,[3]]]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[]],[[[5,[3]],3],[[5,[3]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[18,18],[[37,[18]]]],[[[0,[18,1]],[0,[18,1]]]],[[2,2]],[[[5,[3]],[5,[3]]],[[5,[3]]]],[[[5,[3]]],[[5,[3]]]],[[]],[[2,38],[[40,[39]]]],[[2,38],[[40,[39]]]],[[2,38],[[40,[39]]]],[[2,38],[[40,[39]]]],[[2,38],[[40,[39]]]],[[2,38],[[40,[39]]]],[[[5,[[0,[41,19,[31,[[0,[41,19,[31,[[0,[41,19,[31,[[0,[41,19,31,18]]]],18]]]],18]]]],18]]]],38],[[40,[39]]]],[[[5,[[0,[42,19,[31,[[0,[42,19,[31,[[0,[42,19,[31,[[0,[42,19,31,18]]]],18]]]],18]]]],18]]]],38],[[40,[39]]]],[[[5,[43]],38],[[40,[39]]]],[[[5,[[0,[44,19,[31,[[0,[44,19,[31,[[0,[44,19,[31,[[0,[44,19,31,18]]]],18]]]],18]]]],18]]]],38],[[40,[39]]]],[[[5,[[0,[45,19,[31,[[0,[45,19,[31,[[0,[45,19,[31,[[0,[45,19,31,18]]]],18]]]],18]]]],18]]]],38],[[40,[39]]]],[[[5,[[0,[46,19,[31,[[0,[46,19,[31,[[0,[46,19,[31,[[0,[46,19,31,18]]]],18]]]],18]]]],18]]]],38],[[40,[39]]]],[[[5,[[0,[47,19,[31,[[0,[47,19,[31,[[0,[47,19,[31,[[0,[47,19,31,18]]]],18]]]],18]]]],18]]]],38],[[40,[39]]]],[[[5,[[0,[48,19,[31,[[0,[48,19,[31,[[0,[48,19,[31,[[0,[48,19,31,18]]]],18]]]],18]]]],18]]]],38],[[40,[39]]]],[[20,38],[[40,[39]]]],[[20,38],[[40,[39]]]],[[20,38],[[40,[39]]]],[[20,38],[[40,[39]]]],[[20,38],[[40,[39]]]],[[20,38],[[40,[39]]]],[[]],[49,28],[8,2],[[]],[20,2],[13,2],[9,2],[26,2],[17,2],[14,2],[12,2],[15,2],[7,2],[6,2],[11,2],[10,2],[16,2],[[]],[49,[[28,[[5,[[0,[27,19]]]]]]]],[[[0,[18,19]]],[[5,[[0,[18,19]]]]]],[[[0,[18,19]]],[[5,[[0,[18,19]]]]]],[[]],[17,20],[26,20],[13,20],[15,20],[8,20],[7,20],[12,20],[[]],[[],2],[[],20],[[24,20],2],[[24,[25,[13]]],2],[[[25,[13]]],20],[[24,[25,[13]]],2],[[[25,[13]]],20],[50,28],[50,[[28,[[5,[[0,[51,19]]]]]]]],[52,28],[52,[[28,[2]]]],[52,[[28,[[5,[[0,[51,19]]]]]]]],[52,[[28,[20]]]],[11,28],[11,[[28,[2]]]],[11,[[28,[[5,[[0,[51,19]]]]]]]],[11,[[28,[20]]]],[6,28],[6,[[28,[[5,[[0,[51,19]]]]]]]],[16,28],[16,[[28,[[5,[[0,[51,19]]]]]]]],[10,28],[10,[[28,[2]]]],[10,[[28,[[5,[[0,[51,19]]]]]]]],[10,[[28,[20]]]],[9,28],[9,[[28,[[5,[[0,[51,19]]]]]]]],[14,28],[14,[[28,[[5,[[0,[51,19]]]]]]]],[[]],[[],2],[[],20],[[3,3],[[5,[3]]]],[[24,[25,[13]],15],[[28,[2]]]],[[[25,[13]],15],[[28,[20]]]],[[24,[25,[13]],15],[[28,[2]]]],[[[25,[13]],15],[[28,[20]]]],[[[25,[13]]],2],[[[25,[13]]],2],[[24,[25,[15]]],2],[[[25,[15]]],20],[53,[[40,[2,54]]]],[53,[[40,[[5,[[0,[55,19,18]]]]]]]],[53,[[40,[20,54]]]],[[53,15],40],[[53,15],[[40,[2,54]]]],[[53,15],[[40,[[5,[[0,[19,18]]]]]]]],[[53,15],[[40,[20,54]]]],[7,28],[7,[[28,[2]]]],[7,[[28,[[5,[[0,[51,19]]]]]]]],[7,[[28,[20]]]],[8,28],[8,[[28,[[5,[[0,[51,19]]]]]]]],[15,28],[15,[[28,[[5,[[0,[51,19]]]]]]]],[12,28],[12,[[28,[2]]]],[12,[[28,[[5,[[0,[51,19]]]]]]]],[12,[[28,[20]]]],[13,28],[13,[[28,[[5,[[0,[51,19]]]]]]]],[17,28],[17,[[28,[[5,[[0,[51,19]]]]]]]],[[]],[[2,2],2],[[20,20],20],[[]],[[2,2]],[[20,20]],[[2,56]],[[[5,[57]],56]],[[20,56]],[[]],[[],[[5,[[0,[18,19]]]]]],[[[5,[[0,[3,4]]]]]],0,[[]],0,[[]],[[]],[[]],[[]],[2],[[[5,[[0,[18,19,34]]]]]],[[[5,[[0,[18,19,34]]]]]],[[[5,[[0,[18,19,34]]]]],[[5,[[0,[18,19,34]]]]]],[[],26],[2,26],[20,26],[[],26],[[[5,[58]]],26],[[[5,[[0,[3,4]]]]],26],[[],26],[[[5,[[0,[3,4]]]]],26],[[[5,[58]]],26],[[],26],[[2,2],26],[[20,20],26],[[],26],[[[5,[[0,[3,4]]]]],26],[[[5,[58]]],26],[[],26],[2,26],[[],26],[[[5,[58]]],26],[[[5,[[0,[3,4]]]]],26],[[],26],[2,26],[20,26],[[[36,[[36,[[36,[[36,[36]]]]]]]]],26],[2,26],[[[5,[[0,[18,19]]]]],26],[20,26],[[],26],[2,26],[[],26],[[],26],[[],26],[[],26],[2,26],[[[5,[[0,[18,19]]]]],26],[20,26],0,[2,59],[20,59],[2,60],[20,60],[[[5,[[0,[18,1]]]]],[[0,[18,1]]]],[[[5,[[0,[3,4]]]]]],[[]],[[2,2],2],[[20,20],20],[[],15],[[],15],[[]],[[[5,[3]]],[[5,[3]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]],3],[[5,[3]]]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[2,20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,2],2],[[20,20],20],[[2,2,2],2],[[20,20,20],20],[[2,10],2],[[2,6],2],[[2,15],2],[[2,9],2],[[2,16],2],[[2,17],2],[[2,8],2],[[2,12],2],[[2,17],2],[[2,11],2],[[2,8],2],[[2,12],2],[[2,15],2],[[2,13],2],[[2,11],2],[[2,16],2],[[2,17],2],[[2,2],2],[[2,2],2],[[2,12],2],[[2,13],2],[[2,16],2],[[2,15],2],[[2,17],2],[[2,11],2],[[2,9],2],[[2,6],2],[[2,9],2],[[2,14],2],[[2,14],2],[[2,2],2],[[2,10],2],[[2,7],2],[[2,14],2],[[2,7],2],[[2,8],2],[[2,11],2],[[2,10],2],[[2,8],2],[[2,6],2],[[2,2],2],[[2,7],2],[[2,10],2],[[2,13],2],[[2,15],2],[[2,9],2],[[2,7],2],[[2,16],2],[[2,12],2],[[2,14],2],[[2,13],2],[[2,6],2],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[20,17],20],[[20,20],20],[[20,7],20],[[20,7],20],[[20,12],20],[[20,8],20],[[20,13],20],[[20,20],20],[[20,13],20],[[20,15],20],[[20,12],20],[[20,8],20],[[20,7],20],[[20,12],20],[[20,8],20],[[20,17],20],[[20,20],20],[[20,15],20],[[20,17],20],[[20,13],20],[[20,7],20],[[20,13],20],[[20,15],20],[[20,15],20],[[20,20],20],[[20,8],20],[[20,12],20],[[20,17],20],[[]],[[[5,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]],[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]]]]]]]],[5,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]],[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]]]]]]]],[5,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]],[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]]]]]]]]],[[5,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]],[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]]]]]]]]]],[[[5,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]],[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]]]]]]]],[5,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]],[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]]]]]]]],[5,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]],[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]]]]]]]]],[[5,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]],[0,[18,19,[61,[[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]],[0,[18,19,[61,[[0,[18,19,61]],[0,[18,19,61]]]]]]]]]]]]]]]]]],[[[5,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]],[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]]]]]]]],[5,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]],[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]]]]]]]],[5,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]],[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]]]]]]]]]],[[[5,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]],[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]]]]]]]],[5,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]],[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]]]]]]]],[5,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]],[0,[18,21,[62,[[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]],[0,[18,21,[62,[[0,[18,21,62]],[0,[18,21,62]]]]]]]]]]]]]]]]]],[[2,16]],[[2,2]],[[2,14]],[[2,10]],[[2,13]],[[2,12]],[[2,9]],[[2,8]],[[2,6]],[[2,11]],[[2,2]],[[2,17]],[[2,7]],[[2,15]],[[[5,[[0,[18,21]]]],[0,[18,21]]]],[[[5,[[0,[18,21]]]],[5,[[0,[18,21]]]]]],[[[5,[[0,[18,21]]]],[0,[18,21]]]],[[[5,[[0,[18,21]]]],[5,[[0,[18,21]]]]]],[[20,8]],[[20,7]],[[20,17]],[[20,13]],[[20,20]],[[20,12]],[[20,20]],[[20,15]],[[]],[2,2],[2,2],[[[5,[[0,[18,19,34]]]]]],[[[5,[[0,[18,19,34]]]]]],[[]],[[]],[[24,[64,[15,63]]],2],[[],5],[[[64,[15,63]]],20],[[18,18],18],[[2,2],2],[[20,20],20],[[[5,[3]]],3],[[[5,[[0,[18,19]]]]],[[0,[18,19]]]],[2,2],[2,2],[[2,15],2],[[2,15],2],[[20,15],20],[[20,15],20],[[],29],[[]],[[],2],[[],[[5,[[0,[18,19]]]]]],[[],20],[[[25,[13]],15],[[28,[2]]]],[[[25,[13]],15],[[28,[20]]]],[[2,2],[[28,[33]]]],[[20,20],[[28,[33]]]],0,[[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,65]]]]]]]]]]]]]]]]]],17],[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,65]]]]]]]]]]]]]]]]]]]],[15],[[2,20],2],[[2,13],2],[[2,15],2],[[2,17],2],[[2,20],2],[[2,20],2],[[2,12],2],[[2,7],2],[[2,8],2],[[2,20],2],[[2,8],2],[[2,15],2],[[2,7],2],[[2,15],2],[[2,17],2],[[2,8],2],[[2,13],2],[[2,12],2],[[2,17],2],[[2,13],2],[[2,15],2],[[2,13],2],[[2,7],2],[[2,7],2],[[2,8],2],[[2,15],2],[[2,12],2],[[2,12],2],[[2,17],2],[[[5,[[0,[18,19,34]]]],11]],[[[5,[[0,[18,19,34]]]],10]],[[[5,[[0,[18,19,34]]]],6]],[[[5,[3]],50]],[[[5,[[0,[18,19,34]]]],14]],[[[5,[[0,[18,19]]]],7]],[[[5,[[0,[18,19]]]],7]],[[[5,[[0,[18,19,34]]]],10]],[[[5,[[0,[18,19,34]]]],14]],[[[5,[3]],[5,[3]]]],[[[5,[3]],50]],[[[5,[[0,[18,19]]]],13]],[[[5,[[0,[18,19]]]],12]],[[[5,[3]],[5,[3]]]],[[[5,[[0,[18,19,34]]]],11]],[[[5,[3]],[5,[3]]]],[[[5,[3]],52]],[[[5,[[0,[18,19,34]]]],9]],[[[5,[[0,[18,19]]]],15]],[[[5,[[0,[18,19,34]]]],16]],[[[5,[[0,[18,19]]]],8]],[[[5,[3]],[5,[3]]]],[[[5,[[0,[18,19]]]],8]],[[[5,[3]],52]],[[[5,[[0,[18,19]]]],15]],[[[5,[[0,[18,19,34]]]],16]],[[[5,[3]],52]],[[[5,[3]],52]],[[[5,[3]],50]],[[[5,[3]],50]],[[[5,[[0,[18,19]]]],13]],[[[5,[[0,[18,19,34]]]],9]],[[[5,[[0,[18,19]]]],12]],[[[5,[[0,[18,19]]]],17]],[[[5,[[0,[18,19]]]],17]],[[[5,[[0,[18,19,34]]]],6]],[[20,20],20],[[20,15],20],[[20,12],20],[[20,13],20],[[20,17],20],[[20,12],20],[[20,7],20],[[20,20],20],[[20,17],20],[[20,8],20],[[20,17],20],[[20,13],20],[[20,8],20],[[20,7],20],[[20,15],20],[[20,15],20],[[20,8],20],[[20,8],20],[[20,12],20],[[20,15],20],[[20,17],20],[[20,7],20],[[20,13],20],[[20,12],20],[[20,20],20],[[20,15],20],[[20,13],20],[[20,20],20],[[20,7],20],[[[5,[[0,[3,4]]]],5],5],[[[5,[3]],[5,[3]]],[[5,[3]]]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]],3],[[5,[3]]]],[16],[[[5,[[0,[3,4]]]],16],[[5,[[0,[3,4]]]]]],[[[5,[[0,[18,19,34]]]],16],[[5,[[0,[18,19,34]]]]]],[[[5,[[0,[18,19]]]],15],[[5,[[0,[18,19]]]]]],[[18,18],18],[[2,2],2],[[20,20],20],[66,2],[66,[[5,[[0,[19,18]]]]]],[66,[[5,[[0,[19,18]]]]]],[66,20],[[[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],18,29]],[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],18,29]]],[[68,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]]]],[[[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],18,29]],[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],18,29]]],[[69,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]]]],[[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]],[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]],[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]]],[[72,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]]]],[[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]],[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]],[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]]],[[73,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]]]],0,[[[5,[[0,[3,4]]]]]],0,[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[2,16],2],[[2,17],2],[[2,2],2],[[2,15],2],[[2,7],2],[[2,14],2],[[2,15],2],[[2,2],2],[[2,17],2],[[2,6],2],[[2,7],2],[[2,8],2],[[2,10],2],[[2,12],2],[[2,6],2],[[2,11],2],[[2,12],2],[[2,2],2],[[2,16],2],[[2,7],2],[[2,14],2],[[2,9],2],[[2,13],2],[[2,6],2],[[2,15],2],[[2,10],2],[[2,11],2],[[2,16],2],[[2,15],2],[[2,13],2],[[2,10],2],[[2,8],2],[[2,16],2],[[2,7],2],[[2,8],2],[[2,12],2],[[2,9],2],[[2,14],2],[[2,10],2],[[2,12],2],[[2,9],2],[[2,8],2],[[2,13],2],[[2,17],2],[[2,2],2],[[2,14],2],[[2,9],2],[[2,11],2],[[2,17],2],[[2,11],2],[[2,13],2],[[2,6],2],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[20,7],20],[[20,15],20],[[20,17],20],[[20,15],20],[[20,15],20],[[20,7],20],[[20,13],20],[[20,8],20],[[20,12],20],[[20,8],20],[[20,13],20],[[20,8],20],[[20,17],20],[[20,17],20],[[20,20],20],[[20,17],20],[[20,12],20],[[20,20],20],[[20,15],20],[[20,13],20],[[20,8],20],[[20,12],20],[[20,7],20],[[20,13],20],[[20,7],20],[[20,12],20],[[20,20],20],[[20,20],20],[[2,2]],[[2,13]],[[2,9]],[[2,16]],[[2,11]],[[2,8]],[[2,6]],[[2,2]],[[2,14]],[[2,17]],[[2,15]],[[2,7]],[[2,12]],[[2,10]],[[[5,[[0,[18,21]]]],[0,[18,21]]]],[[[5,[[0,[18,21]]]],[5,[[0,[18,21]]]]]],[[[5,[[0,[18,21]]]],[0,[18,21]]]],[[[5,[[0,[18,21]]]],[5,[[0,[18,21]]]]]],[[20,15]],[[20,12]],[[20,7]],[[20,17]],[[20,13]],[[20,20]],[[20,8]],[[20,20]],[[2,2],2],[[20,20],20],[[]],[15],[15],[[]],[[]],[[]],[[[5,[[0,[18,19]]]],[0,[18,19]]],[[5,[[0,[18,19]]]]]],[[2,12,26]],[[20,12,26]],[[]],[2],[[[5,[[0,[18,19]]]]]],[20],[[]],[2],[[[5,[[0,[18,19]]]]]],[20],[[2,14],2],[[2,10],2],[[2,6],2],[[2,8],2],[[2,9],2],[[2,14],2],[[2,8],2],[[2,16],2],[[2,15],2],[[2,9],2],[[2,7],2],[[2,11],2],[[2,9],2],[[2,6],2],[[2,15],2],[[2,12],2],[[2,15],2],[[2,8],2],[[2,16],2],[[2,11],2],[[2,15],2],[[2,13],2],[[2,17],2],[[2,12],2],[[2,10],2],[[2,12],2],[[2,7],2],[[2,13],2],[[2,17],2],[[2,8],2],[[2,16],2],[[2,13],2],[[2,12],2],[[2,11],2],[[2,17],2],[[2,6],2],[[2,14],2],[[2,6],2],[[2,7],2],[[2,14],2],[[2,13],2],[[2,10],2],[[2,16],2],[[2,17],2],[[2,9],2],[[2,11],2],[[2,10],2],[[2,7],2],[[20,10],20],[[20,15],20],[[20,16],20],[[20,16],20],[[20,11],20],[[20,6],20],[[20,14],20],[[20,15],20],[[20,16],20],[[20,11],20],[[20,7],20],[[20,13],20],[[20,8],20],[[20,12],20],[[20,6],20],[[20,10],20],[[20,17],20],[[20,9],20],[[20,17],20],[[20,10],20],[[20,17],20],[[20,13],20],[[20,9],20],[[20,15],20],[[20,14],20],[[20,10],20],[[20,7],20],[[20,15],20],[[20,7],20],[[20,11],20],[[20,6],20],[[20,13],20],[[20,6],20],[[20,14],20],[[20,14],20],[[20,7],20],[[20,17],20],[[20,12],20],[[20,12],20],[[20,9],20],[[20,12],20],[[20,16],20],[[20,8],20],[[20,13],20],[[20,9],20],[[20,8],20],[[20,8],20],[[20,11],20],[[2,7]],[[2,8]],[[2,17]],[[2,9]],[[2,15]],[[2,12]],[[2,12]],[[2,13]],[[2,8]],[[2,6]],[[2,14]],[[2,6]],[[2,11]],[[2,9]],[[2,16]],[[2,14]],[[2,7]],[[2,17]],[[2,10]],[[2,16]],[[2,13]],[[2,15]],[[2,10]],[[2,11]],[[20,9]],[[20,8]],[[20,7]],[[20,11]],[[20,11]],[[20,14]],[[20,14]],[[20,12]],[[20,15]],[[20,9]],[[20,17]],[[20,15]],[[20,10]],[[20,13]],[[20,6]],[[20,10]],[[20,7]],[[20,16]],[[20,13]],[[20,16]],[[20,12]],[[20,6]],[[20,8]],[[20,17]],[[2,14],2],[[2,6],2],[[2,11],2],[[2,12],2],[[2,13],2],[[2,15],2],[[2,12],2],[[2,15],2],[[2,16],2],[[2,13],2],[[2,11],2],[[2,17],2],[[2,6],2],[[2,10],2],[[2,16],2],[[2,9],2],[[2,7],2],[[2,10],2],[[2,8],2],[[2,16],2],[[2,17],2],[[2,7],2],[[2,14],2],[[2,13],2],[[2,10],2],[[2,8],2],[[2,12],2],[[2,15],2],[[2,13],2],[[2,6],2],[[2,12],2],[[2,7],2],[[2,14],2],[[2,11],2],[[2,9],2],[[2,8],2],[[2,17],2],[[2,11],2],[[2,17],2],[[2,6],2],[[2,7],2],[[2,9],2],[[2,10],2],[[2,8],2],[[2,16],2],[[2,9],2],[[2,15],2],[[2,14],2],[[20,16],20],[[20,13],20],[[20,9],20],[[20,8],20],[[20,15],20],[[20,8],20],[[20,8],20],[[20,10],20],[[20,6],20],[[20,10],20],[[20,11],20],[[20,6],20],[[20,14],20],[[20,17],20],[[20,13],20],[[20,16],20],[[20,16],20],[[20,9],20],[[20,9],20],[[20,6],20],[[20,12],20],[[20,7],20],[[20,13],20],[[20,11],20],[[20,13],20],[[20,15],20],[[20,12],20],[[20,15],20],[[20,10],20],[[20,17],20],[[20,6],20],[[20,14],20],[[20,14],20],[[20,16],20],[[20,12],20],[[20,8],20],[[20,12],20],[[20,10],20],[[20,17],20],[[20,17],20],[[20,11],20],[[20,15],20],[[20,7],20],[[20,11],20],[[20,14],20],[[20,7],20],[[20,7],20],[[20,9],20],[[2,15]],[[2,16]],[[2,11]],[[2,10]],[[2,10]],[[2,13]],[[2,15]],[[2,13]],[[2,17]],[[2,6]],[[2,16]],[[2,9]],[[2,6]],[[2,7]],[[2,17]],[[2,11]],[[2,8]],[[2,7]],[[2,8]],[[2,12]],[[2,12]],[[2,14]],[[2,9]],[[2,14]],[[20,6]],[[20,13]],[[20,15]],[[20,16]],[[20,8]],[[20,15]],[[20,16]],[[20,6]],[[20,10]],[[20,7]],[[20,9]],[[20,13]],[[20,17]],[[20,10]],[[20,9]],[[20,12]],[[20,7]],[[20,14]],[[20,12]],[[20,11]],[[20,17]],[[20,11]],[[20,14]],[[20,8]],[2,24],[15],[15],[1,1],[[]],[[]],[2,2],[[]],[[[5,[3]]],[[5,[3]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]]],[[5,[3]]]],[[]],[2,2],[2,2],[[[5,[3]]],[[5,[3]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[20,20],[20,20],[[2,13],2],[[2,2],2],[[2,6],2],[[2,13],2],[[2,15],2],[[2,13],2],[[2,9],2],[[2,15],2],[[2,10],2],[[2,9],2],[[2,6],2],[[2,12],2],[[2,16],2],[[2,10],2],[[2,6],2],[[2,14],2],[[2,2],2],[[2,2],2],[[2,10],2],[[2,11],2],[[2,9],2],[[2,15],2],[[2,6],2],[[2,13],2],[[2,12],2],[[2,7],2],[[2,7],2],[[2,2],2],[[2,8],2],[[2,17],2],[[2,17],2],[[2,14],2],[[2,9],2],[[2,8],2],[[2,12],2],[[2,12],2],[[2,8],2],[[2,11],2],[[2,7],2],[[2,14],2],[[2,17],2],[[2,11],2],[[2,11],2],[[2,8],2],[[2,15],2],[[2,14],2],[[2,7],2],[[2,17],2],[[2,10],2],[[2,16],2],[[2,16],2],[[2,16],2],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[0,[18,19]]]],[[[5,[[0,[18,19]]]],[5,[[0,[18,19]]]]]],[[20,8],20],[[20,8],20],[[20,20],20],[[20,17],20],[[20,12],20],[[20,17],20],[[20,8],20],[[20,13],20],[[20,15],20],[[20,7],20],[[20,13],20],[[20,15],20],[[20,13],20],[[20,13],20],[[20,15],20],[[20,12],20],[[20,7],20],[[20,8],20],[[20,20],20],[[20,12],20],[[20,7],20],[[20,20],20],[[20,20],20],[[20,17],20],[[20,12],20],[[20,15],20],[[20,17],20],[[20,7],20],[[2,9]],[[2,12]],[[2,2]],[[2,16]],[[2,17]],[[2,8]],[[2,7]],[[2,2]],[[2,14]],[[2,11]],[[2,6]],[[2,10]],[[2,15]],[[2,13]],[[[5,[[0,[18,21]]]],[5,[[0,[18,21]]]]]],[[[5,[[0,[18,21]]]],[0,[18,21]]]],[[[5,[[0,[18,21]]]],[5,[[0,[18,21]]]]]],[[[5,[[0,[18,21]]]],[0,[18,21]]]],[[20,15]],[[20,12]],[[20,17]],[[20,20]],[[20,7]],[[20,8]],[[20,13]],[[20,20]],[66,2],[66,[[5,[[0,[19,18]]]]]],[66,[[5,[[0,[19,18]]]]]],[66,20],[[]],[[]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[[5,[3]]],[[5,[3]]]],[[]],[[[5,[3]]],[[5,[3]]]],[[[5,[[0,[3,4]]]]],[[5,[[0,[3,4]]]]]],[[]],[2],[20],[2,[[28,[2]]]],[20,[[28,[2]]]],[2,[[28,[20]]]],[2,[[28,[20]]]],[20,[[28,[20]]]],[2],[20,[[64,[13,63]]]],[2],[20,[[64,[13,63]]]],[[]],[[],[[28,[50]]]],[2,[[28,[50]]]],[[[5,[[0,[49,19]]]]],[[28,[50]]]],[20,[[28,[50]]]],[[],[[28,[52]]]],[2,[[28,[52]]]],[[[5,[[0,[49,19]]]]],[[28,[52]]]],[20,[[28,[52]]]],[[],[[28,[11]]]],[2,[[28,[11]]]],[[[5,[[0,[49,19]]]]],[[28,[11]]]],[20,[[28,[11]]]],[[],[[28,[6]]]],[[[5,[[0,[49,19]]]]],[[28,[6]]]],[[],[[28,[16]]]],[[[5,[[0,[49,19]]]]],[[28,[16]]]],[[],[[28,[10]]]],[2,[[28,[10]]]],[[[5,[[0,[49,19]]]]],[[28,[10]]]],[20,[[28,[10]]]],[[],[[28,[9]]]],[[[5,[[0,[49,19]]]]],[[28,[9]]]],[[],[[28,[14]]]],[[[5,[[0,[49,19]]]]],[[28,[14]]]],[[]],[2],[20],[[]],[[]],[[]],[[[5,[3]]]],[[]],[[2,15]],[[20,15],[[64,[13,63]]]],[[2,15]],[[20,15],[[64,[13,63]]]],[2,[[64,[13,63]]]],[2,[[64,[13,63]]]],[[2,15],74],[[20,15],74],[[],74],[[],74],[[],74],[[],[[28,[7]]]],[2,[[28,[7]]]],[[[5,[[0,[49,19]]]]],[[28,[7]]]],[20,[[28,[7]]]],[[],[[28,[8]]]],[[[5,[[0,[49,19]]]]],[[28,[8]]]],[[],[[28,[15]]]],[[[5,[[0,[49,19]]]]],[[28,[15]]]],[2],[20,[[64,[15,63]]]],[[],[[28,[12]]]],[2,[[28,[12]]]],[[[5,[[0,[49,19]]]]],[[28,[12]]]],[20,[[28,[12]]]],[2],[20,[[64,[12,63]]]],[[],[[28,[13]]]],[[[5,[[0,[49,19]]]]],[[28,[13]]]],[[],[[28,[17]]]],[[[5,[[0,[49,19]]]]],[[28,[17]]]],[[],15],[20,12],[[],15],[2,[[28,[12]]]],[20,[[28,[12]]]],0,[[]],[[],40],[[],40],[14,[[40,[20,75]]]],[9,[[40,[20,75]]]],[16,[[40,[20,75]]]],[2,[[40,[20,75]]]],[[],40],[11,[[40,[20,75]]]],[10,[[40,[20,75]]]],[2,[[40,[20,[75,[2]]]]]],[6,[[40,[20,75]]]],[[],40],[[],40],[[],40],[[],76],[[],76],[[],76],[[[5,[[0,[18,19]]]],[0,[18,19]]],[[5,[[0,[18,19]]]]]],[15],[15],[[],71],[[]],[[],2],[[],[[5,[[0,[18,19]]]]]],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,24],[54,54],[[[75,[18]]],[[75,[18]]]],[[]],[[]],[[]],[[24,24],33],[59,17],[60,17],[54,53],[[[75,[43]]],53],[[24,24],26],[[54,54],26],[[[75,[[36,[[36,[[36,[36]]]]]]]],[75,[[36,[[36,[[36,[36]]]]]]]]],26],[[],26],[[],26],[[],26],[[24,38],[[40,[39]]]],[[54,38],[[40,[39]]]],[[54,38],[[40,[39]]]],[[75,38],[[40,[39]]]],[[[75,[43]],38],[[40,[39]]]],[[]],[[]],[[]],[[]],[[]],[[24,56]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75],[59,[[28,[15]]]],[60,[[28,[12]]]],[59,17],[60,17],[[24,24],24],[24,24],[59,[[28,[15]]]],[60,[[28,[12]]]],[59,28],[60,28],[[60,17],[[28,[12]]]],[[24,24],[[28,[33]]]],[59],[60],[[],[[28,[2]]]],[[],[[28,[20]]]],[[]],[[]],[[]],[[],74],[[],74],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],76],[[],76],[[],76],[[],76],[[],76],0,0,0,0,[[]],[27,[[28,[27]]]],[49,28],[50,28],[52,28],[11,28],[6,28],[16,28],[10,28],[9,28],[14,28],[7,28],[8,28],[15,28],[12,28],[13,28],[17,28],[[],[[28,[50]]]],[[],[[28,[52]]]],[[],[[28,[11]]]],[[],[[28,[6]]]],[[],[[28,[16]]]],[[],[[28,[10]]]],[[],[[28,[9]]]],[[],[[28,[14]]]],[[],[[28,[7]]]],[[],[[28,[8]]]],[[],[[28,[15]]]],[[],[[28,[12]]]],[[],[[28,[13]]]],[[],[[28,[17]]]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[78,[77]]],53],[[[78,[[36,[[36,[[36,[36]]]]]]]],[78,[[36,[[36,[[36,[36]]]]]]]]],26],[[]],[[]],[[]],[[[78,[48]],38],[[40,[39]]]],[[[78,[43]],38],[[40,[39]]]],[[]],[[]],0,[[]],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[5,5],[[]],[16],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],74],[[],40],[[],40],[[],76],0,0,0,0,0,[[79,79],79],[[]],[[79,79],79],[[]],[[[0,[80,18]],[0,[80,18]]],[[0,[80,18]]]],[[]],[[]],[[]],[[]],[81,81],[[]],[[[37,[18]]],[[37,[18]]]],[[]],[[80,80],80],[[]],[[80,80],80],[[]],[[80,80]],[[]],[[80,80]],[[]],[[],26],[[[37,[[36,[[36,[[36,[36]]]]]]]],[37,[[36,[[36,[[36,[36]]]]]]]]],26],[[],26],[[18,18],[[37,[18]]]],[[[0,[18,1]],[0,[18,1]]]],[[[37,[43]],38],[[40,[39]]]],[[]],[[]],[[80,80],80],[[]],0,[[80,80]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[80,80],80],[[]],[[80,80],80],[[]],[[[25,[[0,[80,18,[67,[[0,[80,18,[67,[[0,[80,18,[67,[[0,[80,18,67]]]]]]]]]]]]]]]]],[[0,[80,18,[67,[[0,[80,18,[67,[[0,[80,18,[67,[[0,[80,18,[67,[[0,[80,18,67]]]]]]]]]]]]]]]]]]]],[80,[[82,[80]]]],[[[82,[[0,[80,18]]]]],[[28,[[0,[80,18]]]]]],[[18,18],18],[[81,15],81],[15],[[18,18],18],[81,81],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[],76],[[],76],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[18]]],[[68,[18]]]],[[[69,[18]]],[[69,[18]]]],[[[72,[18]]],[[72,[18]]]],[[[73,[18]]],[[73,[18]]]],[[[83,[18]]],[[83,[18]]]],[[[84,[18]]],[[84,[18]]]],[[]],[[]],[[]],[[]],[[]],[[]],[68,85],[69,85],[83,85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[68,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],18,49]]]]],[[28,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],18,49]]]]]],[[[69,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],18,49]]]]],[[28,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],18,49]]]]]],[[[72,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18]]]],18]]]],18]]]],18]]]]],[[28,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18]]]],18]]]],18]]]],18]]]]]],[[[73,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,36]]]],18,[36,[[0,[70,31,18,36]]]]]]]],18,[36,[[0,[70,[31,[[0,[70,31,18,36]]]],18,[36,[[0,[70,31,18,36]]]]]]]]]]]],18,[36,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,36]]]],18,[36,[[0,[70,31,18,36]]]]]]]],18,[36,[[0,[70,[31,[[0,[70,31,18,36]]]],18,[36,[[0,[70,31,18,36]]]]]]]]]]]]]]]]],[[28,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,36]]]],18,[36,[[0,[70,31,18,36]]]]]]]],18,[36,[[0,[70,[31,[[0,[70,31,18,36]]]],18,[36,[[0,[70,31,18,36]]]]]]]]]]]],18,[36,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,36]]]],18,[36,[[0,[70,31,18,36]]]]]]]],18,[36,[[0,[70,[31,[[0,[70,31,18,36]]]],18,[36,[[0,[70,31,18,36]]]]]]]]]]]]]]]]]],[[[83,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18]]]],18]]]],18]]]],18]]]]],[[28,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18]]]],18]]]],18]]]],18]]]]]],[[[84,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18]]]],18]]]],18]]]],18]]]]],[[28,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18]]]],18]]]],18]]]],18]]]]]],[[[68,[[0,[80,18,49]]]]],[[28,[[0,[80,18,49]]]]]],[[[69,[[0,[[86,[[0,[[86,[[0,[[86,[[0,[86,80,18,49]]]],80,18,49]]]],80,18,49]]]],80,18,49]]]]],[[28,[[0,[[86,[[0,[[86,[[0,[[86,[[0,[86,80,18,49]]]],80,18,49]]]],80,18,49]]]],80,18,49]]]]]],[[[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],18,29]],[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],18,29]]],[[68,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]]]],[[[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18,29]]]],18,29]]]],18,29]]]],18,29]]]],18,29]]],[[83,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18,29]]]],18,29]]]],18,29]]]],18,29]]]]]],[[[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],18,29]],[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]],18,29]]],[[69,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],[31,[[0,[[67,[[0,[67,31,18,29]]]],[31,[[0,[67,31,18,29]]]],18,29]]]],18,29]]]],18,29]]]]]],[[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]],[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]],[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]]],[[72,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]]]],[[[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18]]]],18]]]],18]]]],18]]]],18]],[0,[[67,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18]]]],18]]]],18]]]],18]]]],18]]],[[84,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18]]]],18]]]],18]]]],18]]]]]],[[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]],[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]],[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]],18,71]]],[[73,[[0,[70,[31,[[0,[70,[31,[[0,[70,[31,[[0,[70,31,18,71]]]],18,71]]]],18,71]]]],18,71]]]]]],[[[68,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],18,49]]]]]],[[[69,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],[31,[[0,[[67,[[0,[67,31,18,49]]]],[31,[[0,[67,31,18,49]]]],18,49]]]],18,49]]]],18,49]]]]]],[[[83,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18]]]],18]]]],18]]]],18]]]]]],[[[84,[[0,[[67,[[0,[[67,[[0,[[67,[[0,[67,18]]]],18]]]],18]]]],18]]]]]],[68,85],[69,85],[83,85],[[]],[[]],[[]],[[]],[[]],[[]],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],76],[[],76],[[],76],[[],76],[[],76],[[],76],0,0,[[[0,[18,29,30]],17],[[28,[[0,[18,29,30]]]]]],[[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,65]]]]]]]]]]]]]]]]]],17],[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,65]]]]]]]]]]]]]]]]]]]],[[]],0,0,0,0,0,0,[[[87,[[0,[18,80,1]]]]],[[87,[[0,[18,80,1]]]]]],[[[87,[[0,[18,80,1]]]],[87,[[0,[18,80,1]]]]],[[87,[[0,[18,80,1]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,21]]]],[0,[18,80,21]]]],[[[87,[[0,[18,80,21]]]],[87,[[0,[18,80,21]]]]]],[[[87,[[0,[18,80,21]]]],[87,[[0,[18,80,21]]]]]],[[[87,[[0,[18,80,21]]]],[0,[18,80,21]]]],[[[0,[58,27]]],[[28,[[87,[[0,[80,1,88,27,18]]]]]]]],[[]],[[]],[[]],[[]],[[[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,30,70]]]],[87,[[0,[18,80,30,70]]]]],[[28,[[87,[[0,[18,80,30,70]]]]]]]],[[[87,[[0,[18,80,30]]]],[87,[[0,[18,80,30]]]]],[[28,[[87,[[0,[18,80,30]]]]]]]],[[[87,[[0,[18,80,30]]]],[87,[[0,[18,80,30]]]]],[[28,[[87,[[0,[18,80,30]]]]]]]],[[[87,[[0,[18,80,30,89]]]],[87,[[0,[18,80,30,89]]]]],[[28,[[87,[[0,[18,80,30,89]]]]]]]],[[[87,[18]]],[[87,[18]]]],[90,90],[[]],[[]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],33],[[],[[87,[[0,[18,80]]]]]],[87],[90,53],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,21]]]],[0,[18,80,21]]]],[[[87,[[0,[18,80,21]]]],[87,[[0,[18,80,21]]]]]],[[[87,[[0,[18,80,21]]]],[0,[18,80,21]]]],[[[87,[[0,[18,80,21]]]],[87,[[0,[18,80,21]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],26],[[90,90],26],[[],26],[[[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[43]],38],[[40,[39]]]],[[[87,[[0,[45,18,80]]]],38],[[40,[39]]]],[[[87,[[0,[47,18,80]]]],38],[[40,[39]]]],[[[87,[[0,[44,18,80]]]],38],[[40,[39]]]],[[[87,[[0,[48,18,80]]]],38],[[40,[39]]]],[[[87,[[0,[42,18,80]]]],38],[[40,[39]]]],[[[87,[[0,[46,18,80]]]],38],[[40,[39]]]],[[[87,[[0,[41,18,80]]]],38],[[40,[39]]]],[[90,38],[[40,[39]]]],[[90,38],[[40,[39]]]],[[[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[]],[[[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[],[[87,[[0,[18,80]]]]]],[[]],[50,[[28,[[87,[7]]]]]],[50,[[28,[[87,[9]]]]]],[50,[[28,[[87,[12]]]]]],[50,[[28,[[87,[15]]]]]],[50,[[28,[[87,[2]]]]]],[50,[[28,[[87,[10]]]]]],[50,[[28,[[87,[13]]]]]],[50,[[28,[[87,[11]]]]]],[50,[[28,[[87,[16]]]]]],[50,[[28,[[87,[17]]]]]],[50,[[28,[[87,[14]]]]]],[50,[[28,[[87,[6]]]]]],[50,[[28,[[87,[8]]]]]],[52,[[28,[[87,[8]]]]]],[52,[[28,[[87,[2]]]]]],[52,[[28,[[87,[6]]]]]],[52,[[28,[[87,[17]]]]]],[52,[[28,[[87,[10]]]]]],[52,[[28,[[87,[9]]]]]],[52,[[28,[[87,[12]]]]]],[52,[[28,[[87,[13]]]]]],[52,[[28,[[87,[7]]]]]],[52,[[28,[[87,[14]]]]]],[52,[[28,[[87,[15]]]]]],[52,[[28,[[87,[11]]]]]],[52,[[28,[[87,[16]]]]]],[58,[[28,[[87,[2]]]]]],[11,[[28,[[87,[12]]]]]],[11,[[28,[[87,[9]]]]]],[11,[[28,[[87,[7]]]]]],[11,[[28,[[87,[2]]]]]],[11,[[28,[[87,[6]]]]]],[11,[[28,[[87,[11]]]]]],[11,[[28,[[87,[13]]]]]],[11,[[28,[[87,[10]]]]]],[11,[[28,[[87,[14]]]]]],[11,[[28,[[87,[8]]]]]],[11,[[28,[[87,[15]]]]]],[11,[[28,[[87,[17]]]]]],[11,[[28,[[87,[16]]]]]],[10,[[28,[[87,[15]]]]]],[10,[[28,[[87,[8]]]]]],[10,[[28,[[87,[9]]]]]],[10,[[28,[[87,[7]]]]]],[10,[[28,[[87,[14]]]]]],[10,[[28,[[87,[11]]]]]],[10,[[28,[[87,[16]]]]]],[10,[[28,[[87,[10]]]]]],[10,[[28,[[87,[12]]]]]],[10,[[28,[[87,[6]]]]]],[10,[[28,[[87,[13]]]]]],[10,[[28,[[87,[2]]]]]],[10,[[28,[[87,[17]]]]]],[[[0,[18,80]]],[[87,[[0,[18,80]]]]]],[53,[[40,[[87,[[0,[55,18,80]]]],90]]]],[[53,15],[[40,[[87,[[0,[18,80]]]],90]]]],[7,[[28,[[87,[8]]]]]],[7,[[28,[[87,[10]]]]]],[7,[[28,[[87,[14]]]]]],[7,[[28,[[87,[11]]]]]],[7,[[28,[[87,[17]]]]]],[7,[[28,[[87,[13]]]]]],[7,[[28,[[87,[15]]]]]],[7,[[28,[[87,[6]]]]]],[7,[[28,[[87,[16]]]]]],[7,[[28,[[87,[2]]]]]],[7,[[28,[[87,[7]]]]]],[7,[[28,[[87,[9]]]]]],[7,[[28,[[87,[12]]]]]],[12,[[28,[[87,[11]]]]]],[12,[[28,[[87,[8]]]]]],[12,[[28,[[87,[9]]]]]],[12,[[28,[[87,[17]]]]]],[12,[[28,[[87,[16]]]]]],[12,[[28,[[87,[2]]]]]],[12,[[28,[[87,[14]]]]]],[12,[[28,[[87,[10]]]]]],[12,[[28,[[87,[12]]]]]],[12,[[28,[[87,[7]]]]]],[12,[[28,[[87,[6]]]]]],[12,[[28,[[87,[13]]]]]],[12,[[28,[[87,[15]]]]]],[[[87,[[0,[18,80,57]]]],56]],[87],[[]],[[]],[[[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]]],26],[[[87,[[0,[18,80,1]]]]],26],[[[87,[[0,[18,80]]]]],26],[[[87,[[0,[18,80,1]]]]],26],[[[87,[[0,[18,80]]]]],26],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,21]]]],[87,[[0,[18,80,21]]]]]],[[[87,[[0,[18,80,21]]]],[87,[[0,[18,80,21]]]]]],[[[87,[[0,[18,80,21]]]],[0,[18,80,21]]]],[[[87,[[0,[18,80,21]]]],[0,[18,80,21]]]],[[[87,[[0,[18,80,34]]]]],[[87,[[0,[18,80,34]]]]]],[[[87,[[0,[18,80,34]]]]],[[87,[[0,[18,80,34]]]]]],[[[0,[18,80]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[],87],[87],[[],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[28,[33]]]],[[[87,[[0,[18,80]]]],9],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],11],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[13]]]]]],13],[[87,[[0,[18,80,[91,[13]]]]]]]],[[[87,[[0,[18,80]]]],10],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[8]]]]]],8],[[87,[[0,[18,80,[91,[8]]]]]]]],[[[87,[[0,[18,80,[91,[12]]]]]],10],[[87,[[0,[18,80,[91,[12]]]]]]]],[[[87,[[0,[18,80]]]],8],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],12],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],11],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],12],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[7]]]]]],11],[[87,[[0,[18,80,[91,[7]]]]]]]],[[[87,[[0,[18,80]]]],13],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],13],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[17]]]]]],14],[[87,[[0,[18,80,[91,[17]]]]]]]],[[[87,[[0,[18,80,[91,[12]]]]]],10],[[87,[[0,[18,80,[91,[12]]]]]]]],[[[87,[[0,[18,80]]]],6],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[15]]]]]],16],[[87,[[0,[18,80,[91,[15]]]]]]]],[[[87,[[0,[18,80]]]],8],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],7],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],16],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],2],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],17],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],14],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[13]]]]]],9],[[87,[[0,[18,80,[91,[13]]]]]]]],[[[87,[[0,[18,80]]]],15],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],16],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[12]]]]]],12],[[87,[[0,[18,80,[91,[12]]]]]]]],[[[87,[[0,[18,80]]]],10],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[20]]]]]],20],[[87,[[0,[18,80,[91,[20]]]]]]]],[[[87,[[0,[18,80]]]],16],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[20]]]]]],2],[[87,[[0,[18,80,[91,[20]]]]]]]],[[[87,[[0,[18,80]]]],9],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[20]]]]]],2],[[87,[[0,[18,80,[91,[20]]]]]]]],[[[87,[[0,[18,80,[91,[8]]]]]],8],[[87,[[0,[18,80,[91,[8]]]]]]]],[[[87,[[0,[18,80]]]],6],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[13]]]]]],9],[[87,[[0,[18,80,[91,[13]]]]]]]],[[[87,[[0,[18,80,[91,[17]]]]]],17],[[87,[[0,[18,80,[91,[17]]]]]]]],[[[87,[[0,[18,80]]]],20],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[15]]]]]],16],[[87,[[0,[18,80,[91,[15]]]]]]]],[[[87,[[0,[18,80,[91,[7]]]]]],7],[[87,[[0,[18,80,[91,[7]]]]]]]],[[[87,[[0,[18,80,[91,[17]]]]]],17],[[87,[[0,[18,80,[91,[17]]]]]]]],[[[87,[[0,[18,80,[91,[8]]]]]],6],[[87,[[0,[18,80,[91,[8]]]]]]]],[[[87,[[0,[18,80,[91,[17]]]]]],14],[[87,[[0,[18,80,[91,[17]]]]]]]],[[[87,[[0,[18,80,[91,[15]]]]]],15],[[87,[[0,[18,80,[91,[15]]]]]]]],[[[87,[[0,[18,80,[91,[7]]]]]],7],[[87,[[0,[18,80,[91,[7]]]]]]]],[[[87,[[0,[18,80,[91,[13]]]]]],13],[[87,[[0,[18,80,[91,[13]]]]]]]],[[[87,[[0,[18,80]]]],20],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],14],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],2],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[12]]]]]],12],[[87,[[0,[18,80,[91,[12]]]]]]]],[[[87,[[0,[18,80]]]],17],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[15]]]]]],15],[[87,[[0,[18,80,[91,[15]]]]]]]],[[[87,[[0,[18,80]]]],7],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[7]]]]]],11],[[87,[[0,[18,80,[91,[7]]]]]]]],[[[87,[[0,[18,80]]]],15],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,[91,[8]]]]]],6],[[87,[[0,[18,80,[91,[8]]]]]]]],[[[87,[[0,[18,80,[91,[20]]]]]],20],[[87,[[0,[18,80,[91,[20]]]]]]]],[66,[[87,[[0,[80,18]]]]]],[66,[[87,[[0,[80,18]]]]]],[[[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,21]]]],[0,[18,80,21]]]],[[[87,[[0,[18,80,21]]]],[87,[[0,[18,80,21]]]]]],[[[87,[[0,[18,80,21]]]],[87,[[0,[18,80,21]]]]]],[[[87,[[0,[18,80,21]]]],[0,[18,80,21]]]],[[[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,1]]]]],[[87,[[0,[18,80,1]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80]]]],[0,[18,80]]],[[87,[[0,[18,80]]]]]],[[[87,[[0,[18,80,21]]]],[87,[[0,[18,80,21]]]]]],[[[87,[[0,[18,80,21]]]],[0,[18,80,21]]]],[[[87,[[0,[18,80,21]]]],[0,[18,80,21]]]],[[[87,[[0,[18,80,21]]]],[87,[[0,[18,80,21]]]]]],[66,[[87,[[0,[80,18]]]]]],[66,[[87,[[0,[80,18]]]]]],[[[87,[[0,[18,80,49,92]]]]],[[28,[52]]]],[[[87,[[0,[18,80,49,92]]]]],[[28,[11]]]],[[[87,[[0,[18,80,49,92]]]]],[[28,[10]]]],[[[87,[[0,[18,80]]]]],[[0,[18,80]]]],[[]],[[]],[[],74],[[],74],[[[87,[[0,[18,80,49,92]]]]],[[28,[7]]]],[[[87,[[0,[18,80,49,92]]]]],[[28,[12]]]],[[[87,[[0,[18,80]]]]],[[87,[[0,[18,80]]]]]],[[],40],[[],40],[[],40],[[],40],[[],76],[[],76],[[],[[87,[[0,[18,80]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[],[[0,[93,[94,[[0,[93,[94,[[0,[93,[94,[[0,[93,[94,[[0,[93,94]]]]]]]]]]]]]]]]]]]],[[]],[[],[[0,[93,[94,[[0,[93,[94,[[0,[93,[94,[[0,[93,[94,[[0,[93,94]]]]]]]]]]]]]]]]]]]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,[[]],0,0,0,0,0,[[],[[0,[93,[67,[[0,[93,[67,[[0,[93,[67,[[0,[93,[67,[[0,[93,67]]]]]]]]]]]]]]]]]]]],0,0,0,0,0,0,0,0,0,0,[1,1],[[]],[[]],[[1,1],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[27,[[28,[27]]]],[[]],[[]],[[],28],[[],28],[[],28],[[],28],[[],28],[[[0,[18,29,30]],17],[[28,[[0,[18,29,30]]]]]],[[],28],[[],28],[15,28],[15,28],[[],28],[[[31,[[31,[[31,[[31,[31]]]]]]]],[31,[[31,[[31,[[31,[31]]]]]]]],[31,[[31,[[31,[[31,[31]]]]]]]]],[[31,[[31,[[31,[[31,[31]]]]]]]]]],[[[31,[[31,[[31,[[31,[31]]]]]]]],[31,[[31,[[31,[[31,[31]]]]]]]]],[[31,[[31,[[31,[[31,[31]]]]]]]]]],[[[31,[[31,[[31,[[31,[31]]]]]]]],[31,[[31,[[31,[[31,[31]]]]]]]]],[[31,[[31,[[31,[[31,[31]]]]]]]]]],[[],32],[[]],[[]],[[]],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],0,[[]],[[95,38],[[40,[39]]]],[[96,38],[[40,[39]]]],[[96,38],[[40,[39]]]],[[]],[49,28],[[]],[[]],[[]],[[]],[50,28],[52,28],[11,28],[6,28],[16,28],[10,28],[9,28],[14,28],[[]],[[]],[[]],[[53,15],40],[7,28],[8,28],[15,28],[12,28],[13,28],[17,28],[[]],0,[[]],0,[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[[36,[[36,[[36,[[36,[36]]]]]]]]],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[]],0,0,[[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,65]]]]]]]]]]]]]]]]]],17],[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,65]]]]]]]]]]]]]]]]]]]],[15],[[]],[[]],[16],0,[[]],[[]],[[]],[15],[15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[15],[15],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[28,[50]]]],[[],[[28,[52]]]],[[],[[28,[11]]]],[[],[[28,[6]]]],[[],[[28,[16]]]],[[],[[28,[10]]]],[[],[[28,[9]]]],[[],[[28,[14]]]],[[]],[[]],[[]],[[]],[[],74],[[],[[28,[7]]]],[[],[[28,[8]]]],[[],[[28,[15]]]],[[],[[28,[12]]]],[[],[[28,[13]]]],[[],[[28,[17]]]],[[],15],[[],15],[[]],[[],40],[[],40],[[],40],[[],40],[[],76],[[],76],[15],[15],[[]],[[]],[[]],[15],[15],[[]],[[],71],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[]],[27,[[28,[27]]]],[49,28],[50,28],[52,28],[11,28],[6,28],[16,28],[10,28],[9,28],[14,28],[7,28],[8,28],[15,28],[12,28],[13,28],[17,28],[[],[[28,[50]]]],[[],[[28,[52]]]],[[],[[28,[11]]]],[[],[[28,[6]]]],[[],[[28,[16]]]],[[],[[28,[10]]]],[[],[[28,[9]]]],[[],[[28,[14]]]],[[],[[28,[7]]]],[[],[[28,[8]]]],[[],[[28,[15]]]],[[],[[28,[12]]]],[[],[[28,[13]]]],[[],[[28,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[],[[0,[93,[94,[[0,[93,[94,[[0,[93,[94,[[0,[93,[94,[[0,[93,94]]]]]]]]]]]]]]]]]]]],[[]],[[],[[0,[93,[94,[[0,[93,[94,[[0,[93,[94,[[0,[93,[94,[[0,[93,94]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[],[[0,[93,[67,[[0,[93,[67,[[0,[93,[67,[[0,[93,[67,[[0,[93,67]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],32],[[],32],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16],[16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[36,[[36,[[36,[[36,[36]]]]]]]]],26],[[],26],[[],29],[[]],[[]],[[]],[[],71],[[]],0,[[],15],[[],15],[[]],[[]],[[],15],[[],15],[15],[[]],[15],[15],[15],[15],[[]],[[]],[[]],[[],15],[[],15],[15],[15],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],28],[[],28],[[],28],[[],28],[[],28],[15,28],[15,28],[[],28],0,0,[[],28],[[],28],[[]],[[]],0,0,[[]],0,0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[15],[15],[[]],0,0,[[[0,[18,29,30]],17],[[28,[[0,[18,29,30]]]]]],[[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,65]]]]]]]]]]]]]]]]]],17],[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,[65,[[0,[18,29,65]]]]]]]]]]]]]]]]]]]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],26],[[],26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[1,1],[[]],[[1,1],1],[[]],[[],26],[[],26],[1,1],[[]]],"c":[17,1948],"p":[[8,"Signed"],[3,"BigInt"],[8,"Float"],[8,"FloatConst"],[3,"Complex"],[15,"i16"],[15,"u128"],[15,"u16"],[15,"i8"],[15,"i64"],[15,"i128"],[15,"u64"],[15,"u8"],[15,"isize"],[15,"u32"],[15,"i32"],[15,"usize"],[8,"Clone"],[8,"Num"],[3,"BigUint"],[8,"NumAssign"],[8,"Copy"],[8,"AsPrimitive"],[4,"Sign"],[15,"slice"],[15,"bool"],[8,"NumCast"],[4,"Option"],[8,"One"],[8,"CheckedMul"],[8,"PartialOrd"],[4,"FpCategory"],[4,"Ordering"],[8,"Neg"],[8,"Default"],[8,"PartialEq"],[3,"ExtendedGcd"],[3,"Formatter"],[3,"Error"],[4,"Result"],[8,"UpperExp"],[8,"Octal"],[8,"Debug"],[8,"Binary"],[8,"UpperHex"],[8,"LowerExp"],[8,"LowerHex"],[8,"Display"],[8,"ToPrimitive"],[15,"f32"],[8,"FromPrimitive"],[15,"f64"],[15,"str"],[3,"ParseBigIntError"],[8,"FromStr"],[8,"Hasher"],[8,"Hash"],[8,"FloatCore"],[3,"U32Digits"],[3,"U64Digits"],[8,"MulAdd"],[8,"MulAddAssign"],[3,"Global"],[3,"Vec"],[8,"Mul"],[8,"Iterator"],[8,"Add"],[3,"Range"],[3,"RangeInclusive"],[8,"CheckedAdd"],[8,"Zero"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"String"],[3,"TryFromBigIntError"],[3,"TypeId"],[8,"Error"],[3,"ParseComplexError"],[8,"Average"],[8,"Integer"],[8,"Roots"],[3,"IterBinomial"],[3,"RangeFrom"],[3,"RangeStepFrom"],[4,"Bound"],[8,"Sub"],[3,"Ratio"],[8,"Bounded"],[8,"CheckedSub"],[3,"ParseRatioError"],[8,"Pow"],[8,"ToBigInt"],[8,"Sized"],[8,"Div"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"CheckedDiv"],[8,"PrimInt"],[8,"Saturating"],[8,"ToBigUint"],[8,"ComplexFloat"],[8,"ToBytes"],[8,"FromBytes"],[8,"Inv"],[8,"CheckedEuclid"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"Euclid"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"UpperBounded"],[8,"LowerBounded"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Real"]]},\
"num_bigint":{"doc":"Big Integer Types for Rust","tn":["BigInt","BigUint","Minus","NoSign","ParseBigIntError","Plus","Sign","ToBigInt","ToBigUint","TryFromBigIntError","U32Digits","U64Digits","abs","abs_sub","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","assign_from_slice","assign_from_slice","average_ceil","average_ceil","average_floor","average_floor","bit","bit","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","cbrt","checked_add","checked_add","checked_add","checked_div","checked_div","checked_div","checked_div_euclid","checked_div_euclid","checked_mul","checked_mul","checked_mul","checked_rem_euclid","checked_rem_euclid","checked_sub","checked_sub","checked_sub","clone","clone","clone","clone","clone","clone_from","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","count","count","count_ones","default","default","description","description","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_ceil","div_ceil","div_euclid","div_euclid","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","divides","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","extended_gcd_lcm","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_be_bytes","from_be_bytes","from_biguint","from_bytes_be","from_bytes_be","from_bytes_le","from_bytes_le","from_f64","from_f64","from_i128","from_i128","from_i64","from_i64","from_le_bytes","from_le_bytes","from_radix_be","from_radix_be","from_radix_le","from_radix_le","from_signed_bytes_be","from_signed_bytes_le","from_slice","from_slice","from_str","from_str","from_str_radix","from_str_radix","from_u128","from_u128","from_u64","from_u64","gcd","gcd","gcd_lcm","gcd_lcm","hash","hash","hash","into","into","into","into","into","into","into","into_iter","into_iter","into_original","into_parts","is_even","is_even","is_multiple_of","is_multiple_of","is_negative","is_odd","is_odd","is_one","is_one","is_positive","is_zero","is_zero","iter_u32_digits","iter_u32_digits","iter_u64_digits","iter_u64_digits","last","last","lcm","lcm","len","len","magnitude","mod_floor","mod_floor","modpow","modpow","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","neg","new","new","next","next","next_back","next_back","next_multiple_of","next_multiple_of","not","not","nth","nth_root","nth_root","nth_root","nth_root","one","one","parse_bytes","parse_bytes","partial_cmp","partial_cmp","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","prev_multiple_of","prev_multiple_of","product","product","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_euclid","rem_euclid","set_bit","set_bit","set_one","set_one","set_zero","set_zero","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","sign","signum","size_hint","size_hint","sqrt","sqrt","sqrt","sqrt","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_be_bytes","to_be_bytes","to_bigint","to_bigint","to_bigint","to_biguint","to_biguint","to_biguint","to_biguint","to_bytes_be","to_bytes_be","to_bytes_le","to_bytes_le","to_f32","to_f32","to_f64","to_f64","to_i128","to_i128","to_i64","to_i64","to_le_bytes","to_le_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_radix_be","to_radix_be","to_radix_le","to_radix_le","to_signed_bytes_be","to_signed_bytes_le","to_str_radix","to_str_radix","to_string","to_string","to_string","to_string","to_u128","to_u128","to_u32_digits","to_u32_digits","to_u64","to_u64","to_u64_digits","to_u64_digits","trailing_ones","trailing_zeros","trailing_zeros","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","zero","zero"],"q":[[0,"num_bigint"]],"d":["A big signed integer type.","A big unsigned integer type.","","","","","A <code>Sign</code> is a <code>BigInt</code>’s composing element.","A generic trait for converting a value to a <code>BigInt</code>. This …","A generic trait for converting a value to a <code>BigUint</code>.","The error type returned when a checked conversion …","An iterator of <code>u32</code> digits representation of a <code>BigUint</code> or …","An iterator of <code>u64</code> digits representation of a <code>BigUint</code> or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reinitializes a <code>BigInt</code>.","Assign a value to a <code>BigUint</code>.","Returns the ceil value of the average of <code>self</code> and <code>other</code>.","Returns the ceil value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>self</code> and <code>other</code>.","Returns whether the bit in position <code>bit</code> is set, using the …","Returns whether the bit in the given position is set","","","","","","","","","","","","","","","","","","","","","","","","","Determines the fewest bits necessary to express the <code>BigInt</code>,","Determines the fewest bits necessary to express the <code>BigUint</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the truncated principal cube root of <code>self</code> – see …","","Returns the truncated principal cube root of <code>self</code> – see …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the number of one bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Deprecated, use <code>is_multiple_of</code> instead.","Deprecated, use <code>is_multiple_of</code> instead.","","","","","","","","","","","Greatest common divisor, least common multiple, and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigUint</code>.","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigUint</code>.","","","","","","","","","Creates and initializes a <code>BigInt</code>. Each <code>u8</code> of the input …","Creates and initializes a <code>BigUint</code>. Each <code>u8</code> of the input …","Creates and initializes a <code>BigInt</code>. Each <code>u8</code> of the input …","Creates and initializes a <code>BigUint</code>. Each <code>u8</code> of the input …","Creates and initializes a <code>BigInt</code> from an array of bytes in …","Creates and initializes a <code>BigInt</code> from an array of bytes in …","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigUint</code>.","","","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigUint</code>.","","","","","Calculates the Greatest Common Divisor (GCD) of the number …","Calculates the Greatest Common Divisor (GCD) of the number …","Calculates the Greatest Common Divisor (GCD) and Lowest …","Calculates the Greatest Common Divisor (GCD) and Lowest …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Extract the original value, if available. The value will …","Convert this <code>BigInt</code> into its <code>Sign</code> and <code>BigUint</code> magnitude, …","Returns <code>true</code> if the number is divisible by <code>2</code>.","Returns <code>true</code> if the number is divisible by <code>2</code>.","Returns <code>true</code> if the number is a multiple of <code>other</code>.","Returns <code>true</code> if the number is a multiple of <code>other</code>.","","Returns <code>true</code> if the number is not divisible by <code>2</code>.","Returns <code>true</code> if the number is not divisible by <code>2</code>.","","","","","","Returns an iterator of <code>u32</code> digits representation of the …","Returns an iterator of <code>u32</code> digits representation of the …","Returns an iterator of <code>u64</code> digits representation of the …","Returns an iterator of <code>u64</code> digits representation of the …","","","Calculates the Lowest Common Multiple (LCM) of the number …","Calculates the Lowest Common Multiple (LCM) of the number …","","","Returns the magnitude of the <code>BigInt</code> as a <code>BigUint</code>.","","","Returns <code>(self ^ exponent) mod modulus</code>","Returns <code>(self ^ exponent) % modulus</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Negate <code>Sign</code> value.","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigUint</code>.","","","","","Rounds up to nearest multiple of argument.","Rounds up to nearest multiple of argument.","","","","","Returns the truncated principal <code>n</code>th root of <code>self</code> – See …","Returns the truncated principal <code>n</code>th root of <code>self</code> – see …","","","","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigUint</code>. The input slice must …","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self ^ exponent</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>self ^ exponent</code>.","","","","","","","","","","Rounds down to nearest multiple of argument.","Rounds down to nearest multiple of argument.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets or clears the bit in the given position, using the two…","Sets or clears the bit in the given positioneturns the sign of the <code>BigInt</code> as a <code>Sign</code>.","","","","","Returns the truncated principal square root of <code>self</code> – …","","Returns the truncated principal square root of <code>self</code> – …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts the value of <code>self</code> to a <code>BigInt</code>.","","","Converts the value of <code>self</code> to a <code>BigUint</code>.","Converts this <code>BigInt</code> into a <code>BigUint</code>, if it’s not …","","","Returns the sign and the byte representation of the <code>BigInt</code> …","Returns the byte representation of the <code>BigUint</code> in …","Returns the sign and the byte representation of the <code>BigInt</code> …","Returns the byte representation of the <code>BigUint</code> in …","","","","","","","","","","","","","","","","Returns the integer in the requested base in big-endian …","Returns the integer in the requested base in big-endian …","Returns the integer in the requested base in little-endian …","Returns the integer in the requested base in little-endian …","Returns the two’s-complement byte representation of the …","Returns the two’s-complement byte representation of the …","Returns the integer formatted as a string in the given …","Returns the integer formatted as a string in the given …","","","","","","","Returns the sign and the <code>u32</code> digits representation of the …","Returns the <code>u32</code> digits representation of the <code>BigUint</code> …","","","Returns the sign and the <code>u64</code> digits representation of the …","Returns the <code>u64</code> digits representation of the <code>BigUint</code> …","Returns the number of least-significant bits that are ones.","Returns the number of least-significant bits that are zero,","Returns the number of least-significant bits that are zero,","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,15,15,0,15,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,1,14,1,14,1,14,1,14,1,1,1,1,14,14,14,14,1,1,14,14,1,1,1,1,14,14,14,14,1,1,14,14,1,14,1,1,1,1,14,14,14,14,1,1,14,14,1,23,24,14,15,19,21,1,23,24,14,15,19,21,1,1,14,14,1,1,14,1,1,14,1,14,1,1,14,1,14,1,1,14,1,14,15,19,21,1,14,1,14,15,19,21,1,14,15,23,24,14,1,14,19,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,15,19,21,1,14,15,19,21,1,1,1,1,1,1,1,14,14,14,14,14,14,15,19,19,21,21,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,23,24,14,14,14,14,14,14,14,14,15,19,21,1,14,1,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,1,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,15,1,23,24,14,15,19,21,23,24,21,1,1,14,1,14,1,1,14,1,14,1,1,14,1,14,1,14,23,24,1,14,23,24,1,1,14,1,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,1,1,15,1,14,23,24,23,24,1,14,1,1,24,1,1,14,14,1,14,1,14,1,14,15,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,14,1,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,1,14,1,14,1,14,1,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,23,24,1,1,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,14,14,14,14,14,14,14,14,1,14,1,14,38,1,14,39,1,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,14,15,19,21,1,14,1,14,1,1,1,14,1,14,19,21,1,14,1,14,1,14,1,14,14,1,14,1,23,24,14,14,14,14,14,14,14,14,14,15,19,21,1,23,24,14,15,19,21,1,23,24,14,15,19,21,1,14],"f":[0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[[1,1],1],[[1,2],1],[[1,3],1],[[1,4],1],[[1,5],1],[[1,4],1],[[1,6],1],[[1,5],1],[[1,1],1],[[1,7],1],[[1,4],1],[[1,8],1],[[1,9],1],[[1,10],1],[[1,8],1],[[1,7],1],[[1,6],1],[[1,5],1],[[1,11],1],[[1,1],1],[[1,6],1],[[1,3],1],[[1,9],1],[[1,10],1],[[1,2],1],[[1,11],1],[[1,6],1],[[1,2],1],[[1,1],1],[[1,2],1],[[1,12],1],[[1,11],1],[[1,11],1],[[1,10],1],[[1,3],1],[[1,9],1],[[1,7],1],[[1,12],1],[[1,13],1],[[1,8],1],[[1,13],1],[[1,5],1],[[1,12],1],[[1,8],1],[[1,13],1],[[1,13],1],[[1,12],1],[[1,10],1],[[1,4],1],[[1,7],1],[[1,3],1],[[1,9],1],[[1,1],1],[[14,9],14],[[14,2],14],[[14,9],14],[[14,7],14],[[14,2],14],[[14,14],14],[[14,7],14],[[14,8],14],[[14,4],14],[[14,2],14],[[14,14],14],[[14,2],14],[[14,10],14],[[14,8],14],[[14,14],14],[[14,4],14],[[14,4],14],[[14,10],14],[[14,10],14],[[14,8],14],[[14,4],14],[[14,10],14],[[14,14],14],[[14,7],14],[[14,9],14],[[14,9],14],[[14,7],14],[[14,8],14],[[1,9]],[[1,13]],[[1,12]],[[1,4]],[[1,1]],[[1,3]],[[1,8]],[[1,2]],[[1,5]],[[1,7]],[[1,1]],[[1,6]],[[1,11]],[[1,10]],[[14,14]],[[14,8]],[[14,10]],[[14,7]],[[14,4]],[[14,9]],[[14,2]],[[14,14]],[[1,15,[16,[10]]]],[[14,[16,[10]]]],[[]],[[]],[[]],[[]],[[1,2],17],[[14,2],17],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[14,14],14],[[14,14],14],[[14,14],14],[[14,14],14],[[1,1]],[[1,1]],[[14,14]],[[14,14]],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[14,14],14],[[14,14],14],[[14,14],14],[[14,14],14],[[1,1]],[[1,1]],[[14,14]],[[14,14]],[1,2],[14,2],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[14,14],14],[[14,14],14],[[14,14],14],[[14,14],14],[[1,1]],[[1,1]],[[14,14]],[[14,14]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[1,1],[14,14],[14,14],[[1,1],[[18,[1]]]],[[1,1],[[18,[1]]]],[[14,14],[[18,[14]]]],[[1,1],[[18,[1]]]],[[1,1],[[18,[1]]]],[[14,14],[[18,[14]]]],[[1,1],[[18,[1]]]],[[14,14],[[18,[14]]]],[[1,1],[[18,[1]]]],[[1,1],[[18,[1]]]],[[14,14],[[18,[14]]]],[[1,1],[[18,[1]]]],[[14,14],[[18,[14]]]],[[1,1],[[18,[1]]]],[[1,1],[[18,[1]]]],[[14,14],[[18,[14]]]],[1,1],[14,14],[15,15],[19,19],[[[21,[20]]],[[21,[20]]]],[[1,1]],[[14,14]],[[]],[[]],[[]],[[]],[[]],[[1,1],22],[[14,14],22],[[15,15],22],[23,8],[24,8],[14,2],[[],1],[[],14],[19,25],[[[21,[26]]],25],[[1,3],1],[[1,3],1],[[1,9],1],[[1,5],1],[[1,1],1],[[1,7],1],[[1,9],1],[[1,5],1],[[1,9],1],[[1,8],1],[[1,7],1],[[1,3],1],[[1,6],1],[[1,10],1],[[1,13],1],[[1,7],1],[[1,4],1],[[1,2],1],[[1,4],1],[[1,7],1],[[1,10],1],[[1,6],1],[[1,3],1],[[1,2],1],[[1,12],1],[[1,12],1],[[1,10],1],[[1,6],1],[[1,9],1],[[1,10],1],[[1,5],1],[[1,13],1],[[1,11],1],[[1,4],1],[[1,11],1],[[1,8],1],[[1,13],1],[[1,2],1],[[1,8],1],[[1,12],1],[[1,13],1],[[1,6],1],[[1,1],1],[[1,11],1],[[1,5],1],[[1,1],1],[[1,8],1],[[1,12],1],[[1,2],1],[[1,1],1],[[1,4],1],[[1,11],1],[[14,10],14],[[14,2],14],[[14,7],14],[[14,7],14],[[14,10],14],[[14,7],14],[[14,7],14],[[14,9],14],[[14,10],14],[[14,8],14],[[14,14],14],[[14,14],14],[[14,8],14],[[14,2],14],[[14,4],14],[[14,9],14],[[14,4],14],[[14,9],14],[[14,8],14],[[14,14],14],[[14,4],14],[[14,2],14],[[14,9],14],[[14,14],14],[[14,4],14],[[14,10],14],[[14,8],14],[[14,2],14],[[1,1]],[[1,11]],[[1,6]],[[1,10]],[[1,13]],[[1,5]],[[1,3]],[[1,8]],[[1,7]],[[1,12]],[[1,1]],[[1,2]],[[1,9]],[[1,4]],[[14,8]],[[14,10]],[[14,7]],[[14,9]],[[14,14]],[[14,4]],[[14,2]],[[14,14]],[[1,1],1],[[14,14],14],[[1,1],1],[[14,14],14],[[1,1],1],[[14,14],14],[[1,1]],[[14,14]],[[1,1]],[[14,14]],[[1,1],17],[[14,14],17],[[1,1],17],[[14,14],17],[[15,15],17],[[19,19],17],[[[21,[27]],[21,[27]]],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[1,1]],[[1,28],29],[[1,28],29],[[1,28],29],[[1,28],29],[[1,28],29],[[1,28],29],[[14,28],29],[[14,28],29],[[14,28],29],[[14,28],29],[[14,28],29],[[14,28],29],[[15,28],29],[[19,28],29],[[19,28],29],[[[21,[26]],28],29],[[21,28],29],[10,1],[2,1],[7,1],[17,1],[14,1],[9,1],[6,1],[11,1],[13,1],[5,1],[4,1],[8,1],[3,1],[[]],[12,1],[[]],[[]],[17,14],[10,14],[4,14],[9,14],[2,14],[7,14],[8,14],[[]],[[]],[[]],[[]],[[],1],[[],14],[[15,14],1],[[15,[16,[4]]],1],[[[16,[4]]],14],[[15,[16,[4]]],1],[[[16,[4]]],14],[30,[[18,[1]]]],[30,[[18,[14]]]],[3,[[18,[1]]]],[3,[[18,[14]]]],[6,[[18,[1]]]],[6,[[18,[14]]]],[[],1],[[],14],[[15,[16,[4]],10],[[18,[1]]]],[[[16,[4]],10],[[18,[14]]]],[[15,[16,[4]],10],[[18,[1]]]],[[[16,[4]],10],[[18,[14]]]],[[[16,[4]]],1],[[[16,[4]]],1],[[15,[16,[10]]],1],[[[16,[10]]],14],[25,[[31,[1,19]]]],[25,[[31,[14,19]]]],[[25,10],[[31,[1,19]]]],[[25,10],[[31,[14,19]]]],[9,[[18,[1]]]],[9,[[18,[14]]]],[2,[[18,[1]]]],[2,[[18,[14]]]],[[1,1],1],[[14,14],14],[[1,1]],[[14,14]],[[1,32]],[[14,32]],[[15,32]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21],[1],[1,17],[14,17],[[1,1],17],[[14,14],17],[1,17],[1,17],[14,17],[1,17],[14,17],[1,17],[1,17],[14,17],[1,23],[14,23],[1,24],[14,24],[23,[[18,[10]]]],[24,[[18,[2]]]],[[1,1],1],[[14,14],14],[23,8],[24,8],[1,14],[[1,1],1],[[14,14],14],[[1,1,1],1],[[14,14,14],14],[[1,7],1],[[1,13],1],[[1,11],1],[[1,6],1],[[1,10],1],[[1,3],1],[[1,2],1],[[1,1],1],[[1,1],1],[[1,4],1],[[1,10],1],[[1,4],1],[[1,11],1],[[1,4],1],[[1,8],1],[[1,10],1],[[1,8],1],[[1,5],1],[[1,3],1],[[1,2],1],[[1,7],1],[[1,9],1],[[1,12],1],[[1,10],1],[[1,9],1],[[1,11],1],[[1,4],1],[[1,5],1],[[1,7],1],[[1,3],1],[[1,5],1],[[1,13],1],[[1,9],1],[[1,3],1],[[1,6],1],[[1,13],1],[[1,12],1],[[1,13],1],[[1,12],1],[[1,6],1],[[1,2],1],[[1,1],1],[[1,7],1],[[1,11],1],[[1,5],1],[[1,1],1],[[1,9],1],[[1,12],1],[[1,8],1],[[1,2],1],[[1,8],1],[[1,6],1],[[14,10],14],[[14,7],14],[[14,8],14],[[14,10],14],[[14,14],14],[[14,2],14],[[14,14],14],[[14,14],14],[[14,7],14],[[14,2],14],[[14,8],14],[[14,7],14],[[14,9],14],[[14,10],14],[[14,8],14],[[14,14],14],[[14,4],14],[[14,4],14],[[14,2],14],[[14,9],14],[[14,9],14],[[14,4],14],[[14,8],14],[[14,7],14],[[14,4],14],[[14,9],14],[[14,10],14],[[14,2],14],[[15,15],15],[[1,6]],[[1,9]],[[1,1]],[[1,3]],[[1,2]],[[1,11]],[[1,1]],[[1,7]],[[1,12]],[[1,8]],[[1,4]],[[1,13]],[[1,5]],[[1,10]],[[14,10]],[[14,7]],[[14,2]],[[14,14]],[[14,4]],[[14,8]],[[14,9]],[[14,14]],[1,1],[1,1],[15,15],[[15,[33,[10]]],1],[[[33,[10]]],14],[23,[[18,[10]]]],[24,[[18,[2]]]],[23,18],[24,18],[[1,1],1],[[14,14],14],[1,1],[1,1],[[24,8],[[18,[2]]]],[[1,10],1],[[1,10],1],[[14,10],14],[[14,10],14],[[],1],[[],14],[[[16,[4]],10],[[18,[1]]]],[[[16,[4]],10],[[18,[14]]]],[[1,1],[[18,[22]]]],[[14,14],[[18,[22]]]],[[15,15],[[18,[22]]]],[[1,8],1],[[1,8],1],[[1,14],1],[[1,2],1],[[1,2],1],[[1,2],1],[[1,8],1],[[1,7],1],[[1,9],1],[[1,8],1],[[1,4],1],[[1,10],1],[[1,4],1],[[1,9],1],[[1,9],1],[[1,4],1],[[1,14],1],[[1,10],1],[[1,9],1],[[1,10],1],[[1,7],1],[[1,10],1],[[1,4],1],[[1,14],1],[[1,10],1],[[1,14],1],[[1,7],1],[[1,2],1],[[1,7],1],[[14,14],14],[[14,2],14],[[14,4],14],[[14,2],14],[[14,4],14],[[14,4],14],[[14,8],14],[[14,10],14],[[14,2],14],[[14,7],14],[[14,7],14],[[14,7],14],[[14,10],14],[[14,10],14],[[14,8],14],[[14,8],14],[[14,4],14],[[14,10],14],[[14,9],14],[[14,10],14],[[14,9],14],[[14,14],14],[[14,7],14],[[14,9],14],[[14,2],14],[[14,8],14],[[14,9],14],[[14,14],14],[[14,14],14],[[1,1],1],[[14,14],14],[34,1],[34,14],[[1,9],1],[[1,7],1],[[1,7],1],[[1,12],1],[[1,13],1],[[1,5],1],[[1,10],1],[[1,2],1],[[1,1],1],[[1,12],1],[[1,3],1],[[1,3],1],[[1,12],1],[[1,1],1],[[1,10],1],[[1,9],1],[[1,13],1],[[1,4],1],[[1,1],1],[[1,6],1],[[1,13],1],[[1,11],1],[[1,4],1],[[1,5],1],[[1,7],1],[[1,11],1],[[1,9],1],[[1,13],1],[[1,8],1],[[1,2],1],[[1,6],1],[[1,5],1],[[1,10],1],[[1,2],1],[[1,3],1],[[1,8],1],[[1,8],1],[[1,11],1],[[1,1],1],[[1,3],1],[[1,2],1],[[1,7],1],[[1,12],1],[[1,4],1],[[1,8],1],[[1,10],1],[[1,11],1],[[1,4],1],[[1,5],1],[[1,9],1],[[1,6],1],[[1,6],1],[[14,10],14],[[14,2],14],[[14,7],14],[[14,9],14],[[14,2],14],[[14,8],14],[[14,8],14],[[14,8],14],[[14,14],14],[[14,9],14],[[14,4],14],[[14,9],14],[[14,2],14],[[14,7],14],[[14,14],14],[[14,14],14],[[14,7],14],[[14,10],14],[[14,2],14],[[14,9],14],[[14,14],14],[[14,10],14],[[14,10],14],[[14,4],14],[[14,7],14],[[14,4],14],[[14,4],14],[[14,8],14],[[1,1]],[[1,8]],[[1,6]],[[1,1]],[[1,2]],[[1,12]],[[1,10]],[[1,13]],[[1,3]],[[1,7]],[[1,9]],[[1,4]],[[1,11]],[[1,5]],[[14,8]],[[14,7]],[[14,4]],[[14,14]],[[14,14]],[[14,10]],[[14,9]],[[14,2]],[[1,1],1],[[14,14],14],[[1,2,17]],[[14,2,17]],[1],[14],[1],[14],[[1,7],1],[[1,4],1],[[1,10],1],[[1,4],1],[[1,11],1],[[1,11],1],[[1,5],1],[[1,6],1],[[1,2],1],[[1,13],1],[[1,8],1],[[1,7],1],[[1,9],1],[[1,8],1],[[1,5],1],[[1,2],1],[[1,3],1],[[1,4],1],[[1,8],1],[[1,7],1],[[1,5],1],[[1,12],1],[[1,6],1],[[1,3],1],[[1,4],1],[[1,5],1],[[1,3],1],[[1,8],1],[[1,12],1],[[1,6],1],[[1,2],1],[[1,11],1],[[1,2],1],[[1,9],1],[[1,13],1],[[1,12],1],[[1,3],1],[[1,7],1],[[1,9],1],[[1,10],1],[[1,10],1],[[1,11],1],[[1,13],1],[[1,12],1],[[1,6],1],[[1,9],1],[[1,13],1],[[1,10],1],[[14,13],14],[[14,12],14],[[14,10],14],[[14,4],14],[[14,9],14],[[14,3],14],[[14,13],14],[[14,8],14],[[14,6],14],[[14,13],14],[[14,13],14],[[14,5],14],[[14,4],14],[[14,5],14],[[14,7],14],[[14,8],14],[[14,12],14],[[14,4],14],[[14,8],14],[[14,11],14],[[14,6],14],[[14,9],14],[[14,7],14],[[14,7],14],[[14,11],14],[[14,8],14],[[14,2],14],[[14,5],14],[[14,4],14],[[14,9],14],[[14,11],14],[[14,11],14],[[14,10],14],[[14,12],14],[[14,3],14],[[14,7],14],[[14,10],14],[[14,2],14],[[14,5],14],[[14,3],14],[[14,2],14],[[14,3],14],[[14,12],14],[[14,2],14],[[14,10],14],[[14,6],14],[[14,6],14],[[14,9],14],[[1,10]],[[1,4]],[[1,10]],[[1,6]],[[1,8]],[[1,8]],[[1,12]],[[1,12]],[[1,2]],[[1,2]],[[1,4]],[[1,13]],[[1,9]],[[1,3]],[[1,7]],[[1,11]],[[1,6]],[[1,5]],[[1,11]],[[1,9]],[[1,3]],[[1,13]],[[1,7]],[[1,5]],[[14,5]],[[14,10]],[[14,8]],[[14,2]],[[14,7]],[[14,11]],[[14,12]],[[14,2]],[[14,12]],[[14,7]],[[14,4]],[[14,5]],[[14,13]],[[14,13]],[[14,11]],[[14,6]],[[14,9]],[[14,9]],[[14,3]],[[14,4]],[[14,8]],[[14,3]],[[14,10]],[[14,6]],[[1,7],1],[[1,12],1],[[1,2],1],[[1,10],1],[[1,4],1],[[1,7],1],[[1,13],1],[[1,8],1],[[1,12],1],[[1,6],1],[[1,2],1],[[1,5],1],[[1,12],1],[[1,13],1],[[1,4],1],[[1,9],1],[[1,10],1],[[1,7],1],[[1,11],1],[[1,3],1],[[1,6],1],[[1,3],1],[[1,11],1],[[1,10],1],[[1,2],1],[[1,7],1],[[1,9],1],[[1,3],1],[[1,12],1],[[1,8],1],[[1,8],1],[[1,11],1],[[1,11],1],[[1,3],1],[[1,9],1],[[1,8],1],[[1,2],1],[[1,9],1],[[1,13],1],[[1,5],1],[[1,10],1],[[1,6],1],[[1,5],1],[[1,4],1],[[1,5],1],[[1,13],1],[[1,4],1],[[1,6],1],[[14,6],14],[[14,4],14],[[14,5],14],[[14,3],14],[[14,9],14],[[14,5],14],[[14,8],14],[[14,7],14],[[14,10],14],[[14,4],14],[[14,2],14],[[14,12],14],[[14,10],14],[[14,9],14],[[14,7],14],[[14,6],14],[[14,6],14],[[14,10],14],[[14,8],14],[[14,11],14],[[14,13],14],[[14,9],14],[[14,7],14],[[14,3],14],[[14,13],14],[[14,11],14],[[14,8],14],[[14,2],14],[[14,9],14],[[14,4],14],[[14,11],14],[[14,5],14],[[14,11],14],[[14,12],14],[[14,7],14],[[14,6],14],[[14,5],14],[[14,12],14],[[14,3],14],[[14,2],14],[[14,4],14],[[14,13],14],[[14,8],14],[[14,3],14],[[14,12],14],[[14,13],14],[[14,10],14],[[14,2],14],[[1,6]],[[1,2]],[[1,4]],[[1,7]],[[1,5]],[[1,8]],[[1,10]],[[1,12]],[[1,3]],[[1,13]],[[1,6]],[[1,7]],[[1,4]],[[1,5]],[[1,12]],[[1,11]],[[1,9]],[[1,8]],[[1,13]],[[1,11]],[[1,3]],[[1,2]],[[1,10]],[[1,9]],[[14,9]],[[14,12]],[[14,7]],[[14,2]],[[14,3]],[[14,8]],[[14,9]],[[14,6]],[[14,12]],[[14,13]],[[14,3]],[[14,11]],[[14,5]],[[14,4]],[[14,13]],[[14,10]],[[14,11]],[[14,10]],[[14,8]],[[14,4]],[[14,2]],[[14,7]],[[14,6]],[[14,5]],[1,15],[1,1],[23],[24],[1,1],[1,1],[14,14],[14,14],[[1,11],1],[[1,12],1],[[1,4],1],[[1,2],1],[[1,3],1],[[1,13],1],[[1,3],1],[[1,2],1],[[1,13],1],[[1,7],1],[[1,9],1],[[1,11],1],[[1,6],1],[[1,7],1],[[1,5],1],[[1,10],1],[[1,7],1],[[1,1],1],[[1,9],1],[[1,2],1],[[1,6],1],[[1,7],1],[[1,3],1],[[1,9],1],[[1,5],1],[[1,8],1],[[1,12],1],[[1,8],1],[[1,11],1],[[1,13],1],[[1,1],1],[[1,10],1],[[1,12],1],[[1,1],1],[[1,6],1],[[1,6],1],[[1,4],1],[[1,5],1],[[1,10],1],[[1,3],1],[[1,5],1],[[1,11],1],[[1,12],1],[[1,13],1],[[1,4],1],[[1,1],1],[[1,4],1],[[1,9],1],[[1,8],1],[[1,2],1],[[1,10],1],[[1,8],1],[[14,10],14],[[14,14],14],[[14,4],14],[[14,8],14],[[14,8],14],[[14,14],14],[[14,10],14],[[14,2],14],[[14,7],14],[[14,8],14],[[14,14],14],[[14,7],14],[[14,10],14],[[14,2],14],[[14,9],14],[[14,2],14],[[14,9],14],[[14,4],14],[[14,14],14],[[14,9],14],[[14,2],14],[[14,4],14],[[14,9],14],[[14,7],14],[[14,10],14],[[14,4],14],[[14,8],14],[[14,7],14],[[1,12]],[[1,11]],[[1,4]],[[1,5]],[[1,10]],[[1,2]],[[1,1]],[[1,13]],[[1,7]],[[1,1]],[[1,9]],[[1,3]],[[1,6]],[[1,8]],[[14,10]],[[14,9]],[[14,7]],[[14,4]],[[14,8]],[[14,14]],[[14,2]],[[14,14]],[34,1],[34,14],[1],[14],[[],[[18,[1]]]],[1,[[18,[1]]]],[14,[[18,[1]]]],[[],[[18,[14]]]],[1,[[18,[14]]]],[1,[[18,[14]]]],[14,[[18,[14]]]],[1],[14,[[33,[4]]]],[1],[14,[[33,[4]]]],[1,[[18,[35]]]],[14,[[18,[35]]]],[1,[[18,[30]]]],[14,[[18,[30]]]],[1,[[18,[3]]]],[14,[[18,[3]]]],[1,[[18,[6]]]],[14,[[18,[6]]]],[1],[14],[[]],[[]],[[]],[[]],[[]],[[1,10]],[[14,10],[[33,[4]]]],[[1,10]],[[14,10],[[33,[4]]]],[1,[[33,[4]]]],[1,[[33,[4]]]],[[1,10],36],[[14,10],36],[[],36],[[],36],[[],36],[[],36],[1,[[18,[9]]]],[14,[[18,[9]]]],[1],[14,[[33,[10]]]],[1,[[18,[2]]]],[14,[[18,[2]]]],[1],[14,[[33,[2]]]],[14,2],[1,[[18,[2]]]],[14,[[18,[2]]]],[[],31],[[],31],[[],31],[13,[[31,[14,21]]]],[1,[[31,[14,21]]]],[5,[[31,[14,21]]]],[3,[[31,[14,21]]]],[12,[[31,[14,21]]]],[[],31],[11,[[31,[14,21]]]],[1,[[31,[14,[21,[1]]]]]],[6,[[31,[14,21]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],1],[[],14]],"c":[],"p":[[3,"BigInt"],[15,"u64"],[15,"i128"],[15,"u8"],[15,"i8"],[15,"i64"],[15,"u16"],[15,"usize"],[15,"u128"],[15,"u32"],[15,"i16"],[15,"i32"],[15,"isize"],[3,"BigUint"],[4,"Sign"],[15,"slice"],[15,"bool"],[4,"Option"],[3,"ParseBigIntError"],[8,"Clone"],[3,"TryFromBigIntError"],[4,"Ordering"],[3,"U32Digits"],[3,"U64Digits"],[15,"str"],[8,"Debug"],[8,"PartialEq"],[3,"Formatter"],[6,"Result"],[15,"f64"],[4,"Result"],[8,"Hasher"],[3,"Vec"],[8,"Iterator"],[15,"f32"],[3,"String"],[3,"TypeId"],[8,"ToBigInt"],[8,"ToBigUint"]]},\
"num_complex":{"doc":"Complex numbers.","t":"DGGIDQKLKLLKLLLLLLLLLLLLLLKLLLKLLKLLKLLKLLLLLLKLLLLLKLLKLLKLLLLLLLLLLLLLLLLLLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLMLLLLLKLLKLLKLLKLLLLKLLKLLKLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLKLLLLLKLMKLLLLLLLLLLLLLLLLKLLKLLKLLLLLLLLLLLLLLLLKLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Complex","Complex32","Complex64","ComplexFloat","ParseComplexError","Real","abs","abs","acos","acos","acos","acosh","acosh","acosh","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","arg","arg","arg","as_","asin","asin","asin","asinh","asinh","asinh","atan","atan","atan","atanh","atanh","atanh","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","cis","clone","clone_into","conj","conj","conj","cos","cos","cos","cosh","cosh","cosh","default","description","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","equivalent","exp","exp","exp","exp2","exp2","exp2","expf","expf","expf","fdiv","finv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_polar","from_str","from_str_radix","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","hash","i","im","im","im","into","into","inv","inv","inv","is_finite","is_finite","is_finite","is_infinite","is_infinite","is_infinite","is_nan","is_nan","is_nan","is_normal","is_normal","is_normal","is_one","is_zero","l1_norm","l1_norm","l1_norm","ln","ln","ln","log","log","log","log10","log10","log10","log2","log2","log2","mul","mul","mul","mul","mul","mul","mul","mul","mul_add","mul_add","mul_add_assign","mul_add_assign","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","norm","norm_sqr","one","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","powc","powc","powc","powf","powf","powf","powi","powi","powi","powu","product","product","re","re","re","recip","recip","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","scale","set_one","set_zero","sin","sin","sin","sinh","sinh","sinh","sqrt","sqrt","sqrt","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","tan","tan","tan","tanh","tanh","tanh","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_owned","to_polar","to_string","to_string","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","try_from","try_from","try_into","try_into","type_id","type_id","unscale","zero"],"q":[[0,"num_complex"]],"d":["A complex number in Cartesian form.","","","Generic trait for floating point complex numbers.","","The type used to represent the real coefficients of this …","Returns the absolute value of the number. See also …","","Computes the arccosine of a number. Return value is in …","Computes the principal value of the inverse cosine of <code>self</code>.","","Inverse hyperbolic cosine function.","Computes the principal value of inverse hyperbolic cosine …","","","","","","","","","","","","","","Computes the argument of the number.","Calculate the principal Arg of self.","","","Computes the arcsine of a number. Return value is in …","","Computes the principal value of the inverse sine of <code>self</code>.","Inverse hyperbolic sine function.","Computes the principal value of inverse hyperbolic sine of …","","Computes the arctangent of a number. Return value is in …","","Computes the principal value of the inverse tangent of <code>self</code>…","Inverse hyperbolic tangent function.","Computes the principal value of inverse hyperbolic tangent …","","","","","","Take the cubic root of a number.","Computes the principal value of the cube root of <code>self</code>.","","Create a new Complex with a given phase: <code>exp(i * phase)</code>. …","","","Computes the complex conjugate of the number.","","Returns the complex conjugate. i.e. <code>re - i im</code>","Computes the cosine of a number (in radians).","Computes the cosine of <code>self</code>.","","Hyperbolic cosine function.","Computes the hyperbolic cosine of <code>self</code>.","","","","","","","","","","","","","","","","","","","Returns <code>e^(self)</code>, (the exponential function).","Computes <code>e^(self)</code>, where <code>e</code> is the base of the natural …","","Returns <code>2^(self)</code>.","Computes <code>2^(self)</code>.","","Returns <code>base^(self)</code>.","Raises a floating point number to the complex power <code>self</code>.","","Returns <code>self/other</code> using floating-point operations.","Returns <code>1/self</code> using floating-point operations.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Convert a polar representation into a complex number.","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","Parses <code>a +/- bi</code>; <code>ai +/- b</code>; <code>a</code>; or <code>bi</code> where <code>a</code> and <code>b</code> are of …","","","","","","","","Returns imaginary unit","Returns the imaginary part of the number.","","Imaginary portion of the complex number","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>1/self</code>","","","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Checks if the given complex number is finite","","Returns <code>true</code> if this value is positive infinity or …","","Checks if the given complex number is infinite","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Checks if the given complex number is NaN","","Returns <code>true</code> if the number is neither zero, infinite, …","","Checks if the given complex number is normal","","","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","","Returns the L1 norm <code>|re| + |im|</code> – the Manhattan distance …","Returns the natural logarithm of the number.","","Computes the principal value of natural logarithm of <code>self</code>.","Returns the logarithm of the number with respect to an …","","Returns the logarithm of <code>self</code> with respect to an arbitrary …","Returns the base 10 logarithm of the number.","","Computes the principal value of log base 10 of <code>self</code>.","Returns the base 2 logarithm of the number.","","Computes the principal value of log base 2 of <code>self</code>.","","","","","","","","","","","","","","","","","","","Create a new Complex","Calculate |self|","Returns the square of the norm (since <code>T</code> doesn’t …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Raises <code>self</code> to a complex power.","Raises <code>self</code> to a complex power.","","Raises <code>self</code> to a real power.","","Raises <code>self</code> to a floating point power.","Raises <code>self</code> to a signed integer power.","","Raises <code>self</code> to a signed integer power.","Raises <code>self</code> to an unsigned integer power.","","","Returns the real part of the number.","","Real portion of the complex number","Take the reciprocal (inverse) of a number, <code>1/x</code>. See also …","","","","","","","","","","","","","","Multiplies <code>self</code> by the scalar <code>t</code>.","","","Computes the sine of a number (in radians).","Computes the sine of <code>self</code>.","","Hyperbolic sine function.","","Computes the hyperbolic sine of <code>self</code>.","Take the square root of a number.","","Computes the principal value of the square root of <code>self</code>.","","","","","","","","","","","","","","","Computes the tangent of a number (in radians).","","Computes the tangent of <code>self</code>.","Hyperbolic tangent function.","Computes the hyperbolic tangent of <code>self</code>.","","","","","","","","","","","Convert to polar form (r, theta), such that …","","","","","","","","","","","","","","","Divides <code>self</code> by the scalar <code>t</code>.",""],"i":[0,0,0,0,0,56,56,3,56,3,3,56,3,3,3,3,3,3,3,3,3,3,3,3,3,3,56,3,3,3,56,3,3,56,3,3,56,3,3,56,3,3,3,12,3,12,56,3,3,3,3,3,56,3,3,56,3,3,56,3,3,3,12,3,3,3,3,3,3,3,3,3,3,3,3,3,12,3,56,3,3,56,3,3,56,3,3,3,3,3,3,3,3,3,3,3,3,12,12,3,3,3,3,12,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,56,3,3,3,12,3,3,3,56,3,3,56,3,3,56,3,3,56,3,3,3,3,56,3,3,56,3,3,56,3,3,56,3,3,56,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,56,3,3,56,3,3,56,3,3,3,3,3,56,3,3,56,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,56,3,3,56,3,3,56,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,56,3,3,56,3,3,3,3,3,3,3,3,3,3,3,3,3,12,3,3,3,3,3,3,3,12,3,12,3,12,3,3],"f":[0,0,0,0,0,0,[[]],[[[3,[[0,[1,2]]]]]],[[]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,6]]]],[3,[[0,[4,6]]]]]],[[[3,[[0,[4,6]]]],[0,[4,6]]]],[[[3,[[0,[4,6]]]],[3,[[0,[4,6]]]]]],[[[3,[[0,[4,6]]]],[0,[4,6]]]],[[]],[[[3,[1]]],1],[[[3,[[0,[1,2]]]]]],[[[3,[[8,[7]]]]],7],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[1]]],[[3,[1]]]],[[]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[1]]],[[3,[1]]]],[[]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[]],[[]],[[]],[[]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[1,[[3,[1]]]],[[[3,[4]]],[[3,[4]]]],[[]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[4,5,9]]]]],[[3,[[0,[4,5,9]]]]]],[[]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[],[[3,[10]]]],[[[12,[11]]],13],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,6]]]],[0,[4,6]]]],[[[3,[[0,[4,6]]]],[3,[[0,[4,6]]]]]],[[[3,[[0,[4,6]]]],[3,[[0,[4,6]]]]]],[[[3,[[0,[4,6]]]],[0,[4,6]]]],[[[3,[14]],[3,[14]]],15],[[[12,[14]],[12,[14]]],15],[[],15],[[]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[1]],1],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[1]],[3,[1]]],[[3,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[16,5,17,4]]]],18],19],[[[3,[[0,[20,5,17,4]]]],18],19],[[[3,[[0,[21,5,17,4]]]],18],19],[[[3,[[0,[22,5,17,4]]]],18],19],[[[3,[23]],18],19],[[[3,[[0,[24,5,17,4]]]],18],19],[[[3,[[0,[25,5,17,4]]]],18],19],[[[3,[[0,[26,5,17,4]]]],18],19],[[[12,[23]],18],19],[[[12,[24]],18],19],[[[0,[4,5]]],[[3,[[0,[4,5]]]]]],[[[0,[4,5]]],[[3,[[0,[4,5]]]]]],[27,[[29,[[3,[[0,[28,5]]]]]]]],[[]],[[]],[30,[[29,[[3,[[0,[31,5]]]]]]]],[32,[[29,[[3,[[0,[31,5]]]]]]]],[33,[[29,[[3,[[0,[31,5]]]]]]]],[34,[[29,[[3,[[0,[31,5]]]]]]]],[35,[[29,[[3,[[0,[31,5]]]]]]]],[36,[[29,[[3,[[0,[31,5]]]]]]]],[37,[[29,[[3,[[0,[31,5]]]]]]]],[38,[[29,[[3,[[0,[31,5]]]]]]]],[[1,1],[[3,[1]]]],[13,[[40,[[3,[[0,[39,5,4]]]]]]]],[[13,41],[[40,[[3,[[0,[5,4]]]]]]]],[42,[[29,[[3,[[0,[31,5]]]]]]]],[43,[[29,[[3,[[0,[31,5]]]]]]]],[41,[[29,[[3,[[0,[31,5]]]]]]]],[44,[[29,[[3,[[0,[31,5]]]]]]]],[45,[[29,[[3,[[0,[31,5]]]]]]]],[46,[[29,[[3,[[0,[31,5]]]]]]]],[[[3,[47]],48]],[[],[[3,[[0,[4,5]]]]]],[[]],[[[3,[[0,[1,2]]]]]],0,[[]],[[]],[[[3,[[0,[4,5,9]]]]],[[3,[[0,[4,5,9]]]]]],[[[3,[[0,[4,5,9]]]]]],[[[3,[[0,[4,5,9]]]]]],[[],15],[[[3,[49]]],15],[[[3,[[0,[1,2]]]]],15],[[],15],[[[3,[[0,[1,2]]]]],15],[[[3,[49]]],15],[[],15],[[[3,[49]]],15],[[[3,[[0,[1,2]]]]],15],[[],15],[[[3,[[0,[1,2]]]]],15],[[[3,[49]]],15],[[[3,[[0,[4,5]]]]],15],[[[3,[[0,[4,5]]]]],15],[[]],[[[3,[[0,[1,2]]]]]],[[[3,[[0,[4,50]]]]],[[0,[4,50]]]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[1]]],[[3,[1]]]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[1]],1],[[3,[1]]]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5,51]]]],[3,[[0,[4,5,51]]]],[3,[[0,[4,5,51]]]]],[[3,[[0,[4,5,51]]]]]],[[[3,[[0,[4,5,51]]]],[3,[[0,[4,5,51]]]],[3,[[0,[4,5,51]]]]],[[3,[[0,[4,5,51]]]]]],[[[3,[[0,[4,6,52]]]],[3,[[0,[4,6,52]]]],[3,[[0,[4,6,52]]]]]],[[[3,[[0,[4,6,52]]]],[3,[[0,[4,6,52]]]],[3,[[0,[4,6,52]]]]]],[[[3,[[0,[4,6]]]],[0,[4,6]]]],[[[3,[[0,[4,6]]]],[0,[4,6]]]],[[[3,[[0,[4,6]]]],[3,[[0,[4,6]]]]]],[[[3,[[0,[4,6]]]],[3,[[0,[4,6]]]]]],[[[3,[[0,[4,5,9]]]]]],[[[3,[[0,[4,5,9]]]]]],[[],3],[[[3,[1]]],1],[[[3,[[0,[4,5]]]]],[[0,[4,5]]]],[[],[[3,[[0,[4,5]]]]]],[[[3,[1]],[3,[1]]]],[[[3,[[0,[4,5]]]],42]],[[[3,[1]],[3,[1]]]],[[[3,[1]],30]],[[[3,[[0,[4,5,9]]]],33]],[[[3,[[0,[4,5,9]]]],37]],[[[3,[1]],30]],[[[3,[[0,[4,5]]]],44]],[[[3,[1]],32]],[[[3,[1]],32]],[[[3,[[0,[4,5,9]]]],35]],[[[3,[[0,[4,5]]]],41]],[[[3,[1]],32]],[[[3,[[0,[4,5,9]]]],34]],[[[3,[1]],30]],[[[3,[[0,[4,5]]]],43]],[[[3,[[0,[4,5]]]],43]],[[[3,[1]],[3,[1]]]],[[[3,[[0,[4,5,9]]]],38]],[[[3,[[0,[4,5,9]]]],36]],[[[3,[[0,[4,5]]]],44]],[[[3,[[0,[4,5]]]],45]],[[[3,[[0,[4,5]]]],42]],[[[3,[[0,[4,5,9]]]],37]],[[[3,[[0,[4,5,9]]]],33]],[[[3,[[0,[4,5]]]],46]],[[[3,[[0,[4,5]]]],45]],[[[3,[[0,[4,5]]]],46]],[[[3,[[0,[4,5,9]]]],38]],[[[3,[1]],[3,[1]]]],[[[3,[1]],30]],[[[3,[1]],32]],[[[3,[[0,[4,5,9]]]],34]],[[[3,[[0,[4,5]]]],41]],[[[3,[[0,[4,5,9]]]],36]],[[[3,[[0,[4,5,9]]]],35]],[3,3],[[[3,[1]],[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]],3],3],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[1]],1],[[3,[1]]]],[35],[[[3,[[0,[1,2]]]],35],[[3,[[0,[1,2]]]]]],[[[3,[[0,[4,5,9]]]],35],[[3,[[0,[4,5,9]]]]]],[[[3,[[0,[4,5]]]],41],[[3,[[0,[4,5]]]]]],[53,[[3,[[0,[5,4]]]]]],[53,[[3,[[0,[5,4]]]]]],[[]],[[[3,[[0,[1,2]]]]]],0,[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,6]]]],[3,[[0,[4,6]]]]]],[[[3,[[0,[4,6]]]],[3,[[0,[4,6]]]]]],[[[3,[[0,[4,6]]]],[0,[4,6]]]],[[[3,[[0,[4,6]]]],[0,[4,6]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]],[[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]]]],[[]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[1]]],[[3,[1]]]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[0,[4,5]]]],[[[3,[[0,[4,5]]]],[3,[[0,[4,5]]]]]],[[[3,[[0,[4,6]]]],[0,[4,6]]]],[[[3,[[0,[4,6]]]],[3,[[0,[4,6]]]]]],[[[3,[[0,[4,6]]]],[3,[[0,[4,6]]]]]],[[[3,[[0,[4,6]]]],[0,[4,6]]]],[53,[[3,[[0,[5,4]]]]]],[53,[[3,[[0,[5,4]]]]]],[[]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[1]]],[[3,[1]]]],[[]],[[[3,[1]]],[[3,[1]]]],[[[3,[[0,[1,2]]]]],[[3,[[0,[1,2]]]]]],[[[3,[[0,[27,5]]]]],[[29,[30]]]],[[[3,[[0,[27,5]]]]],[[29,[32]]]],[[[3,[[0,[27,5]]]]],[[29,[33]]]],[[[3,[[0,[27,5]]]]],[[29,[34]]]],[[[3,[[0,[27,5]]]]],[[29,[35]]]],[[[3,[[0,[27,5]]]]],[[29,[36]]]],[[[3,[[0,[27,5]]]]],[[29,[37]]]],[[[3,[[0,[27,5]]]]],[[29,[38]]]],[[]],[[[3,[1]]]],[[],54],[[],54],[[[3,[[0,[27,5]]]]],[[29,[42]]]],[[[3,[[0,[27,5]]]]],[[29,[43]]]],[[[3,[[0,[27,5]]]]],[[29,[41]]]],[[[3,[[0,[27,5]]]]],[[29,[44]]]],[[[3,[[0,[27,5]]]]],[[29,[45]]]],[[[3,[[0,[27,5]]]]],[[29,[46]]]],[[],40],[[],40],[[],40],[[],40],[[],55],[[],55],[[[3,[[0,[4,5]]]],[0,[4,5]]],[[3,[[0,[4,5]]]]]],[[],[[3,[[0,[4,5]]]]]]],"c":[],"p":[[8,"Float"],[8,"FloatConst"],[3,"Complex"],[8,"Clone"],[8,"Num"],[8,"NumAssign"],[8,"Copy"],[8,"AsPrimitive"],[8,"Neg"],[8,"Default"],[8,"Error"],[3,"ParseComplexError"],[15,"str"],[8,"PartialEq"],[15,"bool"],[8,"Octal"],[8,"PartialOrd"],[3,"Formatter"],[6,"Result"],[8,"UpperExp"],[8,"UpperHex"],[8,"LowerExp"],[8,"Debug"],[8,"Display"],[8,"LowerHex"],[8,"Binary"],[8,"ToPrimitive"],[8,"NumCast"],[4,"Option"],[15,"f32"],[8,"FromPrimitive"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[8,"FromStr"],[4,"Result"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Hash"],[8,"Hasher"],[8,"FloatCore"],[8,"Signed"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"Iterator"],[3,"String"],[3,"TypeId"],[8,"ComplexFloat"]]},\
"num_cpus":{"doc":"A crate with utilities to determine the number of CPUs …","t":"FF","n":["get","get_physical"],"q":[[0,"num_cpus"]],"d":["Returns the number of available CPUs of the current system.","Returns the number of physical cores of the current system."],"i":[0,0],"f":[[[],1],[[],1]],"c":[],"p":[[15,"usize"]]},\
"num_integer":{"doc":"Integer trait and functions.","t":"IDIDIFKFKFLLLLFLLLLFLFKFLFKKLLLLLLLFKMFLLLLKKKFKFKFLLLFKLFLLLLLLLLLMM","n":["Average","ExtendedGcd","Integer","IterBinomial","Roots","average_ceil","average_ceil","average_floor","average_floor","binomial","borrow","borrow","borrow_mut","borrow_mut","cbrt","cbrt","cbrt","clone","clone_into","div_ceil","div_ceil","div_floor","div_floor","div_mod_floor","div_mod_floor","div_rem","div_rem","divides","eq","equivalent","extended_gcd","extended_gcd_lcm","fmt","from","from","gcd","gcd","gcd","gcd_lcm","gcd_lcm","into","into","into_iter","is_even","is_multiple_of","is_odd","lcm","lcm","mod_floor","mod_floor","multinomial","new","next","next_multiple_of","nth_root","nth_root","prev_multiple_of","sqrt","sqrt","sqrt","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","x","y"],"q":[[0,"num_integer"]],"d":["Provides methods to compute the average of two integers, …","Greatest common divisor and Bézout coefficients","","An iterator over binomial coefficients.","Provides methods to compute an integer’s square root, …","Returns the ceiling value of the average of <code>x</code> and <code>y</code> – …","Returns the ceiling value of the average of <code>self</code> and <code>other</code>.","Returns the floor value of the average of <code>x</code> and <code>y</code> – see …","Returns the floor value of the average of <code>self</code> and <code>other</code>. …","Calculate the binomial coefficient.","","","","","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","Returns the truncated principal cube root of an integer –","","","Ceiled integer division","Ceiled integer division.","Floored integer division","Floored integer division.","Simultaneous floored integer division and modulus","Simultaneous floored integer division and modulus. Returns …","Simultaneous integer division and modulus","Simultaneous truncated integer division and modulus. …","Deprecated, use <code>is_multiple_of</code> instead.","","","Greatest common divisor and Bézout coefficients.","Greatest common divisor, least common multiple, and …","","Returns the argument unchanged.","Returns the argument unchanged.","Calculates the Greatest Common Divisor (GCD) of the number …","Greatest Common Divisor (GCD).","","Calculates the Greatest Common Divisor (GCD) and Lowest …","Greatest Common Divisor (GCD) and Lowest Common Multiple …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the number is even.","Returns <code>true</code> if <code>self</code> is a multiple of <code>other</code>.","Returns <code>true</code> if the number is odd.","Calculates the Lowest Common Multiple (LCM) of the number …","Lowest Common Multiple (LCM).","Floored integer modulus","Floored integer modulo, satisfying:","Calculate the multinomial coefficient.","For a given n, iterate over all binomial coefficients …","","Rounds up to nearest multiple of argument.","Returns the truncated principal <code>n</code>th root of an integer – …","Returns the truncated principal <code>n</code>th root of an integer – …","Rounds down to nearest multiple of argument.","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","Returns the truncated principal square root of an integer …","","","","","","","","",""],"i":[0,0,0,0,0,0,1,0,1,0,14,5,14,5,0,4,4,5,5,0,2,0,2,0,2,0,2,2,5,5,2,2,5,14,5,0,2,5,0,2,14,5,14,2,2,2,0,2,0,2,0,14,14,2,0,4,2,0,4,4,5,14,5,14,5,14,5,5,5],"f":[0,0,0,0,0,[[1,1],1],[[]],[[1,1],1],[[]],[[[0,[2,3]],[0,[2,3]]],[[0,[2,3]]]],[[]],[[]],[[]],[[]],[4,4],[[]],[[]],[[[5,[3]]],[[5,[3]]]],[[]],[[2,2],2],[[]],[[2,2],2],[[]],[[2,2]],[[]],[[2,2]],[[]],[[],6],[[[5,[7]],[5,[7]]],6],[[],6],[[3,3],[[5,[3]]]],[[[0,[3,8]],[0,[3,8]]]],[[[5,[9]],10],11],[[]],[[]],[[2,2],2],[[]],0,[[2,2]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[2,2],2],[[]],[[2,2],2],[[]],[[[13,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,2,3]]]],2,3]]]],2,3]]]],2,3]]]]],[[0,[[12,[[0,[[12,[[0,[[12,[[0,[[12,[[0,[12,2,3]]]],2,3]]]],2,3]]]],2,3]]]],2,3]]]],[2,[[14,[2]]]],[[[14,[[0,[2,3]]]]],[[15,[[0,[2,3]]]]]],[[3,3],3],[[4,16],4],[16],[[3,3],3],[4,4],[[]],[[]],[[]],[[],17],[[],17],[[],17],[[],17],[[],18],[[],18],0,0],"c":[],"p":[[8,"Average"],[8,"Integer"],[8,"Clone"],[8,"Roots"],[3,"ExtendedGcd"],[15,"bool"],[8,"PartialEq"],[8,"Signed"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[8,"Add"],[15,"slice"],[3,"IterBinomial"],[4,"Option"],[15,"u32"],[4,"Result"],[3,"TypeId"]]},\
"num_iter":{"doc":"External iterators for generic mathematics","t":"DDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Range","RangeFrom","RangeInclusive","RangeStep","RangeStepFrom","RangeStepInclusive","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","end_bound","end_bound","end_bound","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","next","next","next","next","next","next","next_back","next_back","range","range_from","range_inclusive","range_step","range_step_from","range_step_inclusive","size_hint","size_hint","size_hint","size_hint","start_bound","start_bound","start_bound","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"num_iter"]],"d":["An iterator over the range [start, stop)","An iterator over the infinite range starting at <code>start</code>","An iterator over the range [start, stop]","An iterator over the range [start, stop) by <code>step</code>. It …","An iterator over the infinite range starting at <code>start</code> by …","An iterator over the range [start, stop] by <code>step</code>. It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns an iterator over the given range [start, stop) …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop]","Return an iterator over the range [start, stop) by <code>step</code>. …","Return an iterator over the infinite range starting at …","Return an iterator over the range [start, stop] by <code>step</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,6,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,0,0,0,0,0,0,2,3,6,7,2,3,6,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7,2,3,4,5,6,7],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[2,[1]]]],[[[3,[1]]],[[3,[1]]]],[[[4,[1]]],[[4,[1]]]],[[[5,[1]]],[[5,[1]]]],[[[6,[1]]],[[6,[1]]]],[[[7,[1]]],[[7,[1]]]],[[]],[[]],[[]],[[]],[[]],[[]],[2,8],[3,8],[6,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[3,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[4,[[0,[13,10,1]]]]],[[12,[[0,[13,10,1]]]]]],[[[5,[[0,[13,10,1,14]]]]],[[12,[[0,[13,10,1,14]]]]]],[[[6,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[7,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]],[[12,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[2,[[0,[15,1,11]]]]],[[12,[[0,[15,1,11]]]]]],[[[3,[[0,[[16,[[0,[[16,[[0,[[16,[[0,[16,15,1,11]]]],15,1,11]]]],15,1,11]]]],15,1,11]]]]],[[12,[[0,[[16,[[0,[[16,[[0,[[16,[[0,[16,15,1,11]]]],15,1,11]]]],15,1,11]]]],15,1,11]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]],[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]],[[2,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1,17]]]],1,17]]]],1,17]]]],1,17]]]],1,17]]],[[6,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1,17]]]],1,17]]]],1,17]]]],1,17]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]],[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]],[[3,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,17]]]],10,1,17]]]],10,1,17]]]],10,1,17]]]]]],[[[0,[13,10,1,18]],[0,[13,10,1,18]],[0,[13,10,1,18]]],[[4,[[0,[13,10,1,18]]]]]],[[[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]],1]],[0,[[9,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]],1]]],[[7,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[0,[13,10,1,18]],[0,[13,10,1,18]],[0,[13,10,1,18]]],[[5,[[0,[13,10,1,18]]]]]],[[[2,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[3,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,10,1,11]]]],10,1,11]]]],10,1,11]]]],10,1,11]]]]]],[[[6,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[[[7,[[0,[[9,[[0,[[9,[[0,[[9,[[0,[9,1]]]],1]]]],1]]]],1]]]]]],[2,8],[3,8],[6,8],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20]],"c":[],"p":[[8,"Clone"],[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"],[3,"RangeFrom"],[3,"RangeStepFrom"],[4,"Bound"],[8,"Add"],[8,"PartialOrd"],[8,"ToPrimitive"],[4,"Option"],[8,"CheckedAdd"],[8,"PartialEq"],[8,"Integer"],[8,"Sub"],[8,"One"],[8,"Zero"],[4,"Result"],[3,"TypeId"]]},\
"num_rational":{"doc":"Rational numbers","t":"GDDGGGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["BigRational","ParseRatioError","Ratio","Rational","Rational32","Rational64","abs","abs_sub","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","approximate_float","borrow","borrow","borrow_mut","borrow_mut","ceil","checked_add","checked_div","checked_mul","checked_sub","clone","clone","clone_into","clone_into","cmp","default","denom","description","div","div","div","div","div","div","div","div","div_assign","div_assign","div_assign","div_assign","eq","eq","equivalent","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fract","from","from","from","from","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f32","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_f64","from_float","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i128","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_i64","from_integer","from_str","from_str_radix","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u128","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","from_u64","hash","into","into","into","inv","inv","is_integer","is_negative","is_one","is_positive","is_zero","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","mul_assign","mul_assign","neg","neg","new","new_raw","numer","one","partial_cmp","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","product","product","recip","reduced","rem","rem","rem","rem","rem","rem","rem","rem","rem_assign","rem_assign","rem_assign","rem_assign","round","set_one","set_zero","signum","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_f64","to_i128","to_i64","to_integer","to_owned","to_owned","to_string","to_string","to_u128","to_u64","trunc","try_from","try_from","try_into","try_into","type_id","type_id","zero"],"q":[[0,"num_rational"]],"d":["Alias for arbitrary precision rationals.","","Represents the ratio between two numbers.","Alias for a <code>Ratio</code> of machine-sized integers.","Alias for a <code>Ratio</code> of 32-bit-sized integers.","Alias for a <code>Ratio</code> of 64-bit-sized integers.","","","","","","","","","","","","","","","","","","","","Rounds towards plus infinity.","","","","","","","","","","Returns zero","Gets an immutable reference to the denominator.","","","","","","","","","","","","","","","","","Rounds towards minus infinity.","","","","","","","","","","","Returns the fractional part of a number, with division …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a float into a rational number.","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a <code>Ratio</code> representing the integer <code>t</code>.","Parses <code>numer/denom</code> or just <code>numer</code>.","Parses <code>numer/denom</code> where the numbers are in base <code>radix</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","Returns true if the rational number is an integer …","","","","","","","","","","","","","","","","","","","Creates a new <code>Ratio</code>.","Creates a <code>Ratio</code> without checking for <code>denom == 0</code> or …","Gets an immutable reference to the numerator.","","","","","","","","","","","","","","Raises the <code>Ratio</code> to the power of an exponent.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the reciprocal.","Returns a reduced copy of self.","","","","","","","","","","","","","Rounds to the nearest integer. Rounds half-way cases away …","","","","","","","","","","","","","","","","","","","","","Converts to an integer, rounding towards zero.","","","","","","","Rounds towards zero.","","","","","","",""],"i":[0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,4,4,4,4,4,13,4,13,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,13,13,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,13,4,13,4,4,4,4,13,4,13,4,13,4],"f":[0,0,0,0,0,0,[[[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2,3]]]],[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[0,[6,7]]],[[9,[[4,[[0,[2,3,8,7,1]]]]]]]],[[]],[[]],[[]],[[]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,10,11]]]],[4,[[0,[1,2,10,11]]]]],[[9,[[4,[[0,[1,2,10,11]]]]]]]],[[[4,[[0,[1,2,10]]]],[4,[[0,[1,2,10]]]]],[[9,[[4,[[0,[1,2,10]]]]]]]],[[[4,[[0,[1,2,10]]]],[4,[[0,[1,2,10]]]]],[[9,[[4,[[0,[1,2,10]]]]]]]],[[[4,[[0,[1,2,10,12]]]],[4,[[0,[1,2,10,12]]]]],[[9,[[4,[[0,[1,2,10,12]]]]]]]],[[[4,[1]]],[[4,[1]]]],[13,13],[[]],[[]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],14],[[],[[4,[[0,[1,2]]]]]],[4],[13,15],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],16],[[13,13],16],[[],16],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[17,1,2]]]],18],19],[[[4,[[0,[20,1,2]]]],18],19],[[[4,[21]],18],19],[[[4,[[0,[22,1,2]]]],18],19],[[[4,[[0,[23,1,2]]]],18],19],[[[4,[[0,[24,1,2]]]],18],19],[[[4,[[0,[25,1,2]]]],18],19],[[[4,[[0,[26,1,2]]]],18],19],[[13,18],19],[[13,18],19],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[],[[4,[[0,[1,2]]]]]],[[]],[[]],[27,[[9,[[4,[28]]]]]],[27,[[9,[[4,[29]]]]]],[27,[[9,[[4,[30]]]]]],[27,[[9,[[4,[31]]]]]],[27,[[9,[[4,[32]]]]]],[27,[[9,[[4,[33]]]]]],[27,[[9,[[4,[34]]]]]],[27,[[9,[[4,[35]]]]]],[27,[[9,[[4,[36]]]]]],[27,[[9,[[4,[37]]]]]],[27,[[9,[[4,[38]]]]]],[27,[[9,[[4,[39]]]]]],[27,[[9,[[4,[40]]]]]],[41,[[9,[[4,[32]]]]]],[41,[[9,[[4,[36]]]]]],[41,[[9,[[4,[31]]]]]],[41,[[9,[[4,[33]]]]]],[41,[[9,[[4,[39]]]]]],[41,[[9,[[4,[29]]]]]],[41,[[9,[[4,[28]]]]]],[41,[[9,[[4,[35]]]]]],[41,[[9,[[4,[34]]]]]],[41,[[9,[[4,[30]]]]]],[41,[[9,[[4,[37]]]]]],[41,[[9,[[4,[38]]]]]],[41,[[9,[[4,[40]]]]]],[6,[[9,[42]]]],[39,[[9,[[4,[35]]]]]],[39,[[9,[[4,[40]]]]]],[39,[[9,[[4,[32]]]]]],[39,[[9,[[4,[33]]]]]],[39,[[9,[[4,[28]]]]]],[39,[[9,[[4,[36]]]]]],[39,[[9,[[4,[38]]]]]],[39,[[9,[[4,[37]]]]]],[39,[[9,[[4,[31]]]]]],[39,[[9,[[4,[39]]]]]],[39,[[9,[[4,[29]]]]]],[39,[[9,[[4,[30]]]]]],[39,[[9,[[4,[34]]]]]],[29,[[9,[[4,[36]]]]]],[29,[[9,[[4,[40]]]]]],[29,[[9,[[4,[29]]]]]],[29,[[9,[[4,[34]]]]]],[29,[[9,[[4,[37]]]]]],[29,[[9,[[4,[38]]]]]],[29,[[9,[[4,[39]]]]]],[29,[[9,[[4,[30]]]]]],[29,[[9,[[4,[35]]]]]],[29,[[9,[[4,[28]]]]]],[29,[[9,[[4,[33]]]]]],[29,[[9,[[4,[31]]]]]],[29,[[9,[[4,[32]]]]]],[[[0,[1,2]]],[[4,[[0,[1,2]]]]]],[15,[[44,[[4,[[0,[43,1,2]]]],13]]]],[[15,35],[[44,[[4,[[0,[1,2]]]],13]]]],[37,[[9,[[4,[35]]]]]],[37,[[9,[[4,[36]]]]]],[37,[[9,[[4,[34]]]]]],[37,[[9,[[4,[29]]]]]],[37,[[9,[[4,[32]]]]]],[37,[[9,[[4,[28]]]]]],[37,[[9,[[4,[39]]]]]],[37,[[9,[[4,[30]]]]]],[37,[[9,[[4,[31]]]]]],[37,[[9,[[4,[33]]]]]],[37,[[9,[[4,[38]]]]]],[37,[[9,[[4,[40]]]]]],[37,[[9,[[4,[37]]]]]],[31,[[9,[[4,[39]]]]]],[31,[[9,[[4,[30]]]]]],[31,[[9,[[4,[32]]]]]],[31,[[9,[[4,[34]]]]]],[31,[[9,[[4,[29]]]]]],[31,[[9,[[4,[28]]]]]],[31,[[9,[[4,[40]]]]]],[31,[[9,[[4,[31]]]]]],[31,[[9,[[4,[38]]]]]],[31,[[9,[[4,[37]]]]]],[31,[[9,[[4,[36]]]]]],[31,[[9,[[4,[33]]]]]],[31,[[9,[[4,[35]]]]]],[[[4,[[0,[1,2,45]]]],46]],[[]],[4],[[]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],16],[[[4,[[0,[1,2,3]]]]],16],[[[4,[[0,[1,2]]]]],16],[[[4,[[0,[1,2,3]]]]],16],[[[4,[[0,[1,2]]]]],16],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,47]]]]],[[4,[[0,[1,2,47]]]]]],[[[4,[[0,[1,2,47]]]]],[[4,[[0,[1,2,47]]]]]],[[[0,[1,2]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[],4],[4],[[],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[9,[14]]]],[[[4,[[0,[1,2]]]],40],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],39],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[49,[48]]]]]],48],[[4,[[0,[1,2,[49,[48]]]]]]]],[[[4,[[0,[1,2,[49,[36]]]]]],33],[[4,[[0,[1,2,[49,[36]]]]]]]],[[[4,[[0,[1,2,[49,[35]]]]]],40],[[4,[[0,[1,2,[49,[35]]]]]]]],[[[4,[[0,[1,2,[49,[37]]]]]],37],[[4,[[0,[1,2,[49,[37]]]]]]]],[[[4,[[0,[1,2,[49,[48]]]]]],48],[[4,[[0,[1,2,[49,[48]]]]]]]],[[[4,[[0,[1,2]]]],33],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[49,[36]]]]]],33],[[4,[[0,[1,2,[49,[36]]]]]]]],[[[4,[[0,[1,2,[49,[38]]]]]],34],[[4,[[0,[1,2,[49,[38]]]]]]]],[[[4,[[0,[1,2]]]],35],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],40],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[49,[37]]]]]],39],[[4,[[0,[1,2,[49,[37]]]]]]]],[[[4,[[0,[1,2]]]],37],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],32],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],32],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[49,[48]]]]]],28],[[4,[[0,[1,2,[49,[48]]]]]]]],[[[4,[[0,[1,2,[49,[36]]]]]],36],[[4,[[0,[1,2,[49,[36]]]]]]]],[[[4,[[0,[1,2,[49,[37]]]]]],39],[[4,[[0,[1,2,[49,[37]]]]]]]],[[[4,[[0,[1,2,[49,[35]]]]]],35],[[4,[[0,[1,2,[49,[35]]]]]]]],[[[4,[[0,[1,2,[49,[31]]]]]],29],[[4,[[0,[1,2,[49,[31]]]]]]]],[[[4,[[0,[1,2]]]],38],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[49,[31]]]]]],31],[[4,[[0,[1,2,[49,[31]]]]]]]],[[[4,[[0,[1,2,[49,[35]]]]]],35],[[4,[[0,[1,2,[49,[35]]]]]]]],[[[4,[[0,[1,2,[49,[31]]]]]],31],[[4,[[0,[1,2,[49,[31]]]]]]]],[[[4,[[0,[1,2]]]],39],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],31],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],37],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],30],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],31],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],28],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],48],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[49,[38]]]]]],38],[[4,[[0,[1,2,[49,[38]]]]]]]],[[[4,[[0,[1,2]]]],28],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],34],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[49,[38]]]]]],34],[[4,[[0,[1,2,[49,[38]]]]]]]],[[[4,[[0,[1,2]]]],38],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],36],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[49,[32]]]]]],32],[[4,[[0,[1,2,[49,[32]]]]]]]],[[[4,[[0,[1,2]]]],34],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[49,[31]]]]]],29],[[4,[[0,[1,2,[49,[31]]]]]]]],[[[4,[[0,[1,2,[49,[38]]]]]],38],[[4,[[0,[1,2,[49,[38]]]]]]]],[[[4,[[0,[1,2,[49,[32]]]]]],30],[[4,[[0,[1,2,[49,[32]]]]]]]],[[[4,[[0,[1,2,[49,[36]]]]]],36],[[4,[[0,[1,2,[49,[36]]]]]]]],[[[4,[[0,[1,2]]]],48],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],29],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],30],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],35],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],40],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],29],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,[49,[35]]]]]],40],[[4,[[0,[1,2,[49,[35]]]]]]]],[[[4,[[0,[1,2,[49,[37]]]]]],37],[[4,[[0,[1,2,[49,[37]]]]]]]],[[[4,[[0,[1,2,[49,[32]]]]]],32],[[4,[[0,[1,2,[49,[32]]]]]]]],[[[4,[[0,[1,2,[49,[32]]]]]],30],[[4,[[0,[1,2,[49,[32]]]]]]]],[[[4,[[0,[1,2,[49,[48]]]]]],28],[[4,[[0,[1,2,[49,[48]]]]]]]],[[[4,[[0,[1,2]]]],33],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],36],[[4,[[0,[1,2]]]]]],[50,[[4,[[0,[2,1]]]]]],[50,[[4,[[0,[2,1]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,3]]]]],[[4,[[0,[1,2,3]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[0,[1,2]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2]]]],[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[4,[[0,[1,2,5]]]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[[[4,[[0,[1,2,5]]]],[0,[1,2,5]]]],[50,[[4,[[0,[2,1]]]]]],[50,[[4,[[0,[2,1]]]]]],[[[4,[[0,[1,2,51,52]]]]],[[9,[41]]]],[[[4,[[0,[1,2,51,52]]]]],[[9,[39]]]],[[[4,[[0,[1,2,51,52]]]]],[[9,[29]]]],[[[4,[[0,[1,2]]]]],[[0,[1,2]]]],[[]],[[]],[[],53],[[],53],[[[4,[[0,[1,2,51,52]]]]],[[9,[37]]]],[[[4,[[0,[1,2,51,52]]]]],[[9,[31]]]],[[[4,[[0,[1,2]]]]],[[4,[[0,[1,2]]]]]],[[],44],[[],44],[[],44],[[],44],[[],54],[[],54],[[],[[4,[[0,[1,2]]]]]]],"c":[3],"p":[[8,"Clone"],[8,"Integer"],[8,"Signed"],[3,"Ratio"],[8,"NumAssign"],[8,"FloatCore"],[8,"NumCast"],[8,"Bounded"],[4,"Option"],[8,"CheckedMul"],[8,"CheckedAdd"],[8,"CheckedSub"],[3,"ParseRatioError"],[4,"Ordering"],[15,"str"],[15,"bool"],[8,"Display"],[3,"Formatter"],[6,"Result"],[8,"Binary"],[8,"Debug"],[8,"UpperExp"],[8,"UpperHex"],[8,"Octal"],[8,"LowerHex"],[8,"LowerExp"],[15,"f32"],[3,"BigInt"],[15,"i64"],[15,"i8"],[15,"u64"],[15,"u8"],[15,"i16"],[15,"isize"],[15,"u32"],[15,"u16"],[15,"u128"],[15,"usize"],[15,"i128"],[15,"i32"],[15,"f64"],[6,"BigRational"],[8,"FromStr"],[4,"Result"],[8,"Hash"],[8,"Hasher"],[8,"Neg"],[3,"BigUint"],[8,"Pow"],[8,"Iterator"],[8,"ToPrimitive"],[8,"ToBigInt"],[3,"String"],[3,"TypeId"]]},\
"num_traits":{"doc":"Numeric traits for generic mathematics","t":"CCCCCCCCCCCNCCCECCQCNCCIIIICIICDCCICCCCCCCCCCCCCCCCCLLLLAACCFFFALLLLLKAALLMCAACAACLLLLLLLCIIIKKKKIIIIKFKLLLLLKLLLLLKLLLLLLLKLLLLLKLLKKKKKKKKKKIIIKKLKLKKKLKLKKKKKKKKKKLKKLKKKLKKKKLKLKKKKKKLKLKLKLKLKLLLKKKKKKLKKKLKKKKKKKKKKKKKLKLKLKLKKKKKKKLKLKLIILKFKLLFKIKKKKLKKLKKKKKKKLKKKAAAAAAAAQQIIIKKLKKLIIIIIIIIKKKKKKKKIIKKKKIQKIIQKKIIIKKKIIIIKKKKKIIIIIIKKKKKKQIFFKIKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKIIFKFKKKFK","n":["AsPrimitive","Bounded","CheckedAdd","CheckedDiv","CheckedEuclid","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","Empty","Euclid","Float","FloatConst","FloatErrorKind","FromBytes","FromPrimitive","FromStrRadixErr","Inv","Invalid","MulAdd","MulAddAssign","Num","NumAssign","NumAssignOps","NumAssignRef","NumCast","NumOps","NumRef","One","ParseFloatError","Pow","PrimInt","RefNum","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","Signed","ToBytes","ToPrimitive","Unsigned","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","Zero","abs","abs_sub","borrow","borrow","borrow_mut","borrow_mut","bounds","cast","cast","checked_pow","clamp","clamp_max","clamp_min","float","fmt","fmt","fmt","from","from","from_str_radix","identities","int","into","into","kind","one","ops","pow","pow","real","sign","signum","to_string","try_from","try_from","try_into","try_into","type_id","type_id","zero","Bounded","LowerBounded","UpperBounded","max_value","max_value","min_value","min_value","AsPrimitive","FromPrimitive","NumCast","ToPrimitive","as_","cast","from","from_f32","from_f64","from_i128","from_i16","from_i32","from_i64","from_i8","from_isize","from_u128","from_u16","from_u32","from_u64","from_u8","from_usize","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","E","FRAC_1_PI","FRAC_1_SQRT_2","FRAC_2_PI","FRAC_2_SQRT_PI","FRAC_PI_2","FRAC_PI_3","FRAC_PI_4","FRAC_PI_6","FRAC_PI_8","Float","FloatConst","FloatCore","LN_10","LN_2","LOG10_2","LOG10_E","LOG2_10","LOG2_E","PI","SQRT_2","TAU","abs","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","ceil","classify","classify","copysign","cos","cosh","epsilon","epsilon","exp","exp2","exp_m1","floor","floor","fract","fract","hypot","infinity","infinity","integer_decode","integer_decode","is_finite","is_finite","is_infinite","is_infinite","is_nan","is_nan","is_normal","is_normal","is_sign_negative","is_sign_negative","is_sign_positive","is_sign_positive","is_subnormal","is_subnormal","ln","ln_1p","log","log10","log2","max","max","max_value","max_value","min","min","min_positive_value","min_positive_value","min_value","min_value","mul_add","nan","nan","neg_infinity","neg_infinity","neg_zero","neg_zero","powf","powi","powi","recip","recip","round","round","signum","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_degrees","to_radians","to_radians","trunc","trunc","One","Zero","is_one","is_zero","one","one","set_one","set_zero","zero","zero","PrimInt","count_ones","count_zeros","from_be","from_le","leading_ones","leading_zeros","pow","reverse_bits","rotate_left","rotate_right","signed_shl","signed_shr","swap_bytes","to_be","to_le","trailing_ones","trailing_zeros","unsigned_shl","unsigned_shr","bytes","checked","euclid","inv","mul_add","overflowing","saturating","wrapping","Bytes","Bytes","FromBytes","NumBytes","ToBytes","from_be_bytes","from_le_bytes","from_ne_bytes","to_be_bytes","to_le_bytes","to_ne_bytes","CheckedAdd","CheckedDiv","CheckedMul","CheckedNeg","CheckedRem","CheckedShl","CheckedShr","CheckedSub","checked_add","checked_div","checked_mul","checked_neg","checked_rem","checked_shl","checked_shr","checked_sub","CheckedEuclid","Euclid","checked_div_euclid","checked_rem_euclid","div_euclid","rem_euclid","Inv","Output","inv","MulAdd","MulAddAssign","Output","mul_add","mul_add_assign","OverflowingAdd","OverflowingMul","OverflowingSub","overflowing_add","overflowing_mul","overflowing_sub","Saturating","SaturatingAdd","SaturatingMul","SaturatingSub","saturating_add","saturating_add","saturating_mul","saturating_sub","saturating_sub","WrappingAdd","WrappingMul","WrappingNeg","WrappingShl","WrappingShr","WrappingSub","wrapping_add","wrapping_mul","wrapping_neg","wrapping_shl","wrapping_shr","wrapping_sub","Output","Pow","checked_pow","pow","pow","Real","abs","abs_sub","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","cos","cosh","epsilon","exp","exp2","exp_m1","floor","fract","hypot","is_sign_negative","is_sign_positive","ln","ln_1p","log","log10","log2","max","max_value","min","min_positive_value","min_value","mul_add","powf","powi","recip","round","signum","sin","sin_cos","sinh","sqrt","tan","tanh","to_degrees","to_radians","trunc","Signed","Unsigned","abs","abs","abs_sub","abs_sub","is_negative","is_positive","signum","signum"],"q":[[0,"num_traits"],[90,"num_traits::bounds"],[97,"num_traits::cast"],[132,"num_traits::float"],[243,"num_traits::identities"],[253,"num_traits::int"],[273,"num_traits::ops"],[281,"num_traits::ops::bytes"],[292,"num_traits::ops::checked"],[308,"num_traits::ops::euclid"],[314,"num_traits::ops::inv"],[317,"num_traits::ops::mul_add"],[322,"num_traits::ops::overflowing"],[328,"num_traits::ops::saturating"],[337,"num_traits::ops::wrapping"],[349,"num_traits::pow"],[354,"num_traits::real"],[402,"num_traits::sign"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","The base trait for numeric types, covering <code>0</code> and <code>1</code> values, …","The trait for <code>Num</code> types which also implement assignment …","Generic trait for types implementing numeric assignment …","The trait for <code>NumAssign</code> types which also implement …","","Generic trait for types implementing basic numeric …","The trait for <code>Num</code> types which also implement numeric …","","","","","The trait for <code>Num</code> references which implement numeric …","","","","","","","","","","","","","","","","","","","","","","","","","","A value bounded by a minimum and a maximum","A value bounded by a maximum value","A value bounded by a minimum value","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a string and radix (typically <code>2..=36</code>).","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Numbers which have upper and lower bounds","Numbers which have lower bounds","Numbers which have upper bounds","Returns the largest finite number this type can represent","Returns the largest finite number this type can represent","Returns the smallest finite number this type can represent","Returns the smallest finite number this type can represent","A generic interface for casting between machine scalars …","A generic trait for converting a number to a value.","An interface for casting between machine scalars.","A generic trait for converting a value to a number.","Convert a value to another, using the <code>as</code> operator.","Cast from one machine scalar to another.","Creates a number from another value that can be converted …","Converts a <code>f32</code> to return an optional value of this type. …","Converts a <code>f64</code> to return an optional value of this type. …","Converts an <code>i128</code> to return an optional value of this type. …","Converts an <code>i16</code> to return an optional value of this type. …","Converts an <code>i32</code> to return an optional value of this type. …","Converts an <code>i64</code> to return an optional value of this type. …","Converts an <code>i8</code> to return an optional value of this type. …","Converts an <code>isize</code> to return an optional value of this …","Converts an <code>u128</code> to return an optional value of this type. …","Converts an <code>u16</code> to return an optional value of this type. …","Converts an <code>u32</code> to return an optional value of this type. …","Converts an <code>u64</code> to return an optional value of this type. …","Converts an <code>u8</code> to return an optional value of this type. …","Converts a <code>usize</code> to return an optional value of this type. …","Converts the value of <code>self</code> to an <code>f32</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>f64</code>. Overflows may map to …","Converts the value of <code>self</code> to an <code>i128</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i16</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i32</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i64</code>. If the value cannot …","Converts the value of <code>self</code> to an <code>i8</code>. If the value cannot be","Converts the value of <code>self</code> to an <code>isize</code>. If the value …","Converts the value of <code>self</code> to a <code>u128</code>. If the value cannot …","Converts the value of <code>self</code> to a <code>u16</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u32</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u64</code>. If the value cannot be","Converts the value of <code>self</code> to a <code>u8</code>. If the value cannot be …","Converts the value of <code>self</code> to a <code>usize</code>. If the value cannot …","Return Euler’s number.","Return <code>1.0 / π</code>.","Return <code>1.0 / sqrt(2.0)</code>.","Return <code>2.0 / π</code>.","Return <code>2.0 / sqrt(π)</code>.","Return <code>π / 2.0</code>.","Return <code>π / 3.0</code>.","Return <code>π / 4.0</code>.","Return <code>π / 6.0</code>.","Return <code>π / 8.0</code>.","Generic trait for floating point numbers","","Generic trait for floating point numbers that works with …","Return <code>ln(10.0)</code>.","Return <code>ln(2.0)</code>.","Return <code>log10(2.0)</code>.","Return <code>log10(e)</code>.","Return <code>log2(10.0)</code>.","Return <code>log2(e)</code>.","Return Archimedes’ constant <code>π</code>.","Return <code>sqrt(2.0)</code>.","Return the full circle constant <code>τ</code>.","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","Computes the absolute value of <code>self</code>. Returns …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Returns the smallest integer greater than or equal to a …","Returns the floating point category of the number. If only …","Returns the floating point category of the number. If only …","Returns a number composed of the magnitude of <code>self</code> and the …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns positive infinity.","Returns the infinite value.","Returns the mantissa, base 2 exponent, and sign as …","Returns the mantissa, base 2 exponent, and sign as …","Returns <code>true</code> if this number is neither infinite nor <code>NaN</code>.","Returns <code>true</code> if the number is neither infinite or NaN.","Returns <code>true</code> if this value is positive infinity or …","Returns <code>true</code> if the number is infinite.","Returns <code>true</code> if this value is <code>NaN</code> and false otherwise.","Returns <code>true</code> if the number is NaN.","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if the number is neither zero, infinite, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code> and …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code> and …","Returns <code>true</code> if the number is subnormal.","Returns <code>true</code> if the number is subnormal.","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Returns NaN.","Returns the <code>NaN</code> value.","Returns negative infinity.","Returns the negative infinite value.","Returns <code>-0.0</code>.","Returns <code>-0.0</code>.","Raise a number to a floating point power.","Raise a number to an integer power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the reciprocal (multiplicative inverse) of the …","Returns the nearest integer to a number. Round half-way …","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts to degrees, assuming the number is in radians.","Converts radians to degrees.","Converts to radians, assuming the number is in degrees.","Converts degrees to radians.","Return the integer part of a number.","Return the integer part of a number.","Defines a multiplicative identity element for <code>Self</code>.","Defines an additive identity element for <code>Self</code>.","Returns <code>true</code> if <code>self</code> is equal to the multiplicative …","Returns <code>true</code> if <code>self</code> is equal to the additive identity.","Returns the multiplicative identity, <code>1</code>.","Returns the multiplicative identity element of <code>Self</code>, <code>1</code>.","Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…","Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.","Returns the additive identity, <code>0</code>.","Returns the additive identity element of <code>Self</code>, <code>0</code>.","Generic trait for primitive integers.","Returns the number of ones in the binary representation of …","Returns the number of zeros in the binary representation …","Convert an integer from big endian to the target’s …","Convert an integer from little endian to the target’s …","Returns the number of leading ones in the binary …","Returns the number of leading zeros in the binary …","Raises self to the power of <code>exp</code>, using exponentiation by …","Reverses the order of bits in the integer.","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","Reverses the byte order of the integer.","Convert <code>self</code> to big endian from the target’s endianness.","Convert <code>self</code> to little endian from the target’s …","Returns the number of trailing ones in the binary …","Returns the number of trailing zeros in the binary …","Shifts the bits to the left by a specified amount, <code>n</code>, …","Shifts the bits to the right by a specified amount, <code>n</code>, …","","","","","","","","","","","","","","Create a number from its representation as a byte array in …","Create a number from its representation as a byte array in …","Create a number from its memory representation as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Return the memory representation of this number as a byte …","Performs addition that returns <code>None</code> instead of wrapping …","Performs division that returns <code>None</code> instead of panicking …","Performs multiplication that returns <code>None</code> instead of …","Performs negation that returns <code>None</code> if the result can’t …","Performs an integral remainder that returns <code>None</code> instead …","Performs a left shift that returns <code>None</code> on shifts larger …","Performs a right shift that returns <code>None</code> on shifts larger …","Performs subtraction that returns <code>None</code> instead of wrapping …","Adds two numbers, checking for overflow. If overflow …","Divides two numbers, checking for underflow, overflow and …","Multiplies two numbers, checking for underflow or …","Negates a number, returning <code>None</code> for results that can’t …","Finds the remainder of dividing two numbers, checking for …","Checked shift left. Computes <code>self &lt;&lt; rhs</code>, returning <code>None</code> …","Checked shift right. Computes <code>self &gt;&gt; rhs</code>, returning <code>None</code> …","Subtracts two numbers, checking for underflow. If …","","","Performs euclid division that returns <code>None</code> instead of …","Finds the euclid remainder of dividing two numbers, …","Calculates Euclidean division, the matching method for …","Calculates the least nonnegative remainder of <code>self (mod v)</code>.","Unary operator for retrieving the multiplicative inverse, …","The result after applying the operator.","Returns the multiplicative inverse of <code>self</code>.","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","The fused multiply-add assignment operation …","The resulting type after applying the fused multiply-add.","Performs the fused multiply-add operation <code>(self * a) + b</code>","Performs the fused multiply-add assignment operation …","Performs addition with a flag for overflow.","Performs multiplication with a flag for overflow.","Performs substraction with a flag for overflow.","Returns a tuple of the sum along with a boolean indicating …","Returns a tuple of the product along with a boolean …","Returns a tuple of the difference along with a boolean …","Saturating math operations. Deprecated, use <code>SaturatingAdd</code>, …","Performs addition that saturates at the numeric bounds …","Performs multiplication that saturates at the numeric …","Performs subtraction that saturates at the numeric bounds …","Saturating addition operator. Returns a+b, saturating at …","Saturating addition. Computes <code>self + other</code>, saturating at …","Saturating multiplication. Computes <code>self * other</code>, …","Saturating subtraction operator. Returns a-b, saturating …","Saturating subtraction. Computes <code>self - other</code>, saturating …","Performs addition that wraps around on overflow.","Performs multiplication that wraps around on overflow.","Performs a negation that does not panic.","Performs a left shift that does not panic.","Performs a right shift that does not panic.","Performs subtraction that wraps around on overflow.","Wrapping (modular) addition. Computes <code>self + other</code>, …","Wrapping (modular) multiplication. Computes <code>self * other</code>, …","Wrapping (modular) negation. Computes <code>-self</code>, wrapping …","Panic-free bitwise shift-left; yields <code>self &lt;&lt; mask(rhs)</code>, …","Panic-free bitwise shift-right; yields <code>self &gt;&gt; mask(rhs)</code>, …","Wrapping (modular) subtraction. Computes <code>self - other</code>, …","The result after applying the operator.","Binary operator for raising a value to a power.","Raises a value to the power of exp, returning <code>None</code> if an …","Raises a value to the power of exp, using exponentiation …","Returns <code>self</code> to the power <code>rhs</code>.","A trait for real number types that do not necessarily have …","Computes the absolute value of <code>self</code>. Returns <code>Float::nan()</code> …","The positive difference of two numbers.","Computes the arccosine of a number. Return value is in …","Inverse hyperbolic cosine function.","Computes the arcsine of a number. Return value is in …","Inverse hyperbolic sine function.","Computes the arctangent of a number. Return value is in …","Computes the four quadrant arctangent of <code>self</code> (<code>y</code>) and <code>other</code>…","Inverse hyperbolic tangent function.","Take the cubic root of a number.","Returns the smallest integer greater than or equal to a …","Computes the cosine of a number (in radians).","Hyperbolic cosine function.","Returns epsilon, a small positive value.","Returns <code>e^(self)</code>, (the exponential function).","Returns <code>2^(self)</code>.","Returns <code>e^(self) - 1</code> in a way that is accurate even if the …","Returns the largest integer less than or equal to a number.","Returns the fractional part of a number.","Calculate the length of the hypotenuse of a right-angle …","Returns <code>true</code> if <code>self</code> is negative, including <code>-0.0</code>, …","Returns <code>true</code> if <code>self</code> is positive, including <code>+0.0</code>, …","Returns the natural logarithm of the number.","Returns <code>ln(1+n)</code> (natural logarithm) more accurately than if","Returns the logarithm of the number with respect to an …","Returns the base 10 logarithm of the number.","Returns the base 2 logarithm of the number.","Returns the maximum of the two numbers.","Returns the largest finite value that this type can …","Returns the minimum of the two numbers.","Returns the smallest positive, normalized value that this …","Returns the smallest finite value that this type can …","Fused multiply-add. Computes <code>(self * a) + b</code> with only one …","Raise a number to a real number power.","Raise a number to an integer power.","Take the reciprocal (inverse) of a number, <code>1/x</code>.","Returns the nearest integer to a number. Round half-way …","Returns a number that represents the sign of <code>self</code>.","Computes the sine of a number (in radians).","Simultaneously computes the sine and cosine of the number, …","Hyperbolic sine function.","Take the square root of a number.","Computes the tangent of a number (in radians).","Hyperbolic tangent function.","Converts radians to degrees.","Converts degrees to radians.","Return the integer part of a number.","Useful functions for signed numbers (i.e. numbers that can …","A trait for values which cannot be negative","Computes the absolute value.","Computes the absolute value.","The positive difference of two numbers.","The positive difference of two numbers.","Returns true if the number is negative and false if the …","Returns true if the number is positive and false if the …","Returns the sign of the number.","Returns the sign of the number."],"i":[0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,39,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,5,2,5,0,0,0,0,0,0,0,0,2,5,5,2,5,39,0,0,2,5,5,0,0,0,0,0,0,0,5,2,5,2,5,2,5,0,0,0,0,40,41,40,42,0,0,0,0,43,0,11,44,44,44,44,44,44,44,44,44,44,44,44,44,44,13,13,13,13,13,13,13,13,13,13,13,13,13,13,45,45,45,45,45,45,45,45,45,45,0,0,0,45,45,45,45,45,45,45,45,45,46,47,46,46,46,46,46,46,46,46,46,46,47,47,46,46,46,46,47,46,46,46,46,46,47,46,47,46,47,46,47,46,46,47,46,47,46,47,46,47,46,47,46,47,47,46,46,46,46,46,46,46,47,47,46,46,47,47,46,47,46,46,47,46,47,46,47,46,46,46,47,46,47,46,47,46,47,46,46,46,46,46,46,47,46,47,46,46,47,0,0,33,34,0,33,33,34,0,34,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,49,50,0,0,0,50,50,50,49,49,49,0,0,0,0,0,0,0,0,51,52,36,53,54,55,56,57,0,0,58,58,59,59,0,60,60,0,0,61,61,62,0,0,0,63,64,65,0,0,0,0,66,67,68,66,69,0,0,0,0,0,0,70,71,72,73,74,75,76,0,0,0,76,0,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,0,0,0,38,0,38,38,38,0,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[1,1,1],1],[[1,1],1],[[1,1],1],0,[[2,3],4],[[5,3],4],[[5,3],4],[[]],[[]],[[6,7],8],0,0,[[]],[[]],0,0,0,0,0,0,0,0,[[],9],[[],8],[[],8],[[],8],[[],8],[[],10],[[],10],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[]],[11,[[12,[11]]]],[13,12],[14,12],[15,12],[16,12],[17,12],[18,12],[19,12],[20,12],[21,12],[22,12],[23,12],[7,12],[24,12],[25,12],[26,12],[[],[[12,[14]]]],[[],[[12,[15]]]],[[],[[12,[16]]]],[[],[[12,[17]]]],[[],[[12,[18]]]],[[],[[12,[19]]]],[[],[[12,[20]]]],[[],[[12,[21]]]],[[],[[12,[22]]]],[[],[[12,[23]]]],[[],[[12,[7]]]],[[],[[12,[24]]]],[[],[[12,[25]]]],[[],[[12,[26]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[],[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,28]]]]]]]]]]]]]]]]]]]],[[]],[[],[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,[28,[[0,[27,28]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[],[[0,[27,[29,[[0,[27,[29,[[0,[27,[29,[[0,[27,[29,[[0,[27,29]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[32,31],[[],31],[[],33],[[]],[[]],[[]],[[],34],[[]],0,[[],7],[[],7],[[]],[[]],[[],7],[[],7],[7],[[]],[7],[7],[7],[7],[[]],[[]],[[]],[[],7],[[],7],[7],[7],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],12],[[],12],[[],12],[[],12],[[],12],[7,12],[7,12],[[],12],0,0,[[],12],[[],12],[[]],[[]],0,0,[[]],0,0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[7],[7],[[]],0,0,[[[0,[35,33,36]],26],[[12,[[0,[35,33,36]]]]]],[[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,37]]]]]]]]]]]]]]]]]],26],[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,[37,[[0,[35,33,37]]]]]]]]]]]]]]]]]]]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[38,38],[[]],[[38,38],38],[[]],[[],31],[[],31],[38,38],[[]]],"c":[],"p":[[8,"PartialOrd"],[4,"FloatErrorKind"],[3,"Formatter"],[6,"Result"],[3,"ParseFloatError"],[15,"str"],[15,"u32"],[4,"Result"],[3,"String"],[3,"TypeId"],[8,"NumCast"],[4,"Option"],[8,"ToPrimitive"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[15,"isize"],[15,"u128"],[15,"u16"],[15,"u64"],[15,"u8"],[15,"usize"],[8,"Sized"],[8,"Div"],[8,"Add"],[4,"FpCategory"],[15,"bool"],[8,"PartialEq"],[8,"One"],[8,"Zero"],[8,"Clone"],[8,"CheckedMul"],[8,"Mul"],[8,"Signed"],[8,"Num"],[8,"Bounded"],[8,"UpperBounded"],[8,"LowerBounded"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"FloatConst"],[8,"Float"],[8,"FloatCore"],[8,"PrimInt"],[8,"ToBytes"],[8,"FromBytes"],[8,"CheckedAdd"],[8,"CheckedDiv"],[8,"CheckedNeg"],[8,"CheckedRem"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"CheckedSub"],[8,"CheckedEuclid"],[8,"Euclid"],[8,"Inv"],[8,"MulAdd"],[8,"MulAddAssign"],[8,"OverflowingAdd"],[8,"OverflowingMul"],[8,"OverflowingSub"],[8,"Saturating"],[8,"SaturatingAdd"],[8,"SaturatingMul"],[8,"SaturatingSub"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingNeg"],[8,"WrappingShl"],[8,"WrappingShr"],[8,"WrappingSub"],[8,"Pow"],[8,"Real"]]},\
"once_cell":{"doc":"Overview","t":"AAADDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["race","sync","unsync","OnceBool","OnceBox","OnceNonZeroUsize","OnceRef","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","default","default","drop","fmt","fmt","fmt","fmt","from","from","from","from","get","get","get","get","get_or_init","get_or_init","get_or_init","get_or_init","get_or_try_init","get_or_try_init","get_or_try_init","get_or_try_init","into","into","into","into","new","new","new","new","set","set","set","set","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","get_unchecked","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","wait","with_value","Lazy","OnceCell","borrow","borrow","borrow_mut","borrow_mut","clone","clone_from","clone_into","default","default","deref","deref_mut","eq","equivalent","fmt","fmt","force","force_mut","from","from","from","from","get","get","get_mut","get_mut","get_or_init","get_or_try_init","into","into","into_inner","into_value","new","new","set","take","to_owned","try_from","try_from","try_insert","try_into","try_into","type_id","type_id","with_value"],"q":[[0,"once_cell"],[3,"once_cell::race"],[64,"once_cell::sync"],[112,"once_cell::unsync"]],"d":["Thread-safe, non-blocking, “first one wins” flavor of …","Thread-safe, blocking version of <code>OnceCell</code>.","Single-threaded version of <code>OnceCell</code>.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","A thread-safe cell which can be written to only once.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets a reference to the underlying value.","Gets the underlying value.","Gets the underlying value.","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Creates a new empty cell.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","Sets the contents of this cell to <code>value</code>.","","","","","","","","","","","","","A value which is initialized on the first access.","A thread-safe cell which can be written to only once.","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","Returns the argument unchanged.","","","Returns the argument unchanged.","Gets the reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the mutable reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Get the reference to the underlying value, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value. Returns","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Gets the reference to the underlying value, blocking the …","Creates a new initialized cell.","A value which is initialized on the first access.","A cell which can be written to only once. It is not thread …","","","","","","","","","Creates a new lazy value using <code>Default</code> as the initializing …","","","","","","","Forces the evaluation of this lazy value and returns a …","Forces the evaluation of this lazy value and returns a …","","Returns the argument unchanged.","","Returns the argument unchanged.","Gets a reference to the underlying value.","Gets the reference to the result of this lazy value if it …","Gets a mutable reference to the underlying value.","Gets the mutable reference to the result of this lazy …","Gets the contents of the cell, initializing it with <code>f</code> if …","Gets the contents of the cell, initializing it with <code>f</code> if …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>OnceCell</code>, returning the wrapped value.","Consumes this <code>Lazy</code> returning the stored value.","Creates a new empty cell.","Creates a new lazy value with the given initializing …","Sets the contents of this cell to <code>value</code>.","Takes the value out of this <code>OnceCell</code>, moving it back to an …","","","","Like <code>set</code>, but also returns a reference to the final cell …","","","","","Creates a new initialized cell."],"i":[0,0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,2,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,0,15,17,15,17,15,15,15,15,17,17,17,15,15,15,17,17,17,15,15,15,17,15,17,15,17,15,15,15,15,17,15,17,15,17,15,15,15,15,17,15,15,17,15,17,15,15,0,0,21,22,21,22,21,21,21,21,22,22,22,21,21,21,22,22,22,21,21,21,22,21,22,21,22,21,21,21,22,21,22,21,22,21,21,21,21,22,21,21,22,21,22,21],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[2],[[1,5],6],[[2,5],6],[[3,5],6],[[4,5],6],[[]],[[]],[[]],[[]],[1,7],[2,7],[3,[[7,[8]]]],[4,[[7,[9]]]],[[1,10]],[[2,10]],[[3,10],8],[[4,10],9],[[1,10],11],[[2,10],11],[[3,10],[[11,[8]]]],[[4,10],[[11,[9]]]],[[]],[[]],[[]],[[]],[[],1],[[],2],[[],3],[[],4],[1,11],[[2,12],[[11,[12]]]],[[3,8],11],[[4,9],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],13],[[],13],[[],13],[[],13],0,0,[[]],[[]],[[]],[[]],[[[15,[14]]],[[15,[14]]]],[[[15,[14]],[15,[14]]]],[[]],[[],15],[[],[[17,[16]]]],[[[17,[10]]]],[[[17,[10]]]],[[[15,[18]],[15,[18]]],9],[[],9],[[[15,[19]],5],6],[[[17,[19]],5],6],[[[17,[10]]]],[[[17,[10]]]],[[]],[20],[[],15],[[]],[15,7],[[[17,[10]]],7],[15,7],[[[17,[10]]],7],[[15,10]],[[15,10],11],[15],[[]],[[]],[15,7],[17,11],[[],15],[[],17],[15,11],[15,7],[[]],[[],11],[[],11],[15,11],[[],11],[[],11],[[],13],[[],13],[15],[[],15],0,0,[[]],[[]],[[]],[[]],[[[21,[14]]],[[21,[14]]]],[[[21,[14]],[21,[14]]]],[[]],[[],21],[[],[[22,[16]]]],[[[22,[10]]]],[[[22,[10]]]],[[[21,[18]],[21,[18]]],9],[[],9],[[[21,[19]],5],6],[[[22,[19]],5],6],[[[22,[10]]]],[[[22,[10]]]],[20],[[]],[[],21],[[]],[21,7],[[[22,[10]]],7],[21,7],[[[22,[10]]],7],[[21,10]],[[21,10],11],[[]],[[]],[21,7],[22,11],[[],21],[[],22],[21,11],[21,7],[[]],[[],11],[[],11],[21,11],[[],11],[[],11],[[],13],[[],13],[[],21]],"c":[],"p":[[3,"OnceRef"],[3,"OnceBox"],[3,"OnceNonZeroUsize"],[3,"OnceBool"],[3,"Formatter"],[6,"Result"],[4,"Option"],[3,"NonZeroUsize"],[15,"bool"],[8,"FnOnce"],[4,"Result"],[3,"Box"],[3,"TypeId"],[8,"Clone"],[3,"OnceCell"],[8,"Default"],[3,"Lazy"],[8,"PartialEq"],[8,"Debug"],[15,"never"],[3,"OnceCell"],[3,"Lazy"]]},\
"os_pipe":{"doc":"A cross-platform library for opening OS pipes, like those …","t":"DDLLLLLLFFFLLLLLLLLLLLLFLLLLLLLLLLLL","n":["PipeReader","PipeWriter","as_raw_fd","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","dup_stderr","dup_stdin","dup_stdout","flush","flush","fmt","fmt","from","from","from_raw_fd","from_raw_fd","into","into","into_raw_fd","into_raw_fd","pipe","read","read","try_clone","try_clone","try_from","try_from","try_into","try_into","type_id","type_id","write","write"],"q":[[0,"os_pipe"]],"d":["The reading end of a pipe, returned by <code>pipe</code>.","The writing end of a pipe, returned by <code>pipe</code>.","","","","","","","Get a duplicated copy of the current process’s standard …","Get a duplicated copy of the current process’s standard …","Get a duplicated copy of the current process’s standard …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Open a new pipe and return a <code>PipeReader</code> and <code>PipeWriter</code> …","","","","","","","","","","","",""],"i":[0,0,1,3,1,3,1,3,0,0,0,3,3,1,3,1,3,1,3,1,3,1,3,0,1,1,1,3,1,3,1,3,1,3,3,3],"f":[0,0,[1,2],[3,2],[[]],[[]],[[]],[[]],[[],[[4,[3]]]],[[],[[4,[1]]]],[[],[[4,[3]]]],[3,4],[3,4],[[1,5],6],[[3,5],6],[[]],[[]],[2,1],[2,3],[[]],[[]],[1,2],[3,2],[[],4],[[1,[8,[7]]],[[4,[9]]]],[[1,[8,[7]]],[[4,[9]]]],[1,[[4,[1]]]],[3,[[4,[3]]]],[[],10],[[],10],[[],10],[[],10],[[],11],[[],11],[[3,[8,[7]]],[[4,[9]]]],[[3,[8,[7]]],[[4,[9]]]]],"c":[],"p":[[3,"PipeReader"],[6,"RawFd"],[3,"PipeWriter"],[6,"Result"],[3,"Formatter"],[6,"Result"],[15,"u8"],[15,"slice"],[15,"usize"],[4,"Result"],[3,"TypeId"]]},\
"parking_lot":{"doc":"This library provides implementations of <code>Mutex</code>, <code>RwLock</code>, …","t":"DNGGNGGGGGGGNDENDDDDGGGGGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Condvar","Done","FairMutex","FairMutexGuard","InProgress","MappedFairMutexGuard","MappedMutexGuard","MappedReentrantMutexGuard","MappedRwLockReadGuard","MappedRwLockWriteGuard","Mutex","MutexGuard","New","Once","OnceState","Poisoned","RawFairMutex","RawMutex","RawRwLock","RawThreadId","ReentrantMutex","ReentrantMutexGuard","RwLock","RwLockReadGuard","RwLockUpgradableReadGuard","RwLockWriteGuard","WaitTimeoutResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bump","bump","bump_exclusive","bump_shared","bump_upgradable","call_once","call_once_force","clone","clone","clone_into","clone_into","const_fair_mutex","const_mutex","const_reentrant_mutex","const_rwlock","default","default","done","downgrade","downgrade_to_upgradable","downgrade_upgradable","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","is_locked","is_locked","is_locked","is_locked_exclusive","lock","lock","lock_api","lock_exclusive","lock_shared","lock_shared_recursive","lock_upgradable","new","new","nonzero_thread_id","notify_all","notify_one","poisoned","state","timed_out","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock","try_lock_exclusive","try_lock_exclusive_for","try_lock_exclusive_until","try_lock_for","try_lock_for","try_lock_shared","try_lock_shared_for","try_lock_shared_recursive","try_lock_shared_recursive_for","try_lock_shared_recursive_until","try_lock_shared_until","try_lock_until","try_lock_until","try_lock_upgradable","try_lock_upgradable_for","try_lock_upgradable_until","try_upgrade","try_upgrade_for","try_upgrade_until","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock","unlock","unlock_exclusive","unlock_exclusive_fair","unlock_fair","unlock_fair","unlock_shared","unlock_shared_fair","unlock_upgradable","unlock_upgradable_fair","upgrade","wait","wait_for","wait_until","wait_while","wait_while_for","wait_while_until"],"q":[[0,"parking_lot"]],"d":["A Condition Variable","A closure has completed successfully.","A mutual exclusive primitive that is always fair, useful …","An RAII implementation of a “scoped lock” of a mutex. …","A thread is currently executing a closure.","An RAII mutex guard returned by <code>FairMutexGuard::map</code>, which …","An RAII mutex guard returned by <code>MutexGuard::map</code>, which can …","An RAII mutex guard returned by <code>ReentrantMutexGuard::map</code>, …","An RAII read lock guard returned by <code>RwLockReadGuard::map</code>, …","An RAII write lock guard returned by <code>RwLockWriteGuard::map</code>…","A mutual exclusion primitive useful for protecting shared …","An RAII implementation of a “scoped lock” of a mutex. …","A closure has not been executed yet","A synchronization primitive which can be used to run a …","Current state of a <code>Once</code>.","A closure was executed but panicked.","Raw fair mutex type backed by the parking lot.","Raw mutex type backed by the parking lot.","Raw reader-writer lock type backed by the parking lot.","Implementation of the <code>GetThreadId</code> trait for …","A mutex which can be recursively locked by a single thread.","An RAII implementation of a “scoped lock” of a …","A reader-writer lock","RAII structure used to release the shared read access of a …","RAII structure used to release the upgradable read access …","RAII structure used to release the exclusive write access …","A type indicating whether a timed wait on a condition …","","","","","","","","","","","","","","","","","","","","","","Performs an initialization routine once and only once. The …","Performs the same function as <code>call_once</code> except ignores …","","","","","Creates a new fair mutex in an unlocked state ready for …","Creates a new mutex in an unlocked state ready for use.","Creates a new reentrant mutex in an unlocked state ready …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","Returns whether the associated <code>Once</code> has successfully …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Creates a new condition variable which is ready to be …","Creates a new <code>Once</code> value.","","Wakes up all blocked threads on this condvar.","Wakes up one blocked thread on this condvar.","Returns whether the associated <code>Once</code> has been poisoned.","Returns the current state of this <code>Once</code>.","Returns whether the wait was known to have timed out.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …","Blocks the current thread until this condition variable …","Waits on this condition variable for a notification, …","Waits on this condition variable for a notification, …"],"i":[0,7,0,0,7,0,0,0,0,0,0,0,7,0,0,7,0,0,0,0,0,0,0,0,0,0,0,12,4,1,2,3,16,6,7,12,4,1,2,3,16,6,7,1,2,3,3,3,4,4,6,7,6,7,0,0,0,0,12,4,7,3,3,3,6,7,6,7,12,4,6,7,12,4,1,2,3,16,6,7,12,4,1,2,3,16,6,7,1,2,3,3,1,2,0,3,3,3,3,12,4,16,12,12,7,4,6,6,7,12,4,1,2,3,16,6,7,12,4,1,2,3,16,6,7,1,2,3,3,3,1,2,3,3,3,3,3,3,1,2,3,3,3,3,3,3,12,4,1,2,3,16,6,7,1,2,3,3,1,2,3,3,3,3,3,12,12,12,12,12,12],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1],[2],[3],[3],[3],[[4,5]],[[4,5]],[6,6],[7,7],[[]],[[]],[[],8],[[],9],[[],10],[[],11],[[],12],[[],4],[7,13],[3],[3],[3],[[6,6],13],[[7,7],13],[[],13],[[],13],[[12,14],15],[[4,14],15],[[6,14],15],[[7,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,13],[2,13],[3,13],[3,13],[1],[2],0,[3],[3],[3],[3],[[],12],[[],4],[16,17],[12,18],[12,13],[7,13],[4,7],[6,13],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[1,13],[2,13],[3,13],[[3,20],13],[[3,21],13],[1,13],[[2,20],13],[3,13],[3,13],[3,13],[3,13],[3,13],[3,13],[1,13],[[2,21],13],[3,13],[[3,20],13],[[3,21],13],[3,13],[[3,20],13],[[3,21],13],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[1],[2],[3],[3],[1],[2],[3],[3],[3],[3],[3],[[12,[24,[23]]]],[[12,[24,[23]],20],6],[[12,[24,[23]],21],6],[[12,[24,[23]],25]],[[12,[24,[23]],25,20],6],[[12,[24,[23]],25,21],6]],"c":[],"p":[[3,"RawFairMutex"],[3,"RawMutex"],[3,"RawRwLock"],[3,"Once"],[8,"FnOnce"],[3,"WaitTimeoutResult"],[4,"OnceState"],[6,"FairMutex"],[6,"Mutex"],[6,"ReentrantMutex"],[6,"RwLock"],[3,"Condvar"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"RawThreadId"],[3,"NonZeroUsize"],[15,"usize"],[4,"Result"],[3,"Duration"],[3,"Instant"],[3,"TypeId"],[8,"Sized"],[6,"MutexGuard"],[8,"FnMut"]]},\
"parking_lot_core":{"doc":"This library exposes a low-level API for creating your own …","t":"NRRENEDNNENDNNNNNDDNMLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLFMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFMFF","n":["Abort","DEFAULT_PARK_TOKEN","DEFAULT_UNPARK_TOKEN","FilterOp","Invalid","ParkResult","ParkToken","RequeueAll","RequeueOne","RequeueOp","Skip","SpinWait","Stop","TimedOut","Unpark","UnparkOne","UnparkOneRequeueRest","UnparkResult","UnparkToken","Unparked","be_fair","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deadlock","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","have_more_threads","into","into","into","into","into","into","into","is_unparked","new","park","requeued_threads","reset","spin","spin_no_yield","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpark_all","unpark_filter","unpark_one","unpark_requeue","unparked_threads","acquire_resource","release_resource"],"q":[[0,"parking_lot_core"],[122,"parking_lot_core::deadlock"]],"d":["Abort the operation without doing anything.","A default park token to use.","A default unpark token to use.","Operation that <code>unpark_filter</code> should perform for each …","The validation callback returned false.","Result of a park operation.","A value associated with a parked thread which can be used …","Requeue all threads onto the target queue.","Requeue one thread and leave the rest parked on the …","Operation that <code>unpark_requeue</code> should perform.","Don’t unpark the thread and continue scanning the list …","A counter used to perform exponential backoff in spin …","Don’t unpark the thread and stop scanning the list of …","The timeout expired.","Unpark the thread and continue scanning the list of parked …","Unpark one thread and leave the rest parked. No requeuing …","Unpark one thread and requeue the rest onto the target …","Result of an unpark operation.","A value which is passed from an unparker to a parked …","We were unparked by another thread with the given token.","This is set to true on average once every 0.5ms for any …","","","","","","","","","","","","","","","","","","","","","","","","","","","[Experimental] Deadlock detection","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Whether there are any threads remaining in the queue. This …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if we were unparked by another thread.","Creates a new <code>SpinWait</code>.","Parks the current thread in the queue associated with the …","The number of threads that were requeued.","Resets a <code>SpinWait</code> to its initial state.","Spins until the sleep threshold has been reached.","Spins without yielding the thread to the OS.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unparks all threads in the queue associated with the given …","Unparks a number of threads from the front of the queue …","Unparks one thread from the queue associated with the …","Removes all threads from the queue associated with <code>key_from</code>…","The number of threads that were unparked.","Acquire a resource identified by key in the deadlock …","Release a resource identified by key in the deadlock …"],"i":[3,0,0,0,1,0,0,3,3,0,4,0,4,1,4,3,3,0,0,1,2,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,1,2,3,4,5,6,0,2,7,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,7,2,1,2,3,4,5,6,7,1,7,0,2,7,7,7,1,2,3,4,5,6,1,2,3,4,5,6,7,1,2,3,4,5,6,7,1,2,3,4,5,6,7,0,0,0,0,2,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],2],[[],7],[[1,1],8],[[2,2],8],[[3,3],8],[[4,4],8],[[5,5],8],[[6,6],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[1,9],10],[[2,9],10],[[3,9],10],[[4,9],10],[[5,9],10],[[6,9],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,8],[[],7],[[11,12,12,12,6,[14,[13]]],1],0,[7],[7,8],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[11,5],11],[[11,17,12],2],[[11,12],2],[[11,11,12,12],2],0,[11],[11]],"c":[],"p":[[4,"ParkResult"],[3,"UnparkResult"],[4,"RequeueOp"],[4,"FilterOp"],[3,"UnparkToken"],[3,"ParkToken"],[3,"SpinWait"],[15,"bool"],[3,"Formatter"],[6,"Result"],[15,"usize"],[8,"FnOnce"],[3,"Instant"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"FnMut"]]},\
"petgraph":{"doc":"<code>petgraph</code> is a graph data structure library.","t":"EEICCNIQCNEAALLLLLLLLLLLLLLAAALLLLLLLLLLAALLLLLKKLLAALLAALLLLLLLLLLLLAACDDDDCDDGDDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDDICIDDDCACACLLLLLLLLLLLLLLLLLLFFLLACALLACACLLLLLLLLLLCCFKLLLLLLFFFCCCCAACFAKCKFLLLLLKLFACFLLLLFALLLLLLLLLLLLLLLKFDFLLLLMFLLLMLLLLFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLFFFFFFFFDDDLLLLLLLLLLLLFLLLLLLLLLFLLLLLLLLLLLLFFFDCGDDDDCDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIIIINEIDINLKLLLLLLLLKKLLLLLLLLLLLLLLKKLLLLLLLLLKKMMMMEDNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLGGDDDDDDDDDDDIIDDDDDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLDDGDDDDDDDIDDGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGDDCDDDGDDIGILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKFCCCCCCCCCCCCCCCCCCCCCCDDDDDDCCDCDDGDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLQNDNNEINIDEDNIDDDDQQIIQQQQQQIINIIIIIIIIIIIQQQQIIDDDDDQQQQIIQQQNDDDDDDNIIIDQQKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLFMMMKLLLKLKLLLLLLKLLLKLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLKKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLLKLLLKLLLLLLLLLLLLLLLLLLLLLKLLLKLLKLLLKLLLLLLLLLLKLLLKLKLLLLLLLLLLKLMMMKLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLKLLLLKKL","n":["Directed","Direction","EdgeType","Graph","Incoming","Incoming","IntoWeightedEdge","NodeId","Outgoing","Outgoing","Undirected","adj","algo","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compare","csr","data","dot","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","graph","graphmap","hash","index","into","into","into","into_weighted_edge","is_directed","is_directed","is_directed","matrix_graph","operator","opposite","partial_cmp","prelude","stable_graph","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unionfind","visit","DefaultIx","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","IndexType","List","Neighbors","NodeIndex","NodeIndices","OutgoingEdgeIndices","OutgoingEdgeReferences","UnweightedList","add_edge","add_edge","add_node","add_node","add_node_from_edges","add_node_with_capacity","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","contains_edge","default","edge_count","edge_count","edge_endpoints","edge_indices","edge_indices_from","edge_references","edge_weight","edge_weight_mut","edges","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find_edge","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_index","hash","id","id","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","len","len","neighbors","new","next","next","next","next","next","next","next_back","next_back","node_bound","node_count","node_identifiers","node_indices","node_references","node_weight","node_weight_mut","partial_cmp","partial_cmp","reset_map","rfind","rfind","rfold","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","visit_map","weight","weight","with_capacity","BoundedMeasure","Cycle","DfsSpace","FloatMeasure","Matching","Measure","MinSpanningTree","NegativeCycle","TarjanScc","all_simple_paths","astar","astar","bellman_ford","bellman_ford","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","condensation","connected_components","default","default","dijkstra","dijkstra","dominators","eq","eq","feedback_arc_set","find_negative_cycle","floyd_warshall","floyd_warshall","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","greedy_feedback_arc_set","greedy_matching","has_path_connecting","infinite","into","into","into","into","into","into_iter","is_bipartite_undirected","is_cyclic_directed","is_cyclic_undirected","is_isomorphic","is_isomorphic_matching","is_isomorphic_subgraph","is_isomorphic_subgraph_matching","isomorphism","k_shortest_path","k_shortest_path","kosaraju_scc","matching","max","maximum_matching","min","min_spanning_tree","new","new","next","node_component_index","node_id","overflowing_add","run","scc","simple_paths","subgraph_isomorphisms_iter","tarjan_scc","to_owned","to_owned","to_owned","to_owned","toposort","tred","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zero","astar","Paths","bellman_ford","borrow","borrow_mut","clone","clone_into","distances","find_negative_cycle","fmt","from","into","predecessors","to_owned","try_from","try_into","type_id","dijkstra","DominatedByIter","Dominators","DominatorsIter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","dominators","fmt","fmt","fmt","from","from","from","immediate_dominator","immediately_dominated_by","into","into","into","into_iter","into_iter","next","next","root","simple_fast","size_hint","strict_dominators","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","greedy_feedback_arc_set","floyd_warshall","is_isomorphic","is_isomorphic_matching","is_isomorphic_subgraph","is_isomorphic_subgraph_matching","subgraph_isomorphisms_iter","k_shortest_path","MatchedEdges","MatchedNodes","Matching","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","contains_edge","contains_node","edges","from","from","from","greedy_matching","into","into","into","into_iter","into_iter","is_empty","is_perfect","len","mate","maximum_matching","next","next","nodes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","all_simple_paths","dag_to_toposorted_adjacency_list","dag_transitive_reduction_closure","Csr","DefaultIx","EdgeIndex","EdgeReference","EdgeReferences","Edges","EdgesNotSorted","IndexType","Neighbors","NodeIdentifiers","NodeIndex","NodeReferences","add_edge","add_node","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_edge","default","edge_count","edge_count","edge_references","edges","edges","edges_slice","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_index","from_sorted_edges","id","index","index_mut","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","neighbors","neighbors_slice","new","next","next","next","next","next","next_back","node_bound","node_count","node_count","node_identifiers","node_references","out_degree","reset_map","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit_map","weight","weight","with_nodes","Build","Create","DataMap","DataMapMut","Edge","Element","ElementIterator","FilterElements","FromElements","Node","add_edge","add_node","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","edge_weight","edge_weight_mut","eq","equivalent","equivalent","equivalent","filter_elements","fmt","fmt","from","from","from_elements","into","into","into_iter","next","node_weight","node_weight_mut","size_hint","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_edge","with_capacity","source","target","weight","weight","Config","Dot","EdgeIndexLabel","EdgeNoLabel","GraphContentOnly","NodeIndexLabel","NodeNoLabel","borrow","borrow","borrow_mut","borrow_mut","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","into","into","new","to_string","try_from","try_from","try_into","try_into","type_id","type_id","with_attr_getters","with_config","DefaultIx","DiGraph","Edge","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","EdgeWeightsMut","Edges","EdgesConnecting","Externals","Frozen","Graph","GraphIndex","IndexType","Neighbors","Node","NodeIndex","NodeIndices","NodeReferences","NodeWeightsMut","UnGraph","WalkNeighbors","add_edge","add_edge","add_node","add_node","adjacency_matrix","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","contains_edge","default","default","default","deref","detach","edge_bound","edge_bound","edge_count","edge_count","edge_count","edge_endpoints","edge_index","edge_indices","edge_references","edge_references","edge_references","edge_weight","edge_weight","edge_weight","edge_weight_mut","edge_weight_mut","edge_weight_mut","edge_weights","edge_weights_mut","edges","edges","edges","edges_connecting","edges_directed","edges_directed","edges_directed","end","end","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend_with_edges","externals","filter_map","find_edge","find_edge_undirected","first_edge","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_index","from_index","from_index","from_index","hash","hash","id","id","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_twice_mut","index_twice_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_edge_type","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_nodes_edges","is_adjacent","is_adjacent","is_directed","map","max","max","neighbors","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_directed","neighbors_undirected","new","new","new","new","new","new","new_undirected","next","next","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_edge","next_edge","next_edge","next_edge","next_node","node_bound","node_bound","node_count","node_count","node_count","node_identifiers","node_identifiers","node_index","node_indices","node_references","node_references","node_weight","node_weight","node_weight","node_weight_mut","node_weight_mut","node_weight_mut","node_weights","node_weights_mut","partial_cmp","partial_cmp","raw_edges","raw_nodes","remove_edge","remove_node","reserve_edges","reserve_exact_edges","reserve_exact_nodes","reserve_nodes","reset_map","reset_map","retain_edges","retain_nodes","reverse","shrink_to_fit","shrink_to_fit_edges","shrink_to_fit_nodes","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","target","target","to_index","to_index","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","update_edge","visit_map","visit_map","weight","weight","weight","weight","weight","with_capacity","with_capacity","AllEdges","AllEdgesMut","DiGraphMap","Edges","EdgesDirected","GraphMap","Neighbors","NeighborsDirected","NodeIdentifiers","NodeReferences","NodeTrait","Nodes","Ptr","UnGraphMap","add_edge","add_edge","add_node","add_node","adjacency_matrix","all_edges","all_edges_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","contains_edge","contains_node","count","count","default","deref","edge_bound","edge_count","edge_count","edge_references","edge_weight","edge_weight_mut","edges","edges","edges_directed","edges_directed","eq","equivalent","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_graph","from_index","from_index","from_iter","hash","index","index_mut","into","into","into","into","into","into","into","into","into","into","into","into_graph","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","last","last","len","neighbors","neighbors","neighbors_directed","neighbors_directed","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","node_bound","node_count","node_count","node_identifiers","node_references","nodes","nth","nth","partial_cmp","remove_edge","remove_node","reset_map","rfind","rfold","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","visit_map","with_capacity","with_capacity","DiMatrix","EdgeReferences","Edges","IndexType","MatrixGraph","Neighbors","NodeIdentifiers","NodeIndex","NodeReferences","NotZero","Nullable","UnMatrix","Zero","add_edge","add_edge","add_node","add_node","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","edge_count","edge_count","edge_references","edge_weight","edge_weight_mut","edges","edges","edges_directed","edges_directed","extend_with_edges","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_edges","from_index","has_edge","index","index","index_mut","index_mut","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","is_zero","neighbors","neighbors","neighbors_directed","neighbors_directed","new","new_undirected","next","next","next","next","next","node_bound","node_count","node_count","node_identifiers","node_index","node_references","node_weight","node_weight_mut","remove_edge","remove_node","reset_map","size_hint","size_hint","size_hint","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","update_edge","visit_map","with_capacity","zero","complement","Bfs","Dfs","DfsPostOrder","DiGraph","DiGraphMap","Directed","Direction","EdgeIndex","EdgeRef","Graph","GraphMap","Incoming","NodeIndex","Outgoing","StableDiGraph","StableGraph","StableUnGraph","UnGraph","UnGraphMap","Undirected","DefaultIx","EdgeIndex","EdgeIndices","EdgeReference","EdgeReferences","Edges","EdgesConnecting","Externals","GraphIndex","IndexType","Neighbors","NodeIndex","NodeIndices","NodeReferences","StableDiGraph","StableGraph","StableUnGraph","WalkNeighbors","add_edge","add_edge","add_node","add_node","adjacency_matrix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clear_edges","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","contains_edge","contains_node","default","detach","edge_bound","edge_count","edge_count","edge_endpoints","edge_index","edge_indices","edge_references","edge_weight","edge_weight","edge_weight_mut","edge_weight_mut","edge_weights","edge_weights_mut","edges","edges","edges_connecting","edges_directed","edges_directed","eq","extend_with_edges","externals","filter_map","find_edge","find_edge_undirected","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_edges","from_elements","from_index","from_index","id","index","index","index_mut","index_mut","index_twice_mut","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_adjacent","is_directed","map","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_undirected","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_edge","next_node","node_bound","node_count","node_count","node_identifiers","node_index","node_indices","node_references","node_weight","node_weight","node_weight_mut","node_weight_mut","node_weights","node_weights_mut","remove_edge","remove_node","reset_map","retain_edges","retain_nodes","reverse","size_hint","size_hint","size_hint","size_hint","size_hint","source","target","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_edge","update_edge","visit_map","weight","weight","with_capacity","with_capacity","UnionFind","borrow","borrow_mut","clone","clone_into","equiv","find","find_mut","fmt","from","into","into_labeling","new","to_owned","try_from","try_into","type_id","union","AdjMatrix","BackEdge","Bfs","Break","Continue","Control","ControlFlow","CrossForwardEdge","Data","Dfs","DfsEvent","DfsPostOrder","Discover","EdgeCount","EdgeFiltered","EdgeFilteredEdges","EdgeFilteredNeighbors","EdgeFilteredNeighborsDirected","EdgeId","EdgeId","EdgeIndexable","EdgeRef","EdgeRef","EdgeReferences","EdgeType","EdgeWeight","Edges","EdgesDirected","FilterEdge","FilterNode","Finish","GetAdjacencyMatrix","GraphBase","GraphProp","GraphRef","IntoEdgeReferences","IntoEdges","IntoEdgesDirected","IntoNeighbors","IntoNeighborsDirected","IntoNodeIdentifiers","IntoNodeReferences","Item","Map","Neighbors","NeighborsDirected","NodeCompactIndexable","NodeCount","NodeFiltered","NodeFilteredEdgeReferences","NodeFilteredEdges","NodeFilteredNeighbors","NodeFilteredNodes","NodeId","NodeId","NodeId","NodeIdentifiers","NodeIndexable","NodeRef","NodeRef","NodeReferences","NodeWeight","Prune","Reversed","ReversedEdgeReference","ReversedEdgeReferences","ReversedEdges","Time","Topo","TreeEdge","VisitMap","Visitable","Walker","WalkerIter","Weight","Weight","adjacency_matrix","adjacency_matrix","as_unreversed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","break_value","breaking","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","context","continuing","continuing","default","default","default","default","default","default","depth_first_search","discovered","discovered","discovered","edge_bound","edge_bound","edge_bound","edge_bound","edge_count","edge_count","edge_references","edge_references","edge_references","edge_references","edge_weight","edge_weight","edge_weight_mut","edges","edges","edges","edges","edges_directed","edges_directed","edges_directed","edges_directed","empty","empty","eq","equivalent","equivalent","equivalent","finished","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fn","from_fn","from_index","from_index","from_index","from_index","from_index","from_index","from_index","from_index","from_parts","hash","id","id","id","include_edge","include_node","inner_mut","inner_ref","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_unreversed","is_adjacent","is_adjacent","is_directed","is_visited","iter","iter","move_to","move_to","neighbors","neighbors","neighbors","neighbors","neighbors_directed","neighbors_directed","neighbors_directed","neighbors_directed","new","new","new","new","next","next","next","next","next","next","next","next","next","next","next","next","next","next","node_bound","node_bound","node_bound","node_bound","node_count","node_count","node_count","node_identifiers","node_identifiers","node_identifiers","node_identifiers","node_references","node_references","node_references","node_references","node_weight","node_weight","node_weight_mut","partial_cmp","reset","reset","reset","reset_map","reset_map","reset_map","reset_map","should_break","should_break","should_prune","should_prune","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","source","source","stack","stack","stack","target","target","to_index","to_index","to_index","to_index","to_index","to_index","to_index","to_index","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","visit","visit_map","visit_map","visit_map","visit_map","walk_next","walk_next","walk_next","walk_next","walk_next","weight","weight","weight"],"q":[[0,"petgraph"],[71,"petgraph::adj"],[266,"petgraph::algo"],[380,"petgraph::algo::astar"],[381,"petgraph::algo::bellman_ford"],[397,"petgraph::algo::dijkstra"],[398,"petgraph::algo::dominators"],[445,"petgraph::algo::feedback_arc_set"],[446,"petgraph::algo::floyd_warshall"],[447,"petgraph::algo::isomorphism"],[452,"petgraph::algo::k_shortest_path"],[453,"petgraph::algo::matching"],[491,"petgraph::algo::simple_paths"],[492,"petgraph::algo::tred"],[494,"petgraph::csr"],[645,"petgraph::data"],[694,"petgraph::data::Element"],[698,"petgraph::dot"],[730,"petgraph::graph"],[1144,"petgraph::graphmap"],[1377,"petgraph::matrix_graph"],[1526,"petgraph::operator"],[1527,"petgraph::prelude"],[1547,"petgraph::stable_graph"],[1800,"petgraph::unionfind"],[1818,"petgraph::visit"]],"d":["Marker type for a directed graph.","Edge direction.","A graph’s edge type determines whether it has directed …","","","An <code>Incoming</code> edge is an inbound edge <em>to</em> the current node.","Convert an element like <code>(i, j)</code> or <code>(i, j, w)</code> into a triple …","","","An <code>Outgoing</code> edge is an outward edge <em>from</em> the current node.","Marker type for an undirected graph.","Simple adjacency list.","Graph algorithms.","","","","","","","","","","","","","","","Compressed Sparse Row (CSR) is a sparse adjacency matrix …","Graph traits for associated data and graph construction.","Simple graphviz dot file format output.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure where node …","","Return <code>0</code> for <code>Outgoing</code> and <code>1</code> for <code>Incoming</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","<code>MatrixGraph&lt;N, E, Ty, NullN, NullE, Ix&gt;</code> is a graph …","Operators for creating new graphs from existings ones.","Return the opposite <code>Direction</code>.","","Commonly used items.","<code>StableGraph</code> keeps indices stable across removals.","","","","","","","","","","","","","<code>UnionFind&lt;K&gt;</code> is a disjoint-set data structure.","Graph traits and graph traversals.","","Adjacency list edge index type, a pair of integers.","","A reference to an edge of the graph.","An iterator over the <code>EdgeReference</code> of all the edges of the …","","An adjacency list with labeled edges.","An iterator over the indices of the neighbors of a node.","Adjacency list node index type, a plain integer.","An iterator over all node indices in the graph.","An Iterator over the indices of the outgoing edges from a …","Iterator over the <code>EdgeReference</code> of the outgoing edges from …","A very simple adjacency list with no node or label weights.","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","Adds a new node to the list by giving its list of …","Adds a new node to the list. This allocates a new <code>Vec</code> and …","","","","","","","","","","","","","","","","","","","","Removes all nodes and edges from the list.","","","","","","","","","","","","","","","","","","","","","","","Lookups whether there is an edge from <code>a</code> to <code>b</code>.","","Returns the number of edges in the list","Returns the number of edges in the list","Accesses the source and target of edge <code>e</code>","Returns an iterator over all edge indices of the graph.","","","Accesses the weight of edge <code>e</code>","Accesses the weight of edge <code>e</code>","","","","","","","","","","Lookups whether there is an edge from <code>a</code> to <code>b</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns an iterator of all nodes with an edge starting …","Creates a new, empty adjacency list.","","","","","","","","","","Returns the number of nodes in the list","","Returns an iterator over all node indices of the graph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Updates or adds an edge from <code>a</code> to <code>b</code> to the graph, with its …","","","","Creates a new, empty adjacency list tailored for <code>nodes</code> …","","An algorithm error: a cycle was found in the graph.","Workspace for a graph traversal.","A floating-point measure.","","Associated data that can be used for measures (such as …","An iterator producing a minimum spanning forest of a graph.","An algorithm error: a cycle of negative weights was found …","A reusable state for computing the <em>strongly connected </em>…","","","","Bellman-Ford algorithms.","","","","","","","","","","","","","","","","","","","","Graph Condense every strongly connected component into a …","[Generic] Return the number of connected components of the …","","","","","Compute dominators of a control-flow graph.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","[Generic] Check if there exists a path starting at <code>from</code> …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Return <code>true</code> if the graph is bipartite. A graph is …","[Generic] Return <code>true</code> if the input directed graph contains …","[Generic] Return <code>true</code> if the input graph contains a cycle.","","","","","","","","[Generic] Compute the <em>strongly connected components</em> using …","","","","","[Generic] Compute a <em>minimum spanning tree</em> of a graph.","","Creates a new <code>TarjanScc</code>","","Returns the index of the component in which v has been …","Return a node id that participates in the cycle","","[Generic] Compute the <em>strongly connected components</em> using …","Renamed to <code>kosaraju_scc</code>.","","","[Generic] Compute the <em>strongly connected components</em> using …","","","","","[Generic] Perform a topological sort of a directed graph.","Compute the transitive reduction and closure of a directed …","","","","","","","","","","","","","","","","","[Generic] A* shortest path algorithm.","","[Generic] Compute shortest paths from node <code>source</code> to all …","","","","","","[Generic] Find the path of a negative cycle reachable from …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","[Generic] Dijkstra’s shortest path algorithm.","Iterator for nodes dominated by a given node.","The dominance relation for some graph and root.","Iterator for a node’s dominators.","","","","","","","","","","","","","Iterate over all of the given node’s dominators …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the immediate dominator of the given node.","Iterate over all nodes immediately dominated by the given …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Get the root node used to construct these dominance …","This is an implementation of the engineered “Simple, …","","Iterate over the given node’s strict dominators.","","","","","","","","","","","","","[Generic] Finds a feedback arc set: a set of edges in the …","[Generic] Floyd–Warshall algorithm is an algorithm for …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if the graphs <code>g0</code> and <code>g1</code> are …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","[Generic] Return <code>true</code> if <code>g0</code> is isomorphic to a subgraph of …","Using the VF2 algorithm, examine both syntactic and …","[Generic] k’th shortest path algorithm.","","","Computed <em>matching</em> of the graph.","","","","","","","Returns <code>true</code> if given edge is in the matching, or <code>false</code> …","Returns <code>true</code> if given node is in the matching, or <code>false</code> …","Iterates over all edges from the matching.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","[Generic] Compute a <em>matching</em> using a greedy heuristic.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if the number of matched <strong>edges</strong> is 0.","Returns <code>true</code> if the matching is perfect.","Gets the number of matched <strong>edges</strong>.","Gets the matched counterpart of given node, if there is …","[Generic] Compute the <em>maximum matching</em> using Gabow’s …","","","Iterates over all nodes from the matching.","","","","","","","","","","Returns an iterator that produces all simple paths from …","Creates a representation of the same graph respecting …","Computes the transitive reduction and closure of a DAG.","Compressed Sparse Row (<code>CSR</code>) is a sparse adjacency matrix …","","Csr edge index type, a plain integer.","","","","Csr creation error: edges were not in sorted order.","","","","Csr node index type, a plain integer.","Iterator over all nodes of a graph.","Return <code>true</code> if the edge was added","Adds a new node with the given weight, returning the …","","","","","","","","","","","","","","","","","","Remove all edges","","","","","","","","","","","","","","","","","Computes in <strong>O(log |V|)</strong> time.","","","","","","Return an iterator of all edges of <code>a</code>.","Computes in <strong>O(1)</strong> time.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new <code>Csr</code> from a sorted sequence of edges","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Return an iterator of all neighbors of <code>a</code>.","Computes in <strong>O(1)</strong> time.","Create an empty <code>Csr</code>.","","","","","","","","","","","","Computes in <strong>O(1)</strong> time.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the edge’s weight.","Create a new <code>Csr</code> with <code>n</code> nodes. <code>N</code> must implement <code>Default</code> …","A graph that can be extended with further nodes and edges","A graph that can be created","Access node and edge weights (associated data).","Access node and edge weights mutably.","A graph edge.","A graph element.","Iterator adaptors for iterators of <code>Element</code>.","An iterator that filters graph elements.","Create a graph from an iterator of elements.","A graph node.","Add a new edge. If parallel edges (duplicate) are not …","","","","","","","","","","","","","","","","Create an iterator adaptor that filters graph elements.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Add or update the edge from <code>a</code> to <code>b</code>. Return the id of the …","","","","","","<code>Dot</code> configuration.","<code>Dot</code> implements output to graphviz .dot format for a graph.","Use indices for edge labels.","Use no edge labels.","Do not print the graph/digraph string.","Use indices for node labels.","Use no node labels.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a <code>Dot</code> formatting wrapper with default configuration.","","","","","","","","","Create a <code>Dot</code> formatting wrapper with custom configuration.","The default integer type for graph indices. <code>u32</code> is the …","A <code>Graph</code> with directed edges.","The graph’s edge type.","Edge identifier.","Iterator over the edge indices of a graph.","Reference to a <code>Graph</code> edge.","Iterator over all edges of a graph.","Iterator yielding mutable access to all edge weights.","Iterator over the edges of from or to a node","Iterator over the multiple directed edges connecting a …","An iterator over either the nodes without edges to them or …","<code>Frozen</code> is a graph wrapper.","<code>Graph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using an …","A <code>GraphIndex</code> is a node or edge index.","Trait for the unsigned integer type used for node and edge …","Iterator over the neighbors of a node.","The graph’s node type.","Node identifier.","Iterator over the node indices of a graph.","Iterator over all nodes of a graph.","Iterator yielding mutable access to all node weights.","A <code>Graph</code> with undirected edges.","A “walker” object that can be used to step through the …","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","Remove all edges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lookup if there is an edge from <code>a</code> to <code>b</code>.","","","","","Return a “walker” object that can be used to step …","","","Return the number of edges in the graph.","","","Access the source and target nodes for <code>e</code>.","Short version of <code>EdgeIndex::new</code>","Return an iterator over the edge indices of the graph","Create an iterator over all edges, in indexed order.","","","Access the weight for edge <code>e</code>.","","","","Access the weight for edge <code>e</code>, mutably.","","Return an iterator yielding immutable access to all edge …","Return an iterator yielding mutable access to all edge …","","Return an iterator of all edges of <code>a</code>.","","Return an iterator over all the edges connecting <code>a</code> and <code>b</code>.","Return an iterator of all edges of <code>a</code>, in the specified …","","","","An invalid <code>EdgeIndex</code> used to denote absence of an edge, …","","","","","","","","","","Extend the graph from an iterable of edges.","Return an iterator over either the nodes without edges to …","Create a new <code>Graph</code> by mapping nodes and edges. A node or …","Lookup an edge from <code>a</code> to <code>b</code>.","Lookup an edge between <code>a</code> and <code>b</code>, in either direction.","Accessor for data structure internals: the first edge in …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>Graph</code> from an iterable of edges.","","","","","","","","","","","","","","","","","","","","Index the <code>Graph</code> by two indices, any combination of node or …","Index the <code>Graph</code> by two indices, any combination of node or …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the graph into either undirected or directed. No …","","","","","","","","","","","Convert the graph into a vector of Nodes and a vector of …","","","Whether the graph has directed edges or not.","Create a new <code>Graph</code> by mapping node and edge weights to new …","","","","Return an iterator of all nodes with an edge starting from …","","","Return an iterator of all neighbors that have an edge …","","Return an iterator of all neighbors that have an edge …","","Create a new <code>Graph</code> with directed edges.","Create a new <code>Frozen</code> from a mutable reference to a graph.","","","","Create a new <code>Graph</code> with undirected edges.","Step to the next edge and its endpoint node in the walk …","","","","","","","","","","","","","","","Accessor for data structure internals: the next edge for …","","Accessor for data structure internals: the first edge in …","Accessor for data structure internals: the next edge for …","","","","","Return the number of nodes (vertices) in the graph.","","","","Short version of <code>NodeIndex::new</code>","Return an iterator over the node indices of the graph.","","","","Access the weight for node <code>a</code>.","","","Access the weight for node <code>a</code>, mutably.","","Return an iterator yielding immutable access to all node …","Return an iterator yielding mutable access to all node …","","","Access the internal edge array.","Access the internal node array.","Remove an edge and return its edge weight, or <code>None</code> if it …","Remove <code>a</code> from the graph if it exists, and return its …","Reserves capacity for at least <code>additional</code> more edges to be …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves the minimum capacity for exactly <code>additional</code> more …","Reserves capacity for at least <code>additional</code> more nodes to be …","","","Keep all edges that return <code>true</code> from the <code>visit</code> closure, …","Keep all nodes that return <code>true</code> from the <code>visit</code> closure, …","Reverse the direction of all edges","Shrinks the capacity of the graph as much as possible.","Shrinks the capacity of the underlying edges collection as …","Shrinks the capacity of the underlying nodes collection as …","","","","","","","","","Return the source node index.","","Return the target node index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add or update an edge from <code>a</code> to <code>b</code>. If the edge already …","","","","Access the edge’s weight.","","Associated node data.","Associated edge data.","Create a new <code>Graph</code> with estimated capacity.","","","","A <code>GraphMap</code> with directed edges.","","","<code>GraphMap&lt;N, E, Ty&gt;</code> is a graph datastructure using an …","","","","","A trait group for <code>GraphMap</code>’s node identifier.","","A reference that is hashed and compared by its pointer …","A <code>GraphMap</code> with undirected edges.","Add an edge connecting <code>a</code> and <code>b</code> to the graph, with …","","","Add node <code>n</code> to the graph.","","Return an iterator over all edges of the graph with their …","Return an iterator over all edges of the graph in …","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","","","","","","","","","","","","","","","","","","","","","Ptr is ordered by pointer value, i.e. an arbitrary but …","","Return <code>true</code> if the edge connecting <code>a</code> with <code>b</code> is contained …","Return <code>true</code> if the node is contained in the graph.","","","","","","","Return the number of edges in the graph.","","Return a reference to the edge weight connecting <code>a</code> with <code>b</code>, …","Return a mutable reference to the edge weight connecting <code>a</code> …","Return an iterator of target nodes with an edge starting …","","","Return an iterator of target nodes with an edge starting …","Ptr compares by pointer equality, i.e if they point to the …","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>GraphMap</code> from an iterable of edges.","","Creates a <code>GraphMap</code> that corresponds to the given <code>Graph</code>.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return a <code>Graph</code> that corresponds to this <code>GraphMap</code>.","","","","","","","","","","","Whether the graph has directed edges.","","","","","Return an iterator of all nodes with an edge starting from …","Return an iterator of all neighbors that have an edge …","","Create a new <code>GraphMap</code>","","","","","","","","","","","","","","Return the number of nodes in the graph.","","","","Return an iterator over the nodes of the graph.","","","","Remove edge from <code>a</code> to <code>b</code> from the graph and return the edge …","Return <code>true</code> if node <code>n</code> was removed.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new <code>GraphMap</code> with estimated capacity.","A <code>MatrixGraph</code> with directed edges.","Iterator over all edges of a graph.","Iterator over the edges of from or to a node","","<code>MatrixGraph&lt;N, E, Ty, Null&gt;</code> is a graph datastructure using …","Iterator over the neighbors of a node.","Iterator over the node identifiers of a graph.","Node identifier.","Iterator over all nodes of a graph.","<code>NotZero</code> is used to optimize the memory usage of edge …","Wrapper trait for an <code>Option</code>, allowing user-defined structs …","A <code>MatrixGraph</code> with undirected edges.","Base trait for types that can be wrapped in a <code>NotZero</code>.","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","Remove all nodes and edges.","","","","","","","","","","","","","","","","Return the number of edges in the graph.","","Access the weight for edge <code>e</code>.","Access the weight for edge <code>e</code>, mutably.","","Return an iterator of all edges of <code>a</code>.","Return an iterator of all edges of <code>a</code>, in the specified …","","Extend the graph from an iterable of edges.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>MatrixGraph</code> from an iterable of edges.","","Return true if there is an edge between <code>a</code> and <code>b</code>.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Return whether the graph has directed edges or not.","Return true if <code>self</code> is equal to the sentinel value.","Return an iterator of all nodes with an edge starting from …","","Return an iterator of all neighbors that have an edge …","","Create a new <code>MatrixGraph</code> with directed edges.","Create a new <code>MatrixGraph</code> with undirected edges.","","","","","","","","Return the number of nodes (vertices) in the graph.","","Short version of <code>NodeIndex::new</code> (with Ix = <code>DefaultIx</code>)","","Access the weight for node <code>a</code>.","Access the weight for node <code>a</code>, mutably.","Remove the edge from <code>a</code> to <code>b</code> to the graph.","Remove <code>a</code> from the graph.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update the edge from <code>a</code> to <code>b</code> to the graph, with its …","","Create a new <code>MatrixGraph</code> with estimated capacity for nodes.","Return the singleton object which can be used as a …","[Generic] complement of the graph","","","","","","","","","","","","","","","","","","","","","","","Iterator over the edge indices of a graph.","Reference to a <code>StableGraph</code> edge.","Iterator over all edges of a graph.","Iterator over the edges of from or to a node","Iterator over the multiple directed edges connecting a …","An iterator over either the nodes without edges to them or …","","","Iterator over the neighbors of a node.","","Iterator over the node indices of a graph.","Iterator over all nodes of a graph.","A <code>StableGraph</code> with directed edges.","<code>StableGraph&lt;N, E, Ty, Ix&gt;</code> is a graph datastructure using …","A <code>StableGraph</code> with undirected edges.","A “walker” object that can be used to step through the …","Add an edge from <code>a</code> to <code>b</code> to the graph, with its associated …","","","Add a node (also called vertex) with associated data <code>weight</code>…","","","","","","","","","","","","","","","","","","","","","","","","Return the current node and edge capacity of the graph.","Remove all nodes and edges","Remove all edges","","","","","","","","","","","","","","","","","","","","","","","","Lookup if there is an edge from <code>a</code> to <code>b</code>.","","","Return a “walker” object that can be used to step …","","","Return the number of edges in the graph.","Access the source and target nodes for <code>e</code>.","","Return an iterator over the edge indices of the graph","Create an iterator over all edges in the graph, in indexed …","","Access the weight for edge <code>e</code>.","","Access the weight for edge <code>e</code>, mutably","Return an iterator yielding immutable access to all edge …","Return an iterator yielding mutable access to all edge …","","Return an iterator of all edges of <code>a</code>.","Return an iterator over all the edges connecting <code>a</code> and <code>b</code>.","Return an iterator of all edges of <code>a</code>, in the specified …","","","Extend the graph from an iterable of edges.","Return an iterator over either the nodes without edges to …","Create a new <code>StableGraph</code> by mapping nodes and edges. A …","Lookup an edge from <code>a</code> to <code>b</code>.","Lookup an edge between <code>a</code> and <code>b</code>, in either direction.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>StableGraph</code> from an iterable of edges.","","","","","","","","","Index the <code>StableGraph</code> by two indices, any combination of …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Whether the graph has directed edges or not.","Create a new <code>StableGraph</code> by mapping node and edge weights …","","Return an iterator of all nodes with an edge starting from …","Return an iterator of all neighbors that have an edge …","","Return an iterator of all neighbors that have an edge …","Create a new <code>StableGraph</code> with directed edges.","Step to the next edge and its endpoint node in the walk …","","","","","","","","","","","","","","","Return an upper bound of the node indices in the graph","","Return the number of nodes (vertices) in the graph.","","","Return an iterator over the node indices of the graph","","","Access the weight for node <code>a</code>.","","Access the weight for node <code>a</code>, mutably.","Return an iterator yielding immutable access to all node …","Return an iterator yielding mutable access to all node …","Remove an edge and return its edge weight, or <code>None</code> if it …","Remove <code>a</code> from the graph if it exists, and return its …","","Keep all edges that return <code>true</code> from the <code>visit</code> closure, …","Keep all nodes that return <code>true</code> from the <code>visit</code> closure, …","Reverse the direction of all edges","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add or update an edge from <code>a</code> to <code>b</code>. If the edge already …","","","","Access the edge’s weight.","Create a new <code>StableGraph</code> with estimated capacity.","","<code>UnionFind&lt;K&gt;</code> is a disjoint-set data structure. It tracks …","","","","","Returns <code>true</code> if the given elements belong to the same set, …","Return the representative for <code>x</code>.","Return the representative for <code>x</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Return a vector mapping each element to its representative.","Create a new <code>UnionFind</code> of <code>n</code> disjoint sets.","","","","","Unify the two sets containing <code>x</code> and <code>y</code>.","The associated adjacency matrix type","An edge to an already visited node.","A breadth first search (BFS) of a graph.","Stop the DFS traversal and return the provided value.","Continue the DFS traversal as normal.","Control flow for <code>depth_first_search</code> callbacks.","Control flow for callbacks.","A cross or forward edge.","Define associated data for nodes and edges","Visit nodes of a graph in a depth-first-search (DFS) …","A depth first search (DFS) visitor event.","Visit nodes in a depth-first-search (DFS) emitting nodes …","","A graph with a known edge count.","An edge-filtering graph adaptor.","A filtered edges iterator.","A filtered neighbors iterator.","A filtered neighbors-directed iterator.","","edge identifier","The graph’s <code>NodeId</code>s map to indices","An edge reference.","","","The kind of edges in the graph.","","","","A graph filter for edges","A graph filter for nodes.","All edges from a node have been reported.","Create or access the adjacency matrix of a graph.","Base graph trait: defines the associated node identifier …","Edge kind property (directed or undirected edges)","A copyable reference to a graph.","Access to the sequence of the graph’s edges","Access to the edges of each node.","Access to all edges of each node, in the specified …","Access to the neighbors of each node","Access to the neighbors of each node, through incoming or …","Access to the sequence of the graph’s <code>NodeId</code>s.","Access to the sequence of the graph’s nodes","","The associated map type","","","The graph’s <code>NodeId</code>s map to indices, in a range without …","A graph with a known node count.","A node-filtering graph adaptor.","A filtered edges iterator.","A filtered edges iterator.","A filtered neighbors iterator.","A filtered node references iterator.","","","node identifier","","The graph’s <code>NodeId</code>s map to indices","A node reference.","","","","Prune the current node from the DFS traversal. No more …","An edge-reversing graph adaptor.","A reversed edge reference","A reversed edge references iterator.","A reversed edges iterator.","Strictly monotonically increasing event time for a depth …","A topological order traversal for a graph.","An edge of the tree formed by the traversal.","A mapping for storing the visited status for NodeId <code>N</code>.","A graph that can create a map that tracks the visited …","A walker is a traversal state, but where part of the …","A walker and its context wrapped into an iterator.","","","Create the adjacency matrix","","Return the original, unreversed edge reference.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value in <code>Control::Break(_)</code>, if present.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A recursive depth first search.","The map of discovered nodes","The map of discovered nodes","The map of discovered nodes","Return an upper bound of the edge indices in the graph …","","","","Return the number of edges in the graph.","","","","","","","","","","","","","","","","","Create a new <strong>Dfs</strong> using the graph’s visitor map, and no …","Create a new <code>DfsPostOrder</code> using the graph’s visitor map, …","","","","","The map of finished nodes","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create an <code>NodeFiltered</code> adaptor from the closure <code>filter</code>.","Create an <code>EdgeFiltered</code> adaptor from the closure <code>filter</code>.","Convert <code>i</code> to a node index. <code>i</code> must be a valid value in the …","Convert <code>i</code> to an edge index. <code>i</code> must be a valid value in the …","","","","","","","Create a <code>Dfs</code> from a vector and a visit map","","The edge’s identifier.","","","Return true to have the edge be part of the graph","Return true to have the node be part of the graph","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Consume <code>self</code> and return the original, unreversed edge …","Return true if there is an edge from <code>a</code> to <code>b</code>, false …","","","Return whether <code>a</code> has been visited before.","Create an iterator out of the walker and given <code>context</code>.","Create an iterator out of the walker and given <code>context</code>.","Keep the discovered map, but clear the visit stack and …","Keep the discovered and finished map, but clear the visit …","Return an iterator of the neighbors of node <code>a</code>.","","","","","","","","Create a new <strong>Dfs</strong>, using the graph’s visitor map, and put …","Create a new <code>DfsPostOrder</code> using the graph’s visitor map, …","Create a new <strong>Bfs</strong>, using the graph’s visitor map, and put …","Create a new <code>Topo</code>, using the graph’s visitor map, and …","Return the next node in the dfs, or <strong>None</strong> if the traversal …","Return the next node in the traversal, or <code>None</code> if the …","Return the next node in the bfs, or <strong>None</strong> if the traversal …","Return the next node in the current topological order …","","","","","","","","","","","Return an upper bound of the node indices in the graph …","","","","","","","","","","","","","","","","","","","Clear the visit state","Clear the visit state","Clear visited state, and put all initial nodes in the to …","Reset the visitor map (and resize to new size of graph if …","","","","","","","","","","","","","","","","","The source node of the edge.","","The stack of nodes to visit","The stack of nodes to visit","The queue of nodes to visit","The target node of the edge.","","Convert <code>a</code> to an integer index.","Convert <code>a</code> to an integer index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mark <code>a</code> as visited.","Create a new visitor map","","","","Advance to the next item","","","","","A reference to the weight of the edge.","",""],"i":[0,0,0,0,0,1,0,83,0,1,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,1,0,0,0,1,1,1,1,1,2,3,1,2,3,0,0,1,1,1,2,3,83,40,2,3,0,0,1,1,0,0,1,2,3,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,14,14,14,14,14,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,16,22,16,22,14,14,14,14,14,14,14,14,14,14,14,16,22,16,16,16,22,22,22,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,14,16,15,22,16,20,21,22,23,24,14,25,26,20,21,23,24,25,26,14,14,21,24,14,14,20,21,23,24,25,26,21,24,14,14,14,14,14,14,14,16,22,14,21,24,21,24,20,21,24,25,26,22,22,14,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,16,20,21,22,23,24,14,25,26,14,14,15,22,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,46,37,38,39,34,46,37,38,39,34,37,38,39,34,37,38,39,0,0,34,46,0,0,0,38,39,0,0,0,0,34,46,37,38,39,34,46,37,38,39,0,0,0,175,34,46,37,38,39,37,0,0,0,0,0,0,0,0,0,0,0,0,64,0,64,0,34,46,37,46,38,64,46,0,0,0,0,34,37,38,39,0,0,34,46,37,38,39,34,46,37,38,39,34,46,37,38,39,175,0,0,0,56,56,56,56,56,0,56,56,56,56,56,56,56,56,0,0,0,0,60,61,62,60,61,62,60,61,62,60,61,62,60,60,61,62,60,61,62,60,60,60,61,62,61,62,61,62,60,0,62,60,60,61,62,60,61,62,60,61,62,60,61,62,0,0,0,0,0,0,0,0,0,0,0,69,71,70,69,71,70,69,69,69,69,71,70,0,69,71,70,71,70,69,69,69,69,0,71,70,69,69,71,70,69,71,70,69,71,70,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,74,74,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,74,74,74,74,74,74,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,74,78,74,74,74,76,77,78,79,80,81,82,77,79,80,81,82,74,74,74,74,74,77,79,80,81,82,82,74,74,74,74,74,74,74,77,80,81,82,78,78,74,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,76,77,78,79,80,81,82,74,78,78,74,0,0,0,0,84,0,0,0,0,84,176,176,84,85,84,85,84,85,84,85,67,108,84,84,84,84,177,84,85,84,85,178,84,85,85,85,67,108,85,84,85,84,85,84,85,84,85,176,179,180,180,181,180,0,0,88,88,88,88,88,89,88,89,88,88,88,88,88,89,89,88,89,88,89,88,89,89,89,88,89,88,89,88,89,89,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,41,41,41,41,94,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,41,41,95,92,93,96,97,98,99,100,101,102,103,104,105,106,41,41,95,92,93,96,97,98,99,100,101,102,103,104,105,106,92,93,92,93,41,41,92,93,94,99,41,94,41,41,94,41,0,41,41,41,94,41,41,94,41,41,94,41,41,41,41,94,41,41,41,94,92,93,92,93,104,92,92,92,93,93,93,41,41,41,41,41,41,41,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,95,94,92,92,93,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,41,41,94,94,92,93,92,104,13,41,41,94,92,92,93,41,41,94,41,94,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,98,99,100,101,110,109,102,103,105,106,41,41,94,41,41,13,92,41,41,94,41,41,94,41,13,41,94,92,92,93,41,95,98,99,100,101,110,109,102,103,105,106,102,103,105,106,41,95,96,97,95,41,94,41,41,94,41,94,0,41,41,94,41,41,94,41,41,94,41,41,92,93,41,41,41,41,41,41,41,41,41,94,41,41,41,41,41,41,98,101,110,109,102,103,105,106,97,104,97,104,41,41,94,94,41,95,92,93,96,97,98,99,100,101,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,95,94,92,93,96,97,98,99,100,101,110,109,102,103,104,105,106,41,41,41,94,92,104,104,96,97,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,116,116,116,116,116,116,118,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,116,116,119,116,120,121,122,123,124,117,125,126,119,116,120,121,122,123,124,117,125,126,119,119,116,116,118,117,116,119,116,116,116,116,116,116,116,116,116,116,119,119,119,119,116,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,116,116,116,116,116,116,119,116,116,118,119,116,120,121,122,123,124,117,125,126,116,118,120,121,122,123,124,117,125,126,116,116,118,117,120,116,116,116,116,116,118,120,121,122,123,124,117,125,126,118,120,117,116,116,116,116,116,116,118,117,119,116,116,116,120,120,118,120,121,122,123,124,117,125,126,116,116,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,118,119,116,120,121,122,123,124,117,125,126,116,116,116,116,0,0,0,0,0,0,0,0,0,0,0,0,0,129,129,129,129,129,137,129,131,132,133,134,135,137,129,131,132,133,134,135,129,129,131,132,133,134,135,129,131,132,133,134,135,137,129,129,129,129,129,129,129,129,129,129,129,131,132,133,134,135,137,129,131,132,133,134,135,129,129,129,129,129,129,129,137,129,131,132,133,134,135,131,132,133,134,135,129,129,136,129,129,129,129,129,129,131,132,133,134,135,129,129,129,129,0,129,129,129,129,129,129,131,132,134,129,129,131,132,133,134,135,137,129,131,132,133,134,135,137,129,131,132,133,134,135,137,129,131,132,133,134,135,129,129,129,129,136,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,111,111,111,111,111,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,111,111,111,138,139,140,141,142,143,144,145,146,147,111,111,138,139,140,141,142,143,144,145,146,147,111,111,111,145,111,111,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,111,140,111,111,111,111,111,111,139,140,141,142,143,144,145,146,147,111,111,138,139,140,141,142,143,144,145,146,147,111,111,111,111,140,111,111,111,111,111,111,138,139,140,141,142,143,144,145,146,147,139,141,142,143,144,145,146,147,111,111,111,111,111,111,111,111,111,138,139,141,142,143,144,145,146,147,139,143,146,147,138,138,111,111,111,111,0,111,111,111,111,111,111,111,111,111,111,111,111,111,111,139,142,144,146,147,140,140,111,111,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,138,139,140,141,142,143,144,145,146,147,111,111,111,140,140,111,111,0,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,66,153,0,151,151,0,0,153,0,0,0,0,153,0,0,0,0,0,174,72,0,0,44,44,63,35,54,68,0,0,153,0,0,0,0,0,0,0,0,0,0,0,170,48,47,53,0,0,0,0,0,0,0,174,182,72,51,0,0,36,36,35,151,0,0,0,0,0,0,153,0,0,0,0,174,182,66,149,150,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,151,151,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,152,158,171,151,152,151,154,155,156,157,0,154,155,156,107,159,164,149,65,149,44,159,164,149,159,149,149,54,159,164,149,68,159,164,149,154,155,152,152,152,152,155,152,153,151,154,155,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,159,164,52,107,159,159,164,164,149,149,154,152,174,182,150,173,172,158,158,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,158,160,161,162,163,165,166,167,168,169,150,66,149,63,45,170,170,154,155,47,159,164,149,53,159,164,149,154,155,156,157,154,155,156,157,158,160,161,162,163,165,166,167,168,169,52,159,164,149,55,164,149,51,159,164,149,36,159,164,149,159,149,149,152,154,155,157,48,159,164,149,171,151,171,151,160,161,162,163,165,166,167,168,169,174,150,154,155,156,174,150,52,107,159,159,164,164,149,149,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,152,153,151,154,155,156,157,158,159,160,161,162,163,164,165,166,167,149,168,150,169,45,48,159,164,149,170,154,155,156,157,174,182,150],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[2,2],[3,3],[[]],[[]],[[]],[[1,1],4],[[],4],0,0,0,[[1,1],5],[[],5],[[],5],[[],5],[[1,6],7],[[2,6],7],[[3,6],7],[[]],[[]],[[]],0,0,[[1,8]],[1,9],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],0,0,[1,1],[[1,1],[[10,[4]]]],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[13]],[15,[13]],[15,[13]]],[[10,[[16,[13]]]]]],[[[14,[13]],[15,[13]],[15,[13]]],[[16,[13]]]],[[[14,[13]]],[[15,[13]]]],[[[14,[13]]],[[15,[13]]]],[[[14,[13]],17],[[15,[13]]]],[[[14,[13]],9],[[15,[13]]]],[[[14,[13]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]]]],[[[16,[[0,[13,19]]]]],[[16,[[0,[13,19]]]]]],[[[20,[[0,[13,19]]]]],[[20,[[0,[13,19]]]]]],[[[21,[19,[0,[13,19]]]]],[[21,[19,[0,[13,19]]]]]],[[[22,[13]]],[[22,[13]]]],[[[23,[19,[0,[19,13]]]]],[[23,[19,[0,[19,13]]]]]],[[[24,[19]]],[[24,[19]]]],[[[14,[19,[0,[13,19]]]]],[[14,[19,[0,[13,19]]]]]],[[[25,[13]]],[[25,[13]]]],[[[26,[19,[0,[13,19]]]]],[[26,[19,[0,[13,19]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[[0,[13,27]]]],[16,[[0,[13,27]]]]],4],[[[22,[27,[0,[27,13]]]],[22,[27,[0,[27,13]]]]],4],[[],4],[[],4],[[[14,[13]],[15,[13]],[15,[13]]],5],[[],[[14,[28,[0,[13,28]]]]]],[[[14,[13]]],9],[[[14,[13]]],9],[[[14,[13]],[16,[13]]],10],[[[14,[13]]],[[23,[13]]]],[[[14,[13]],[15,[13]]],[[20,[13]]]],[[[14,[13]]]],[[[14,[13]],[16,[13]]],10],[[[14,[13]],[16,[13]]],10],[[[14,[13]]]],[[[16,[[0,[13,29]]]],[16,[[0,[13,29]]]]],5],[[[22,[29,[0,[29,13]]]],[22,[29,[0,[29,13]]]]],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[14,[13]],[15,[13]],[15,[13]]],[[10,[[16,[13]]]]]],[[[16,[[0,[13,30]]]],6],7],[[[20,[[0,[13,30]]]],6],7],[[[21,[30,[0,[13,30]]]],6],7],[[[22,[30,[0,[30,13]]]],6],7],[[[23,[30,[0,[30,13]]]],6],7],[[[24,[30]],6],7],[[[14,[30,13]],6],7],[[[25,[30,13]],6],7],[[[26,[30,[0,[13,30]]]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]],9]],[[[16,[[0,[13,31]]]],8]],[[[15,[13]]]],[[[22,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]],18,[15,[13]],[15,[13]]],5],[[[14,[13]]],5],[[[21,[13]]],9],[24,9],[[[14,[13]],[15,[13]]]],[[],[[14,[13]]]],[[[20,[13]]],10],[[[21,[13]]],10],[[[23,[13]]],[[10,[[16,[13]]]]]],[24,10],[[[25,[13]]],10],[[[26,[13]]],10],[[[21,[13]]],10],[24,10],[[[14,[13]]],9],[[[14,[13]]],9],[[[14,[13]]],[[24,[13]]]],[[[14,[13]]],[[24,[13]]]],[[[14,[13]]]],[[[14,[13]]],10],[[[14,[13]]],10],[[[16,[[0,[13,32]]]],[16,[[0,[13,32]]]]],[[10,[4]]]],[[[22,[32,[0,[32,13]]]],[22,[32,[0,[32,13]]]]],[[10,[4]]]],[[[14,[13]]]],[[[21,[13]],33],10],[[24,33],10],[[[21,[13]],33]],[[24,33]],[[[20,[13]]]],[[[21,[13]]]],[24],[[[25,[13]]]],[[[26,[13]]]],[[[22,[13]]]],[[[22,[13]]]],[[[14,[13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[14,[13]],[15,[13]],[15,[13]]],[[16,[13]]]],[[[14,[13]]],18],[[[15,[13]]]],[[[22,[13]]]],[9,[[14,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[34,[19,19]]],[[34,[19,19]]]],[[[37,[[0,[35,36,19]]]]],[[37,[[0,[35,36,19]]]]]],[[[38,[19]]],[[38,[19]]]],[39,39],[[]],[[]],[[]],[[]],[[[41,[40,13]],5],[[41,[42,40,13]]]],[[[0,[43,44]]],9],[[],[[34,[[0,[45,28]]]]]],[[],46],0,0,0,[[[38,[29]],[38,[29]]],5],[[39,39],5],0,0,0,0,[[[34,[30,30]],6],7],[[[46,[30]],6],7],[[[37,[[0,[35,36,30]]]],6],7],[[[38,[30]],6],7],[[39,6],7],[[]],[[]],[[]],[[]],[[]],0,0,[[[0,[47,48]],[10,[34]]],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[49,48,47]],[0,[50,29,30]]],5],[[[0,[51,47,48]]],5],[[[0,[52,44]]],5],0,0,0,0,0,0,0,[[[0,[53,48,51]]],[[42,[42]]]],0,[[]],0,[[]],[[[0,[36,44,52]]],[[37,[[0,[36,44,52]]]]]],[[[0,[49,48]]],[[34,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[],46],[[[37,[[0,[36,52]]]]],10],[[[46,[[0,[50,29]]]],[0,[47,52]],[0,[50,29]]],9],[[[38,[50]]],50],[[]],[[[46,[[0,[50,29]]]],[0,[51,47,52]],33]],[[[0,[53,48,51]]],[[42,[42]]]],0,0,[[[0,[51,47,52]]],[[42,[42]]]],[[]],[[]],[[]],[[]],[[[0,[53,51,48]],[10,[34]]],[[11,[42,38]]]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[]],[[[0,[54,48]],33,33,33],10],0,[[[0,[55,51,54,52]]],[[11,[56,39]]]],[[]],[[]],[[[56,[19,19]]],[[56,[19,19]]]],[[]],0,[[[0,[55,51,54,52,48]]],[[10,[42]]]],[[[56,[30,30]],6],7],[[]],[[]],0,[[]],[[],11],[[],11],[[],12],[[[0,[54,48]],10,33],[[58,[[0,[57,50]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[60,[[0,[50,59,31,19]]]]],[[60,[[0,[50,59,31,19]]]]]],[[[61,[[0,[50,59,31,19]]]]],[[61,[[0,[50,59,31,19]]]]]],[[[62,[[0,[50,59,31,19]]]]],[[62,[[0,[50,59,31,19]]]]]],[[]],[[]],[[]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[10,[[61,[[0,[50,59,31]]]]]]]],[[[60,[[0,[50,59,31,30]]]],6],7],[[[61,[[0,[50,59,31,30]]]],6],7],[[[62,[[0,[50,59,31,30]]]],6],7],[[]],[[]],[[]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[10,[[0,[50,59,31]]]]]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[62,[[0,[50,59,31]]]]]],[[]],[[]],[[]],[[]],[[]],[[[61,[[0,[50,59,31]]]]],10],[[[62,[[0,[50,59,31]]]]],10],[[[60,[[0,[50,59,31]]]]],[[0,[50,59,31]]]],[[[0,[47,48]]],60],[[[62,[[0,[50,59,31]]]]]],[[[60,[[0,[50,59,31]]]],[0,[50,59,31]]],[[10,[[61,[[0,[50,59,31]]]]]]]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[[0,[44,63,55]]],17],[[[0,[43,44,51,63]],33],[[11,[[58,[[0,[64,50]]]],39]]]],[[[0,[43,65,66,63,53]],[0,[43,65,66,63,53]]],5],[[[0,[43,65,67,66,63,68]],[0,[43,65,67,66,63,68]],33,33],5],[[[0,[43,65,66,63,53]],[0,[43,65,66,63,53]]],5],[[[0,[43,65,67,66,63,68]],[0,[43,65,67,66,63,68]],33,33],5],[[[0,[43,65,67,66,63,68]],[0,[43,65,67,66,63,68]],33,33],[[10,[17]]]],[[[0,[54,48,55,52]],10,9,33],[[58,[[0,[57,50]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[69,[52]]],5],[[[69,[52]]],5],[[[69,[52]]],[[70,[52]]]],[[]],[[]],[[]],[[[0,[48,51,52,47]]],[[69,[[0,[48,51,52,47]]]]]],[[]],[[]],[[]],[[]],[[]],[[[69,[52]]],5],[[[69,[55]]],5],[[[69,[52]]],9],[[[69,[52]]],10],[[[0,[48,52,51,54]]],[[69,[[0,[48,52,51,54]]]]]],[[[71,[52]]],10],[[[70,[52]]],10],[[[69,[52]]],[[71,[52]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[[0,[55,53]],9,[10,[9]]],17],[[[0,[72,53,43,55]],73]],[[[14,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[74,[19,40,13]],[75,[13]],[75,[13]],19],5],[[[74,[40,13]]],[[75,[13]]]],[[[74,[40,13]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]]]],[[[74,[19,19,19]]],[[74,[19,19,19]]]],[76,76],[[[77,[19,19,19]]],[[77,[19,19,19]]]],[[[78,[50]]],[[78,[50]]]],[[[79,[19,19,19]]],[[79,[19,19,19]]]],[[[80,[19]]],[[80,[19]]]],[[[81,[19]]],[[81,[19]]]],[[[82,[19,[0,[19,13]]]]],[[82,[19,[0,[19,13]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]],[75,[13]],[75,[13]]],5],[[],[[74,[40,13]]]],[[[74,[40,13]]],9],[[[74,[40,13]]],9],[[[74,[40,13]]]],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],[[77,[40,13]]]],[[[74,[40,13]],[75,[13]]],73],[[[74,[30,30,30,30]],6],7],[[76,6],7],[[[77,[30,30,30]],6],7],[[[78,[30,30,30]],6],7],[[[79,[30,30,30]],6],7],[[[80,[30]],6],7],[[[81,[30]],6],7],[[[82,[30,[0,[30,13]]]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]],9]],[[[73,[[0,[19,83]]]]],[[11,[[74,[28,2,13]],76]]]],[[[78,[40,13]]]],[[[74,[40,13]],[75,[13]]]],[[[74,[40,13]],[75,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[40,13]],18,[75,[13]],[75,[13]]],5],[[[74,[40,13]]],5],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],[[73,[[75,[13]]]]]],[[],[[74,[40,13]]]],[[[77,[40,13]]],10],[[[79,[40,13]]],10],[[[80,[13]]],10],[[[81,[13]]],10],[[[82,[13]]],10],[[[82,[13]]],10],[[[74,[40,13]]],9],[[[74,[40,13]]],9],[[[74,[40,13]]],9],[[[74,[40,13]]]],[[[74,[40,13]]]],[[[74,[40,13]],[75,[13]]],9],[[[74,[40,13]]]],[[[77,[40,13]]]],[[[80,[13]]]],[[[81,[13]]]],[[[82,[13]]]],[[[78,[40,13]]]],[[[78,[40,13]]]],[[[74,[40,13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[74,[40,13]]],18],[[[78,[40,13]]]],[[[78,[40]]]],[9,[[74,[28,40,13]]]],0,0,0,0,0,0,0,0,0,0,[[],10],[[]],[[]],[[]],[[]],[[]],[[[84,[19,19]]],[[84,[19,19]]]],[[[85,[19,19]]],[[85,[19,19]]]],[[]],[[]],[[],10],[[],10],[[[84,[29,29]],[84,[29,29]]],5],[[],5],[[],5],[[],5],[[86,33],[[85,[86,33]]]],[[[84,[30,30]],6],7],[[[85,[30,30]],6],7],[[]],[[]],[87,86],[[]],[[]],[[]],[[[85,[17,33]]],10],[[],10],[[],10],[[[85,[17,33]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[]],[[9,9]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[88,88],5],[[],5],[[],5],[[],5],[[[89,[[0,[44,36,52,63]]]],6],7],[[[89,[[0,[44,36,52,63]]]],6],7],[[88,6],7],[[]],[[]],[[]],[[]],[[[0,[36,44]]],[[89,[[0,[36,44]]]]]],[[],90],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[[0,[36,44]],[73,[88]],91,91],[[89,[[0,[36,44]]]]]],[[[0,[36,44]],[73,[88]]],[[89,[[0,[36,44]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[41,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[41,[40,13]]],10],[[[41,[40,13]]]],[[[41,[40,13]]],[[92,[13]]]],[[[41,[40,13]]],18],[[[94,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[19,19,13]]],[[41,[19,19,13]]]],[[[95,[13]]],[[95,[13]]]],[[[92,[19]]],[[92,[19]]]],[[[93,[19]]],[[93,[19]]]],[[[96,[19,50]]],[[96,[19,50]]]],[[[97,[19,50]]],[[97,[19,50]]]],[[[98,[19,19,[0,[19,13]]]]],[[98,[19,19,[0,[19,13]]]]]],[[[99,[13]]],[[99,[13]]]],[[[100,[40,13]]],[[100,[40,13]]]],[[[101,[19,[0,[40,19]],[0,[13,19]]]]],[[101,[19,[0,[40,19]],[0,[13,19]]]]]],[[[102,[19]]],[[102,[19]]]],[[[103,[19]]],[[103,[19]]]],[[[104,[13]]],[[104,[13]]]],[[[105,[19,[0,[19,13]]]]],[[105,[19,[0,[19,13]]]]]],[[[106,[19,[0,[19,13]]]]],[[106,[19,[0,[19,13]]]]]],[[[41,[19,19,13]],[41,[19,19,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[92,[27]],[92,[27]]],4],[[[93,[27]],[93,[27]]],4],[[],4],[[],4],[[[41,[40,13]],[92,[13]],[92,[13]]],5],[[],[[41,[40,13]]]],[[],[[92,[28]]]],[[],[[93,[28]]]],[94],[[[99,[13]]],[[95,[13]]]],[[[41,[40,13]]],9],[[[94,[107]]],9],[[[41,[40,13]]],9],[[[41,[40,13]]],9],[[[94,[65]]],9],[[[41,[40,13]],[93,[13]]],10],[9,[[93,[13]]]],[[[41,[40,13]]],[[103,[13]]]],[[[41,[40,13]]],[[106,[13]]]],[[[41,[40,13]]]],[[[94,[44]]]],[[[41,[40,13]],[93,[13]]],10],[[[41,[40,13]]],10],[[[94,[67]]],10],[[[41,[40,13]]],10],[[[41,[40,13]],[93,[13]]],10],[[[94,[108]]],10],[[[41,[40,13]]],[[0,[13]]]],[[[41,[40,13]]],[[109,[13]]]],[[[41,[40,13]]]],[[[41,[40,13]],[92,[13]]],[[100,[40,13]]]],[[[94,[54]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],[[101,[40,13]]]],[[[41,[40,13]],[92,[13]],1],[[100,[40,13]]]],[[[41,[40,13]],1]],[[[94,[68]],1]],[[],[[92,[13]]]],[[],[[93,[13]]]],[[[92,[29]],[92,[29]]],5],[[[93,[29]],[93,[29]]],5],[[[104,[29,13]],[104,[29,13]]],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[41,[28,40,13]],87]],[[[41,[40,13]],1],[[98,[40,13]]]],[[[41,[40,13]],33,33],[[41,[40,13]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],[[10,[[93,[13]]]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],10],[[[41,[40,13]],[92,[13]],1],[[10,[[93,[13]]]]]],[[[41,[30,30,40,13]],6],7],[[[92,[30]],6],7],[[[93,[30]],6],7],[[[96,[30,30]],6],7],[[[97,[30,30]],6],7],[[[98,[30,30,[0,[30,13]]]],6],7],[[[99,[30,30]],6],7],[[[100,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[101,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[110,[30,[0,[30,13]]]],6],7],[[[109,[30,[0,[30,13]]]],6],7],[[[102,[30]],6],7],[[[103,[30]],6],7],[[[104,[30,30]],6],7],[[[105,[30,[0,[30,13]]]],6],7],[[[106,[30,[0,[30,13]]]],6],7],[[[111,[40,13]]],[[41,[40,13]]]],[[]],[[]],[[]],[13,[[92,[13]]]],[[]],[[]],[13,[[93,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[41,[28,40,13]]]],[87,[[41,[40,13]]]],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[94,[52]],9]],[[[94,[107]],9]],[[[92,[31]],8]],[[[93,[31]],8]],[[]],[[[104,[13]]]],[[],9],[[[41,[40,13]],[92,[13]]]],[[[41,[40,13]],[93,[13]]]],[[[94,[112]]]],[[[92,[13]]],9],[[[92,[13]]],9],[[[93,[13]]],9],[[[41,[40,13]],[93,[13]]]],[[[41,[40,13]],[92,[13]]]],[[[94,[113]]]],[[[41,[40,13]],114,114]],[[[94,[[41,[40,13]]]],114,114]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40,13]]],[[41,[40,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[41,[40,13]]]],[[[41,[40,13]],18,[92,[13]],[92,[13]]],5],[[[94,[66]]],5],[[[41,[40,13]]],5],[[[41,[40,13]],33,33],[[41,[40,13]]]],[[]],[[],[[92,[13]]]],[[[41,[40,13]],[92,[13]]],[[99,[13]]]],[[[41,[40,13]],[92,[13]]],[[99,[13]]]],[[[94,[47]]]],[[[41,[40,13]],[92,[13]],1],[[99,[13]]]],[[[41,[40,13]],[92,[13]],1],[[99,[13]]]],[[[94,[53]],1]],[[[41,[40,13]],[92,[13]]],[[99,[13]]]],[9],[[],[[41,[2]]]],[[],94],[9,[[92,[13]]]],[9,[[92,[13]]]],[9,[[93,[13]]]],[[],[[41,[3]]]],[[[95,[13]],[41,[40,13]]],10],[[[98,[40,13]]],[[10,[[92,[13]]]]]],[[[99,[13]]],[[10,[[92,[13]]]]]],[[[100,[40,13]]],10],[[[101,[40,13]]],[[10,[[104,[13]]]]]],[[[110,[13]]],10],[[[109,[13]]],10],[[[102,[13]]],10],[[[103,[13]]],10],[[[105,[13]]],10],[[[106,[13]]],10],[[[102,[13]]],10],[[[103,[13]]],10],[[[105,[13]]],10],[[[106,[13]]],10],[[[41,[40,13]],[93,[13]],1],[[10,[[93,[13]]]]]],[[[95,[13]],[41,[40,13]]],[[10,[[93,[13]]]]]],[[[96,[13]],1],[[93,[13]]]],[[[97,[13]],1],[[93,[13]]]],[[[95,[13]],[41,[40,13]]],[[10,[[92,[13]]]]]],[[[41,[40,13]]],9],[[[94,[52]]],9],[[[41,[40,13]]],9],[[[41,[40,13]]],9],[[[94,[55]]],9],[[[41,[40,13]]],[[102,[13]]]],[[[94,[51]]]],[9,[[92,[13]]]],[[[41,[40,13]]],[[102,[13]]]],[[[41,[40,13]]]],[[[94,[36]]]],[[[41,[40,13]]],10],[[[41,[40,13]],[92,[13]]],10],[[[94,[67]]],10],[[[41,[40,13]]],10],[[[41,[40,13]],[92,[13]]],10],[[[94,[108]]],10],[[[41,[40,13]]],[[0,[13]]]],[[[41,[40,13]]],[[110,[13]]]],[[[92,[32]],[92,[32]]],[[10,[4]]]],[[[93,[32]],[93,[32]]],[[10,[4]]]],[[[41,[40,13]]],[[73,[[97,[13]]]]]],[[[41,[40,13]]],[[73,[[96,[13]]]]]],[[[41,[40,13]],[93,[13]]],10],[[[41,[40,13]],[92,[13]]],10],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[41,[40,13]],9]],[[[41,[40,13]]]],[[[94,[48]]]],[[[41,[40,13]],33]],[[[41,[40,13]],33]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[41,[40,13]]]],[[[98,[40,13]]]],[[[101,[40,13]]]],[[[110,[13]]]],[[[109,[13]]]],[[[102,[13]]]],[[[103,[13]]]],[[[105,[13]]]],[[[106,[13]]]],[[[97,[13]]],[[92,[13]]]],[[[104,[13]]]],[[[97,[13]]],[[92,[13]]]],[[[104,[13]]]],[[[41,[40,13]],[93,[13]]],9],[[[41,[40,13]],[92,[13]]],9],[[[94,[52]]],9],[[[94,[107]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[41,[40,13]]]],[[[41,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[41,[40,13]]],18],[[[94,[48]]]],[[]],[[[104,[13]]]],[[[104,[13]]]],0,0,[[9,9],[[41,[40,13]]]],[[9,9],[[41,[40,13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[116,[115,40]],115,115],10],[[[116,[115,40]]],10],[[[116,[115,40]]]],[[[116,[115,40]],115],115],[[[116,[[0,[50,27,31]],40]]]],[[[116,[115,40]]],[[117,[115,40]]]],[[[116,[115,40]]],[[118,[115,40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[115,40]]]],[[[116,[115,40]]]],[119,119],[[[116,[19,19,19]]],[[116,[19,19,19]]]],[[[120,[[0,[115,19]]]]],[[120,[[0,[115,19]]]]]],[[[121,[19,[0,[40,19]]]]],[[121,[19,[0,[40,19]]]]]],[[[122,[19,[0,[40,19]]]]],[[122,[19,[0,[40,19]]]]]],[[[123,[[0,[115,19]],19,[0,[40,19]]]]],[[123,[[0,[115,19]],19,[0,[40,19]]]]]],[[[124,[[0,[115,19]],19,[0,[40,19]]]]],[[124,[[0,[115,19]],19,[0,[40,19]]]]]],[[[117,[[0,[115,19]],19,19]]],[[117,[[0,[115,19]],19,19]]]],[[[125,[[0,[115,19]],19,19]]],[[125,[[0,[115,19]],19,19]]]],[[[126,[[0,[115,19]],19,19]]],[[126,[[0,[115,19]],19,19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[119,119],4],[[],4],[[[116,[115,40]],115,115],5],[[[116,[115,40]],115],5],[[[118,[115,40]]],9],[[[117,[115,40]]],9],[[],[[116,[115,40]]]],[119],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]]],[[[116,[115,40]],115,115],10],[[[116,[115,40]],115,115],10],[[[116,[115,40]],115],[[123,[115,40]]]],[[[116,[115,40]]]],[[[116,[115,40]],1]],[[[116,[115,40]],115,1],[[124,[115,40]]]],[[119,119],5],[[],5],[[],5],[[],5],[[[116,[115,40]],87]],[[[119,[30]],6],7],[[[116,[[0,[59,31,30]],30,40]],6],7],[[[120,[[0,[115,30]]]],6],7],[[[121,[30,[0,[40,30]]]],6],7],[[[122,[30,[0,[40,30]]]],6],7],[[[123,[[0,[115,30]],30,[0,[40,30]]]],6],7],[[[124,[[0,[115,30]],30,[0,[40,30]]]],6],7],[[[117,[[0,[115,30]],30,30]],6],7],[[[125,[[0,[115,30]],30,30]],6],7],[[[126,[[0,[115,30]],30,30]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[116,[115,40]]]],[87,[[116,[115,40]]]],[[[41,[115,19,40,13]]],[[116,[115,19,40]]]],[[[116,[115,40]],9]],[[[116,[115,40]],9]],[87,[[116,[115,40]]]],[[119,8]],[[[116,[115,40]]]],[[[116,[115,40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[115,40]]],[[41,[115,40,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[116,[[0,[50,27,31]],40]],[0,[50,27,31]],[0,[50,27,31]]],5],[[[116,[115,40]]],5],[[[118,[115,40]]],10],[[[117,[115,40]]],10],[[[120,[115]]],9],[[[116,[[0,[50,27,31]],40]]]],[[[116,[115,40]],115],[[121,[115,40]]]],[[[116,[115,40]],115,1],[[122,[115,40]]]],[[[116,[[0,[50,27,31]],40]],[0,[50,27,31]],1]],[[],[[116,[115,40]]]],[[[118,[115,40]]],10],[[[120,[115]]],10],[[[121,[115,40]]],[[10,[115]]]],[[[122,[115,40]]],[[10,[115]]]],[[[123,[115,40]]],10],[[[124,[115,40]]],10],[[[117,[115,40]]],10],[[[125,[115,40]]],10],[[[126,[115,40]]],10],[[[118,[115,40]]],10],[[[120,[115]]],10],[[[117,[115,40]]],10],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[[116,[115,40]]]],[[[116,[115,40]]]],[[[116,[115,40]]],[[120,[115]]]],[[[118,[115,40]],9],10],[[[117,[115,40]],9],10],[[119,119],[[10,[4]]]],[[[116,[115,40]],115,115],10],[[[116,[115,40]],115],5],[[[116,[[0,[50,27,31]],40]]]],[[[120,[115]],33],10],[[[120,[115]],33]],[[[118,[115,40]]]],[[[120,[115]]]],[[[121,[115,40]]]],[[[122,[115,40]]]],[[[123,[115,40]]]],[[[124,[115,40]]]],[[[117,[115,40]]]],[[[125,[115,40]]]],[[[126,[115,40]]]],[[[116,[115,40]]],9],[[[116,[115,40]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[116,[115,40]]]],[[[116,[[0,[50,27,31]],40]]],[[127,[[0,[50,27,31]]]]]],[[9,9],[[116,[115,40]]]],[[9,9],[[116,[115,40]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]]],10],[[[129,[40,128,13]]],[[130,[13]]]],[[[129,[40,128,13]]]],[[[129,[40,128,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[129,[40,128,13]]]],[[[129,[19,19,19,[0,[19,128]],19]]],[[129,[19,19,19,[0,[19,128]],19]]]],[[[131,[19]]],[[131,[19]]]],[[[132,[19,19]]],[[132,[19,19]]]],[[[133,[[0,[19,40]],[0,[19,128]],19]]],[[133,[[0,[19,40]],[0,[19,128]],19]]]],[[[134,[[0,[19,40]],[0,[19,128]],19]]],[[134,[[0,[19,40]],[0,[19,128]],19]]]],[[[135,[[0,[19,40]],[0,[19,128]],19]]],[[135,[[0,[19,40]],[0,[19,128]],19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[137,[136]]]],[[],[[129,[40,128,13]]]],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]],[[135,[40,128,13]]]],[[[129,[2,128,13]],[130,[13]],1],[[135,[2,128,13]]]],[[[129,[2,128,13]],1]],[[[129,[28,40,128,13]],87]],[[[131,[30]],6],7],[[[132,[30,30]],6],7],[[[133,[[0,[30,40]],[0,[30,128]],30]],6],7],[[[134,[[0,[30,40]],[0,[30,128]],30]],6],7],[[[135,[[0,[30,40]],[0,[30,128]],30]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[129,[28,40,128,13]]]],[[[129,[40,128,13]],9]],[[[129,[40,128,13]],[130,[13]],[130,[13]]],5],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]]]],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[129,[40,128,13]],[130,[13]],[130,[13]]],5],[[[129,[40,128,13]]],5],[[],5],[[[129,[40,128,13]],[130,[13]]],[[134,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[2,128,13]],[130,[13]],1],[[134,[2,128,13]]]],[[[129,[2,128,13]],[130,[13]],1]],[[],[[129,[2]]]],[[],[[129,[3]]]],[[[131,[13]]],10],[[[132,[13]]],10],[[[133,[40,128,13]]],10],[[[134,[40,128,13]]],10],[[[135,[40,128,13]]],10],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]],9],[[[129,[40,128,13]]]],[9,130],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]]],[[[129,[40,128,13]],[130,[13]]]],[[[129,[40,128,13]]]],[[[131,[13]]]],[[[132,[13]]]],[[[134,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[129,[40,128,13]]]],[[[129,[40,128,13]],[130,[13]],[130,[13]]],10],[[[129,[40,128,13]]],18],[9,[[129,[40,128,13]]]],[[]],[[[41,[19,19,40,13]],[41,[19,19,40,13]],19]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[111,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[111,[40,13]]],10],[[[111,[40,13]]]],[[[111,[40,13]]],[[92,[13]]]],[[[111,[40,13]]],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[111,[40,13]]]],[[[111,[40,13]]]],[[[111,[40,13]]]],[[[111,[19,19,13]]],[[111,[19,19,13]]]],[[[138,[13]]],[[138,[13]]]],[[[139,[19,[0,[19,13]]]]],[[139,[19,[0,[19,13]]]]]],[[[140,[13]]],[[140,[13]]]],[[[141,[19,[0,[40,19]],[0,[13,19]]]]],[[141,[19,[0,[40,19]],[0,[13,19]]]]]],[[[142,[19,[0,[40,19]],[0,[13,19]]]]],[[142,[19,[0,[40,19]],[0,[13,19]]]]]],[[[143,[19,19]]],[[143,[19,19]]]],[[[144,[19,19,[0,[19,13]]]]],[[144,[19,19,[0,[19,13]]]]]],[[[145,[19,19]]],[[145,[19,19]]]],[[[146,[19,19]]],[[146,[19,19]]]],[[[147,[19,19]]],[[147,[19,19]]]],[[[111,[19,19,13]],[111,[19,19,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[111,[40,13]],[92,[13]],[92,[13]]],5],[[[111,[40,13]],[92,[13]]],5],[[],[[111,[40,13]]]],[[[145,[13]]],[[138,[13]]]],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]],[93,[13]]],10],0,[[[111,[40,13]]],[[147,[13]]]],[[[111,[40,13]]]],[[[111,[40,13]]],10],[[[111,[40,13]],[93,[13]]],10],[[[111,[40,13]]],10],[[[111,[40,13]],[93,[13]]],10],[[[111,[40,13]]],17],[[[111,[40,13]]],17],[[[111,[40,13]]]],[[[111,[40,13]],[92,[13]]],[[141,[40,13]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],[[142,[40,13]]]],[[[111,[40,13]],[92,[13]],1],[[141,[40,13]]]],[[[111,[40,13]],1]],[[[140,[29,13]],[140,[29,13]]],5],[[[111,[28,40,13]],87]],[[[111,[40,13]],1],[[144,[40,13]]]],[[[111,[40,13]],33,33],[[111,[40,13]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],[[10,[[93,[13]]]]]],[[[111,[40,13]],[92,[13]],[92,[13]]],10],[[[111,[30,30,40,13]],6],7],[[[139,[30,[0,[30,13]]]],6],7],[[[140,[30,30]],6],7],[[[141,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[142,[30,[0,[40,30]],[0,[13,30]]]],6],7],[[[143,[30,30]],6],7],[[[144,[30,30,[0,[30,13]]]],6],7],[[[145,[30,30]],6],7],[[[146,[30,30]],6],7],[[[147,[30,30]],6],7],[[[41,[40,13]]],[[111,[40,13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[87,[[111,[28,40,13]]]],[87,[[111,[40,13]]]],[[[111,[40,13]],9]],[[[111,[40,13]],9]],[[[140,[13]]]],[[[111,[40,13]],[92,[13]]]],[[[111,[40,13]],[93,[13]]]],[[[111,[40,13]],[92,[13]]]],[[[111,[40,13]],[93,[13]]]],[[[111,[40,13]],114,114]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[111,[40,13]],18,[92,[13]],[92,[13]]],5],[[[111,[40,13]]],5],[[[111,[40,13]],33,33],[[111,[40,13]]]],[[[111,[40,13]]]],[[[111,[40,13]],[92,[13]]],[[145,[13]]]],[[[111,[40,13]],[92,[13]],1],[[145,[13]]]],[[[111,[40,13]],[92,[13]],1]],[[[111,[40,13]],[92,[13]]],[[145,[13]]]],[[],[[111,[2]]]],[[[138,[13]],[111,[40,13]]],10],[[[139,[13]]],10],[[[141,[40,13]]],10],[[[142,[40,13]]],[[10,[[140,[13]]]]]],[[[143,[13]]],10],[[[144,[40,13]]],[[10,[[92,[13]]]]]],[[[145,[13]]],[[10,[[92,[13]]]]]],[[[146,[13]]],10],[[[147,[13]]],10],[[[139,[13]]],10],[[[143,[13]]],10],[[[146,[13]]],10],[[[147,[13]]],10],[[[138,[13]],[111,[40,13]]],[[10,[[93,[13]]]]]],[[[138,[13]],[111,[40,13]]],[[10,[[92,[13]]]]]],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]]],9],[[[111,[40,13]]]],0,[[[111,[40,13]]],[[146,[13]]]],[[[111,[40,13]]]],[[[111,[40,13]]],10],[[[111,[40,13]],[92,[13]]],10],[[[111,[40,13]]],10],[[[111,[40,13]],[92,[13]]],10],[[[111,[40,13]]],17],[[[111,[40,13]]],17],[[[111,[40,13]],[93,[13]]],10],[[[111,[40,13]],[92,[13]]],10],[[[111,[40,13]]]],[[[111,[40,13]],33]],[[[111,[40,13]],33]],[[[111,[40,13]]]],[[[139,[13]]]],[[[142,[40,13]]]],[[[144,[40,13]]]],[[[146,[13]]]],[[[147,[13]]]],[[[140,[13]]]],[[[140,[13]]]],[[[111,[40,13]],[93,[13]]],9],[[[111,[40,13]],[92,[13]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[111,[40,13]],[92,[13]],[92,[13]]],[[93,[13]]]],[[[111,[40,13]]]],[[[111,[40,13]]],18],[[[140,[13]]]],[[[140,[13]]]],[[9,9],[[111,[40,13]]]],[[9,9],[[111,[40,13]]]],0,[[]],[[]],[[[148,[19]]],[[148,[19]]]],[[]],[[[148,[13]],13,13],5],[[[148,[13]],13],13],[[[148,[13]],13],13],[[[148,[30]],6],7],[[]],[[]],[[[148,[13]]],[[42,[13]]]],[9,[[148,[13]]]],[[]],[[],11],[[],11],[[],12],[[[148,[13]],13,13],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[[149,[66]]]],[150],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[151,10],[[],151],[152,152],[[[153,[19]]],[[153,[19]]]],[[[151,[19]]],[[151,[19]]]],[[[154,[19,19]]],[[154,[19,19]]]],[[[155,[19,19]]],[[155,[19,19]]]],[[[156,[19,19]]],[[156,[19,19]]]],[[[157,[19,19]]],[[157,[19,19]]]],[[[158,[19,19]]],[[158,[19,19]]]],[[[159,[19,19]]],[[159,[19,19]]]],[[[160,[19,19]]],[[160,[19,19]]]],[[[161,[19,19]]],[[161,[19,19]]]],[[[162,[19,19,19]]],[[162,[19,19,19]]]],[[[163,[19,19,19]]],[[163,[19,19,19]]]],[[[164,[19,19]]],[[164,[19,19]]]],[[[165,[[0,[54,19]],19]]],[[165,[[0,[54,19]],19]]]],[[[166,[19,19,19]]],[[166,[19,19,19]]]],[[[167,[[0,[68,19]],19]]],[[167,[[0,[68,19]],19]]]],[[[149,[19]]],[[149,[19]]]],[[[168,[19]]],[[168,[19]]]],[[[150,[19]]],[[150,[19]]]],[[[169,[19]]],[[169,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[152,152],4],[[],4],[[[158,[[170,[19]],19]]],19],[[]],[[],151],[[],152],[[],151],[[],[[154,[28]]]],[[],[[155,[28]]]],[[],[[156,[28]]]],[[],[[157,[28]]]],[[[0,[47,48]],87,33],171],0,0,0,[[],9],[[[159,[107]]],9],[[[164,[107]]],9],[[[149,[107]]],9],[[],9],[[[149,[65]]],9],[[]],[[[159,[44,172]]]],[[[164,[44,173]]]],[[[149,[44]]]],[[[159,[67,172]]],10],[[[149,[67]]],10],[[[149,[108]]],10],[[]],[[[159,[54,172]]]],[[[164,[54,173]]]],[[[149,[68]]]],[1],[[[159,[68,172]],1]],[[[164,[68,173]],1]],[[[149,[68]],1]],[[[0,[49,48]]],[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[49,48]]],[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[152,152],5],[[],5],[[],5],[[],5],0,[[152,6],7],[[[153,[30]],6],7],[[[151,[30]],6],7],[[[154,[30,30]],6],7],[[[155,[30,30]],6],7],[[[158,[30,30]],6],7],[[[159,[30,30]],6],7],[[[160,[30,30]],6],7],[[[161,[30,30]],6],7],[[[162,[30,30,30]],6],7],[[[163,[30,30,30]],6],7],[[[164,[30,30]],6],7],[[[165,[[0,[54,30]],30]],6],7],[[[166,[30,30,30]],6],7],[[[167,[[0,[68,30]],30]],6],7],[[[149,[30]],6],7],[[[168,[30]],6],7],[[[150,[30]],6],7],[[[169,[30]],6],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[72,91],[[159,[72,91]]]],[[44,91],[[164,[44,91]]]],[9],[9],[[[159,[107]],9]],[[[159,[52]],9]],[[[164,[52]],9]],[[[164,[107]],9]],[[[149,[52]],9]],[[[149,[107]],9]],[[[42,[[0,[50,29]]]],[45,[[0,[50,29]]]]],[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[152,8]],[[]],[[]],[[[150,[174]]]],[[],5],[[],5],[[[158,[[170,[19]],19]]],[[170,[19]]]],[[[158,[[170,[19]],19]]],[[170,[19]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[150],[[],5],[[[149,[66]]],5],[[],5],[[],5],[[86,19],[[158,[86,19]]]],[[86,19],[[158,[86,19]]]],[[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[50,29]]]],[[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[50,29]]]],[[]],[[[159,[47,172]]]],[[[164,[54,173]]]],[[[149,[53]]]],[1],[[[159,[53,172]],1]],[[[164,[68,173]],1]],[[[149,[53]],1]],[[[0,[49,48]],[0,[50,29]]],[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[49,48]],[0,[50,29]]],[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[49,48]],[0,[50,29]]],[[156,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[0,[51,53,48]]],[[157,[[0,[50,29]],[45,[[0,[50,29]]]]]]]],[[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]],47],[[10,[[0,[50,29]]]]]],[[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]],47],[[10,[[0,[50,29]]]]]],[[[156,[[0,[50,29]],[45,[[0,[50,29]]]]]],47],[[10,[[0,[50,29]]]]]],[[[157,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[53,48]]],[[10,[[0,[50,29]]]]]],[[[158,[[170,[19]],19]]],10],[[[160,[17,172]]],10],[[[161,[17,172]]],10],[[[162,[44,17,172]]],10],[[[163,[54,17,172]]],10],[[[165,[54,173]]],10],[[[166,[44,17,173]]],10],[[[167,[68,173]]],10],[[[168,[17]]],10],[[[169,[17]]],10],[[],9],[[[159,[52]]],9],[[[164,[52]]],9],[[[149,[52]]],9],[[],9],[[[164,[55]]],9],[[[149,[55]]],9],[[]],[[[159,[51,172]]]],[[[164,[51]]]],[[[149,[51]]]],[[]],[[[159,[36,172]]]],[[[164,[36]]]],[[[149,[36]]]],[[[159,[67,172]]],10],[[[149,[67]]],10],[[[149,[108]]],10],[[152,152],[[10,[4]]]],[[[154,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[49,48]]]],[[[155,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[49,48]]]],[[[157,[[0,[50,29]],[45,[[0,[50,29]]]]]],[0,[51,53,48]]]],[[]],[[[159,[48]]]],[[[164,[48]]]],[[[149,[48]]]],[[],5],[151,5],[[],5],[151,5],[[[160,[17,172]]]],[[[161,[17,172]]]],[[[162,[44,17,172]]]],[[[163,[54,17,172]]]],[[[165,[54,173]]]],[[[166,[44,17,173]]]],[[[167,[68,173]]]],[[[168,[17]]]],[[[169,[17]]]],[[]],[[[150,[174]]]],0,0,0,[[]],[[[150,[174]]]],[[],9],[[],9],[[[159,[107]]],9],[[[159,[52]]],9],[[[164,[52]]],9],[[[164,[107]]],9],[[[149,[52]]],9],[[[149,[107]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],5],[[]],[[[159,[48]]]],[[[164,[48]]]],[[[149,[48]]]],[[],10],[[154,[0,[47,48]]],10],[[155,[0,[47,48]]],10],[[156,[0,[47,48]]],10],[[157,[0,[53,48]]],10],[[]],[[]],[[[150,[174]]]]],"c":[354],"p":[[4,"Direction"],[4,"Directed"],[4,"Undirected"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[15,"usize"],[4,"Option"],[4,"Result"],[3,"TypeId"],[8,"IndexType"],[3,"List"],[6,"NodeIndex"],[3,"EdgeIndex"],[8,"Iterator"],[3,"FixedBitSet"],[8,"Clone"],[3,"OutgoingEdgeIndices"],[3,"Neighbors"],[3,"EdgeReference"],[3,"EdgeIndices"],[3,"NodeIndices"],[3,"EdgeReferences"],[3,"OutgoingEdgeReferences"],[8,"Ord"],[8,"Default"],[8,"PartialEq"],[8,"Debug"],[8,"Hash"],[8,"PartialOrd"],[8,"FnMut"],[3,"DfsSpace"],[8,"Data"],[8,"IntoNodeReferences"],[3,"MinSpanningTree"],[3,"Cycle"],[3,"NegativeCycle"],[8,"EdgeType"],[3,"Graph"],[3,"Vec"],[8,"NodeCompactIndexable"],[8,"IntoEdgeReferences"],[8,"VisitMap"],[3,"TarjanScc"],[8,"IntoNeighbors"],[8,"Visitable"],[8,"GraphRef"],[8,"Copy"],[8,"IntoNodeIdentifiers"],[8,"NodeIndexable"],[8,"IntoNeighborsDirected"],[8,"IntoEdges"],[8,"NodeCount"],[3,"Paths"],[8,"Measure"],[3,"HashMap"],[8,"Eq"],[3,"Dominators"],[3,"DominatorsIter"],[3,"DominatedByIter"],[8,"GraphProp"],[8,"BoundedMeasure"],[8,"EdgeCount"],[8,"GetAdjacencyMatrix"],[8,"DataMap"],[8,"IntoEdgesDirected"],[3,"Matching"],[3,"MatchedEdges"],[3,"MatchedNodes"],[8,"GraphBase"],[15,"slice"],[3,"Csr"],[6,"NodeIndex"],[3,"EdgesNotSorted"],[3,"Edges"],[3,"EdgeReference"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[8,"IntoWeightedEdge"],[4,"Element"],[3,"FilterElements"],[8,"Sized"],[8,"IntoIterator"],[4,"Config"],[3,"Dot"],[3,"String"],[8,"Fn"],[3,"NodeIndex"],[3,"EdgeIndex"],[3,"Frozen"],[3,"WalkNeighbors"],[3,"Node"],[3,"Edge"],[3,"Externals"],[3,"Neighbors"],[3,"Edges"],[3,"EdgesConnecting"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"EdgeReference"],[3,"NodeReferences"],[3,"EdgeReferences"],[8,"EdgeIndexable"],[8,"DataMapMut"],[3,"EdgeWeightsMut"],[3,"NodeWeightsMut"],[3,"StableGraph"],[8,"Index"],[8,"IndexMut"],[8,"GraphIndex"],[8,"NodeTrait"],[3,"GraphMap"],[3,"AllEdges"],[3,"AllEdgesMut"],[3,"Ptr"],[3,"Nodes"],[3,"Neighbors"],[3,"NeighborsDirected"],[3,"Edges"],[3,"EdgesDirected"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"HashSet"],[8,"Nullable"],[3,"MatrixGraph"],[6,"NodeIndex"],[3,"NodeIdentifiers"],[3,"NodeReferences"],[3,"EdgeReferences"],[3,"Neighbors"],[3,"Edges"],[8,"Zero"],[3,"NotZero"],[3,"WalkNeighbors"],[3,"NodeReferences"],[3,"EdgeReference"],[3,"Edges"],[3,"EdgesConnecting"],[3,"EdgeReferences"],[3,"Externals"],[3,"Neighbors"],[3,"NodeIndices"],[3,"EdgeIndices"],[3,"UnionFind"],[3,"Reversed"],[3,"ReversedEdgeReference"],[4,"Control"],[3,"Time"],[4,"DfsEvent"],[3,"Dfs"],[3,"DfsPostOrder"],[3,"Bfs"],[3,"Topo"],[3,"WalkerIter"],[3,"NodeFiltered"],[3,"NodeFilteredNeighbors"],[3,"NodeFilteredNodes"],[3,"NodeFilteredEdgeReferences"],[3,"NodeFilteredEdges"],[3,"EdgeFiltered"],[3,"EdgeFilteredNeighbors"],[3,"EdgeFilteredEdges"],[3,"EdgeFilteredNeighborsDirected"],[3,"ReversedEdges"],[3,"ReversedEdgeReferences"],[8,"Walker"],[8,"ControlFlow"],[8,"FilterNode"],[8,"FilterEdge"],[8,"EdgeRef"],[8,"FloatMeasure"],[8,"Build"],[8,"ElementIterator"],[8,"FromElements"],[8,"Create"],[13,"Edge"],[13,"Node"],[8,"NodeRef"]]},\
"pin_project_lite":{"doc":"A lightweight version of pin-project written with …","t":"O","n":["pin_project"],"q":[[0,"pin_project_lite"]],"d":["A macro that creates a projection type covering all the …"],"i":[0],"f":[0],"c":[],"p":[]},\
"pin_utils":{"doc":"Utilities for pinning","t":"OOO","n":["pin_mut","unsafe_pinned","unsafe_unpinned"],"q":[[0,"pin_utils"]],"d":["Pins a value on the stack.","A pinned projection of a struct field.","An unpinned projection of a struct field."],"i":[0,0,0],"f":[0,0,0],"c":[],"p":[]},\
"proc_macro2":{"doc":"github crates-io docs-rs","t":"NNNEDNDNNDDNNNDNEDDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDCLLLLLLLLLLLLLL","n":["Alone","Brace","Bracket","Delimiter","Group","Group","Ident","Ident","Joint","LexError","Literal","Literal","None","Parenthesis","Punct","Punct","Spacing","Span","TokenStream","TokenTree","as_char","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_string","call_site","character","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","delim_span","delimiter","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","from_str","from_str","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","into","into","into","into","into","into","into","into","into","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","new","new","new","new_raw","partial_cmp","resolved_at","set_span","set_span","set_span","set_span","set_span","source_text","spacing","span","span","span","span","span","span","span_close","span_open","stream","string","subspan","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","token_stream","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[231,"proc_macro2::extra"],[246,"proc_macro2::token_stream"]],"d":["E.g. <code>+</code> is <code>Alone</code> in <code>+ =</code>, <code>+ident</code> or <code>+()</code>.","<code>{ ... }</code>","<code>[ ... ]</code>","Describes how a sequence of token trees is delimited.","A delimited token stream.","A token stream surrounded by bracket delimiters.","A word of Rust code, which may be a keyword or legal …","An identifier.","E.g. <code>+</code> is <code>Joint</code> in <code>+=</code> or <code>&#39;</code> is <code>Joint</code> in <code>&#39;#</code>.","Error returned from <code>TokenStream::from_str</code>.","A literal string (<code>&quot;hello&quot;</code>), byte string (<code>b&quot;hello&quot;</code>), …","A literal character (<code>&#39;a&#39;</code>), string (<code>&quot;hello&quot;</code>), number (<code>2.3</code>), …","<code>Ø ... Ø</code>","<code>( ... )</code>","A <code>Punct</code> is a single punctuation character like <code>+</code>, <code>-</code> or <code>#</code>.","A single punctuation character (<code>+</code>, <code>,</code>, <code>$</code>, etc.).","Whether a <code>Punct</code> is followed immediately by another <code>Punct</code> …","A region of source code, along with macro expansion …","An abstract stream of tokens, or more concretely a …","A single token or a delimited sequence of token trees …","Returns the value of this punctuation character as <code>char</code>.","","","","","","","","","","","","","","","","","","","","","Byte string literal.","The span of the invocation of the current procedural macro.","Character literal.","","","","","","","","","","","","","","","","","","","","","Returns an object that holds this group’s <code>span_open()</code> and","Returns the punctuation used as the delimiter for this …","","","","","","","","","","Items which do not have a correspondence to any API in the …","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","Creates a new suffixed floating-point literal.","Creates a new unsuffixed floating-point literal.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Checks if this <code>TokenStream</code> is empty.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Create a new span encompassing <code>self</code> and <code>other</code>.","Creates a new span with the same name resolution behavior …","The span located at the invocation of the procedural …","Returns an empty <code>TokenStream</code> containing no token trees.","Creates a new <code>Group</code> with the given delimiter and token …","Creates a new <code>Punct</code> from the given character and spacing.","Creates a new <code>Ident</code> with the given <code>string</code> as well as the …","Same as <code>Ident::new</code>, but creates a raw identifier (<code>r#ident</code>…","","Creates a new span with the same line/column information …","Configures the span for <em>only this token</em>.","Configures the span for this <code>Group</code>’s delimiters, but not …","Configure the span for this punctuation character.","Configures the span of this <code>Ident</code>, possibly changing its …","Configures the span associated for this literal.","Returns the source text behind a span. This preserves the …","Returns the spacing of this punctuation character, …","","Returns the span of this tree, delegating to the <code>span</code> …","Returns the span for the delimiters of this token stream, …","Returns the span for this punctuation character.","Returns the span of this <code>Ident</code>.","Returns the span encompassing this literal.","Returns the span pointing to the closing delimiter of this …","Returns the span pointing to the opening delimiter of this …","Returns the <code>TokenStream</code> of tokens that are delimited in …","String literal.","Returns a <code>Span</code> that is a subset of <code>self.span()</code> containing …","","","","","","","","","","","","","","","","","Public implementation details for the <code>TokenStream</code> type, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","Convert <code>proc_macro2::Span</code> to <code>proc_macro::Span</code>.","Creates a new suffixed integer literal with the specified …","Creates a new unsuffixed integer literal with the …","An object that holds a <code>Group</code>’s <code>span_open()</code> and …","","","","","Returns a span for the closing punctuation of the group …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns a span covering the entire delimited group.","Returns a span for the opening punctuation of the group …","","","","","An iterator over <code>TokenStream</code>’s <code>TokenTree</code>s.","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","",""],"i":[11,10,10,0,0,8,0,8,11,0,0,8,10,10,0,8,0,0,0,0,1,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,6,5,7,6,8,9,10,1,11,12,5,7,6,8,9,10,1,11,12,5,12,7,9,9,10,11,12,12,10,11,12,7,7,0,5,5,5,5,22,22,7,7,6,8,8,9,9,10,1,1,11,12,12,5,5,22,7,7,7,6,6,8,8,8,8,8,9,10,1,11,12,5,7,7,7,5,12,5,5,5,5,5,5,5,5,5,5,22,7,6,8,9,10,1,11,12,5,7,7,5,5,6,6,6,7,9,1,12,12,12,6,8,9,1,12,5,6,1,22,8,9,1,12,5,9,9,9,5,5,7,6,8,9,10,1,11,12,5,22,7,8,9,1,12,5,0,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,22,7,6,8,9,10,1,11,12,5,5,5,5,5,5,5,5,5,5,5,6,5,5,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[4,[3]]],5],[[],6],[2,5],[7,7],[6,6],[8,8],[9,9],[10,10],[1,1],[11,11],[12,12],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[12,12],13],[[],7],[9,14],[9,10],[[10,10],15],[[11,11],15],[[12,[0,[16,[18,[17]]]]],15],[[12,12],15],[[],15],[[],15],[[],15],[[7,19]],[[7,19]],0,[20,5],[20,5],[21,5],[21,5],[[22,23],24],[[22,23],24],[[7,23],24],[[7,23],24],[[6,23],24],[[8,23],24],[[8,23],24],[[9,23],24],[[9,23],24],[[10,23],24],[[1,23],24],[[1,23],24],[[11,23],24],[[12,23],24],[[12,23],24],[[5,23],24],[[5,23],24],[[]],[8,7],[25,7],[[]],[26,6],[[]],[12,8],[[]],[9,8],[5,8],[1,8],[[]],[[]],[[]],[[]],[[]],[[]],[19,7],[19,7],[17,[[27,[7,22]]]],[17,[[27,[5,22]]]],[[12,28]],[29,5],[29,5],[30,5],[30,5],[31,5],[31,5],[32,5],[32,5],[33,5],[33,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[7,34],[7,15],[35,5],[35,5],[[6,6],[[36,[6]]]],[[6,6],6],[[],6],[[],7],[[10,7],9],[[2,11],1],[[17,6],12],[[17,6],12],[[12,12],[[36,[13]]]],[[6,6],6],[[8,6]],[[9,6]],[[1,6]],[[12,6]],[[5,6]],[6,[[36,[37]]]],[1,11],[22,6],[8,6],[9,6],[1,6],[12,6],[5,6],[9,6],[9,6],[9,7],[17,5],[[5,[39,[38]]],[[36,[6]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],[[],37],0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[41,5],[41,5],[42,5],[42,5],[43,5],[43,5],[44,5],[44,5],[3,5],[3,5],[6,26],[38,5],[38,5],0,[[]],[[]],[14,14],[[]],[14,6],[[14,23],24],[[]],[[]],[14,6],[14,6],[[]],[[],27],[[],27],[[],40],0,0,[[]],[[]],[34,34],[[]],[[34,23],24],[[]],[[]],[[]],[34,[[36,[8]]]],[34],[[]],[[],27],[[],27],[[],40]],"c":[],"p":[[3,"Punct"],[15,"char"],[15,"u8"],[15,"slice"],[3,"Literal"],[3,"Span"],[3,"TokenStream"],[4,"TokenTree"],[3,"Group"],[4,"Delimiter"],[4,"Spacing"],[3,"Ident"],[4,"Ordering"],[3,"DelimSpan"],[15,"bool"],[8,"Sized"],[15,"str"],[8,"AsRef"],[8,"IntoIterator"],[15,"f32"],[15,"f64"],[3,"LexError"],[3,"Formatter"],[6,"Result"],[3,"TokenStream"],[3,"Span"],[4,"Result"],[8,"Hasher"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[3,"IntoIter"],[15,"isize"],[4,"Option"],[3,"String"],[15,"usize"],[8,"RangeBounds"],[3,"TypeId"],[15,"u128"],[15,"u16"],[15,"u32"],[15,"u64"]]},\
"quote":{"doc":"github crates-io docs-rs","t":"IIIKKKKKOLLOOLLLLK","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","into_token_stream","quote","quote_spanned","span","span","to_token_stream","to_token_stream","to_tokens"],"q":[[0,"quote"]],"d":["Specialized formatting trait used by <code>format_ident!</code>.","Types that can be interpolated inside a <code>quote!</code> invocation.","TokenStream extension trait with methods for appending …","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","For use by <code>ToTokens</code> implementations.","Format this value as an identifier fragment.","Formatting macro for constructing <code>Ident</code>s.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","The whole point.","Same as <code>quote!</code>, but applies a given span to all tokens …","Span associated with this <code>IdentFragment</code>.","Span associated with this <code>IdentFragment</code>.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Convert <code>self</code> directly into a <code>TokenStream</code> object.","Write <code>self</code> to the given <code>TokenStream</code>."],"i":[0,0,0,11,11,11,11,12,0,4,4,0,0,12,12,4,4,4],"f":[0,0,0,[[[2,[1]]]],[3],[[3,4]],[[3,4]],[5,6],0,[7,8],[7,8],0,0,[[],[[10,[9]]]],[[],[[10,[9]]]],[[],8],[[],8],[8]],"c":[],"p":[[4,"TokenTree"],[8,"Into"],[8,"IntoIterator"],[8,"ToTokens"],[3,"Formatter"],[6,"Result"],[8,"Sized"],[3,"TokenStream"],[3,"Span"],[4,"Option"],[8,"TokenStreamExt"],[8,"IdentFragment"]]},\
"rustix":{"doc":"<code>rustix</code> provides efficient memory-safe and I/O-safe …","t":"OAAAAAAIIDIIDGKLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLGLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSDEDSSSSNSSSSSSSRNNSSSSNGDDINNSSSSSSNSSDCNIEIEGSSDSSSSSSSSSSSSSNSSSSNNSSSSDIDRSSSSSSSSSSSSSSSSNNNNNGDISRSSSSSSSSSSSSSSSSSSNDDGNDDSSSSSSSSSSSSSDGENNNGGDDGDGNSSSGDSSRRDNNSSSSSSSNSSSDSFFLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFKKKFLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLMMMMMMMMMMMFFFFFCFCFFCFFFLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFFFFFFKLLLLLLLLLLLLLLKKLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLKLKLLLLLLLLLLLLKFLLKLLLLLLLLLLLLLLLLLLLLLLLLMMFFFFFFFFFFFFFFFKKKKLLLLKLLLLLLLLLLLLFFFKLKLLLFFLLLLLLLLLLLLFFFFLFFFLLLLLLLLLLLLFKFLFFLFLFLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLFFFLKLSSSSSSSSDSSSSSSSSSSSSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDSDSSDSSSSSSSSSSSSSDDSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSDGSSSSSSSSSSSSSSSSSSSLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLFFFLLLLLLLLLLLLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLFFFFFFLFFLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFDIEDSIGDNDSSDQGNDNDDNDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIKKKKK","n":["cstr","fd","ffi","fs","io","ioctl","path","AsFd","AsRawFd","BorrowedFd","FromRawFd","IntoRawFd","OwnedFd","RawFd","as_fd","as_fd","as_fd","as_raw_fd","as_raw_fd","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","borrow_raw","clone","clone_into","drop","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_fd","from_raw_fd","into","into","into_raw_fd","into_raw_fd","is_terminal","is_terminal","to_owned","try_clone","try_clone_to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CStr","CString","FromBytesWithNulError","NulError","as_bytes","as_bytes_with_nul","as_c_str","as_cow_c_str","as_cow_c_str","as_cow_c_str","as_ptr","as_ref","as_ref","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_char","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","default","default","deref","description","description","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bytes_until_nul","from_bytes_with_nul","from_bytes_with_nul_unchecked","from_ptr","from_raw","from_vec_unchecked","from_vec_with_nul","from_vec_with_nul_unchecked","hash","hash","index","index","into","into","into","into_boxed_c_str","into_bytes","into_bytes_with_nul","into_c_str","into_c_str","into_c_str","into_c_string","into_raw","into_string","into_vec","into_with_c_str","into_with_c_str","into_with_c_str","is_empty","new","nul_position","partial_cmp","partial_cmp","to_bytes","to_bytes_with_nul","to_owned","to_owned","to_owned","to_owned","to_str","to_string","to_string","to_string_lossy","to_string_lossy","to_string_lossy","to_string_lossy","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ACCMODE","ALL","ALLOW_SEALING","APPEND","ATIME","Access","Advice","AtFlags","BASIC_STATS","BENEATH","BLOCKS","BTIME","BlockDevice","CACHED","CLOEXEC","CLOEXEC","COLLAPSE_RANGE","CREATE","CREATE","CTIME","CWD","CharacterDevice","Current","DIOALIGN","DIRECT","DIRECTORY","DSYNC","Data","Dev","Dir","DirEntry","DirEntryExt","Directory","DontNeed","EACCESS","EMPTY_PATH","EXCHANGE","EXCL","EXEC_OK","EXISTS","End","FSYNC","FUTURE_WRITE","FallocateFlags","FdFlags","Fifo","FileExt","FileType","FileTypeExt","FlockOperation","FsWord","GID","GROW","Gid","HUGETLB","HUGE_16GB","HUGE_16MB","HUGE_1GB","HUGE_1MB","HUGE_256MB","HUGE_2GB","HUGE_2MB","HUGE_32MB","HUGE_512KB","HUGE_512MB","HUGE_64KB","HUGE_8MB","Hole","INO","INSERT_RANGE","IN_ROOT","KEEP_SIZE","LockExclusive","LockShared","MANDLOCK","MNT_ID","MODE","MTIME","MemfdFlags","MetadataExt","Mode","NFS_SUPER_MAGIC","NLINK","NOATIME","NOATIME","NOCTTY","NODEV","NODIRATIME","NOEXEC","NOFOLLOW","NONBLOCK","NOREPLACE","NOSUID","NO_AUTOMOUNT","NO_HIDE_STALE","NO_MAGICLINKS","NO_SYMLINKS","NO_XDEV","NoReuse","NonBlockingLockExclusive","NonBlockingLockShared","NonBlockingUnlock","Normal","Nsecs","OFlags","OpenOptionsExt","PATH","PROC_SUPER_MAGIC","PUNCH_HOLE","RDONLY","RDONLY","RDWR","READ_OK","RELATIME","REMOVEDIR","REPLACE","RGRP","ROOT","ROOT","ROTH","RSYNC","RUSR","RWMODE","RWXG","RWXO","RWXU","Random","RawDir","RawDirEntry","RawMode","RegularFile","RenameFlags","ResolveFlags","SEAL","SGID","SHRINK","SIZE","STATX_DONT_SYNC","STATX_FORCE_SYNC","STATX_SYNC_AS_STAT","SUID","SVTX","SYMLINK_FOLLOW","SYMLINK_NOFOLLOW","SYNC","SYNCHRONOUS","SealFlags","Secs","SeekFrom","Sequential","Socket","Start","Stat","StatFs","StatVfs","StatVfsMountFlags","Statx","StatxFlags","StatxTimestamp","Symlink","TMPFILE","TRUNC","TYPE","Timespec","Timestamps","UID","UNSHARE_RANGE","UTIME_NOW","UTIME_OMIT","Uid","Unknown","Unlock","WGRP","WHITEOUT","WOTH","WRITE","WRITE_OK","WRONLY","WUSR","WillNeed","XGRP","XOTH","XUSR","XattrFlags","ZERO_RANGE","access","accessat","all","all","all","all","all","all","all","all","all","all","all","all","as_raw","as_raw","as_raw_mode","as_raw_mode","atime","atime_nsec","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","blksize","blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chmod","chmodat","chown","chownat","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","complement","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","contains","copy_file_range","ctime","ctime_nsec","custom_flags","cwd","default","dev","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","difference","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","ext4_ioc_resize_fs","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","extend","f_bavail","f_bfree","f_blocks","f_bsize","f_favail","f_ffree","f_files","f_flag","f_frsize","f_fsid","f_namemax","fadvise","fallocate","fchmod","fchown","fcntl_add_seals","fcntl_dupfd_cloexec","fcntl_get_seals","fcntl_getfd","fcntl_getfl","fcntl_lock","fcntl_setfd","fcntl_setfl","fdatasync","fgetxattr","file_name","file_name","file_type","file_type","flistxattr","flock","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fremovexattr","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_name","from_raw","from_raw","from_raw_mode","from_raw_mode","fsetxattr","fstat","fstatfs","fstatvfs","fsync","ftruncate","futimens","getxattr","gid","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","ino","ino","ino","ino","inotify","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","ioctl_blkpbszget","ioctl_blksszget","ioctl_ficlone","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_all","is_block_device","is_buffer_empty","is_char_device","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_empty","is_fifo","is_file_read_write","is_root","is_root","is_socket","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","iter_names","last_access","last_modification","lgetxattr","link","linkat","listxattr","llistxattr","lremovexattr","lsetxattr","lstat","major","makedev","memfd_create","minor","mkdir","mkdirat","mknodat","mode","mode","mtime","mtime_nsec","new","next","next","next_entry_cookie","nlink","not","not","not","not","not","not","not","not","not","not","not","not","open","openat","openat2","rdev","read","read_at","read_exact_at","read_from","read_vectored_at","readlink","readlinkat","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","remove","removexattr","rename","renameat","renameat_with","rewind","rmdir","seek","sendfile","set","set","set","set","set","set","set","set","set","set","set","set","setxattr","size","stat","stat","statat","statfs","statfs","statvfs","statvfs","statx","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","symlink","symlinkat","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","sync","syncfs","tell","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uid","union","union","union","union","union","union","union","union","union","union","union","union","unlink","unlinkat","utimensat","write_all_at","write_at","write_vectored_at","ACCESS","ALL_EVENTS","ATTRIB","CLOEXEC","CLOSE","CLOSE_NOWRITE","CLOSE_WRITE","CREATE","CreateFlags","DELETE","DELETE_SELF","DONT_FOLLOW","EXCL_UNLINK","MASK_ADD","MASK_CREATE","MODIFY","MOVE","MOVED_FROM","MOVED_TO","MOVE_SELF","NONBLOCK","ONESHOT","ONLYDIR","OPEN","WatchFlags","all","all","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","complement","complement","complement","complement","contains","contains","contains","contains","default","difference","difference","difference","difference","empty","empty","empty","empty","eq","eq","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_iter","from_iter","from_name","from_name","from_name","from_name","hash","hash","inotify_add_watch","inotify_init","inotify_remove_watch","insert","insert","insert","insert","intersection","intersection","intersection","intersection","intersects","intersects","intersects","intersects","into","into","into_iter","into_iter","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","iter","iter","iter","iter","iter_names","iter_names","iter_names","iter_names","not","not","remove","remove","remove","remove","set","set","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","toggle","toggle","toggle","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","union","union","union","ACCESS","ADDRINUSE","ADDRNOTAVAIL","ADV","AFNOSUPPORT","AGAIN","ALREADY","APPEND","BADE","BADF","BADFD","BADMSG","BADR","BADRQC","BADSLT","BFONT","BUSY","CANCELED","CHILD","CHRNG","CLOEXEC","CLOEXEC","COMM","CONNABORTED","CONNREFUSED","CONNRESET","DEADLK","DEADLOCK","DESTADDRREQ","DOM","DOTDOT","DQUOT","DSYNC","DupFlags","EXIST","Errno","FAULT","FBIG","FdFlags","HIPRI","HOSTDOWN","HOSTUNREACH","HWPOISON","IDRM","ILSEQ","INPROGRESS","INTR","INVAL","IO","ISCONN","ISDIR","ISNAM","IoSlice","IoSliceMut","KEYEXPIRED","KEYREJECTED","KEYREVOKED","L2HLT","L2NSYNC","L3HLT","L3RST","LIBACC","LIBBAD","LIBEXEC","LIBMAX","LIBSCN","LNRNG","LOOP","MEDIUMTYPE","MFILE","MLINK","MSGSIZE","MULTIHOP","NAMETOOLONG","NAVAIL","NETDOWN","NETRESET","NETUNREACH","NFILE","NOANO","NOBUFS","NOCSI","NODATA","NODEV","NOENT","NOEXEC","NOKEY","NOLCK","NOLINK","NOMEDIUM","NOMEM","NOMSG","NONET","NOPKG","NOPROTOOPT","NOSPC","NOSR","NOSTR","NOSYS","NOTBLK","NOTCONN","NOTDIR","NOTEMPTY","NOTNAM","NOTRECOVERABLE","NOTSOCK","NOTSUP","NOTTY","NOTUNIQ","NOWAIT","NXIO","OPNOTSUPP","OVERFLOW","OWNERDEAD","PERM","PFNOSUPPORT","PIPE","PROTO","PROTONOSUPPORT","PROTOTYPE","RANGE","REMCHG","REMOTE","REMOTEIO","RESTART","RFKILL","ROFS","ReadWriteFlags","Result","SHUTDOWN","SOCKTNOSUPPORT","SPIPE","SRCH","SRMNT","STALE","STRPIPE","SYNC","TIME","TIMEDOUT","TOOBIG","TOOMANYREFS","TXTBSY","UCLEAN","UNATCH","USERS","WOULDBLOCK","XDEV","XFULL","advance","advance","advance_slices","advance_slices","all","all","all","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","complement","complement","complement","contains","contains","contains","deref","deref","deref_mut","difference","difference","difference","dup","dup2","dup3","empty","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","fcntl_dupfd_cloexec","fcntl_getfd","fcntl_setfd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_io_error","from_iter","from_iter","from_iter","from_name","from_name","from_name","from_raw_os_error","hash","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into_iter","into_iter","into_iter","ioctl_fionbio","ioctl_fionread","is_all","is_all","is_all","is_empty","is_empty","is_empty","iter","iter","iter","iter_names","iter_names","iter_names","kind","new","new","not","not","not","pread","preadv","preadv2","pwrite","pwritev","pwritev2","raw_os_error","read","readv","remove","remove","remove","retry_on_intr","set","set","set","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","write","writev","BadOpcode","CompileTimeOpcode","Direction","Getter","IS_MUTATING","Ioctl","IoctlOutput","NoArg","None","NoneOpcode","OPCODE","OPCODE","Opcode","Output","RawOpcode","Read","ReadOpcode","ReadWrite","ReadWriteOpcode","Setter","Write","WriteOpcode","as_ptr","as_ptr","as_ptr","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_components","hash","hash","into","into","into","into","into","into","into","into","into","into","ioctl","new","new","new","none","old","output_from_ptr","output_from_ptr","output_from_ptr","output_from_ptr","partial_cmp","partial_cmp","raw","read","read_write","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","Arg","as_cow_c_str","as_str","into_c_str","into_with_c_str","to_string_lossy"],"q":[[0,"rustix"],[7,"rustix::fd"],[60,"rustix::ffi"],[178,"rustix::fs"],[1293,"rustix::fs::inotify"],[1474,"rustix::io"],[1852,"rustix::ioctl"],[1984,"rustix::path"]],"d":["A macro for <code>CStr</code> literals.","Export the <code>*Fd</code> types and traits that are used in rustix’…","Utilities related to FFI bindings.","Filesystem operations.","I/O operations.","Unsafe <code>ioctl</code> API.","Filesystem path operations.","A trait to borrow the file descriptor from an underlying …","A trait to extract the raw file descriptor from an …","A borrowed file descriptor.","A trait to express the ability to construct an object from …","A trait to express the ability to consume an object and …","An owned file descriptor.","Raw file descriptors.","Borrows the file descriptor.","","","Extracts the raw file descriptor.","","","","","","","Return a <code>BorrowedFd</code> holding the given raw file descriptor.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Constructs a new instance of <code>Self</code> from the given raw file …","Constructs a new instance of <code>Self</code> from the given raw file …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes this object, returning the raw underlying file …","","","","","Creates a new <code>OwnedFd</code> instance that shares the same …","Creates a new <code>OwnedFd</code> instance that shares the same …","","","","","","","Representation of a borrowed C string.","A type representing an owned, C-compatible, nul-terminated …","An error indicating that a nul byte was not in the …","An error indicating that an interior nul byte was found.","Returns the contents of this <code>CString</code> as a slice of bytes.","Equivalent to <code>CString::as_bytes()</code> except that the returned …","Extracts a <code>CStr</code> slice containing the entire string.","","","","Returns the inner pointer to this C string.","","","","","","","","","","","","","","","Equivalent to C’s <code>char</code> type.","","","","","","","","","","Creates an empty <code>CString</code>.","","","","","","","","","","","","","","","","","","","","","Converts a Vec&lt;NonZeroU8&gt; into a <code>CString</code> without copying …","Returns the argument unchanged.","Converts a <code>Cow&lt;&#39;a, CStr&gt;</code> into a <code>CString</code>, by copying the …","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","Returns the argument unchanged.","Returns the argument unchanged.","Creates a C string wrapper from a byte slice with any …","Creates a C string wrapper from a byte slice with exactly …","Unsafely creates a C string wrapper from a byte slice.","Wraps a raw C string with a safe C string wrapper.","Retakes ownership of a <code>CString</code> that was transferred to C …","Creates a C-compatible string by consuming a byte vector, …","Attempts to converts a Vec&lt;u8&gt; to a <code>CString</code>.","Converts a Vec&lt;u8&gt; to a <code>CString</code> without checking the …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>CString</code> into a boxed <code>CStr</code>.","Consumes the <code>CString</code> and returns the underlying byte …","Equivalent to <code>CString::into_bytes()</code> except that the …","","","","Converts a Box&lt;CStr&gt; into a <code>CString</code> without copying or …","Consumes the <code>CString</code> and transfers ownership of the string …","Converts the <code>CString</code> into a <code>String</code> if it contains valid …","Consumes this error, returning the underlying vector of …","","","","Returns <code>true</code> if <code>self.to_bytes()</code> has a length of 0.","Creates a new C-compatible string from a container of …","Returns the position of the nul byte in the slice that …","","","Converts this C string to a byte slice.","Converts this C string to a byte slice containing the …","","","","","Yields a &amp;str slice if the <code>CStr</code> contains valid UTF-8.","","","","","Converts a <code>CStr</code> into a Cow&lt;str&gt;.","","","","","","","","","","","","<code>O_ACCMODE</code>","<code>STATX_ALL</code>","<code>MFD_ALLOW_SEALING</code>","<code>O_APPEND</code>","<code>STATX_ATIME</code>","<code>*_OK</code> constants for use with <code>accessat</code>.","<code>POSIX_FADV_*</code> constants for use with <code>fadvise</code>.","<code>AT_*</code> constants for use with <code>openat</code>, <code>statat</code>, and other <code>*at</code> …","<code>STATX_BASIC_STATS</code>","<code>RESOLVE_BENEATH</code>","<code>STATX_BLOCKS</code>","<code>STATX_BTIME</code>","<code>S_IFBLK</code>","<code>RESOLVE_CACHED</code> (since Linux 5.12)","<code>O_CLOEXEC</code>","<code>MFD_CLOEXEC</code>","<code>FALLOC_FL_COLLAPSE_RANGE</code>","<code>O_CREAT</code>","<code>XATTR_CREATE</code>","<code>STATX_CTIME</code>","<code>AT_FDCWD</code>—A handle representing the current working …","<code>S_IFCHR</code>","Sets the offset to the current position plus the specified …","<code>STATX_DIOALIGN</code> (since Linux 6.1)","<code>O_DIRECT</code>","<code>O_DIRECTORY</code>","<code>O_DSYNC</code>. Linux 2.6.32 only supports <code>O_SYNC</code>.","Sets the offset to the current position plus the specified …","<code>dev_t</code>","<code>DIR*</code>","<code>struct dirent</code>","Re-export types common to POSIX-ish platforms. …","<code>S_IFDIR</code>","<code>POSIX_FADV_DONTNEED</code>","<code>AT_EACCESS</code>","<code>AT_EMPTY_PATH</code>","<code>RENAME_EXCHANGE</code>","<code>O_EXCL</code>","<code>X_OK</code>","<code>F_OK</code>","Sets the offset to the size of this object plus the …","<code>O_FSYNC</code>. Linux 2.6.32 only supports <code>O_SYNC</code>.","<code>F_SEAL_FUTURE_WRITE</code> (since Linux 5.1)","<code>FALLOC_FL_*</code> constants for use with <code>fallocate</code>.","","<code>S_IFIFO</code>","Re-export types common to POSIX-ish platforms. …","<code>S_IF*</code> constants for use with <code>mknodat</code> and <code>Stat</code>’s <code>st_mode</code> …","Re-export types common to POSIX-ish platforms. …","<code>LOCK_*</code> constants for use with <code>flock</code> and <code>fcntl_lock</code>.","<code>__fsword_t</code>","<code>STATX_GID</code>","<code>F_SEAL_GROW</code>.","<code>gid_t</code>—A Unix group ID.","<code>MFD_HUGETLB</code> (since Linux 4.14)","<code>MFD_HUGE_16GB</code>","<code>MFD_HUGE_16MB</code>","<code>MFD_HUGE_1GB</code>","<code>MFD_HUGE_1MB</code>","<code>MFD_HUGE_256MB</code>","<code>MFD_HUGE_2GB</code>","<code>MFD_HUGE_2MB</code>","<code>MFD_HUGE_32MB</code>","<code>MFD_HUGE_512JB</code>","<code>MFD_HUGE_512MB</code>","<code>MFD_HUGE_64KB</code>","<code>MFD_HUGE_8MB</code>","Sets the offset to the current position plus the specified …","<code>STATX_INO</code>","<code>FALLOC_FL_INSERT_RANGE</code>","<code>RESOLVE_IN_ROOT</code>","<code>FALLOC_FL_KEEP_SIZE</code>","<code>LOCK_EX</code>","<code>LOCK_SH</code>","<code>ST_MANDLOCK</code>","<code>STATX_MNT_ID</code> (since Linux 5.8)","<code>STATX_MODE</code>","<code>STATX_MTIME</code>","<code>MFD_*</code> constants for use with <code>memfd_create</code>.","Re-export types common to POSIX-ish platforms. …","<code>S_I*</code> constants for use with <code>openat</code>, <code>chmodat</code>, and <code>fchmod</code>.","The filesystem magic number for NFS.","<code>STATX_NLINK</code>","<code>O_NOATIME</code>","<code>ST_NOATIME</code>","<code>O_NOCTTY</code>","<code>ST_NODEV</code>","<code>ST_NODIRATIME</code>","<code>ST_NOEXEC</code>","<code>O_NOFOLLOW</code>","<code>O_NONBLOCK</code>","<code>RENAME_NOREPLACE</code>","<code>ST_NOSUID</code>","<code>AT_NO_AUTOMOUNT</code>","<code>FALLOC_FL_NO_HIDE_STALE</code>","<code>RESOLVE_NO_MAGICLINKS</code>","<code>RESOLVE_NO_SYMLINKS</code>","<code>RESOLVE_NO_XDEV</code>","<code>POSIX_FADV_NOREUSE</code>","<code>LOCK_EX | LOCK_NB</code>","<code>LOCK_SH | LOCK_NB</code>","<code>LOCK_UN | LOCK_NB</code>","<code>POSIX_FADV_NORMAL</code>","A type for the <code>tv_sec</code> field of <code>Timespec</code>.","<code>O_*</code> constants for use with <code>openat</code>.","Re-export types common to POSIX-ish platforms. …","<code>O_PATH</code>","The filesystem magic number for procfs.","<code>FALLOC_FL_PUNCH_HOLE</code>","<code>O_RDONLY</code>","<code>ST_RDONLY</code>","<code>O_RDWR</code>","<code>R_OK</code>","<code>ST_RELATIME</code>","<code>AT_REMOVEDIR</code>","<code>XATTR_REPLACE</code>","<code>S_IRGRP</code>","A <code>Uid</code> corresponding to the root user (uid 0).","A <code>Gid</code> corresponding to the root group (gid 0).","<code>S_IROTH</code>","<code>O_RSYNC</code>. Linux 2.6.32 only supports <code>O_SYNC</code>.","<code>S_IRUSR</code>","Similar to <code>ACCMODE</code>, but just includes the read/write …","<code>S_IRWXG</code>","<code>S_IRWXO</code>","<code>S_IRWXU</code>","<code>POSIX_FADV_RANDOM</code>","A directory iterator implemented with getdents.","A raw directory entry, similar to <code>std::fs::DirEntry</code>.","<code>mode_t</code>","<code>S_IFREG</code>","<code>RENAME_*</code> constants for use with <code>renameat_with</code>.","<code>RESOLVE_*</code> constants for use with <code>openat2</code>.","<code>F_SEAL_SEAL</code>.","<code>S_ISGID</code>","<code>F_SEAL_SHRINK</code>.","<code>STATX_SIZE</code>","<code>AT_STATX_DONT_SYNC</code>","<code>AT_STATX_FORCE_SYNC</code>","<code>AT_STATX_SYNC_AS_STAT</code>","<code>S_ISUID</code>","<code>S_ISVTX</code>","<code>AT_SYMLINK_FOLLOW</code>","<code>AT_SYMLINK_NOFOLLOW</code>","<code>O_SYNC</code>","<code>ST_SYNCHRONOUS</code>","<code>F_SEAL_*</code> constants for use with <code>fcntl_add_seals</code> and …","A type for the <code>tv_sec</code> field of <code>Timespec</code>.","Enumeration of possible methods to seek within an I/O …","<code>POSIX_FADV_SEQUENTIAL</code>","<code>S_IFSOCK</code>","Sets the offset to the provided number of bytes.","<code>struct stat</code> for use with <code>statat</code> and <code>fstat</code>.","<code>struct statfs</code> for use with <code>statfs</code> and <code>fstatfs</code>.","<code>struct statvfs</code> for use with <code>statvfs</code> and <code>fstatvfs</code>.","<code>ST_*</code> constants for use with <code>StatVfs</code>.","<code>struct statx</code> for use with <code>statx</code>.","<code>STATX_*</code> constants for use with <code>statx</code>.","<code>struct statx_timestamp</code> for use with <code>Statx</code>.","<code>S_IFLNK</code>","<code>O_TMPFILE</code>","<code>O_TRUNC</code>","<code>STATX_TYPE</code>","<code>struct timespec</code>","Timestamps used by <code>utimensat</code> and <code>futimens</code>.","<code>STATX_UID</code>","<code>FALLOC_FL_UNSHARE_RANGE</code>","<code>UTIME_NOW</code> for use with <code>utimensat</code>.","<code>UTIME_OMIT</code> for use with <code>utimensat</code>.","<code>uid_t</code>—A Unix user ID.","An unknown filesystem object.","<code>LOCK_UN</code>","<code>S_IWGRP</code>","<code>RENAME_WHITEOUT</code>","<code>S_IWOTH</code>","<code>F_SEAL_WRITE</code>.","<code>W_OK</code>","<code>O_WRONLY</code>","<code>S_IWUSR</code>","<code>POSIX_FADV_WILLNEED</code>","<code>S_IXGRP</code>","<code>S_IXOTH</code>","<code>S_IXUSR</code>","<code>XATTR_*</code> constants for use with <code>setxattr</code>, and other …","<code>FALLOC_FL_ZERO_RANGE</code>","<code>access(path, access)</code>—Tests permissions for a file or …","<code>faccessat(dirfd, path, access, flags)</code>—Tests permissions …","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Converts a <code>Uid</code> into a <code>RawUid</code>.","Converts a <code>Gid</code> into a <code>RawGid</code>.","Construct an <code>st_mode</code> value from <code>Stat</code>.","Construct an <code>st_mode</code> value from <code>Stat</code>.","Returns the last access time of the file, in seconds since …","Returns the last access time of the file, in nanoseconds …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the block size for filesystem I/O.","Returns the number of blocks allocated to the file, in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>chmod(path, mode)</code>—Sets file or directory permissions.","<code>fchmodat(dirfd, path, mode, flags)</code>—Sets file or …","<code>chown(path, owner, group)</code>—Sets open file or directory …","<code>fchownat(dirfd, path, owner, group, flags)</code>—Sets file or …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","<code>copy_file_range(fd_in, off_in, fd_out, off_out, len, 0)</code>…","Returns the last status change time of the file, in …","Returns the last status change time of the file, in …","Pass custom flags to the <code>flags</code> argument of <code>open</code>.","Return the value of <code>CWD</code>.","","Returns the ID of the device containing the file.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>ioctl(fd, EXT4_IOC_RESIZE_FS, blocks)</code>—Resize ext4 …","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","<code>posix_fadvise(fd, offset, len, advice)</code>—Declares an …","<code>fallocate(fd, mode, offset, len)</code>—Adjusts file allocation.","<code>fchmod(fd, mode)</code>—Sets open file or directory permissions.","<code>fchown(fd, owner, group)</code>—Sets open file or directory …","<code>fcntl(fd, F_ADD_SEALS)</code>","","<code>fcntl(fd, F_GET_SEALS)</code>","","<code>fcntl(fd, F_GETFL)</code>—Returns a file descriptor’s access …","<code>fcntl(fd, F_SETLK)</code>—Acquire or release an <code>fcntl</code>-style …","","<code>fcntl(fd, F_SETFL, flags)</code>—Sets a file descriptor’s …","<code>fdatasync(fd)</code>—Ensures that file data is written to the …","<code>fgetxattr(fd, name, value.as_ptr(), value.len())</code>—Get …","Returns the file name of this directory entry.","Returns the file name of this directory entry.","Returns the type of this directory entry.","Returns the type of this directory entry.","<code>flistxattr(fd, list.as_ptr(), list.len())</code>—List extended …","<code>flock(fd, operation)</code>—Acquire or release an advisory lock …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>fremovexattr(fd, name)</code>—Remove an extended filesystem …","Returns the argument unchanged.","Returns the argument unchanged.","Support conversions from <code>Mode</code> to raw mode values.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Support conversions from raw mode values to <code>Mode</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Converts a <code>RawUid</code> into a <code>Uid</code>.","Converts a <code>RawGid</code> into a <code>Gid</code>.","Construct a <code>Mode</code> from the mode bits of the <code>st_mode</code> field …","Construct a <code>FileType</code> from the <code>S_IFMT</code> bits of the <code>st_mode</code> …","<code>fsetxattr(fd, name, value.as_ptr(), value.len(), flags)</code>…","<code>fstat(fd)</code>—Queries metadata for an open file or directory.","<code>fstatfs(fd)</code>—Queries filesystem statistics for an open …","<code>fstatvfs(fd)</code>—Queries filesystem statistics for an open …","<code>fsync(fd)</code>—Ensures that file data and metadata is written …","<code>ftruncate(fd, length)</code>—Sets the length of a file.","<code>futimens(fd, times)</code>—Sets timestamps for an open file or …","<code>getxattr(path, name, value.as_ptr(), value.len())</code>—Get …","Returns the group ID of the owner of this file.","","","","","","","","","","","","","","","Returns the inode number.","Returns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …","Returns the inode number of this directory entry.","Return the inode number of this directory entry.","inotify support for working with inotifies","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","<code>ioctl(fd, BLKPBSZGET)</code>—Returns the physical block size of …","<code>ioctl(fd, BLKSSZGET)</code>—Returns the logical block size of a …","<code>ioctl(fd, FICLONE, src_fd)</code>—Share data between open files.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Returns <code>true</code> if this file type is a block device.","Returns true if the internal buffer is empty and will be …","Returns <code>true</code> if this file type is a char device.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Returns <code>true</code> if this file type is a fifo.","<code>fcntl(fd, F_GETFL) &amp; O_ACCMODE</code>","Test whether this uid represents the root user (uid 0).","Test whether this gid represents the root group (gid 0).","Returns <code>true</code> if this file type is a socket.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The timestamp of the last access to a filesystem object.","The timestamp of the last modification of a filesystem …","<code>lgetxattr(path, name, value.as_ptr(), value.len())</code>—Get …","<code>link(old_path, new_path)</code>—Creates a hard link.","<code>linkat(old_dirfd, old_path, new_dirfd, new_path, flags)</code>…","<code>listxattr(path, list.as_ptr(), list.len())</code>—List extended …","<code>llistxattr(path, list.as_ptr(), list.len())</code>—List …","<code>lremovexattr(path, name)</code>—Remove an extended filesystem …","<code>setxattr(path, name, value.as_ptr(), value.len(), flags)</code>…","<code>lstat(path)</code>—Queries metadata for a file or directory, …","<code>major(dev)</code>","<code>makedev(maj, min)</code>","<code>memfd_create(path, flags)</code>","<code>minor(dev)</code>","<code>mkdir(path, mode)</code>—Creates a directory.","<code>mkdirat(fd, path, mode)</code>—Creates a directory.","<code>mknodat(dirfd, path, mode, dev)</code>—Creates special or …","Sets the mode bits that a new file will be created with.","Returns the rights applied to this file.","Returns the last modification time of the file, in seconds …","Returns the last modification time of the file, in …","Create a new iterator from the given file descriptor and …","","Identical to <code>Iterator::next</code> except that <code>Iterator::Item</code> …","Returns the seek cookie to the next directory entry.","Returns the number of hard links pointing to this file.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","<code>open(path, oflags, mode)</code>—Opens a file.","<code>openat(dirfd, path, oflags, mode)</code>—Opens a file.","…","Returns the device ID of this file (if it is a special …","<code>readdir(self)</code>, where <code>None</code> means the end of the directory.","Reads a number of bytes starting from a given offset.","Reads the exact number of byte required to fill <code>buf</code> from …","Construct a <code>Dir</code> that reads entries from the given directory","Like <code>read_at</code>, except that it reads into a slice of buffers.","<code>readlink(path)</code>—Reads the contents of a symlink.","<code>readlinkat(fd, path)</code>—Reads the contents of a symlink.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>removexattr(path, name)</code>—Remove an extended filesystem …","<code>rename(old_path, new_path)</code>—Renames a file or directory.","<code>renameat(old_dirfd, old_path, new_dirfd, new_path)</code>…","<code>renameat2(old_dirfd, old_path, new_dirfd, new_path, flags)</code>…","<code>rewinddir(self)</code>","<code>rmdir(path)</code>—Removes a directory.","<code>lseek(fd, offset, whence)</code>—Repositions a file descriptor …","<code>sendfile(out_fd, in_fd, offset, count)</code>","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","<code>setxattr(path, name, value.as_ptr(), value.len(), flags)</code>…","Returns the total size of this file in bytes.","<code>stat(path)</code>—Queries metadata for a file or directory.","<code>fstat(self)</code>","<code>fstatat(dirfd, path, flags)</code>—Queries metadata for a file …","<code>statfs</code>—Queries filesystem metadata.","<code>fstatfs(self)</code>","<code>statvfs</code>—Queries filesystem metadata, POSIX version.","<code>fstatvfs(self)</code>","<code>statx(dirfd, path, flags, mask, statxbuf)</code>","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>symlink(old_path, new_path)</code>—Creates a symlink.","<code>symlinkat(old_path, new_dirfd, new_path)</code>—Creates a …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","<code>sync</code>—Flush cached filesystem data for all filesystems.","<code>syncfs(fd)</code>—Flush cached filesystem data.","<code>lseek(fd, 0, SEEK_CUR)</code>—Returns the current position …","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the user ID of the owner of this file.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>unlink(path)</code>—Unlinks a file.","<code>unlinkat(fd, path, flags)</code>—Unlinks a file or remove a …","<code>utimensat(dirfd, path, times, flags)</code>—Sets file or …","Attempts to write an entire buffer starting from a given …","Writes a number of bytes starting from a given offset.","Like <code>write_at</code>, except that it writes from a slice of …","<code>IN_ACCESS</code>","<code>IN_ALL_EVENTS</code>","<code>IN_ATTRIB</code>","<code>IN_CLOEXEC</code>","<code>IN_CLOSE</code>","<code>IN_CLOSE_NOWRITE</code>","<code>IN_CLOSE_WRITE</code>","<code>IN_CREATE</code>","<code>IN_*</code> for use with <code>inotify_init</code>.","<code>IN_DELETE</code>","<code>IN_DELETE_SELF</code>","<code>IN_DONT_FOLLOW</code>","<code>IN_EXCL_UNLINK</code>","<code>IN_MASK_ADD</code>","<code>IN_MASK_CREATE</code>","<code>IN_MODIFY</code>","<code>IN_MOVE</code>","<code>IN_MOVED_FROM</code>","<code>IN_MOVED_TO</code>","<code>IN_MOVE_SELF</code>","<code>IN_NONBLOCK</code>","<code>IN_ONESHOT</code>","<code>IN_ONLYDIR</code>","<code>IN_OPEN</code>","<code>IN*</code> for use with <code>inotify_add_watch</code>.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","Get the underlying bits value.","Get the underlying bits value.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","","","<code>inotify_add_watch(self, path, flags)</code>—Adds a watch to …","<code>inotify_init1(flags)</code>—Creates a new inotify object.","<code>inotify_rm_watch(self, wd)</code>—Removes a watch from this …","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>EACCES</code>","<code>EADDRINUSE</code>","<code>EADDRNOTAVAIL</code>","<code>EADV</code>","<code>EAFNOSUPPORT</code>","<code>EAGAIN</code>","<code>EALREADY</code>","<code>RWF_APPEND</code> (since Linux 4.16)","<code>EBADE</code>","<code>EBADF</code>","<code>EBADFD</code>","<code>EBADMSG</code>","<code>EBADR</code>","<code>EBADRQC</code>","<code>EBADSLT</code>","<code>EBFONT</code>","<code>EBUSY</code>","<code>ECANCELED</code>","<code>ECHILD</code>","<code>ECHRNG</code>","<code>FD_CLOEXEC</code>","<code>O_CLOEXEC</code>","<code>ECOMM</code>","<code>ECONNABORTED</code>","<code>ECONNREFUSED</code>","<code>ECONNRESET</code>","<code>EDEADLK</code>","<code>EDEADLOCK</code>","<code>EDESTADDRREQ</code>","<code>EDOM</code>","<code>EDOTDOT</code>","<code>EDQUOT</code>","<code>RWF_DSYNC</code> (since Linux 4.7)","<code>O_*</code> constants for use with <code>dup2</code>.","<code>EEXIST</code>","<code>errno</code>—An error code.","<code>EFAULT</code>","<code>EFBIG</code>","<code>FD_*</code> constants for use with <code>fcntl_getfd</code> and <code>fcntl_setfd</code>.","<code>RWF_HIPRI</code> (since Linux 4.6)","<code>EHOSTDOWN</code>","<code>EHOSTUNREACH</code>","<code>EHWPOISON</code>","<code>EIDRM</code>","<code>EILSEQ</code>","<code>EINPROGRESS</code>","<code>EINTR</code>.","<code>EINVAL</code>","<code>EIO</code>","<code>EISCONN</code>","<code>EISDIR</code>","<code>EISNAM</code>","A buffer type used with <code>Write::write_vectored</code>.","A buffer type used with <code>Read::read_vectored</code>.","<code>EKEYEXPIRED</code>","<code>EKEYREJECTED</code>","<code>EKEYREVOKED</code>","<code>EL2HLT</code>","<code>EL2NSYNC</code>","<code>EL3HLT</code>","<code>EL3RST</code>","<code>ELIBACC</code>","<code>ELIBBAD</code>","<code>ELIBEXEC</code>","<code>ELIBMAX</code>","<code>ELIBSCN</code>","<code>ELNRNG</code>","<code>ELOOP</code>","<code>EMEDIUMTYPE</code>","<code>EMFILE</code>","<code>EMLINK</code>","<code>EMSGSIZE</code>","<code>EMULTIHOP</code>","<code>ENAMETOOLONG</code>","<code>ENAVAIL</code>","<code>ENETDOWN</code>","<code>ENETRESET</code>","<code>ENETUNREACH</code>","<code>ENFILE</code>","<code>ENOANO</code>","<code>ENOBUFS</code>","<code>ENOCSI</code>","<code>ENODATA</code>","<code>ENODEV</code>","<code>ENOENT</code>","<code>ENOEXEC</code>","<code>ENOKEY</code>","<code>ENOLCK</code>","<code>ENOLINK</code>","<code>ENOMEDIUM</code>","<code>ENOMEM</code>","<code>ENOMSG</code>","<code>ENONET</code>","<code>ENOPKG</code>","<code>ENOPROTOOPT</code>","<code>ENOSPC</code>","<code>ENOSR</code>","<code>ENOSTR</code>","<code>ENOSYS</code>","<code>ENOTBLK</code>","<code>ENOTCONN</code>","<code>ENOTDIR</code>","<code>ENOTEMPTY</code>","<code>ENOTNAM</code>","<code>ENOTRECOVERABLE</code>","<code>ENOTSOCK</code>","<code>ENOTSUP</code>","<code>ENOTTY</code>","<code>ENOTUNIQ</code>","<code>RWF_NOWAIT</code> (since Linux 4.14)","<code>ENXIO</code>","<code>EOPNOTSUPP</code>","<code>EOVERFLOW</code>","<code>EOWNERDEAD</code>","<code>EPERM</code>","<code>EPFNOSUPPORT</code>","<code>EPIPE</code>","<code>EPROTO</code>","<code>EPROTONOSUPPORT</code>","<code>EPROTOTYPE</code>","<code>ERANGE</code>","<code>EREMCHG</code>","<code>EREMOTE</code>","<code>EREMOTEIO</code>","<code>ERESTART</code>","<code>ERFKILL</code>","<code>EROFS</code>","<code>RWF_*</code> constants for use with <code>preadv2</code> and <code>pwritev2</code>.","A specialized <code>Result</code> type for <code>rustix</code> APIs.","<code>ESHUTDOWN</code>","<code>ESOCKTNOSUPPORT</code>","<code>ESPIPE</code>","<code>ESRCH</code>","<code>ESRMNT</code>","<code>ESTALE</code>","<code>ESTRPIPE</code>","<code>RWF_SYNC</code> (since Linux 4.7)","<code>ETIME</code>","<code>ETIMEDOUT</code>","<code>E2BIG</code>","<code>ETOOMANYREFS</code>","<code>ETXTBSY</code>","<code>EUCLEAN</code>","<code>EUNATCH</code>","<code>EUSERS</code>","<code>EWOULDBLOCK</code>","<code>EXDEV</code>","<code>EXFULL</code>","Advance the internal cursor of the slice.","Advance the internal cursor of the slice.","Advance a slice of slices.","Advance a slice of slices.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","Get a flags value with all known bits set.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","","Get the underlying bits value.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","<code>close(raw_fd)</code>—Closes a <code>RawFd</code> directly.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","<code>dup(fd)</code>—Creates a new <code>OwnedFd</code> instance that shares the …","<code>dup2(fd, new)</code>—Changes the file description of a file …","<code>dup3(fd, new, flags)</code>—Changes the file description of a …","Get a flags value with all bits unset.","Get a flags value with all bits unset.","Get a flags value with all bits unset.","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","<code>fcntl(fd, F_DUPFD_CLOEXEC)</code>—Creates a new <code>OwnedFd</code> …","<code>fcntl(fd, F_GETFD)</code>—Returns a file descriptor’s flags.","<code>fcntl(fd, F_SETFD, flags)</code>—Sets a file descriptor’s …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Convert from a bits value, unsetting any unknown bits.","Extract an <code>Errno</code> value from a <code>std::io::Error</code>.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Get a flags value with the bits of a flag with the given …","Construct an <code>Errno</code> from a raw OS error number.","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","<code>ioctl(fd, FIONBIO, &amp;value)</code>—Enables or disables …","<code>ioctl(fd, FIONREAD)</code>—Returns the number of bytes ready to …","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all known bits in this flags value are set.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Whether all bits in this flags value are unset.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Yield a set of contained named flags values.","Shorthand for <code>std::io::Error::from(self).kind()</code>.","Creates a new <code>IoSliceMut</code> wrapping a byte slice.","Creates a new <code>IoSlice</code> wrapping a byte slice.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","<code>pread(fd, buf, offset)</code>—Reads from a file at a given …","<code>preadv(fd, bufs, offset)</code>—Reads from a file at a given …","<code>preadv2(fd, bufs, offset, flags)</code>—Reads data, with …","<code>pwrite(fd, bufs)</code>—Writes to a file at a given position.","<code>pwritev(fd, bufs, offset)</code>—Writes to a file at a given …","<code>pwritev2(fd, bufs, offset, flags)</code>—Writes data, with …","Extract the raw OS error number from this error.","<code>read(fd, buf)</code>—Reads from a stream.","<code>readv(fd, bufs)</code>—Reads from a stream into multiple …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","Call <code>f</code> until it either succeeds or fails other than …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","<code>write(fd, buf)</code>—Writes to a stream.","<code>writev(fd, bufs)</code>—Writes to a stream from multiple …","Provides a bad opcode at compile time.","Trait for something that provides an <code>ioctl</code> opcode at …","The direction that an <code>ioctl</code> is going.","Implements the traditional “getter” pattern for <code>ioctl</code>s.","Does the <code>ioctl</code> mutate any data in the userspace?","A trait defining the properties of an <code>ioctl</code> command.","The type used by the <code>ioctl</code> to signify the output.","Implements an <code>ioctl</code> with no real arguments.","None of the above.","Provides a <code>None</code> code at compile time.","The opcode.","The opcode used by this <code>ioctl</code> command.","The opcode used by an <code>Ioctl</code>.","The type of the output data.","The type used by the <code>ioctl</code> to signify the command.","Read data from the kernel.","Provides a read code at compile time.","Read and write data to the kernel.","Provides a read/write code at compile time.","Implements the pattern for <code>ioctl</code>s where a pointer argument …","Write data to the kernel.","Provides a write code at compile time.","Get a pointer to the data to be passed to the <code>ioctl</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new opcode from a direction, group, number, and …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Perform an <code>ioctl</code> call.","Create a new no-argument <code>ioctl</code> object.","Create a new getter-style <code>ioctl</code> object.","Create a new pointer setter-style <code>ioctl</code> object.","Create a new non-mutating opcode from a group, a number, …","Create a new old <code>Opcode</code> from a raw opcode.","Cast the output data to the correct type.","","","","","","Get the raw opcode.","Create a new reading opcode from a group, a number and the …","Create a new reading and writing opcode from a group, a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new writing opcode from a group, a number and the …","A trait for passing path arguments.","Returns a view of this string as a maybe-owned <code>CStr</code>.","Returns a view of this string as a string slice.","Consumes <code>self</code> and returns a view of this string as a …","Runs a closure with <code>self</code> passed in as a <code>&amp;CStr</code>.","Returns a potentially-lossy rendering of this string as a …"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,2,1,114,2,1,2,1,2,1,1,1,1,2,2,1,2,2,2,2,2,2,2,2,2,2,2,2,1,115,2,2,1,116,2,2,1,1,2,1,2,1,2,1,2,1,0,0,0,0,21,21,21,21,21,24,24,21,24,21,21,24,21,21,29,24,30,21,29,24,30,0,21,29,30,21,29,24,30,21,24,21,24,21,29,30,21,21,29,24,30,21,29,24,30,21,29,29,24,30,30,21,21,21,21,21,29,30,24,24,24,24,21,21,21,21,21,24,21,24,21,29,30,21,21,21,21,21,24,24,21,21,29,21,21,24,24,21,29,21,24,24,24,21,29,24,30,24,29,30,21,21,24,24,21,29,30,21,29,30,21,29,24,30,53,58,56,53,58,0,0,0,58,54,58,58,67,54,53,56,59,53,61,58,0,67,75,58,53,53,53,75,0,0,0,0,67,72,51,51,55,53,49,49,75,53,57,0,0,67,0,0,0,0,0,58,57,0,56,56,56,56,56,56,56,56,56,56,56,56,56,75,58,59,54,59,73,73,60,58,58,58,0,0,0,0,58,53,60,53,60,60,60,53,53,55,60,51,59,54,54,54,72,73,73,73,72,0,0,0,53,0,59,53,60,53,49,60,51,61,52,62,64,52,53,52,53,52,52,52,72,0,0,0,67,0,0,57,52,57,58,51,51,51,52,52,51,51,53,60,0,0,0,72,67,75,0,0,0,0,0,0,0,67,53,53,58,0,0,58,59,0,0,0,67,73,52,55,52,57,49,53,52,72,52,52,52,0,59,0,0,49,51,52,53,54,55,56,57,58,59,60,61,62,64,52,67,117,117,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,49,49,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,117,117,80,84,85,77,78,49,51,52,53,54,55,67,72,56,57,58,59,60,73,74,75,61,62,64,80,84,85,77,78,49,51,52,53,54,55,67,72,56,57,58,59,60,73,74,75,61,62,64,0,0,0,0,49,51,52,53,54,55,67,72,56,57,58,59,60,73,74,75,61,62,64,49,51,52,53,54,55,67,72,56,57,58,59,60,73,74,75,61,62,64,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,0,117,117,118,0,54,117,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,67,72,56,57,58,59,60,73,75,61,62,64,49,51,52,53,54,55,67,72,56,57,58,59,60,73,75,61,62,64,0,49,51,52,53,54,55,56,57,58,59,60,61,84,84,84,84,84,84,84,84,84,84,84,0,0,0,0,0,0,0,0,0,0,0,0,0,0,77,78,77,78,0,0,80,77,78,49,49,49,49,49,51,51,51,51,51,52,52,52,52,52,53,53,53,53,53,54,54,54,54,54,55,55,55,55,55,67,72,56,56,56,56,56,57,57,57,57,57,58,58,58,58,58,59,59,59,59,59,60,60,60,60,60,73,74,75,61,61,61,61,61,62,64,0,80,84,66,85,77,78,49,51,52,52,53,54,55,67,72,56,57,58,59,60,73,74,75,61,62,64,49,51,52,53,54,55,56,57,58,59,60,61,49,49,51,51,52,52,53,53,54,54,55,55,56,56,57,57,58,58,59,59,60,60,61,61,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,62,64,52,67,0,0,0,0,0,0,0,0,117,49,51,52,53,54,55,56,57,58,59,60,61,62,64,117,119,77,78,0,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,80,84,85,77,78,49,51,52,53,54,55,67,72,56,57,58,59,60,73,74,75,61,62,64,80,49,51,52,53,54,55,56,57,58,59,60,61,0,0,0,49,51,52,53,54,55,56,57,58,59,60,61,120,85,120,49,51,52,53,54,55,56,57,58,59,60,61,120,0,62,64,120,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,74,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,117,117,117,85,80,85,77,117,49,51,52,53,54,55,56,57,58,59,60,61,0,0,0,117,80,121,121,80,121,0,0,49,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,80,0,0,0,49,51,52,53,54,55,56,57,58,59,60,61,0,117,0,80,0,0,80,0,80,0,49,51,52,53,54,55,56,57,58,59,60,61,49,51,52,53,54,55,56,57,58,59,60,61,0,0,49,51,52,53,54,55,56,57,58,59,60,61,0,0,0,49,51,52,53,54,55,67,72,56,57,58,59,60,73,74,75,61,62,64,49,51,52,53,54,55,56,57,58,59,60,61,80,84,85,77,78,49,51,52,53,54,55,67,72,56,57,58,59,60,73,74,75,61,62,64,80,84,85,77,78,49,51,52,53,54,55,67,72,56,57,58,59,60,73,74,75,61,62,64,80,84,85,77,78,49,51,52,53,54,55,67,72,56,57,58,59,60,73,74,75,61,62,64,117,49,51,52,53,54,55,56,57,58,59,60,61,0,0,0,121,121,121,94,94,94,93,94,94,94,94,0,94,94,94,94,94,94,94,94,94,94,94,93,94,94,94,0,93,93,94,94,93,94,93,94,93,94,93,94,93,93,93,94,94,94,93,94,93,94,93,94,93,94,93,94,93,94,93,93,94,94,93,93,94,94,94,93,93,94,94,93,93,94,94,93,94,93,94,93,94,93,93,93,93,93,94,94,94,94,94,93,94,93,93,94,94,93,93,93,94,94,94,93,93,94,94,93,94,93,93,94,94,93,94,0,0,0,93,93,94,94,93,93,94,94,93,93,94,94,93,94,93,94,93,93,94,94,93,93,94,94,93,93,94,94,93,93,94,94,93,94,93,93,94,94,93,93,94,94,93,94,93,94,93,93,94,94,93,94,93,93,94,94,93,94,93,94,93,94,93,93,94,94,98,98,98,98,98,98,98,96,98,98,98,98,98,98,98,98,98,98,98,98,95,97,98,98,98,98,98,98,98,98,98,98,96,0,98,0,98,98,0,96,98,98,98,98,98,98,98,98,98,98,98,98,0,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,96,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,0,0,98,98,98,98,98,98,98,96,98,98,98,98,98,98,98,98,98,98,98,90,92,90,92,95,96,97,95,96,97,95,96,97,95,96,97,95,96,97,95,95,96,96,97,97,95,96,97,95,96,97,90,98,95,96,97,92,90,98,95,96,97,92,98,95,96,97,92,98,95,96,97,92,0,95,96,97,95,96,97,90,92,90,95,96,97,0,0,0,95,96,97,98,95,96,97,98,95,96,97,95,96,97,0,0,0,90,98,98,95,95,95,95,95,96,96,96,96,96,97,97,97,97,97,92,90,98,95,96,97,92,95,96,97,95,95,96,96,97,97,95,96,97,98,95,96,97,95,96,97,98,98,95,96,97,95,96,97,95,96,97,95,96,97,90,98,95,96,97,92,95,96,97,0,0,95,96,97,95,96,97,95,96,97,95,96,97,98,90,92,95,96,97,0,0,0,0,0,0,98,0,0,95,96,97,0,95,96,97,95,96,97,95,96,97,95,96,97,98,95,96,97,92,98,95,96,97,90,98,95,96,97,92,90,98,95,96,97,92,90,98,95,96,97,92,95,96,97,0,0,0,0,0,0,110,0,0,0,108,0,103,110,0,110,0,108,0,108,0,0,108,0,110,104,105,106,104,105,106,122,123,124,125,126,107,108,104,105,106,122,123,124,125,126,107,108,107,108,107,108,107,108,107,108,107,108,104,105,106,107,108,104,105,106,122,123,124,125,126,107,108,107,107,108,104,105,106,122,123,124,125,126,107,108,0,104,105,106,107,107,110,104,105,106,107,108,107,107,107,107,108,104,105,106,122,123,124,125,126,107,108,104,105,106,122,123,124,125,126,107,108,104,105,106,122,123,124,125,126,107,108,107,0,48,48,48,48,48],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[1,1],[[],3],[2,3],[1,3],[[]],[[]],[[]],[[]],[3,1],[1,1],[[]],[2],[[2,4],[[6,[5]]]],[[1,4],[[6,[5]]]],[7,2],[8,2],[9,2],[10,2],[11,2],[12,2],[13,2],[[]],[14,2],[15,2],[16,2],[17,2],[[]],[3],[3,2],[[]],[[]],[[],3],[2,3],[2,18],[1,18],[[]],[2,[[6,[2,19]]]],[1,[[6,[2,19]]]],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],0,0,0,0,[21,[[23,[22]]]],[21,[[23,[22]]]],[21,24],[21,[[26,[[25,[24]]]]]],[21,[[26,[[25,[24]]]]]],[24,[[26,[[25,[24]]]]]],[24,27],[21,24],[24,24],[21,[[26,[28]]]],[21,[[26,[28]]]],[24,[[26,[28]]]],[[]],[21,24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[21,21],[29,29],[30,30],[[]],[[]],[[24,21]],[[]],[[21,21],31],[[24,24],31],[[],21],[[],24],[21,24],[29,28],[30,28],[21],[[21,21],18],[[29,29],18],[[24,24],18],[[30,30],18],[[],18],[[],18],[[],18],[[],18],[[21,4],[[6,[5]]]],[[29,4],[[6,[5]]]],[[29,4],[[6,[5]]]],[[24,4],[[6,[5]]]],[[30,4],[[6,[5]]]],[[30,4],[[6,[5]]]],[24,21],[[[34,[32,33]]],21],[[]],[[[25,[24]]],21],[[[35,[24,33]]],21],[[]],[[]],[[[23,[22]]],[[6,[24,36]]]],[[[23,[22]]],[[6,[24,30]]]],[[[23,[22]]],24],[27,24],[27,21],[[[34,[22,33]]],21],[[[34,[22,33]]],[[6,[21,37]]]],[[[34,[22,33]]],21],[[21,38]],[[24,38]],[[21,39],24],[[24,[41,[40]]],24],[[]],[[]],[[]],[21,[[35,[24,33]]]],[21,[[34,[22,33]]]],[21,[[34,[22,33]]]],[21,[[26,[[25,[24]]]]]],[21,[[26,[[25,[24]]]]]],[24,[[26,[[25,[24]]]]]],[[[35,[24,33]]],21],[21,27],[21,[[6,[42,43]]]],[29,[[34,[22,33]]]],[[21,44],26],[[21,44],26],[[24,44],26],[24,18],[[[45,[[34,[22,33]]]]],[[6,[21,29]]]],[29,40],[[21,21],[[46,[31]]]],[[24,24],[[46,[31]]]],[24,[[23,[22]]]],[24,[[23,[22]]]],[[]],[[]],[24,21],[[]],[24,[[6,[28,47]]]],[[],42],[[],42],[21,[[25,[28]]]],[21,[[25,[28]]]],[24,[[25,[28]]]],[24,[[25,[28]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[48,49],26],[[50,48,49,51],26],[[],49],[[],51],[[],52],[[],53],[[],54],[[],55],[[],56],[[],57],[[],58],[[],59],[[],60],[[],61],[62,63],[64,65],[52,66],[67,66],[[],68],[[],68],[[49,49],49],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[49,49]],[[51,51]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[49,49],49],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[49,49]],[[51,51]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[49,69],[49,69],[51,69],[51,69],[52,66],[52,66],[53,69],[53,69],[54,70],[54,70],[55,69],[55,69],[56,69],[56,69],[57,71],[57,71],[58,71],[58,71],[59,71],[59,71],[60,70],[60,70],[61,69],[61,69],[[49,49],49],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[49,49]],[[51,51]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[],70],[[],70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[48,52],26],[[50,48,52,51],26],[[48,[46,[62]],[46,[64]]],26],[[50,48,[46,[62]],[46,[64]],51],26],[49,49],[51,51],[52,52],[53,53],[54,54],[55,55],[67,67],[72,72],[56,56],[57,57],[58,58],[59,59],[60,60],[73,73],[74,74],[75,75],[61,61],[62,62],[64,64],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,49],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[[49,49],18],[[51,51],18],[[52,52],18],[[53,53],18],[[54,54],18],[[55,55],18],[[56,56],18],[[57,57],18],[[58,58],18],[[59,59],18],[[60,60],18],[[61,61],18],[[50,[46,[70]],50,[46,[70]],40],[[26,[40]]]],[[],68],[[],68],[3],[[],1],[[],54],[[],70],[[49,49],49],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[],49],[[],51],[[],52],[[],53],[[],54],[[],55],[[],56],[[],57],[[],58],[[],59],[[],60],[[],61],[[49,49],18],[[51,51],18],[[52,52],18],[[53,53],18],[[54,54],18],[[55,55],18],[[67,67],18],[[72,72],18],[[56,56],18],[[57,57],18],[[58,58],18],[[59,59],18],[[60,60],18],[[73,73],18],[[75,75],18],[[61,61],18],[[62,62],18],[[64,64],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[50,70],26],[[49,76]],[[51,76]],[[52,76]],[[53,76]],[[54,76]],[[55,76]],[[56,76]],[[57,76]],[[58,76]],[[59,76]],[[60,76]],[[61,76]],0,0,0,0,0,0,0,0,0,0,0,[[50,70,70,72],26],[[50,59,70,70],26],[[50,52],26],[[50,[46,[62]],[46,[64]]],26],[[50,57],26],0,[50,[[26,[57]]]],0,[50,[[26,[53]]]],[[50,73],26],0,[[50,53],26],[50,26],[[50,48,[23,[22]]],[[26,[40]]]],[77,24],[78,24],[77,67],[78,67],[[50,[23,[79]]],[[26,[40]]]],[[50,73],26],[[80,4],81],[[77,4],81],[[78,4],81],[[49,4],81],[[49,4],81],[[49,4],81],[[49,4],81],[[49,4],81],[[51,4],81],[[51,4],81],[[51,4],81],[[51,4],81],[[51,4],81],[[52,4],81],[[52,4],81],[[52,4],81],[[52,4],81],[[52,4],81],[[53,4],81],[[53,4],81],[[53,4],81],[[53,4],81],[[53,4],81],[[54,4],81],[[54,4],81],[[54,4],81],[[54,4],81],[[54,4],81],[[55,4],81],[[55,4],81],[[55,4],81],[[55,4],81],[[55,4],81],[[67,4],81],[[72,4],81],[[56,4],81],[[56,4],81],[[56,4],81],[[56,4],81],[[56,4],81],[[57,4],81],[[57,4],81],[[57,4],81],[[57,4],81],[[57,4],81],[[58,4],81],[[58,4],81],[[58,4],81],[[58,4],81],[[58,4],81],[[59,4],81],[[59,4],81],[[59,4],81],[[59,4],81],[[59,4],81],[[60,4],81],[[60,4],81],[[60,4],81],[[60,4],81],[[60,4],81],[[73,4],81],[[74,4],81],[[75,4],81],[[61,4],81],[[61,4],81],[[61,4],81],[[61,4],81],[[61,4],81],[[62,4],81],[[64,4],81],[[50,48],26],[[]],[[]],[52,66],[[]],[[]],[[]],[[]],[[]],[66,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[69,[[46,[49]]]],[69,[[46,[51]]]],[66,[[46,[52]]]],[69,[[46,[53]]]],[70,[[46,[54]]]],[69,[[46,[55]]]],[69,[[46,[56]]]],[71,[[46,[57]]]],[71,[[46,[58]]]],[71,[[46,[59]]]],[70,[[46,[60]]]],[69,[[46,[61]]]],[69,49],[69,49],[69,51],[69,51],[66,52],[66,52],[69,53],[69,53],[70,54],[70,54],[69,55],[69,55],[69,56],[69,56],[71,57],[71,57],[71,58],[71,58],[71,59],[71,59],[70,60],[70,60],[69,61],[69,61],[69,49],[69,51],[66,52],[69,53],[70,54],[69,55],[69,56],[71,57],[71,58],[71,59],[70,60],[69,61],[76,49],[76,51],[76,52],[76,53],[76,54],[76,55],[76,56],[76,57],[76,58],[76,59],[76,60],[76,61],[28,[[46,[49]]]],[28,[[46,[51]]]],[28,[[46,[52]]]],[28,[[46,[53]]]],[28,[[46,[54]]]],[28,[[46,[55]]]],[28,[[46,[56]]]],[28,[[46,[57]]]],[28,[[46,[58]]]],[28,[[46,[59]]]],[28,[[46,[60]]]],[28,[[46,[61]]]],[63,62],[65,64],[66,52],[66,67],[[50,48,[23,[22]],61],26],[50,[[26,[82]]]],[50,[[26,[83]]]],[50,[[26,[84]]]],[50,26],[[50,70],26],[[50,74],26],[[48,48,[23,[22]]],[[26,[40]]]],[[],71],[[49,38]],[[51,38]],[[52,38]],[[53,38]],[[54,38]],[[55,38]],[[56,38]],[[57,38]],[[58,38]],[[59,38]],[[60,38]],[[61,38]],[[62,38]],[[64,38]],[[],70],[[],70],[77,70],[78,70],0,[[49,49]],[[51,51]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[49,49],49],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[49,49],18],[[51,51],18],[[52,52],18],[[53,53],18],[[54,54],18],[[55,55],18],[[56,56],18],[[57,57],18],[[58,58],18],[[59,59],18],[[60,60],18],[[61,61],18],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49],[51],[52],[53],[54],[55],[56],[57],[58],[59],[60],[61],[50,[[26,[71]]]],[50,[[26,[71]]]],[[50,50],26],[49,18],[51,18],[52,18],[53,18],[54,18],[55,18],[56,18],[57,18],[58,18],[59,18],[60,18],[61,18],[[],18],[[[85,[50]]],18],[[],18],[49,18],[51,18],[52,18],[53,18],[54,18],[55,18],[56,18],[57,18],[58,18],[59,18],[60,18],[61,18],[[],18],[50,26],[62,18],[64,18],[[],18],[49,[[86,[49]]]],[51,[[86,[51]]]],[52,[[86,[52]]]],[53,[[86,[53]]]],[54,[[86,[54]]]],[55,[[86,[55]]]],[56,[[86,[56]]]],[57,[[86,[57]]]],[58,[[86,[58]]]],[59,[[86,[59]]]],[60,[[86,[60]]]],[61,[[86,[61]]]],[49,[[87,[49]]]],[51,[[87,[51]]]],[52,[[87,[52]]]],[53,[[87,[53]]]],[54,[[87,[54]]]],[55,[[87,[55]]]],[56,[[87,[56]]]],[57,[[87,[57]]]],[58,[[87,[58]]]],[59,[[87,[59]]]],[60,[[87,[60]]]],[61,[[87,[61]]]],0,0,[[48,48,[23,[22]]],[[26,[40]]]],[[48,48],26],[[50,48,50,48,51],26],[[48,[23,[79]]],[[26,[40]]]],[[48,[23,[79]]],[[26,[40]]]],[[48,48],26],[[48,48,[23,[22]],61],26],[48,[[26,[82]]]],[88,71],[[71,71],88],[[48,56],[[26,[2]]]],[88,71],[[48,52],26],[[50,48,52],26],[[50,48,67,52,88],26],[71],[[],71],[[],68],[[],68],[[50,[23,[[89,[22]]]]],[[85,[50]]]],[80,46],[[[85,[50]]],[[46,[[26,[77]]]]]],[77,70],[[],70],[49,49],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[[48,53,52],[[26,[2]]]],[[50,48,53,52],[[26,[2]]]],[[50,48,53,52,54],[[26,[2]]]],[[],70],[80,[[46,[[26,[78]]]]]],[[[23,[22]],70],[[6,[40,19]]]],[[[23,[22]],70],[[6,[19]]]],[50,[[26,[80]]]],[[[23,[90]],70],[[6,[40,19]]]],[[48,[45,[[34,[22]]]]],[[26,[21]]]],[[50,48,[45,[[34,[22]]]]],[[26,[21]]]],[[49,49]],[[51,51]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[48,48],26],[[48,48],26],[[50,48,50,48],26],[[50,48,50,48,55],26],[80],[48,26],[[50,75],[[26,[70]]]],[[50,50,[46,[70]],40],[[26,[40]]]],[[49,49,18]],[[51,51,18]],[[52,52,18]],[[53,53,18]],[[54,54,18]],[[55,55,18]],[[56,56,18]],[[57,57,18]],[[58,58,18]],[[59,59,18]],[[60,60,18]],[[61,61,18]],[[48,48,[23,[22]],61],26],[[],70],[48,[[26,[82]]]],[80,[[26,[82]]]],[[50,48,51],[[26,[82]]]],[48,[[26,[83]]]],[80,[[26,[83]]]],[48,[[26,[84]]]],[80,[[26,[84]]]],[[50,48,51,58],[[26,[91]]]],[[49,49],49],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[49,49]],[[51,51]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[48,48],26],[[48,50,48],26],[[49,49],49],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[[]],[50,26],[50,[[26,[70]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[49,49]],[[51,51]],[[52,52]],[[53,53]],[[54,54]],[[55,55]],[[56,56]],[[57,57]],[[58,58]],[[59,59]],[[60,60]],[[61,61]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],71],[[49,49],49],[[51,51],51],[[52,52],52],[[53,53],53],[[54,54],54],[[55,55],55],[[56,56],56],[[57,57],57],[[58,58],58],[[59,59],59],[[60,60],60],[[61,61],61],[48,26],[[50,48,51],26],[[50,48,74,51],26],[[[23,[22]],70],[[6,[19]]]],[[[23,[22]],70],[[6,[40,19]]]],[[[23,[92]],70],[[6,[40,19]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],93],[[],93],[[],94],[[],94],[[93,93],93],[[94,94],94],[[93,93]],[[94,94]],[[93,93],93],[[94,94],94],[[93,93]],[[94,94]],[93,69],[93,69],[93,69],[94,69],[94,69],[94,69],[[93,93],93],[[94,94],94],[[93,93]],[[94,94]],[[]],[[]],[[]],[[]],[93,93],[94,94],[[]],[[]],[93,93],[93,93],[94,94],[94,94],[[93,93],18],[[93,93],18],[[94,94],18],[[94,94],18],[[],94],[[93,93],93],[[93,93],93],[[94,94],94],[[94,94],94],[[],93],[[],93],[[],94],[[],94],[[93,93],18],[[94,94],18],[[],18],[[],18],[[93,76]],[[94,76]],[[93,4],81],[[93,4],81],[[93,4],81],[[93,4],81],[[93,4],81],[[94,4],81],[[94,4],81],[[94,4],81],[[94,4],81],[[94,4],81],[[]],[[]],[69,[[46,[93]]]],[69,[[46,[93]]]],[69,[[46,[94]]]],[69,[[46,[94]]]],[69,93],[69,93],[69,93],[69,94],[69,94],[69,94],[69,93],[69,93],[69,94],[69,94],[76,93],[76,94],[28,[[46,[93]]]],[28,[[46,[93]]]],[28,[[46,[94]]]],[28,[[46,[94]]]],[[93,38]],[[94,38]],[[1,48,94],[[26,[3]]]],[93,[[26,[2]]]],[[1,3],26],[[93,93]],[[93,93]],[[94,94]],[[94,94]],[[93,93],93],[[93,93],93],[[94,94],94],[[94,94],94],[[93,93],18],[[93,93],18],[[94,94],18],[[94,94],18],[[]],[[]],[93],[94],[93,18],[93,18],[94,18],[94,18],[93,18],[93,18],[94,18],[94,18],[93,[[86,[93]]]],[93,[[86,[93]]]],[94,[[86,[94]]]],[94,[[86,[94]]]],[93,[[87,[93]]]],[93,[[87,[93]]]],[94,[[87,[94]]]],[94,[[87,[94]]]],[93,93],[94,94],[[93,93]],[[93,93]],[[94,94]],[[94,94]],[[93,93,18]],[[93,93,18]],[[94,94,18]],[[94,94,18]],[[93,93],93],[[94,94],94],[[93,93]],[[94,94]],[[93,93],93],[[93,93],93],[[94,94],94],[[94,94],94],[[]],[[]],[[93,93]],[[93,93]],[[94,94]],[[94,94]],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[93,93],93],[[93,93],93],[[94,94],94],[[94,94],94],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[90,40]],[[92,40]],[[[23,[90]],40]],[[[23,[92]],40]],[[],95],[[],96],[[],97],[[95,95],95],[[96,96],96],[[97,97],97],[[95,95]],[[96,96]],[[97,97]],[[95,95],95],[[96,96],96],[[97,97],97],[[95,95]],[[96,96]],[[97,97]],[95,69],[95,69],[96,69],[96,69],[97,69],[97,69],[[95,95],95],[[96,96],96],[[97,97],97],[[95,95]],[[96,96]],[[97,97]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,98],[95,95],[96,96],[97,97],[92,92],[[]],[[]],[[]],[[]],[[]],[99],[95,95],[96,96],[97,97],[[95,95],18],[[96,96],18],[[97,97],18],[90,[[23,[22]]]],[92,[[23,[22]]]],[90,[[23,[22]]]],[[95,95],95],[[96,96],96],[[97,97],97],[50,[[26,[2]]]],[[50,2],26],[[50,2,97],26],[[],95],[[],96],[[],97],[[98,98],18],[[95,95],18],[[96,96],18],[[97,97],18],[[],18],[[],18],[[],18],[[],18],[[95,76]],[[96,76]],[[97,76]],[[50,99],[[26,[2]]]],[50,[[26,[95]]]],[[50,95],26],[[90,4],[[6,[5]]]],[[98,4],81],[[98,4],81],[[95,4],81],[[95,4],81],[[95,4],81],[[95,4],81],[[95,4],81],[[96,4],81],[[96,4],81],[[96,4],81],[[96,4],81],[[96,4],81],[[97,4],81],[[97,4],81],[[97,4],81],[[97,4],81],[[97,4],81],[[92,4],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[69,[[46,[95]]]],[69,[[46,[96]]]],[69,[[46,[97]]]],[69,95],[69,95],[69,96],[69,96],[69,97],[69,97],[69,95],[69,96],[69,97],[19,[[46,[98]]]],[76,95],[76,96],[76,97],[28,[[46,[95]]]],[28,[[46,[96]]]],[28,[[46,[97]]]],[3,98],[[98,38]],[[95,38]],[[96,38]],[[97,38]],[[95,95]],[[96,96]],[[97,97]],[[95,95],95],[[96,96],96],[[97,97],97],[[95,95],18],[[96,96],18],[[97,97],18],[[]],[[]],[[]],[[]],[[]],[[]],[95],[96],[97],[[50,18],26],[50,[[26,[70]]]],[95,18],[96,18],[97,18],[95,18],[96,18],[97,18],[95,[[86,[95]]]],[96,[[86,[96]]]],[97,[[86,[97]]]],[95,[[87,[95]]]],[96,[[87,[96]]]],[97,[[87,[97]]]],[98,100],[[[23,[22]]],90],[[[23,[22]]],92],[95,95],[96,96],[97,97],[[50,[23,[22]],70],[[26,[40]]]],[[50,[23,[90]],70],[[26,[40]]]],[[50,[23,[90]],70,96],[[26,[40]]]],[[50,[23,[22]],70],[[26,[40]]]],[[50,[23,[92]],70],[[26,[40]]]],[[50,[23,[92]],70,96],[[26,[40]]]],[98,3],[[50,[23,[22]]],[[26,[40]]]],[[50,[23,[90]]],[[26,[40]]]],[[95,95]],[[96,96]],[[97,97]],[101,26],[[95,95,18]],[[96,96,18]],[[97,97,18]],[[95,95],95],[[96,96],96],[[97,97],97],[[95,95]],[[96,96]],[[97,97]],[[95,95],95],[[96,96],96],[[97,97],97],[[]],[[]],[[]],[[]],[[]],[[],42],[[95,95]],[[96,96]],[[97,97]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[95,95],95],[[96,96],96],[[97,97],97],[[50,[23,[22]]],[[26,[40]]]],[[50,[23,[92]]],[[26,[40]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],102],[[[104,[103]]],102],[[[105,[103]]],102],[[[106,[103]]],102],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[107,107],[108,108],[[]],[[]],[[107,107],31],[[108,108],31],[[107,107],18],[[108,108],18],[[],18],[[],18],[[[104,[103]],4],81],[[[105,[103]],4],81],[[[106,[103,109]],4],81],[[107,4],81],[[108,4],81],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[108,22,22,40],107],[[107,38]],[[108,38]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[50,110],26],[[],[[104,[103]]]],[[],[[105,[103]]]],[[],[[106,[103]]]],[[22,22],107],[111,107],[[112,102],26],[[112,102],26],[[112,102],26],[[112,102],26],[[107,107],[[46,[31]]]],[[108,108],[[46,[31]]]],[107,111],[[22,22],107],[[22,22],107],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[22,22],107],0,[[],[[26,[[25,[24]]]]]],[[],[[26,[28]]]],[[],[[26,[[25,[24]]]]]],[[113,44],26],[[],[[25,[28]]]]],"c":[599],"p":[[3,"BorrowedFd"],[3,"OwnedFd"],[15,"i32"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"UnixDatagram"],[3,"UnixListener"],[3,"TcpStream"],[3,"TcpListener"],[3,"PidFd"],[3,"File"],[3,"UnixStream"],[3,"UdpSocket"],[3,"ChildStdout"],[3,"ChildStdin"],[3,"ChildStderr"],[15,"bool"],[3,"Error"],[3,"TypeId"],[3,"CString"],[15,"u8"],[15,"slice"],[3,"CStr"],[4,"Cow"],[6,"Result"],[15,"i8"],[15,"str"],[3,"NulError"],[3,"FromBytesWithNulError"],[4,"Ordering"],[3,"NonZeroU8"],[3,"Global"],[3,"Vec"],[3,"Box"],[3,"FromBytesUntilNulError"],[3,"FromVecWithNulError"],[8,"Hasher"],[3,"RangeFull"],[15,"usize"],[3,"RangeFrom"],[3,"String"],[3,"IntoStringError"],[8,"FnOnce"],[8,"Into"],[4,"Option"],[3,"Utf8Error"],[8,"Arg"],[3,"Access"],[8,"AsFd"],[3,"AtFlags"],[3,"Mode"],[3,"OFlags"],[3,"ResolveFlags"],[3,"RenameFlags"],[3,"MemfdFlags"],[3,"SealFlags"],[3,"StatxFlags"],[3,"FallocateFlags"],[3,"StatVfsMountFlags"],[3,"XattrFlags"],[3,"Uid"],[6,"__kernel_uid_t"],[3,"Gid"],[6,"__kernel_gid_t"],[6,"RawMode"],[4,"FileType"],[15,"i64"],[6,"c_uint"],[15,"u64"],[15,"u32"],[4,"Advice"],[4,"FlockOperation"],[3,"Timestamps"],[4,"SeekFrom"],[8,"IntoIterator"],[3,"RawDirEntry"],[3,"DirEntry"],[6,"c_char"],[3,"Dir"],[6,"Result"],[6,"Stat"],[6,"StatFs"],[3,"StatVfs"],[3,"RawDir"],[3,"Iter"],[3,"IterNames"],[6,"Dev"],[19,"MaybeUninit"],[3,"IoSliceMut"],[6,"Statx"],[3,"IoSlice"],[3,"CreateFlags"],[3,"WatchFlags"],[3,"FdFlags"],[3,"ReadWriteFlags"],[3,"DupFlags"],[3,"Errno"],[6,"RawFd"],[4,"ErrorKind"],[8,"FnMut"],[4,"c_void"],[8,"CompileTimeOpcode"],[3,"NoArg"],[3,"Getter"],[3,"Setter"],[3,"Opcode"],[4,"Direction"],[8,"Debug"],[8,"Ioctl"],[6,"RawOpcode"],[6,"IoctlOutput"],[8,"Sized"],[8,"AsRawFd"],[8,"FromRawFd"],[8,"IntoRawFd"],[8,"MetadataExt"],[8,"OpenOptionsExt"],[8,"DirEntryExt"],[8,"FileTypeExt"],[8,"FileExt"],[3,"BadOpcode"],[3,"ReadOpcode"],[3,"WriteOpcode"],[3,"ReadWriteOpcode"],[3,"NoneOpcode"]],"a":{"2big":[1613],"acces":[1474],"at_fdcwd":[198],"blkpbszget":[980],"blksszget":[981],"creat":[195],"errno":[1509],"ext4_ioc_resize_fs":[662],"f_add_seals":[690],"f_dupfd_cloexec":[1705],"f_get_seals":[692],"f_getfd":[1706],"f_getfl":[694],"f_setfd":[1707],"f_setfl":[697],"f_setlk":[695],"f_setlkw":[695],"faccessat":[364],"fchmodat":[530],"fchownat":[532],"ficlone":[982],"fionbio":[1775],"fionread":[1776],"fstatat":[1124],"ifo":[223],"inode_number":[904],"inotify_init1":[1406],"inotify_rm_watch":[1407],"lseek":[1106,1170],"noattr":[1556],"off":[1063],"posix_fadvise":[686],"posix_fallocate":[687],"renameat2":[1103]}},\
"scopeguard":{"doc":"A scope guard will run a given closure when it goes out of …","t":"EDILLLLOLLLLLLLFLLLKLLLLLLLL","n":["Always","ScopeGuard","Strategy","borrow","borrow","borrow_mut","borrow_mut","defer","deref","deref_mut","drop","fmt","fmt","from","from","guard","into","into","into_inner","should_run","should_run","try_from","try_from","try_into","try_into","type_id","type_id","with_strategy"],"q":[[0,"scopeguard"]],"d":["Always run on scope exit.","<code>ScopeGuard</code> is a scope guard that may own a protected value.","Controls in which cases the associated code should be run","","","","","Macro to create a <code>ScopeGuard</code> (always run).","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a new <code>ScopeGuard</code> owning <code>v</code> and with deferred closure …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","“Defuse” the guard and extract the value without …","Return <code>true</code> if the guard’s associated code should run …","","","","","","","","Create a <code>ScopeGuard</code> that owns <code>v</code> (accessible through deref) …"],"i":[0,0,0,3,7,3,7,0,3,3,3,3,7,3,7,0,3,7,3,2,7,3,7,3,7,3,7,3],"f":[0,0,0,[[]],[[]],[[]],[[]],0,[[[3,[1,2]]]],[[[3,[1,2]]]],[[[3,[1,2]]]],[[[3,[4,1,2]],5],6],[[7,5],6],[[]],[[]],[1,[[3,[1,7]]]],[[]],[[]],[[[3,[1,2]]]],[[],8],[[],8],[[],9],[[],9],[[],9],[[],9],[[],10],[[],10],[1,[[3,[1,2]]]]],"c":[],"p":[[8,"FnOnce"],[8,"Strategy"],[3,"ScopeGuard"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[4,"Always"],[15,"bool"],[4,"Result"],[3,"TypeId"]]},\
"serde":{"doc":"Serde","t":"IYIQQQIYQQQQQQQILLLAKKKKKKKKKLKKKKKKKKKKKKKKKLKKKKKKOLLAKKKKKKLKKKKKKKKKKKKKKKKLKKKKKKKNNNIIIIQNIIQQQQQINDININNNNNINCNNNENNNQQQIILLLLLLLLKLKKLKKKKKKKKLKKKKKKKKKKKKKKKLKKKKKKLLLKLKLLLLLLLLLKLLLLLLKLKLLLKLKLLKLLLLLLLKLLKLLALKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIQQQQQQQQDQQQQQQQQIIQIQIQIQIQIQIQICLLLLLKKKKKKKKLLLLLLLLLLKKKKKKLLLKKKKKKLLLLLKKKKKLKKKKKKKKKKKKLKKKKKKKKLLLLLL","n":["Deserialize","Deserialize","Deserializer","Error","Error","Ok","Serialize","Serialize","SerializeMap","SerializeSeq","SerializeStruct","SerializeStructVariant","SerializeTuple","SerializeTupleStruct","SerializeTupleVariant","Serializer","collect_map","collect_seq","collect_str","de","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","forward_to_deserialize_any","is_human_readable","is_human_readable","ser","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_f32","serialize_f64","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","Bool","Bytes","Char","Deserialize","DeserializeOwned","DeserializeSeed","Deserializer","Deserializer","Enum","EnumAccess","Error","Error","Error","Error","Error","Error","Expected","Float","IgnoredAny","IntoDeserializer","Map","MapAccess","NewtypeStruct","NewtypeVariant","Option","Other","Seq","SeqAccess","Signed","StdError","Str","StructVariant","TupleVariant","Unexpected","Unit","UnitVariant","Unsigned","Value","Value","Variant","VariantAccess","Visitor","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","custom","default","deserialize","deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","duplicate_field","eq","eq","expecting","expecting","fmt","fmt","fmt","fmt","fmt","fmt","from","from","into","into","into_deserializer","invalid_length","invalid_type","invalid_value","is_human_readable","missing_field","newtype_variant","newtype_variant_seed","next_element","next_element_seed","next_entry","next_entry_seed","next_key","next_key_seed","next_value","next_value_seed","size_hint","size_hint","struct_variant","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","tuple_variant","type_id","type_id","unit_variant","unknown_field","unknown_variant","value","variant","variant_seed","visit_bool","visit_bool","visit_borrowed_bytes","visit_borrowed_str","visit_byte_buf","visit_bytes","visit_bytes","visit_char","visit_enum","visit_enum","visit_f32","visit_f64","visit_f64","visit_i128","visit_i128","visit_i16","visit_i32","visit_i64","visit_i64","visit_i8","visit_map","visit_map","visit_newtype_struct","visit_newtype_struct","visit_none","visit_none","visit_seq","visit_seq","visit_some","visit_some","visit_str","visit_str","visit_string","visit_u128","visit_u128","visit_u16","visit_u32","visit_u64","visit_u64","visit_u8","visit_unit","visit_unit","BoolDeserializer","BorrowedBytesDeserializer","BorrowedStrDeserializer","BytesDeserializer","CharDeserializer","CowStrDeserializer","EnumAccessDeserializer","Error","F32Deserializer","F64Deserializer","I128Deserializer","I16Deserializer","I32Deserializer","I64Deserializer","I8Deserializer","IsizeDeserializer","MapAccessDeserializer","MapDeserializer","SeqAccessDeserializer","SeqDeserializer","StrDeserializer","StringDeserializer","U128Deserializer","U16Deserializer","U32Deserializer","U64Deserializer","U8Deserializer","UnitDeserializer","UsizeDeserializer","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","custom","custom","description","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_any","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_bool","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_byte_buf","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_bytes","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_char","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_enum","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f32","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i16","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i32","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i64","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_i8","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_identifier","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_ignored_any","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_map","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_newtype_struct","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_option","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_seq","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_str","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_string","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_struct","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u16","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u32","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u64","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_u8","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","deserialize_unit_struct","end","end","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next_element_seed","next_element_seed","next_entry_seed","next_key_seed","next_value_seed","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","variant_seed","Error","Error","Error","Error","Error","Error","Error","Error","Error","Impossible","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Ok","Serialize","SerializeMap","SerializeMap","SerializeSeq","SerializeSeq","SerializeStruct","SerializeStruct","SerializeStructVariant","SerializeStructVariant","SerializeTuple","SerializeTuple","SerializeTupleStruct","SerializeTupleStruct","SerializeTupleVariant","SerializeTupleVariant","Serializer","StdError","borrow","borrow_mut","collect_map","collect_seq","collect_str","custom","end","end","end","end","end","end","end","end","end","end","end","end","end","end","from","into","is_human_readable","serialize","serialize_bool","serialize_bytes","serialize_char","serialize_element","serialize_element","serialize_element","serialize_element","serialize_entry","serialize_f32","serialize_f64","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_field","serialize_i128","serialize_i16","serialize_i32","serialize_i64","serialize_i8","serialize_key","serialize_key","serialize_map","serialize_newtype_struct","serialize_newtype_variant","serialize_none","serialize_seq","serialize_some","serialize_str","serialize_struct","serialize_struct_variant","serialize_tuple","serialize_tuple_struct","serialize_tuple_variant","serialize_u128","serialize_u16","serialize_u32","serialize_u64","serialize_u8","serialize_unit","serialize_unit_struct","serialize_unit_variant","serialize_value","serialize_value","skip_field","skip_field","try_from","try_into","type_id"],"q":[[0,"serde"],[87,"serde::de"],[265,"serde::de::value"],[1531,"serde::ser"]],"d":["A <strong>data structure</strong> that can be deserialized from any data …","Derive macro available if serde is built with …","A <strong>data format</strong> that can deserialize any data structure …","The error type that can be returned if some error occurs …","The error type when some error occurs during serialization.","The output type produced by this <code>Serializer</code> during …","A <strong>data structure</strong> that can be serialized into any data …","Derive macro available if serde is built with …","Type returned from <code>serialize_map</code> for serializing the …","Type returned from <code>serialize_seq</code> for serializing the …","Type returned from <code>serialize_struct</code> for serializing the …","Type returned from <code>serialize_struct_variant</code> for …","Type returned from <code>serialize_tuple</code> for serializing the …","Type returned from <code>serialize_tuple_struct</code> for serializing …","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Generic data structure deserialization framework.","Deserialize this value from the given Serde deserializer.","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Helper macro when implementing the <code>Deserializer</code> part of a …","Determine whether <code>Deserialize</code> implementations should …","Determine whether <code>Serialize</code> implementations should …","Generic data structure serialization framework.","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","The input contained a boolean value that was not expected.","The input contained a <code>&amp;[u8]</code> or <code>Vec&lt;u8&gt;</code> that was not …","The input contained a <code>char</code> that was not expected.","A <strong>data structure</strong> that can be deserialized from any data …","A data structure that can be deserialized without …","<code>DeserializeSeed</code> is the stateful form of the <code>Deserialize</code> …","A <strong>data format</strong> that can deserialize any data structure …","The type of the deserializer being converted into.","The input contained an enum that was not expected.","Provides a <code>Visitor</code> access to the data of an enum in the …","The <code>Error</code> trait allows <code>Deserialize</code> implementations to …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","The error type that can be returned if some error occurs …","<code>Expected</code> represents an explanation of what data a <code>Visitor</code> …","The input contained a floating point <code>f32</code> or <code>f64</code> that was …","An efficient way of discarding data from a deserializer.","Converts an existing value into a <code>Deserializer</code> from which …","The input contained a map that was not expected.","Provides a <code>Visitor</code> access to each entry of a map in the …","The input contained a newtype struct that was not expected.","The input contained a newtype variant that was not …","The input contained an <code>Option&lt;T&gt;</code> that was not expected.","A message stating what uncategorized thing the input …","The input contained a sequence that was not expected.","Provides a <code>Visitor</code> access to each element of a sequence in …","The input contained a signed integer <code>i8</code>, <code>i16</code>, <code>i32</code> or <code>i64</code> …","","The input contained a <code>&amp;str</code> or <code>String</code> that was not expected.","The input contained a struct variant that was not expected.","The input contained a tuple variant that was not expected.","<code>Unexpected</code> represents an unexpected invocation of any one …","The input contained a unit <code>()</code> that was not expected.","The input contained a unit variant that was not expected.","The input contained an unsigned integer <code>u8</code>, <code>u16</code>, <code>u32</code> or <code>u64</code>…","The type produced by using this seed.","The value produced by this visitor.","The <code>Visitor</code> that will be used to deserialize the content …","<code>VariantAccess</code> is a visitor that is created by the …","This trait represents a visitor that walks through a …","","","","","","","","","Raised when there is general error when deserializing a …","","Deserialize this value from the given Serde deserializer.","Equivalent to the more common <code>Deserialize::deserialize</code> …","","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Raised when a <code>Deserialize</code> struct type received more than …","","","Format a message stating what data this Visitor expects to …","","Format an explanation of what data was being expected. …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this value into a deserializer.","Raised when deserializing a sequence or map and the input …","Raised when a <code>Deserialize</code> receives a type different from …","Raised when a <code>Deserialize</code> receives a value of the right …","Determine whether <code>Deserialize</code> implementations should …","Raised when a <code>Deserialize</code> struct type expected to receive …","Called when deserializing a variant with a single value.","Called when deserializing a variant with a single value.","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some(value))</code> for the next value in the …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some((key, value)))</code> for the next …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns <code>Ok(Some(key))</code> for the next key in the map, or …","This returns a <code>Ok(value)</code> for the next value in the map.","This returns a <code>Ok(value)</code> for the next value in the map.","Returns the number of elements remaining in the sequence, …","Returns the number of entries remaining in the map, if …","Called when deserializing a struct-like variant.","","","","","","","","Called when deserializing a tuple-like variant.","","","Called when deserializing a variant with no values.","Raised when a <code>Deserialize</code> struct type received a field …","Raised when a <code>Deserialize</code> enum type received a variant …","Building blocks for deserializing basic values using the …","<code>variant</code> is called to identify which variant to deserialize.","<code>variant</code> is called to identify which variant to deserialize.","The input contains a boolean.","","The input contains a byte array that lives at least as …","The input contains a string that lives at least as long as …","The input contains a byte array and ownership of the byte …","The input contains a byte array. The lifetime of the byte …","","The input contains a <code>char</code>.","The input contains an enum.","","The input contains an <code>f32</code>.","The input contains an <code>f64</code>.","","The input contains a <code>i128</code>.","","The input contains an <code>i16</code>.","The input contains an <code>i32</code>.","The input contains an <code>i64</code>.","","The input contains an <code>i8</code>.","The input contains a key-value map.","","The input contains a newtype struct.","","The input contains an optional that is absent.","","The input contains a sequence of elements.","","The input contains an optional that is present.","","The input contains a string. The lifetime of the string is …","","The input contains a string and ownership of the string is …","The input contains a <code>u128</code>.","","The input contains a <code>u16</code>.","The input contains a <code>u32</code>.","The input contains a <code>u64</code>.","","The input contains a <code>u8</code>.","The input contains a unit <code>()</code>.","","A deserializer holding a <code>bool</code>.","A deserializer holding a <code>&amp;[u8]</code> with a lifetime tied to …","A deserializer holding a <code>&amp;str</code> with a lifetime tied to …","A deserializer holding a <code>&amp;[u8]</code>. Always calls …","A deserializer holding a <code>char</code>.","A deserializer holding a <code>Cow&lt;str&gt;</code>.","A deserializer holding an <code>EnumAccess</code>.","A minimal representation of all possible errors that can …","A deserializer holding an <code>f32</code>.","A deserializer holding an <code>f64</code>.","A deserializer holding an <code>i128</code>.","A deserializer holding an <code>i16</code>.","A deserializer holding an <code>i32</code>.","A deserializer holding an <code>i64</code>.","A deserializer holding an <code>i8</code>.","A deserializer holding an <code>isize</code>.","A deserializer holding a <code>MapAccess</code>.","A deserializer that iterates over a map.","A deserializer holding a <code>SeqAccess</code>.","A deserializer that iterates over a sequence.","A deserializer holding a <code>&amp;str</code>.","A deserializer holding a <code>String</code>.","A deserializer holding a <code>u128</code>.","A deserializer holding a <code>u16</code>.","A deserializer holding a <code>u32</code>.","A deserializer holding a <code>u64</code>.","A deserializer holding a <code>u8</code>.","A deserializer holding a <code>()</code>.","A deserializer holding a <code>usize</codeheck for remaining elements after passing a …","Check for remaining elements after passing a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Create a new borrowed deserializer from the given string.","","","Create a new deserializer from the given bytes.","Create a new borrowed deserializer from the given borrowed …","Construct a new <code>MapDeserializer&lt;I, E&gt;</code>.","","","","","","","","","","","","","","","","Construct a new <code>SeqDeserializer&lt;I, E&gt;</code>.","Construct a new <code>SeqAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>MapAccessDeserializer&lt;A&gt;</code>.","Construct a new <code>EnumAccessDeserializer&lt;A&gt;</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Trait used by <code>Serialize</code> implementations to generically …","The error type when some error occurs during serialization.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Must match the <code>Error</code> type of our <code>Serializer</code>.","Helper type for implementing a <code>Serializer</code> that does not …","The output type produced by this <code>Serializer</code> during …","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","Must match the <code>Ok</code> type of our <code>Serializer</code>.","A <strong>data structure</strong> that can be serialized into any data …","Returned from <code>Serializer::serialize_map</code>.","Type returned from <code>serialize_map</code> for serializing the …","Returned from <code>Serializer::serialize_seq</code>.","Type returned from <code>serialize_seq</code> for serializing the …","Returned from <code>Serializer::serialize_struct</code>.","Type returned from <code>serialize_struct</code> for serializing the …","Returned from <code>Serializer::serialize_struct_variant</code>.","Type returned from <code>serialize_struct_variant</code> for …","Returned from <code>Serializer::serialize_tuple</code>.","Type returned from <code>serialize_tuple</code> for serializing the …","Returned from <code>Serializer::serialize_tuple_struct</code>.","Type returned from <code>serialize_tuple_struct</code> for serializing …","Returned from <code>Serializer::serialize_tuple_variant</code>.","Type returned from <code>serialize_tuple_variant</code> for serializing …","A <strong>data format</strong> that can serialize any data structure …","","","","Collect an iterator as a map.","Collect an iterator as a sequence.","Serialize a string produced by an implementation of <code>Display</code>…","Used when a <code>Serialize</code> implementation encounters any error …","Finish serializing a sequence.","Finish serializing a tuple.","Finish serializing a tuple struct.","Finish serializing a tuple variant.","Finish serializing a map.","Finish serializing a struct.","Finish serializing a struct variant.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Determine whether <code>Serialize</code> implementations should …","Serialize this value into the given Serde serializer.","Serialize a <code>bool</code> value.","Serialize a chunk of raw byte data.","Serialize a character.","Serialize a sequence element.","Serialize a tuple element.","","","Serialize a map entry consisting of a key and a value.","Serialize an <code>f32</code> value.","Serialize an <code>f64</code> value.","Serialize a tuple struct field.","Serialize a tuple variant field.","Serialize a struct field.","Serialize a struct variant field.","","","","","Serialize an <code>i128</code> value.","Serialize an <code>i16</code> value.","Serialize an <code>i32</code> value.","Serialize an <code>i64</code> value.","Serialize an <code>i8</code> value.","Serialize a map key.","","Begin to serialize a map. This call must be followed by …","Serialize a newtype struct like <code>struct Millimeters(u8)</code>.","Serialize a newtype variant like <code>E::N</code> in <code>enum E { N(u8) }</code>.","Serialize a <code>None</code> value.","Begin to serialize a variably sized sequence. This call …","Serialize a <code>Some(T)</code> value.","Serialize a <code>&amp;str</code>.","Begin to serialize a struct like …","Begin to serialize a struct variant like <code>E::S</code> in …","Begin to serialize a statically sized sequence whose …","Begin to serialize a tuple struct like …","Begin to serialize a tuple variant like <code>E::T</code> in …","Serialize a <code>u128</code> value.","Serialize a <code>u16</code> value.","Serialize a <code>u32</code> value.","Serialize a <code>u64</code> value.","Serialize a <code>u8</code> value.","Serialize a <code>()</code> value.","Serialize a unit struct like <code>struct Unit</code> or <code>PhantomData&lt;T&gt;</code>.","Serialize a unit variant like <code>E::A</code> in <code>enum E { A, B }</code>.","Serialize a map value.","","Indicate that a struct field has been skipped.","Indicate that a struct variant field has been skipped.","","",""],"i":[0,0,0,5,11,11,0,0,11,11,11,11,11,11,11,0,11,11,11,0,33,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,5,11,0,22,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,28,28,28,0,0,0,0,78,28,0,0,5,41,40,39,79,0,28,0,0,28,0,28,28,28,28,28,0,28,0,28,28,28,0,28,28,28,34,6,39,0,0,27,28,27,28,27,28,27,28,37,27,33,34,27,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,37,27,28,6,27,31,31,27,27,28,28,27,28,27,28,78,37,37,37,5,37,79,79,41,41,40,40,40,40,40,40,41,40,79,27,28,28,27,28,27,28,79,27,28,79,37,37,0,39,39,6,27,6,6,6,6,27,6,6,27,6,6,27,6,27,6,6,6,27,6,6,27,6,27,6,27,6,27,6,27,6,27,6,6,27,6,6,6,27,6,6,27,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,53,53,53,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,52,69,53,42,43,44,45,46,47,48,49,52,53,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,52,69,52,52,52,52,52,69,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,53,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,43,44,45,46,47,71,0,11,80,81,82,83,84,85,86,0,11,80,81,82,83,84,85,86,0,0,11,0,11,0,11,0,11,0,11,0,11,0,11,0,0,77,77,11,11,11,76,80,81,82,83,84,85,86,77,77,77,77,77,77,77,77,77,11,22,11,11,11,80,81,77,77,84,11,11,82,83,85,86,77,77,77,77,11,11,11,11,11,84,77,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,84,77,85,86,77,77,77],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[1,2],[[[0,[3,4]]],2],0,[5,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[[9,6],2],[[7,9,6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],0,[[],10],[[],10],0,[11,2],[10,2],[[[8,[12]]],2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[19,2],[20,2],[[[21,[9]]],2],[[7,[0,[22,4]]],2],[[7,23,7,[0,[22,4]]],2],[[],2],[[[21,[9]]],2],[[[0,[22,4]]],2],[7,2],[[7,9],2],[[7,23,7,9],2],[9,2],[[7,9],2],[[7,23,7,9],2],[24,2],[25,2],[23,2],[26,2],[12,2],[[],2],[7,2],[[7,23,7],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[27,27],[28,28],[[]],[[]],[3],[[],27],[5,2],[5,2],[5,[[2,[27]]]],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[6,2],[6,2],[6,2],[6,2],[[7,[8,[7]],6],2],[[9,6],2],[[7,9,6],2],[6,2],[6,2],[6,2],[6,2],[6,2],[6,2],[[7,6],2],[7],[[27,27],10],[[28,28],10],[29,30],[[27,29],30],[29,30],[[31,29],30],[29,[[2,[32]]]],[[27,29],30],[[28,29],30],[[28,29],30],[[]],[[]],[[]],[[]],[[]],[[9,31]],[[28,31]],[[28,31]],[[],10],[7],[[],[[2,[33]]]],[34,2],[[],[[2,[[21,[33]]]]]],[34,[[2,[21]]]],[[],[[2,[21]]]],[[34,34],[[2,[21]]]],[[],[[2,[[21,[33]]]]]],[34,[[2,[21]]]],[[],[[2,[33]]]],[34,2],[[],[[21,[9]]]],[[],[[21,[9]]]],[[[8,[7]],6],2],[[]],[[]],[[],35],[[],2],[[],2],[[],2],[[],2],[[9,6],2],[[],36],[[],36],[[],2],[[7,[8,[7]]]],[[7,[8,[7]]]],0,[[],2],[34,2],[10,[[2,[37]]]],[[27,10],2],[[[8,[12]]],[[2,[37]]]],[7,[[2,[37]]]],[[[38,[12]]],[[2,[37]]]],[[[8,[12]]],[[2,[37]]]],[[27,[8,[12]]],[[2,[37]]]],[13,[[2,[37]]]],[39,2],[[27,39],2],[14,[[2,[37]]]],[15,[[2,[37]]]],[[27,15],2],[16,[[2,[37]]]],[[27,16],2],[17,[[2,[37]]]],[18,[[2,[37]]]],[19,[[2,[37]]]],[[27,19],2],[20,[[2,[37]]]],[40,2],[[27,40],2],[5,2],[[27,5],2],[[],[[2,[37]]]],[27,2],[41,2],[[27,41],2],[5,2],[[27,5],2],[7,[[2,[37]]]],[[27,7],[[2,[37]]]],[35,[[2,[37]]]],[24,[[2,[37]]]],[[27,24],2],[25,[[2,[37]]]],[23,[[2,[37]]]],[26,[[2,[37]]]],[[27,26],2],[12,[[2,[37]]]],[[],[[2,[37]]]],[27,2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[[[52,[[0,[50,51]]]]],[[52,[[0,[50,51]]]]]],[53,53],[54,54],[55,55],[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[[[69,[51,51]]],[[69,[51,51]]]],[[[70,[51]]],[[70,[51]]]],[[[71,[51]]],[[71,[51]]]],[[[72,[51]]],[[72,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,53],[3,53],[53,7],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,[8,[7]],6],2],[[[43,[37]],7,[8,[7]],6],2],[[[44,[37]],7,[8,[7]],6],2],[[[45,[37]],7,[8,[7]],6],2],[[[46,[37]],7,[8,[7]],6],2],[[[47,[37]],7,[8,[7]],6],2],[[[48,[37]],7,[8,[7]],6],2],[[[49,[37]],7,[8,[7]],6],2],[[[52,[50,37]],7,[8,[7]],6],2],[[[54,[37]],7,[8,[7]],6],2],[[[55,[37]],7,[8,[7]],6],2],[[[56,[37]],7,[8,[7]],6],2],[[[57,[37]],7,[8,[7]],6],2],[[[58,[37]],7,[8,[7]],6],2],[[[59,[37]],7,[8,[7]],6],2],[[[60,[37]],7,[8,[7]],6],2],[[[61,[37]],7,[8,[7]],6],2],[[[62,[37]],7,[8,[7]],6],2],[[[63,[37]],7,[8,[7]],6],2],[[[64,[37]],7,[8,[7]],6],2],[[[65,[37]],7,[8,[7]],6],2],[[[66,[37]],7,[8,[7]],6],2],[[[67,[37]],7,[8,[7]],6],2],[[[68,[37]],7,[8,[7]],6],2],[[[69,[50,37]],7,[8,[7]],6],2],[[[70,[41]],7,[8,[7]],6],2],[[[71,[40]],7,[8,[7]],6],2],[[[72,[39]],7,[8,[7]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,6],2],[[[43,[37]],7,6],2],[[[44,[37]],7,6],2],[[[45,[37]],7,6],2],[[[46,[37]],7,6],2],[[[47,[37]],7,6],2],[[[48,[37]],7,6],2],[[[49,[37]],7,6],2],[[[52,[50,37]],7,6],2],[[[54,[37]],7,6],2],[[[55,[37]],7,6],2],[[[56,[37]],7,6],2],[[[57,[37]],7,6],2],[[[58,[37]],7,6],2],[[[59,[37]],7,6],2],[[[60,[37]],7,6],2],[[[61,[37]],7,6],2],[[[62,[37]],7,6],2],[[[63,[37]],7,6],2],[[[64,[37]],7,6],2],[[[65,[37]],7,6],2],[[[66,[37]],7,6],2],[[[67,[37]],7,6],2],[[[68,[37]],7,6],2],[[[69,[50,37]],7,6],2],[[[70,[41]],7,6],2],[[[71,[40]],7,6],2],[[[72,[39]],7,6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,[8,[7]],6],2],[[[43,[37]],7,[8,[7]],6],2],[[[44,[37]],7,[8,[7]],6],2],[[[45,[37]],7,[8,[7]],6],2],[[[46,[37]],7,[8,[7]],6],2],[[[47,[37]],7,[8,[7]],6],2],[[[48,[37]],7,[8,[7]],6],2],[[[49,[37]],7,[8,[7]],6],2],[[[52,[50,37]],7,[8,[7]],6],2],[[[54,[37]],7,[8,[7]],6],2],[[[55,[37]],7,[8,[7]],6],2],[[[56,[37]],7,[8,[7]],6],2],[[[57,[37]],7,[8,[7]],6],2],[[[58,[37]],7,[8,[7]],6],2],[[[59,[37]],7,[8,[7]],6],2],[[[60,[37]],7,[8,[7]],6],2],[[[61,[37]],7,[8,[7]],6],2],[[[62,[37]],7,[8,[7]],6],2],[[[63,[37]],7,[8,[7]],6],2],[[[64,[37]],7,[8,[7]],6],2],[[[65,[37]],7,[8,[7]],6],2],[[[66,[37]],7,[8,[7]],6],2],[[[67,[37]],7,[8,[7]],6],2],[[[68,[37]],7,[8,[7]],6],2],[[[69,[50,37]],7,[8,[7]],6],2],[[[70,[41]],7,[8,[7]],6],2],[[[71,[40]],7,[8,[7]],6],2],[[[72,[39]],7,[8,[7]],6],2],[[[42,[37]],9,6],2],[[[43,[37]],9,6],2],[[[44,[37]],9,6],2],[[[45,[37]],9,6],2],[[[46,[37]],9,6],2],[[[47,[37]],9,6],2],[[[48,[37]],9,6],2],[[[49,[37]],9,6],2],[[[52,[50,37]],9,6],2],[[[54,[37]],9,6],2],[[[55,[37]],9,6],2],[[[56,[37]],9,6],2],[[[57,[37]],9,6],2],[[[58,[37]],9,6],2],[[[59,[37]],9,6],2],[[[60,[37]],9,6],2],[[[61,[37]],9,6],2],[[[62,[37]],9,6],2],[[[63,[37]],9,6],2],[[[64,[37]],9,6],2],[[[65,[37]],9,6],2],[[[66,[37]],9,6],2],[[[67,[37]],9,6],2],[[[68,[37]],9,6],2],[[[69,[50,37]],9,6],2],[[[70,[41]],9,6],2],[[[71,[40]],9,6],2],[[[72,[39]],9,6],2],[[[42,[37]],7,9,6],2],[[[43,[37]],7,9,6],2],[[[44,[37]],7,9,6],2],[[[45,[37]],7,9,6],2],[[[46,[37]],7,9,6],2],[[[47,[37]],7,9,6],2],[[[48,[37]],7,9,6],2],[[[49,[37]],7,9,6],2],[[[52,[50,37]],7,9,6],2],[[[54,[37]],7,9,6],2],[[[55,[37]],7,9,6],2],[[[56,[37]],7,9,6],2],[[[57,[37]],7,9,6],2],[[[58,[37]],7,9,6],2],[[[59,[37]],7,9,6],2],[[[60,[37]],7,9,6],2],[[[61,[37]],7,9,6],2],[[[62,[37]],7,9,6],2],[[[63,[37]],7,9,6],2],[[[64,[37]],7,9,6],2],[[[65,[37]],7,9,6],2],[[[66,[37]],7,9,6],2],[[[67,[37]],7,9,6],2],[[[68,[37]],7,9,6],2],[[[69,[50,37]],7,9,6],2],[[[70,[41]],7,9,6],2],[[[71,[40]],7,9,6],2],[[[72,[39]],7,9,6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],6],2],[[[43,[37]],6],2],[[[44,[37]],6],2],[[[45,[37]],6],2],[[[46,[37]],6],2],[[[47,[37]],6],2],[[[48,[37]],6],2],[[[49,[37]],6],2],[[[52,[50,37]],6],2],[[[54,[37]],6],2],[[[55,[37]],6],2],[[[56,[37]],6],2],[[[57,[37]],6],2],[[[58,[37]],6],2],[[[59,[37]],6],2],[[[60,[37]],6],2],[[[61,[37]],6],2],[[[62,[37]],6],2],[[[63,[37]],6],2],[[[64,[37]],6],2],[[[65,[37]],6],2],[[[66,[37]],6],2],[[[67,[37]],6],2],[[[68,[37]],6],2],[[[69,[50,37]],6],2],[[[70,[41]],6],2],[[[71,[40]],6],2],[[[72,[39]],6],2],[[[42,[37]],7,6],2],[[[43,[37]],7,6],2],[[[44,[37]],7,6],2],[[[45,[37]],7,6],2],[[[46,[37]],7,6],2],[[[47,[37]],7,6],2],[[[48,[37]],7,6],2],[[[49,[37]],7,6],2],[[[52,[50,37]],7,6],2],[[[54,[37]],7,6],2],[[[55,[37]],7,6],2],[[[56,[37]],7,6],2],[[[57,[37]],7,6],2],[[[58,[37]],7,6],2],[[[59,[37]],7,6],2],[[[60,[37]],7,6],2],[[[61,[37]],7,6],2],[[[62,[37]],7,6],2],[[[63,[37]],7,6],2],[[[64,[37]],7,6],2],[[[65,[37]],7,6],2],[[[66,[37]],7,6],2],[[[67,[37]],7,6],2],[[[68,[37]],7,6],2],[[[69,[50,37]],7,6],2],[[[70,[41]],7,6],2],[[[71,[40]],7,6],2],[[[72,[39]],7,6],2],[[[52,[50,37]]],[[2,[37]]]],[[[69,[50,37]]],[[2,[37]]]],[[53,53],10],[[42,29],30],[[43,29],30],[[44,29],30],[[45,29],30],[[46,29],30],[[47,29],30],[[48,29],30],[[49,29],30],[[[52,[[0,[50,73]]]],29],30],[[53,29],30],[[53,29],30],[[54,29],30],[[55,29],30],[[56,29],30],[[57,29],30],[[58,29],30],[[59,29],30],[[60,29],30],[[61,29],30],[[62,29],30],[[63,29],30],[[64,29],30],[[65,29],30],[[66,29],30],[[67,29],30],[[68,29],30],[[[69,[73]],29],30],[[[70,[73]],29],30],[[[71,[73]],29],30],[[[72,[73]],29],30],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],42],[23,43],[7,44],[7,45],[35,46],[[[74,[7]]],47],[[[8,[12]]],48],[[[8,[12]]],49],[50,[[52,[50]]]],[10,54],[20,55],[17,56],[18,57],[19,58],[16,59],[75,60],[12,61],[25,62],[26,63],[24,64],[9,65],[14,66],[15,67],[13,68],[50,[[69,[50]]]],[[],70],[[],71],[[],72],[[[52,[50,37]],34],[[2,[21]]]],[[[69,[50,37]],34],[[2,[21]]]],[[[52,[50,37]],34,34],[[2,[21]]]],[[[52,[50,37]],34],[[2,[21]]]],[[[52,[50,37]],34],2],[[[52,[50,37]]],[[21,[9]]]],[[[52,[50,37]]],[[21,[9]]]],[[[69,[50,37]]],[[21,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[],36],[[[43,[37]],34],2],[[[44,[37]],34],2],[[[45,[37]],34],2],[[[46,[37]],34],2],[[[47,[37]],34],2],[[[71,[40]],34],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[1,2],[1,2],[[[0,[3,4]]],2],[3],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[[77,[76]]],[[2,[76]]]],[[]],[[]],[[],10],[11,2],[10,2],[[[8,[12]]],2],[13,2],[[[0,[22,4]]],2],[[[0,[22,4]]],2],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[0,[22,4]],[0,[22,4]]],2],[14,2],[15,2],[[[0,[22,4]]],2],[[[0,[22,4]]],2],[[7,[0,[22,4]]],2],[[7,[0,[22,4]]],2],[[[77,[76]],7,[0,[22,4]]],[[2,[76]]]],[[[77,[76]],7,[0,[22,4]]],[[2,[76]]]],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[16,2],[17,2],[18,2],[19,2],[20,2],[[[0,[22,4]]],2],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[[[21,[9]]],2],[[7,[0,[22,4]]],2],[[7,23,7,[0,[22,4]]],2],[[],2],[[[21,[9]]],2],[[[0,[22,4]]],2],[7,2],[[7,9],2],[[7,23,7,9],2],[9,2],[[7,9],2],[[7,23,7,9],2],[24,2],[25,2],[23,2],[26,2],[12,2],[[],2],[7,2],[[7,23,7],2],[[[0,[22,4]]],2],[[[77,[76]],[0,[22,4]]],[[2,[76]]]],[7,2],[7,2],[[],2],[[],2],[[],36]],"c":[],"p":[[8,"IntoIterator"],[4,"Result"],[8,"Display"],[8,"Sized"],[8,"Deserializer"],[8,"Visitor"],[15,"str"],[15,"slice"],[15,"usize"],[15,"bool"],[8,"Serializer"],[15,"u8"],[15,"char"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i32"],[15,"i64"],[15,"i8"],[4,"Option"],[8,"Serialize"],[15,"u32"],[15,"u128"],[15,"u16"],[15,"u64"],[3,"IgnoredAny"],[4,"Unexpected"],[3,"Formatter"],[6,"Result"],[8,"Expected"],[3,"Error"],[8,"Deserialize"],[8,"DeserializeSeed"],[3,"String"],[3,"TypeId"],[8,"Error"],[3,"Vec"],[8,"EnumAccess"],[8,"MapAccess"],[8,"SeqAccess"],[3,"UnitDeserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BytesDeserializer"],[3,"BorrowedBytesDeserializer"],[8,"Iterator"],[8,"Clone"],[3,"MapDeserializer"],[3,"Error"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"I128Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"U128Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapAccessDeserializer"],[3,"EnumAccessDeserializer"],[8,"Debug"],[4,"Cow"],[15,"isize"],[8,"Error"],[3,"Impossible"],[8,"IntoDeserializer"],[8,"VariantAccess"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"]]},\
"serde_derive":{"doc":"This crate provides Serde’s two derive macros.","t":"YY","n":["Deserialize","Serialize"],"q":[[0,"serde_derive"]],"d":["",""],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"signal_hook":{"doc":"Library for easier and safe Unix signal handling","t":"DLLLLLALLALLLLAALLLLLRRARRRRRRRRRRRRRRRRRRRRRRRRRRRRRFFFFDCCGDLALLLLALLLLLLLLLLLLLLLLLLLLLNNDGDNEGNDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDCLLLLLLLLALLLLDLLLLLLLLLLLLFAFFAFFFFDLLLLLLLLLLLFF","n":["SigId","borrow","borrow_mut","clone","clone_into","cmp","consts","eq","equivalent","flag","fmt","from","hash","into","iterator","low_level","partial_cmp","to_owned","try_from","try_into","type_id","FORBIDDEN","TERM_SIGNALS","signal","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGQUIT","SIGSEGV","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","register","register_conditional_default","register_conditional_shutdown","register_usize","Forever","Handle","Pending","Signals","SignalsInfo","add_signal","backend","borrow","borrow","borrow_mut","borrow_mut","exfiltrator","fmt","forever","from","from","handle","into","into","into_iter","into_iter","is_closed","new","next","pending","try_from","try_from","try_into","try_into","type_id","type_id","wait","with_exfiltrator","Closed","Err","Handle","OwningSignalIterator","Pending","Pending","PollResult","RefSignalIterator","Signal","SignalDelivery","SignalIterator","add_signal","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","fmt","fmt","fmt","from","from","from","from","from","get_read","get_read_mut","handle","handle","into","into","into","into","into","into_iter","is_closed","new","next","pending","poll_pending","poll_signal","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","with_pipe","Exfiltrator","SignalOnly","WithRawSiginfo","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","raw","to_owned","try_from","try_into","type_id","WithRawSiginfo","borrow","borrow_mut","clone","clone_into","default","fmt","from","into","to_owned","try_from","try_into","type_id","abort","channel","emulate_default_handler","exit","pipe","raise","register","signal_name","unregister","Channel","borrow","borrow_mut","default","from","into","new","recv","send","try_from","try_into","type_id","register","register_raw"],"q":[[0,"signal_hook"],[21,"signal_hook::consts"],[24,"signal_hook::consts::signal"],[53,"signal_hook::flag"],[57,"signal_hook::iterator"],[90,"signal_hook::iterator::backend"],[156,"signal_hook::iterator::exfiltrator"],[172,"signal_hook::iterator::exfiltrator::raw"],[185,"signal_hook::low_level"],[194,"signal_hook::low_level::channel"],[206,"signal_hook::low_level::pipe"]],"d":["An ID of registered action.","","","","","","The low-level constants.","","","Module for actions setting flags.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","An iterator over incoming signals.","Some low level utilities","","","","","","List of forbidden signals.","Various signals commonly requesting shutdown of an …","The signal constants.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Registers an action to set the flag to <code>true</code> whenever the …","Conditionally runs an emulation of the default action on …","Terminate the application on a signal if the given …","Registers an action to set the flag to the given value …","An infinite iterator of arriving signals.","","","A type alias for an iterator returning just the signal …","The main structure of the module, representing interest in …","Registers another signal to the set watched by this <code>Signals</code>…","A backend module for implementing the iterator like …","","","","","An abstraction over exfiltrating information out of signal …","","Get an infinite iterator over arriving signals.","Returns the argument unchanged.","Returns the argument unchanged.","Get a shareable handle to a <code>Handle</code> for this instance.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Is it closed?","Creates the <code>Signals</code> structure.","","Returns an iterator of already received signals.","","","","","","","Waits for some signals to be available and returns an …","An advanced constructor with explicit <code>Exfiltrator</code>.","The iterator was closed. There won’t be any signals …","An error happened during polling for arrived signals.","A struct to control an instance of an associated type …","A signal iterator which consumes a <code>SignalDelivery</code> instance …","The iterator of one batch of signals.","There are no signals yet but there may arrive some in the …","Possible results of the <code>poll_signal</code> function.","A signal iterator which takes a mutable reference to a …","A signal arrived","A struct for delivering received signals to the main …","An infinite iterator of received signals.","Registers another signal to the set watched by the …","","","","","","","","","","","","","Closes the associated instance.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a reference to the read end of the self pipe","Get a mutable reference to the read end of the self pipe","Get a shareable <code>Handle</code> for this instance.","Get a <code>Handle</code> for this <code>SignalDelivery</code> instance.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Is it closed?","Create a new infinite iterator for signals registered with …","","Returns an iterator of already received signals.","Checks the reading end of the self pipe for available …","Return a signal if there is one or tell the caller that …","","","","","","","","","","","","","","","","","Creates the <code>SignalDelivery</code> structure.","A trait describing what and how is extracted from signal …","An <code>Exfiltrator</code> providing just the signal numbers.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","An exfiltrator providing the raw <code>siginfo_t</code>.","","","","","The <code>Exfiltrator</code> that produces the raw <code>libc::siginfo_t</code>. …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","A bare libc abort.","A restricted channel to pass data from signal handler.","Emulates the behaviour of a default handler for the …","A bare libc exit.","Module with the self-pipe pattern.","The usual raise, just the safe wrapper around it.","Registers an arbitrary action for the given signal.","Provides a human-readable name of a signal.","Removes a previously installed action.","A restricted async-signal-safe channel","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Creates a new channel with nothing in it.","Takes a value from the channel.","Inserts a value into the channel.","","","","Registers a write to a self-pipe whenever there’s the …","Registers a write to a self-pipe whenever there’s the …"],"i":[0,1,1,1,1,1,0,1,1,0,1,1,1,1,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,17,20,17,20,0,17,17,17,20,17,17,20,17,20,17,17,20,17,17,20,17,20,17,20,17,17,33,33,0,0,0,33,0,0,33,0,0,21,33,30,21,25,24,33,30,21,25,24,21,21,21,21,25,24,33,30,21,25,24,25,25,30,25,33,30,21,25,24,24,21,30,24,25,25,30,21,33,30,21,25,24,33,30,21,25,24,33,30,21,25,24,25,0,0,0,34,34,34,34,34,34,34,34,0,34,34,34,34,0,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,0,0],"f":[0,[[]],[[]],[1,1],[[]],[[1,1],2],0,[[1,1],3],[[],3],0,[[1,4],[[6,[5]]]],[[]],[[1,7]],[[]],0,0,[[1,1],[[8,[2]]]],[[]],[[],6],[[],6],[[],9],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[10,[12,[11]]],[[6,[1,13]]]],[[10,[12,[11]]],[[6,[1,13]]]],[[10,10,[12,[11]]],[[6,[1,13]]]],[[10,[12,[14]],15],[[6,[1,13]]]],0,0,0,0,0,[[[17,[16]],10],[[6,[13]]]],0,[[]],[[]],[[]],[[]],0,[[[17,[[0,[18,16]]]],4],19],[[[17,[16]]],[[20,[16]]]],[[]],[[]],[[[17,[16]]],21],[[]],[[]],[[[17,[16]]]],[[]],[[[17,[16]]],3],[22,[[6,[[17,[23,16]],13]]]],[[[20,[16]]],8],[[[17,[16]]],[[24,[16]]]],[[],6],[[],6],[[],6],[[],6],[[],9],[[],9],[[[17,[16]]],[[24,[16]]]],[[22,16],[[6,[[17,[16]],13]]]],0,0,0,0,0,0,0,0,0,0,0,[[21,10],[[6,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[[]],[21],[[21,4],19],[[[25,[18,[0,[18,16]]]],4],19],[[[24,[[0,[18,16]]]],4],19],[[]],[[]],[[]],[[]],[[]],[[[25,[[0,[26,27,28]],16]]],[[0,[26,27,28]]]],[[[25,[[0,[26,27,28]],16]]],[[0,[26,27,28]]]],[[[30,[[29,[[25,[[0,[26,27,28]],16]]]],16]]],21],[[[25,[[0,[26,27,28]],16]]],21],[[]],[[]],[[]],[[]],[[]],[[]],[21,3],[[[31,[[25,[[0,[26,27,28]],16]]]]],[[30,[[31,[[25,[[0,[26,27,28]],16]]]],16]]]],[[[24,[16]]],8],[[[25,[[0,[26,27,28]],16]]],[[24,[16]]]],[[[25,[[0,[26,27,28]],16]],32],[[6,[[8,[[24,[16]]]],13]]]],[[[30,[[31,[[25,[[0,[26,27,28]],16]]]],16]],32],33],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],9],[[],9],[[],9],[[],9],[[],9],[[[0,[26,27,28]],[0,[26,18,27,28]],16,22],[[6,[[25,[[0,[26,27,28]],16]],13]]]],0,0,0,[[]],[[]],[34,34],[[]],[[],34],[[34,4],19],[[]],[[]],0,[[]],[[],6],[[],6],[[],9],0,[[]],[[]],[35,35],[[]],[[],35],[[35,4],19],[[]],[[]],[[]],[[],6],[[],6],[[],9],[[],36],0,[10,[[6,[13]]]],[10,36],0,[10,[[6,[13]]]],[[37,[0,[38,28,27]]],[[6,[1,13]]]],[10,[[8,[39]]]],[1,3],0,[[]],[[]],[[],40],[[]],[[]],[[],40],[40,8],[40],[[],6],[[],6],[[],9],[[10,41],[[6,[1,13]]]],[[10,42],[[6,[1,13]]]]],"c":[],"p":[[3,"SigId"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Result"],[8,"Hasher"],[4,"Option"],[3,"TypeId"],[6,"c_int"],[3,"AtomicBool"],[3,"Arc"],[3,"Error"],[3,"AtomicUsize"],[15,"usize"],[8,"Exfiltrator"],[3,"SignalsInfo"],[8,"Debug"],[6,"Result"],[3,"Forever"],[3,"Handle"],[8,"IntoIterator"],[8,"Default"],[3,"Pending"],[3,"SignalDelivery"],[8,"AsRawFd"],[8,"Send"],[8,"Sync"],[8,"Borrow"],[3,"SignalIterator"],[8,"BorrowMut"],[8,"FnMut"],[4,"PollResult"],[3,"SignalOnly"],[3,"WithRawSiginfo"],[15,"never"],[15,"i32"],[8,"Fn"],[15,"str"],[3,"Channel"],[8,"IntoRawFd"],[6,"RawFd"]]},\
"signal_hook_mio":{"doc":"A crate offering integration with the MIO runtime.","t":"ADGDLLLLLLLLLLLLLLLLLLLLLLLL","n":["v0_8","Pending","Signals","SignalsInfo","add_signal","borrow","borrow","borrow_mut","borrow_mut","deregister","fmt","from","from","into","into","into_iter","new","next","pending","register","reregister","try_from","try_from","try_into","try_into","type_id","type_id","with_exfiltrator"],"q":[[0,"signal_hook_mio"],[1,"signal_hook_mio::v0_8"]],"d":["A module for integrating signal handling with the MIO 0.8 …","The iterator of one batch of signals.","A simplified signal iterator.","A struct which mimics <code>signal_hook::iterator::SignalsInfo</code> …","Registers another signal to the set watched by this <code>Signals</code>…","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a <code>Signals</code> instance.","","Returns an iterator of already received signals.","","","","","","","","","A constructor with specifying an exfiltrator to pass …"],"i":[0,0,0,0,2,2,9,2,9,6,9,2,9,2,9,9,2,9,2,6,6,2,9,2,9,2,9,2],"f":[0,0,0,0,[[[2,[1]],3],[[5,[4]]]],[[]],[[]],[[]],[[]],[[6,7],[[5,[4]]]],[[[9,[[0,[8,1]]]],10],[[5,[11]]]],[[]],[[]],[[]],[[]],[[]],[12,[[5,[[2,[13,1]],4]]]],[[[9,[1]]],14],[[[2,[1]]],[[9,[1]]]],[[6,7,15,16],[[5,[4]]]],[[6,7,15,16],[[5,[4]]]],[[],5],[[],5],[[],5],[[],5],[[],17],[[],17],[[12,1],[[5,[[2,[1]],4]]]]],"c":[],"p":[[8,"Exfiltrator"],[3,"SignalsInfo"],[6,"c_int"],[3,"Error"],[4,"Result"],[6,"Signals"],[3,"Registry"],[8,"Debug"],[3,"Pending"],[3,"Formatter"],[3,"Error"],[8,"IntoIterator"],[8,"Default"],[4,"Option"],[3,"Token"],[3,"Interest"],[3,"TypeId"]]},\
"signal_hook_registry":{"doc":"Backend of the signal-hook crate.","t":"RDLLLLLLLLLLLLFFFFLLLLF","n":["FORBIDDEN","SigId","borrow","borrow_mut","clone","clone_into","cmp","eq","equivalent","fmt","from","hash","into","partial_cmp","register","register_sigaction","register_signal_unchecked","register_unchecked","to_owned","try_from","try_into","type_id","unregister"],"q":[[0,"signal_hook_registry"]],"d":["List of forbidden signals.","An ID of registered action.","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Registers an arbitrary action for the given signal.","Register a signal action.","Register a signal action without checking for forbidden …","Register a signal action without checking for forbidden …","","","","","Removes a previously installed action."],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,0],"f":[0,0,[[]],[[]],[1,1],[[]],[[1,1],2],[[1,1],3],[[],3],[[1,4],5],[[]],[[1,6]],[[]],[[1,1],[[7,[2]]]],[[8,[0,[9,10,11]]],[[13,[1,12]]]],[[8,[0,[9,10,11]]],[[13,[1,12]]]],[[8,[0,[9,10,11]]],[[13,[1,12]]]],[[8,[0,[9,10,11]]],[[13,[1,12]]]],[[]],[[],13],[[],13],[[],14],[1,3]],"c":[],"p":[[3,"SigId"],[4,"Ordering"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[4,"Option"],[6,"c_int"],[8,"Fn"],[8,"Sync"],[8,"Send"],[3,"Error"],[4,"Result"],[3,"TypeId"]]},\
"slab":{"doc":"Pre-allocated storage for a uniform data type.","t":"DDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Drain","IntoIter","Iter","IterMut","Slab","VacantEntry","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","compact","contains","default","drain","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_iter","get","get2_mut","get2_unchecked_mut","get_mut","get_unchecked","get_unchecked_mut","index","index_mut","insert","insert","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_empty","iter","iter_mut","key","key_of","len","len","len","len","len","new","next","next","next","next","next_back","next_back","next_back","next_back","remove","reserve","reserve_exact","retain","shrink_to_fit","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_remove","type_id","type_id","type_id","type_id","type_id","type_id","vacant_entry","vacant_key","with_capacity"],"q":[[0,"slab"]],"d":["A draining iterator for <code>Slab</code>","A consuming iterator over the values stored in a <code>Slab</code>","An iterator over the values stored in the <code>Slab</code>","A mutable iterator over the values stored in the <code>Slab</code>","Pre-allocated storage for a uniform data type","A handle to a vacant entry in a <code>Slab</code>.","","","","","","","","","","","","","Return the number of values the slab can store without …","Clear the slab of all values.","","","","","","Reduce the capacity as much as possible, changing the key …","Return <code>true</code> if a value is associated with the given key.","","Return a draining iterator that removes all elements from …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Return a reference to the value associated with the given …","Return two mutable references to the values associated …","Return two mutable references to the values associated …","Return a mutable reference to the value associated with …","Return a reference to the value associated with the given …","Return a mutable reference to the value associated with …","","","Insert a value in the slab, returning key assigned to the …","Insert a value in the entry, returning a mutable reference …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Return <code>true</code> if there are no values stored in the slab.","Return an iterator over the slab.","Return an iterator that allows modifying each value.","Return the key associated with this entry.","Get the key for an element in the slab.","Return the number of stored values.","","","","","Construct a new, empty <code>Slab</code>.","","","","","","","","","Remove and return the value associated with the given key.","Reserve capacity for at least <code>additional</code> more values to be …","Reserve the minimum capacity required to store exactly …","Retain only the elements specified by the predicate.","Shrink the capacity of the slab as much as possible …","","","","","","","","","","","","","","","","","","","Tries to remove the value associated with the given key, …","","","","","","","Return a handle to a vacant entry allowing for further …","Returns the key of the next vacant entry.","Construct a new, empty <code>Slab</code> with the specified capacity."],"i":[0,0,0,0,0,0,1,11,4,12,7,13,1,11,4,12,7,13,1,1,1,4,1,1,4,1,1,1,1,1,11,4,12,7,13,1,11,4,12,7,13,1,1,1,1,1,1,1,1,1,1,13,1,11,4,12,7,13,1,1,1,11,4,12,7,1,1,1,13,1,1,11,4,12,7,1,11,4,12,7,11,4,12,7,1,1,1,1,1,11,4,12,7,1,4,1,11,4,12,7,13,1,11,4,12,7,13,1,1,11,4,12,7,13,1,1,1],"f":[0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,2],[1],[[[1,[3]]],[[1,[3]]]],[4,4],[[[1,[3]],[1,[3]]]],[[]],[[]],[[1,5]],[[1,2],6],[[],1],[1,7],[[[1,[8]],9],10],[[[11,[8]],9],10],[[[4,[8]],9],10],[[[12,[8]],9],10],[[7,9],10],[[[13,[8]],9],10],[[]],[[]],[[]],[[]],[[]],[[]],[14,1],[[1,2],15],[[1,2,2],15],[[1,2,2]],[[1,2],15],[[1,2]],[[1,2]],[[1,2]],[[1,2]],[1,2],[13],[[]],[[]],[[]],[[]],[[]],[[]],[1,4],[1,11],[1,12],[[]],[[]],[[]],[[]],[1,6],[1,4],[1,12],[13,2],[1,2],[1,2],[11,2],[4,2],[12,2],[7,2],[[],1],[11,15],[4,15],[12,15],[7,15],[11,15],[4,15],[12,15],[7,15],[[1,2]],[[1,2]],[[1,2]],[[1,5]],[1],[11],[4],[12],[7],[[]],[[]],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[1,2],15],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[1,13],[1,2],[2,1]],"c":[],"p":[[3,"Slab"],[15,"usize"],[8,"Clone"],[3,"Iter"],[8,"FnMut"],[15,"bool"],[3,"Drain"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[3,"IntoIter"],[3,"IterMut"],[3,"VacantEntry"],[8,"IntoIterator"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"smallvec":{"doc":"Small vectors in various sizes. These store a certain …","t":"NINEDDQDILLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLOLLLLKLLLLLLLLLLLLLLLLLLM","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","as_mut_slice","as_ptr","as_ref","as_slice","as_slice","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","clear","clone","clone","clone_from","clone_into","clone_into","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","drop","drop","eq","extend","extend_from_slice","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","into","into","into","into_boxed_slice","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_vec","is_empty","len","len","new","next","next","next_back","next_back","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","size_hint","smallvec","spilled","swap_remove","to_owned","to_owned","to_smallvec","to_string","truncate","try_from","try_from","try_from","try_from","try_grow","try_into","try_into","try_into","try_into","try_reserve","try_reserve_exact","type_id","type_id","type_id","type_id","with_capacity","layout"],"q":[[0,"smallvec"],[138,"smallvec::CollectionAllocErr"]],"d":["The allocator return an error","Types that can be used as the backing store for a SmallVec","Overflow <code>usize::MAX</code> or other error during size computation","Error type for APIs with fallible heap allocation","An iterator that removes the items from a <code>SmallVec</code> and …","An iterator that consumes a <code>SmallVec</code> and yields its items …","The type of the array’s elements.","A <code>Vec</code>-like container that can store a small number of …","Convenience trait for constructing a <code>SmallVec</code>","Moves all the elements of <code>other</code> into <code>self</code>, leaving <code>other</code> …","","Returns a raw mutable pointer to the vector’s buffer.","Extracts a mutable slice of the entire vector.","Returns the remaining items of this iterator as a mutable …","Returns a raw pointer to the vector’s buffer.","","Extracts a slice containing the entire vector.","Returns the remaining items of this iterator as a slice.","","","","","","","","","","","The number of items the vector can hold without …","Remove all elements from the vector.","","","","","","","Removes consecutive duplicate elements.","Removes consecutive duplicate elements using the given …","Removes consecutive elements that map to the same key.","","","","Creates a draining iterator that removes the specified …","","","","","","Copy elements from a slice and append them to the vector.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Constructs a new <code>SmallVec</code> on the stack from an <code>A</code> without …","Creates a <code>SmallVec</code> with <code>n</code> copies of <code>elem</code>.","","Creates a <code>SmallVec</code> directly from the raw components of …","Copy the elements from a slice into a new <code>SmallVec</code>.","Construct a new <code>SmallVec</code> from a <code>Vec&lt;A::Item&gt;</code>.","Re-allocate to set the capacity to …","","","","The maximum number of elements this vector can hold inline","Insert an element at position <code>index</code>, shifting all elements …","Copy elements from a slice into the vector at position …","Insert multiple elements at position <code>index</code>, shifting all …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts a <code>SmallVec</code> into a <code>Box&lt;[T]&gt;</code> without reallocating …","Convert the SmallVec into an <code>A</code> if possible. Otherwise …","","","","","","Convert a SmallVec to a Vec, without reallocating if the …","Returns <code>true</code> if the vector is empty","","The number of elements stored in the vector","Construct an empty vector","","","","","","Remove an item from the end of the vector and return it, …","Append an item to the vector.","Remove and return the element at position <code>index</code>, shifting …","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","Resizes the vector so that its length is equal to <code>len</code>.","Resizes the <code>SmallVec</code> in-place so that <code>len</code> is equal to …","Retains only the elements specified by the predicate.","Retains only the elements specified by the predicate.","Sets the length of a vector.","Shrink the capacity of the vector as much as possible.","Returns the number of items the array can hold.","","","Creates a <code>SmallVec</code> containing the arguments.","Returns <code>true</code> if the data has spilled into a separate …","Remove the element at position <code>index</code>, replacing it with …","","","Construct a new <code>SmallVec</code> from a slice.","","Shorten the vector, keeping the first <code>len</code> elements and …","","","","","Re-allocate to set the capacity to …","","","","","Reserve capacity for <code>additional</code> more elements to be …","Reserve the minimum capacity for <code>additional</code> more elements …","","","","","Construct an empty vector with enough capacity …","The layout that was passed to the allocator"],"i":[15,0,15,0,0,0,1,0,0,2,2,2,2,4,2,2,2,4,10,2,2,4,15,10,2,2,4,15,2,2,2,4,2,2,4,2,2,2,2,2,2,2,2,10,2,4,2,2,2,10,2,4,15,15,10,2,2,2,2,2,4,15,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,10,2,4,15,2,2,10,2,2,2,4,2,2,10,2,2,10,4,10,4,2,2,2,2,2,2,2,2,2,2,2,2,1,10,4,0,2,2,2,4,27,15,2,10,2,4,15,2,10,2,4,15,2,2,10,2,4,15,2,28],"f":[0,0,0,0,0,0,0,0,0,[[[2,[1]],[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[4,[1]]],3],[[[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]],3],[[[4,[1]]],3],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[]],[[[2,[1]]],3],[[]],[[]],[[]],[[[2,[1]]],5],[[[2,[1]]]],[[[2,[1]]],[[2,[1]]]],[[[4,[[0,[1,6]]]]],[[4,[[0,[1,6]]]]]],[[[2,[1]],[2,[1]]]],[[]],[[]],[[[2,[1]],[2,[1]]],7],[[[2,[1]]]],[[[2,[1]],8]],[[[2,[1]],8]],[[],[[2,[1]]]],[[[2,[1]]],3],[[[2,[1]]],3],[[[2,[1]],[9,[5]]],[[10,[1]]]],[[[10,[1]]]],[[[2,[1]]]],[[[4,[1]]]],[[[2,[1]],[2,[1]]],11],[[[2,[1]],12]],[[[2,[1]],3]],[[[10,[1]],13],14],[[[2,[1]],13],14],[[[4,[1]],13],14],[[15,13],14],[[15,13],14],[[]],[1,[[2,[1]]]],[[]],[16],[17,[[2,[1]]]],[3,[[2,[1]]]],[[]],[[]],[18,15],[1,[[2,[1]]]],[[1,5],[[2,[1]]]],[[[19,[1]],5],[[2,[1]]]],[5,[[2,[1]]]],[12,[[2,[1]]]],[[5,5],[[2,[1]]]],[3,[[2,[1]]]],[17,[[2,[1]]]],[[[2,[1]],5]],[[[2,[1]],20]],[[[2,[1]],[21,[3]]]],[[[2,[1]],[21,[3]]]],[[[2,[1]]],5],[[[2,[1]],5]],[[[2,[1]],5,3]],[[[2,[1]],5,12]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[22,[3]]]],[[[2,[1]]],[[23,[1,[2,[1]]]]]],[[]],[[[2,[1]]]],[[[2,[1]]]],[[[2,[1]]]],[[]],[[[2,[1]]],17],[[[2,[1]]],11],[[[10,[1]]],5],[[[2,[1]]],5],[[],[[2,[1]]]],[[[10,[1]]],24],[[[4,[1]]],24],[[[10,[1]]],24],[[[4,[1]]],24],[[[2,[1]],[2,[1]]],[[24,[7]]]],[[[2,[1]]],24],[[[2,[1]]]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5]],[[[2,[1]],5,8]],[[[2,[1]],8]],[[[2,[1]],8]],[[[2,[1]],5]],[[[2,[1]]]],[[],5],[[[10,[1]]]],[[[4,[1]]]],0,[[[2,[1]]],11],[[[2,[1]],5]],[[]],[[]],[[],2],[[],25],[[[2,[1]],5]],[[],23],[[],23],[[],23],[[],23],[[[2,[1]],5],[[23,[15]]]],[[],23],[[],23],[[],23],[[],23],[[[2,[1]],5],[[23,[15]]]],[[[2,[1]],5],[[23,[15]]]],[[],26],[[],26],[[],26],[[],26],[5,[[2,[1]]]],0],"c":[],"p":[[8,"Array"],[3,"SmallVec"],[15,"slice"],[3,"IntoIter"],[15,"usize"],[8,"Clone"],[4,"Ordering"],[8,"FnMut"],[8,"RangeBounds"],[3,"Drain"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[4,"CollectionAllocErr"],[15,"never"],[3,"Vec"],[6,"LayoutErr"],[19,"MaybeUninit"],[8,"Hasher"],[8,"SliceIndex"],[3,"Box"],[4,"Result"],[4,"Option"],[3,"String"],[3,"TypeId"],[8,"ToSmallVec"],[13,"AllocErr"]]},\
"tempfile":{"doc":"Temporary files and directories.","t":"DDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLFLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Builder","NamedTempFile","PathPersistError","PersistError","SpooledTempFile","TempDir","TempPath","append","as_fd","as_file","as_file_mut","as_raw_fd","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","close","close","close","default","deref","drop","drop","eq","equivalent","error","error","file","flush","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_parts","from_path","into","into","into","into","into","into","into","into_file","into_inner","into_parts","into_path","into_temp_path","is_rolled","keep","keep","make","make_in","new","new","new","new","new_in","new_in","path","path","path","persist","persist","persist_noclobber","persist_noclobber","prefix","rand_bytes","read","read","read","read_exact","read_exact","read_exact","read_to_end","read_to_end","read_to_end","read_to_string","read_to_string","read_to_string","read_vectored","read_vectored","read_vectored","reopen","roll","seek","seek","seek","set_len","source","source","spooled_tempfile","suffix","tempdir","tempdir","tempdir_in","tempdir_in","tempfile","tempfile","tempfile_in","tempfile_in","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","with_prefix","with_prefix","with_prefix_in","with_prefix_in","write","write","write","write_all","write_all","write_fmt","write_fmt","write_vectored","write_vectored","write_vectored"],"q":[[0,"tempfile"]],"d":["Create a new temporary file or directory with custom …","A named temporary file.","Error returned when persisting a temporary file path fails.","Error returned when persisting a temporary file fails.","An object that behaves like a regular temporary file, but …","A directory in the filesystem that is automatically …","A path to a named temporary file without an open file …","Set the file to be opened in append mode.","","Get a reference to the underlying file.","Get a mutable reference to the underlying file.","","","","","","","","","","","","","","","","","","","","","","Closes and removes the temporary directory, returning a …","Close and remove the temporary file.","Close and remove the temporary file.","","","","","","","The underlying IO error.","The underlying IO error.","The temporary file that couldn’t be persisted.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a <code>NamedTempFile</code> from its constituent parts.","Create a new TempPath from an existing path. This can be …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert the temporary file into a <code>std::fs::File</code>.","Consumes and returns the inner <code>SpooledData</code> type.","Converts the named temporary file into its constituent …","Persist the temporary directory to disk, returning the …","Closes the file, leaving only the temporary file path.","Returns true if the file has been rolled over to disk.","Keep the temporary file from being deleted. This function …","Keep the temporary file from being deleted. This function …","Attempts to create a temporary file (or file-like object) …","This is the same as <code>Builder::make</code>, except <code>dir</code> is used as …","Attempts to make a temporary directory inside of …","Create a new named temporary file.","","Create a new <code>Builder</code>.","Attempts to make a temporary directory inside of <code>dir</code>. The …","Create a new named temporary file in the specified …","Accesses the <code>Path</code> to the temporary directory.","Get the temporary file’s path.","The temporary file path that couldn’t be persisted.","Persist the temporary file at the target path.","Persist the temporary file at the target path.","Persist the temporary file at the target path if and only …","Persist the temporary file at the target path if and only …","Set a custom filename prefix.","Set the number of random bytes.","","","","","","","","","","","","","","","","Securely reopen the temporary file.","Rolls over to a file on disk, regardless of current size. …","","","","","","","Create a new spooled temporary file.","Set a custom filename suffix.","Create a new temporary directory.","Attempts to make a temporary directory inside of …","Create a new temporary directory in a specific directory.","Attempts to make a temporary directory inside of <code>dir</code>. The …","Create a new temporary file.","Create the named temporary file.","Create a new temporary file in the specified directory.","Create the named temporary file in the specified directory.","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to make a temporary directory with the specified …","Create a new named temporary file with the specified …","Attempts to make a temporary directory with the specified …","Create a new named temporary file with the specified …","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,4,4,4,4,8,10,10,4,8,10,4,18,19,15,1,8,10,4,18,19,15,1,1,1,8,10,4,1,10,8,10,1,1,18,19,18,4,4,15,8,10,4,18,18,19,19,15,1,8,10,10,4,4,18,19,15,1,4,10,8,10,4,18,19,15,1,4,15,4,8,4,15,10,4,1,1,8,4,15,1,8,4,8,4,19,10,4,10,4,1,1,4,4,15,4,4,15,4,4,15,4,4,15,4,4,15,4,15,4,4,15,15,18,19,0,1,0,1,0,1,0,1,0,1,1,18,19,8,10,4,18,19,15,1,8,10,4,18,19,15,1,8,10,4,18,19,15,1,8,4,8,4,4,4,15,4,4,4,4,4,4,15],"f":[0,0,0,0,0,0,0,[[1,2],1],[[[4,[3]]],5],[4],[4],[[[4,[6]]],7],[8,9],[10,11],[10,9],[4,9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[8,12],[10,12],[4,12],[[],1],[10,9],[8],[10],[[1,1],2],[[],2],0,0,0,[[[4,[13]]],12],[[[4,[14]]],12],[15,12],[[8,16],17],[[10,16],17],[[4,16],17],[[18,16],17],[[18,16],17],[[19,16],17],[[19,16],17],[[15,16],17],[[1,16],17],[[]],[[]],[19,10],[[]],[18,4],[[]],[[]],[[]],[[]],[10,4],[[[21,[20]]],10],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[4],0,[4],[8,20],[4,10],[15,2],[10,[[22,[20,19]]]],[4,[[22,[18]]]],[[1,23],[[12,[4]]]],[[1,[24,[9]],23],[[12,[4]]]],[[],[[12,[8]]]],[[],[[12,[4]]]],[25,15],[[],1],[[[24,[9]]],[[12,[8]]]],[[[24,[9]]],[[12,[4]]]],[8,9],[4,9],0,[[10,[24,[9]]],[[22,[19]]]],[[4,[24,[9]]],[[22,[18]]]],[[10,[24,[9]]],[[22,[19]]]],[[4,[24,[9]]],[[22,[18]]]],[[1,[0,[[24,[11]],26]]],1],[[1,25],1],[[[4,[27]],[29,[28]]],[[12,[25]]]],[[[4,[14]],[29,[28]]],[[12,[25]]]],[[15,[29,[28]]],[[12,[25]]]],[[[4,[27]],[29,[28]]],12],[[[4,[14]],[29,[28]]],12],[[15,[29,[28]]],12],[[[4,[27]],[30,[28]]],[[12,[25]]]],[[[4,[14]],[30,[28]]],[[12,[25]]]],[[15,[30,[28]]],[[12,[25]]]],[[[4,[27]],31],[[12,[25]]]],[[[4,[14]],31],[[12,[25]]]],[[15,31],[[12,[25]]]],[[[4,[27]],[29,[32]]],[[12,[25]]]],[[[4,[14]],[29,[32]]],[[12,[25]]]],[[15,[29,[32]]],[[12,[25]]]],[[[4,[14]]],[[12,[14]]]],[15,12],[[[4,[33]],34],[[12,[35]]]],[[[4,[14]],34],[[12,[35]]]],[[15,34],[[12,[35]]]],[[15,35],[[22,[36]]]],[18,[[38,[37]]]],[19,[[38,[37]]]],[25,15],[[1,[0,[[24,[11]],26]]],1],[[],[[12,[8]]]],[1,[[12,[8]]]],[[[24,[9]]],[[12,[8]]]],[[1,[24,[9]]],[[12,[8]]]],[[],[[12,[14]]]],[1,[[12,[4]]]],[[[24,[9]]],[[12,[14]]]],[[1,[24,[9]]],[[12,[4]]]],[[]],[[],31],[[],31],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[[24,[11]]],[[12,[8]]]],[[[24,[11]]],[[12,[4]]]],[[[24,[11]],[24,[9]]],[[12,[8]]]],[[[24,[11]],[24,[9]]],[[12,[4]]]],[[[4,[13]],[29,[28]]],[[12,[25]]]],[[[4,[14]],[29,[28]]],[[12,[25]]]],[[15,[29,[28]]],[[12,[25]]]],[[[4,[14]],[29,[28]]],12],[[[4,[13]],[29,[28]]],12],[[[4,[14]],40],12],[[[4,[13]],40],12],[[[4,[13]],[29,[41]]],[[12,[25]]]],[[[4,[14]],[29,[41]]],[[12,[25]]]],[[15,[29,[41]]],[[12,[25]]]]],"c":[],"p":[[3,"Builder"],[15,"bool"],[8,"AsFd"],[3,"NamedTempFile"],[3,"BorrowedFd"],[8,"AsRawFd"],[6,"RawFd"],[3,"TempDir"],[3,"Path"],[3,"TempPath"],[3,"OsStr"],[6,"Result"],[8,"Write"],[3,"File"],[3,"SpooledTempFile"],[3,"Formatter"],[6,"Result"],[3,"PersistError"],[3,"PathPersistError"],[3,"PathBuf"],[8,"Into"],[4,"Result"],[8,"FnMut"],[8,"AsRef"],[15,"usize"],[8,"Sized"],[8,"Read"],[15,"u8"],[15,"slice"],[3,"Vec"],[3,"String"],[3,"IoSliceMut"],[8,"Seek"],[4,"SeekFrom"],[15,"u64"],[3,"Error"],[8,"Error"],[4,"Option"],[3,"TypeId"],[3,"Arguments"],[3,"IoSlice"]]},\
"thiserror":{"doc":"github crates-io docs-rs","t":"Y","n":["Error"],"q":[[0,"thiserror"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"thiserror_impl":{"doc":"","t":"Y","n":["Error"],"q":[[0,"thiserror_impl"]],"d":[""],"i":[0],"f":[0],"c":[],"p":[]},\
"tokio":{"doc":"A runtime for writing reliable network applications …","t":"AAOXAOAOCAAAOXAODDDDDLLLLLLLLLLLLLFLLFLLLFFLLLLLLLLLLLLLLLLLLLLFLLLLLLLLFLLLLLLLLLLLLLLLLLLFLFFFLFFFFLFLLFFLLLLLFLLLLLLLLLLLLLLLLFLIIIIIIIIDDDDDCCDDDDCCDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLFFFLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLKLLLLLLLLLLKLLLLLLLLLKLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLFFLLKLLLFFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLIDNDDNDEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDNDDNNSDDDNDDDDDDDDDDDDDDEEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLDDLLLLLFLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNEDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLNNNNNDENEELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLFLLLLALLLLLLLLLLLLLLLLLLNNDELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLFLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFDLLLLLLLLLLLNNCDDENDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLFFLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["fs","io","join","main","net","pin","runtime","select","spawn","stream","sync","task","task_local","test","time","try_join","DirBuilder","DirEntry","File","OpenOptions","ReadDir","append","as_fd","as_raw_fd","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","canonicalize","clone","clone_into","copy","create","create","create","create_dir","create_dir_all","create_new","custom_flags","default","default","file_name","file_type","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw_fd","from_std","hard_link","ino","into","into","into","into","into","into_std","is_write_vectored","metadata","metadata","metadata","mode","mode","new","new","next_entry","open","open","options","path","poll_complete","poll_flush","poll_next_entry","poll_read","poll_shutdown","poll_write","poll_write_vectored","read","read","read_dir","read_link","read_to_string","recursive","remove_dir","remove_dir_all","remove_file","rename","set_len","set_permissions","set_permissions","start_seek","symlink","symlink_metadata","sync_all","sync_data","to_owned","truncate","try_clone","try_exists","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_std","type_id","type_id","type_id","type_id","type_id","write","write","AsyncBufRead","AsyncBufReadExt","AsyncRead","AsyncReadExt","AsyncSeek","AsyncSeekExt","AsyncWrite","AsyncWriteExt","BufReader","BufStream","BufWriter","DuplexStream","Empty","Error","ErrorKind","Lines","ReadBuf","ReadHalf","Repeat","Result","SeekFrom","Sink","Split","Stderr","Stdin","Stdout","Take","WriteHalf","advance","advance_mut","as_fd","as_fd","as_fd","as_raw_fd","as_raw_fd","as_raw_fd","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","capacity","chain","chain","chunk_mut","clear","consume","consume","consume","consume","consume","consume","consume","consume","copy","copy_bidirectional","copy_buf","drop","duplex","empty","fill_buf","fill_buf","filled","filled_mut","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_mut","get_mut","get_mut","get_mut","get_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_pin_mut","get_ref","get_ref","get_ref","get_ref","get_ref","initialize_unfilled","initialize_unfilled_to","initialized","initialized_mut","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","is_pair_of","is_pair_of","is_write_vectored","is_write_vectored","is_write_vectored","is_write_vectored","is_write_vectored","is_write_vectored","is_write_vectored","limit","lines","lines","new","new","new","new","next_line","next_segment","poll_complete","poll_complete","poll_complete","poll_complete","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_fill_buf","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_flush","poll_next_line","poll_next_segment","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_read","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_shutdown","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","poll_write_vectored","put_slice","read","read","read_buf","read_buf","read_exact","read_exact","read_f32","read_f32","read_f32_le","read_f32_le","read_f64","read_f64","read_f64_le","read_f64_le","read_i128","read_i128","read_i128_le","read_i128_le","read_i16","read_i16","read_i16_le","read_i16_le","read_i32","read_i32","read_i32_le","read_i32_le","read_i64","read_i64","read_i64_le","read_i64_le","read_i8","read_i8","read_line","read_line","read_to_end","read_to_end","read_to_string","read_to_string","read_u128","read_u128","read_u128_le","read_u128_le","read_u16","read_u16","read_u16_le","read_u16_le","read_u32","read_u32","read_u32_le","read_u32_le","read_u64","read_u64","read_u64_le","read_u64_le","read_u8","read_u8","read_until","read_until","remaining","remaining_mut","repeat","rewind","rewind","seek","seek","set_filled","set_limit","shutdown","shutdown","sink","split","split","split","start_seek","start_seek","start_seek","start_seek","stderr","stdin","stdout","stream_position","stream_position","take","take","take","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unfilled_mut","uninit","unsplit","with_capacity","with_capacity","with_capacity","write","write","write_all","write_all","write_all_buf","write_all_buf","write_buf","write_buf","write_f32","write_f32","write_f32_le","write_f32_le","write_f64","write_f64","write_f64_le","write_f64_le","write_i128","write_i128","write_i128_le","write_i128_le","write_i16","write_i16","write_i16_le","write_i16_le","write_i32","write_i32","write_i32_le","write_i32_le","write_i64","write_i64","write_i64_le","write_i64_le","write_i8","write_i8","write_u128","write_u128","write_u128_le","write_u128_le","write_u16","write_u16","write_u16_le","write_u16_le","write_u32","write_u32","write_u32_le","write_u32_le","write_u64","write_u64","write_u64_le","write_u64_le","write_u8","write_u8","write_vectored","write_vectored","ToSocketAddrs","Builder","CurrentThread","EnterGuard","Handle","MultiThread","Runtime","RuntimeFlavor","TryCurrentError","block_on","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone_into","current","drop","enable_all","enable_time","enter","enter","eq","equivalent","event_interval","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","global_queue_interval","handle","into","into","into","into","into","into","is_missing_context","is_thread_local_destroyed","max_blocking_threads","new","new_current_thread","new_multi_thread","on_thread_park","on_thread_start","on_thread_stop","on_thread_unpark","runtime_flavor","shutdown_background","shutdown_timeout","spawn","spawn","spawn_blocking","spawn_blocking","thread_keep_alive","thread_name","thread_name_fn","thread_stack_size","to_owned","to_string","try_current","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","worker_threads","AcquireError","AlreadyInitializedError","Barrier","BarrierWaitResult","Closed","InitializingError","MAX_PERMITS","MappedMutexGuard","Mutex","MutexGuard","NoPermits","Notify","OnceCell","OwnedMappedMutexGuard","OwnedMutexGuard","OwnedRwLockMappedWriteGuard","OwnedRwLockReadGuard","OwnedRwLockWriteGuard","OwnedSemaphorePermit","RwLock","RwLockMappedWriteGuard","RwLockReadGuard","RwLockWriteGuard","Semaphore","SemaphorePermit","SetError","TryAcquireError","TryLockError","acquire","acquire_many","acquire_many_owned","acquire_owned","add_permits","available_permits","blocking_lock","blocking_lock_owned","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone","clone_into","clone_into","close","const_new","const_new","const_new","const_new","const_new","const_new_with","const_with_max_readers","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","downgrade","downgrade","downgrade_map","downgrade_map","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forget","forget","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","futures","get","get_mut","get_mut","get_mut","get_or_init","get_or_try_init","initialized","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_mapped","into_mapped","is_already_init_err","is_closed","is_initializing_err","is_leader","lock","lock_owned","map","map","map","map","map","map","map","map","map","map","merge","merge","mpsc","mutex","mutex","new","new","new","new","new","new","new_with","notified","notify_one","notify_waiters","oneshot","read","read_owned","semaphore","set","take","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_acquire","try_acquire_many","try_acquire_many_owned","try_acquire_owned","try_downgrade_map","try_downgrade_map","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_lock","try_lock_owned","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wait","watch","with_max_readers","write","write_owned","Receiver","Sender","blocking_recv","borrow","borrow","borrow_mut","borrow_mut","channel","clone","clone_into","drop","drop","error","fmt","fmt","from","from","into","into","is_empty","is_empty","len","len","new","receiver_count","recv","resubscribe","same_channel","same_channel","send","subscribe","to_owned","try_from","try_from","try_into","try_into","try_recv","type_id","type_id","Closed","Closed","Empty","Lagged","Lagged","RecvError","SendError","TryRecvError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Notified","borrow","borrow_mut","drop","enable","fmt","from","into","into_future","poll","try_from","try_into","type_id","OwnedPermit","Permit","Receiver","Sender","UnboundedReceiver","UnboundedSender","WeakSender","WeakUnboundedSender","blocking_recv","blocking_recv","blocking_send","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","capacity","channel","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","close","close","closed","closed","downgrade","downgrade","drop","drop","error","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","is_closed","is_closed","max_capacity","poll_recv","poll_recv","recv","recv","release","reserve","reserve_owned","same_channel","same_channel","send","send","send","send","send_timeout","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_recv","try_recv","try_reserve","try_reserve_owned","try_send","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unbounded_channel","upgrade","upgrade","Closed","Closed","Disconnected","Empty","Full","SendError","SendTimeoutError","Timeout","TryRecvError","TrySendError","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Receiver","Sender","blocking_recv","borrow","borrow","borrow_mut","borrow_mut","channel","close","closed","drop","drop","error","fmt","fmt","from","from","into","into","into_future","is_closed","poll","poll_closed","send","try_from","try_from","try_into","try_into","try_recv","type_id","type_id","Closed","Empty","RecvError","TryRecvError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","into","into","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Receiver","Ref","Sender","borrow","borrow","borrow","borrow","borrow","borrow_and_update","borrow_mut","borrow_mut","borrow_mut","changed","channel","clone","clone_into","closed","deref","drop","drop","error","fmt","fmt","fmt","from","from","from","has_changed","has_changed","into","into","into","is_closed","mark_changed","new","receiver_count","same_channel","send","send_if_modified","send_modify","send_replace","subscribe","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_for","RecvError","SendError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","equivalent","fmt","fmt","fmt","fmt","from","from","into","into","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","AbortHandle","JoinError","JoinHandle","JoinSet","LocalEnterGuard","LocalKey","LocalSet","Unconstrained","abort","abort","abort_all","abort_handle","block_in_place","block_on","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","default","detach_all","drop","drop","drop","drop","drop","enter","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","futures","get","into","into","into","into","into","into","into","into","into_future","into_future","into_future","into_panic","is_cancelled","is_empty","is_finished","is_finished","is_panic","join_next","len","new","new","poll","poll","poll","poll_join_next","run_until","scope","shutdown","spawn","spawn","spawn_blocking","spawn_blocking","spawn_blocking_on","spawn_local","spawn_local","spawn_local","spawn_local_on","spawn_on","sync_scope","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_panic","try_with","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unconstrained","with","yield_now","TaskLocalFuture","borrow","borrow_mut","drop","fmt","from","into","into_future","poll","try_from","try_into","type_id","Burst","Delay","Duration","Instant","Interval","MissedTickBehavior","Skip","Sleep","Timeout","add","add_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checked_add","checked_duration_since","checked_sub","clone","clone","clone_into","clone_into","cmp","deadline","default","duration_since","elapsed","eq","eq","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_std","get_mut","get_ref","hash","interval","interval_at","into","into","into","into","into","into_future","into_future","into_inner","into_std","is_elapsed","missed_tick_behavior","now","partial_cmp","period","poll","poll","poll_tick","reset","reset","reset_after","reset_at","reset_immediately","saturating_duration_since","set_missed_tick_behavior","sleep","sleep_until","sub","sub","sub_assign","tick","timeout","timeout_at","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Elapsed","Error","at_capacity","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","fmt","fmt","from","from","into","into","invalid","is_at_capacity","is_invalid","is_shutdown","shutdown","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"tokio"],[16,"tokio::fs"],[131,"tokio::io"],[569,"tokio::net"],[570,"tokio::runtime"],[668,"tokio::sync"],[1063,"tokio::sync::broadcast"],[1102,"tokio::sync::broadcast::error"],[1150,"tokio::sync::futures"],[1163,"tokio::sync::mpsc"],[1286,"tokio::sync::mpsc::error"],[1357,"tokio::sync::oneshot"],[1388,"tokio::sync::oneshot::error"],[1422,"tokio::sync::watch"],[1475,"tokio::sync::watch::error"],[1505,"tokio::task"],[1631,"tokio::task::futures"],[1643,"tokio::time"],[1747,"tokio::time::error"]],"d":["Asynchronous file and standard stream adaptation.","Traits, helpers, and type definitions for asynchronous I/O …","Waits on multiple concurrent branches, returning when <strong>all</strong> …","Marks async function to be executed by the selected …","TCP/UDP/Unix bindings for <code>tokio</code>.","Pins a value on the stack.","The Tokio runtime.","Waits on multiple concurrent branches, returning when the …","","Due to the <code>Stream</code> trait’s inclusion in <code>std</code> landing later …","Synchronization primitives for use in asynchronous …","Asynchronous green-threads.","Declares a new task-local key of type <code>tokio::task::LocalKey</code>…","Marks async function to be executed by runtime, suitable …","Utilities for tracking time.","Waits on multiple concurrent branches, returning when <strong>all</strong> …","A builder for creating directories in various manners.","Entries returned by the <code>ReadDir</code> stream.","A reference to an open file on the filesystem.","Options and flags which can be used to configure how a …","Reads the entries in a directory.","Sets the option for the append mode.","","","","","","","","","","","","","Returns the canonical, absolute form of a path with all …","","","Copies the contents of one file to another. This function …","Opens a file in write-only mode.","Creates the specified directory with the configured …","Sets the option for creating a new file.","Creates a new, empty directory at the provided path.","Recursively creates a directory and all of its parent …","Sets the option to always create a new file.","Passes custom flags to the <code>flags</code> argument of <code>open</code>.","","","Returns the bare file name of this directory entry without …","Returns the file type for the file that this entry points …","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Converts a <code>std::fs::File</code> to a <code>tokio::fs::File</code>.","Creates a new hard link on the filesystem.","Returns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Destructures <code>File</code> into a <code>std::fs::File</code>. This function is …","","Given a path, queries the file system to get information …","Queries metadata about the underlying file.","Returns the metadata for the file that this entry points …","Sets the mode to create new directories with.","Sets the mode bits that a new file will be created with.","Creates a new set of options with default mode/security …","Creates a blank new set of options ready for configuration.","Returns the next entry in the directory stream.","Attempts to open a file in read-only mode.","Opens a file at <code>path</code> with the options specified by <code>self</code>.","Returns a new <code>OpenOptions</code> object.","Returns the full path to the file that this entry …","","","Polls for the next directory entry in the stream.","","","","","Reads the entire contents of a file into a bytes vector.","Sets the option for read access.","Returns a stream over the entries within a directory.","Reads a symbolic link, returning the file that the link …","Creates a future which will open a file for reading and …","Indicates whether to create directories recursively …","Removes an existing, empty directory.","Removes a directory at this path, after removing all its …","Removes a file from the filesystem.","Renames a file or directory to a new name, replacing the …","Truncates or extends the underlying file, updating the …","Changes the permissions found on a file or a directory.","Changes the permissions on the underlying file.","","Creates a new symbolic link on the filesystem.","Queries the file system metadata for a path.","Attempts to sync all OS-internal metadata to disk.","This function is similar to <code>sync_all</code>, except that it may …","","Sets the option for truncating a previous file.","Creates a new <code>File</code> instance that shares the same …","Returns <code>Ok(true)</code> if the path points at an existing entity.","","","","","","","","","","","Tries to immediately destructure <code>File</code> into a <code>std::fs::File</code>.","","","","","","Creates a future that will open a file for writing and …","Sets the option for write access.","Reads bytes asynchronously.","An extension trait which adds utility methods to …","Reads bytes from a source.","Reads bytes from a source.","Seek bytes asynchronously.","An extension trait that adds utility methods to <code>AsyncSeek</code> …","Writes bytes asynchronously.","Writes bytes to a sink.","The <code>BufReader</code> struct adds buffering to any reader.","Wraps a type that is <code>AsyncWrite</code> and <code>AsyncRead</code>, and buffers …","Wraps a writer and buffers its output.","A bidirectional pipe to read and write bytes in memory.","An async reader which is always at EOF.","","","Reads lines from an <code>AsyncBufRead</code>.","A wrapper around a byte buffer that is incrementally …","The readable half of a value returned from <code>split</code>.","An async reader which yields one byte over and over and …","","","An async writer which will move data into the void.","Splitter for the <code>split</code> method.","A handle to the standard error stream of a process.","A handle to the standard input stream of a process.","A handle to the standard output stream of a process.","Stream for the <code>take</code> method.","The writable half of a value returned from <code>split</code>.","Advances the size of the filled region of the buffer.","","","","","","","","Asserts that the first <code>n</code> unfilled bytes of the buffer are …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a reference to the internally buffered data.","Returns a reference to the internally buffered data.","Returns the total capacity of the buffer.","Creates a new <code>AsyncRead</code> instance that chains this stream …","Creates a new <code>AsyncRead</code> instance that chains this stream …","","Clears the buffer, resetting the filled region to empty.","Tells this buffer that <code>amt</code> bytes have been consumed from …","Tells this buffer that <code>amt</code> bytes have been consumed from …","Tells this buffer that <code>amt</code> bytes have been consumed from …","","","","","","Asynchronously copies the entire contents of a reader into …","Copies data in both directions between <code>a</code> and <code>b</code>.","Asynchronously copies the entire contents of a reader into …","","Create a new pair of <code>DuplexStream</code>s that act like a pair of …","Creates a new empty async reader.","Returns the contents of the internal buffer, filling it …","Returns the contents of the internal buffer, filling it …","Returns a shared reference to the filled portion of the …","Returns a mutable reference to the filled portion of the …","Flushes this output stream, ensuring that all …","Flushes this output stream, ensuring that all …","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Gets a mutable reference to the underlying reader.","Obtains a mutable reference to the underlying reader.","Gets a mutable reference to the underlying writer.","Gets a mutable reference to the underlying I/O object.","Gets a mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying reader.","Gets a pinned mutable reference to the underlying writer.","Gets a pinned mutable reference to the underlying I/O …","Gets a pinned mutable reference to the underlying reader.","Gets a reference to the underlying reader.","Obtains a reference to the underlying reader.","Gets a reference to the underlying writer.","Gets a reference to the underlying I/O object.","Gets a reference to the underlying reader.","Returns a mutable reference to the unfilled part of the …","Returns a mutable reference to the first <code>n</code> bytes of the …","Returns a shared reference to the initialized portion of …","Returns a mutable reference to the initialized portion of …","Returns a mutable reference to the entire buffer, without …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the <code>Take</code>, returning the wrapped reader.","Unwraps this <code>Lines&lt;R&gt;</code>, returning the underlying reader.","Consumes this <code>BufWriter</code>, returning the underlying writer.","Consumes this <code>BufStream</code>, returning the underlying I/O …","Consumes this <code>BufReader</code>, returning the underlying reader.","Checks if this <code>ReadHalf</code> and some <code>WriteHalf</code> were split from …","Checks if this <code>WriteHalf</code> and some <code>ReadHalf</code> were split from …","Determines if this writer has an efficient …","Determines if this writer has an efficient …","","","","","","Returns the remaining number of bytes that can be read …","Returns a stream over the lines of this reader. This …","Returns a stream over the lines of this reader. This …","Creates a new <code>ReadBuf</code> from a fully initialized buffer.","Creates a new <code>BufWriter</code> with a default buffer capacity. …","Wraps a type in both <code>BufWriter</code> and <code>BufReader</code>.","Creates a new <code>BufReader</code> with a default buffer capacity. …","Returns the next line in the stream.","Returns the next segment in the stream.","Waits for a seek operation to complete.","","","","Attempts to return the contents of the internal buffer, …","","","","","","Attempts to flush the object, ensuring that any buffered …","","","","","","","","","Polls for the next line in the stream.","Polls for the next segment in the stream.","Attempts to read from the <code>AsyncRead</code> into <code>buf</code>.","","","","","","","","","","Initiates or attempts to shut down this writer, returning …","","","","","","","","","Attempt to write bytes from <code>buf</code> into the object.","","","","","","","","","Like <code>poll_write</code>, except that it writes from a slice of …","Like <code>poll_write</code>, except that it writes from a slice of …","","","","","","Appends data to the buffer, advancing the written position …","Pulls some bytes from this source into the specified …","Pulls some bytes from this source into the specified …","Pulls some bytes from this source into the specified …","Pulls some bytes from this source into the specified …","Reads the exact number of bytes required to fill <code>buf</code>.","Reads the exact number of bytes required to fill <code>buf</code>.","Reads an 32-bit floating point type in big-endian order …","Reads an 32-bit floating point type in big-endian order …","Reads an 32-bit floating point type in little-endian order …","Reads an 32-bit floating point type in little-endian order …","Reads an 64-bit floating point type in big-endian order …","Reads an 64-bit floating point type in big-endian order …","Reads an 64-bit floating point type in little-endian order …","Reads an 64-bit floating point type in little-endian order …","Reads an signed 128-bit integer in big-endian order from …","Reads an signed 128-bit integer in big-endian order from …","Reads an signed 128-bit integer in little-endian order …","Reads an signed 128-bit integer in little-endian order …","Reads a signed 16-bit integer in big-endian order from the …","Reads a signed 16-bit integer in big-endian order from the …","Reads a signed 16-bit integer in little-endian order from …","Reads a signed 16-bit integer in little-endian order from …","Reads a signed 32-bit integer in big-endian order from the …","Reads a signed 32-bit integer in big-endian order from the …","Reads a signed 32-bit integer in little-endian order from …","Reads a signed 32-bit integer in little-endian order from …","Reads an signed 64-bit integer in big-endian order from the","Reads an signed 64-bit integer in big-endian order from the","Reads an signed 64-bit integer in little-endian order from …","Reads an signed 64-bit integer in little-endian order from …","Reads a signed 8 bit integer from the underlying reader.","Reads a signed 8 bit integer from the underlying reader.","Reads all bytes until a newline (the 0xA byte) is reached, …","Reads all bytes until a newline (the 0xA byte) is reached, …","Reads all bytes until EOF in this source, placing them …","Reads all bytes until EOF in this source, placing them …","Reads all bytes until EOF in this source, appending them …","Reads all bytes until EOF in this source, appending them …","Reads an unsigned 128-bit integer in big-endian order from …","Reads an unsigned 128-bit integer in big-endian order from …","Reads an unsigned 128-bit integer in little-endian order …","Reads an unsigned 128-bit integer in little-endian order …","Reads an unsigned 16-bit integer in big-endian order from …","Reads an unsigned 16-bit integer in big-endian order from …","Reads an unsigned 16-bit integer in little-endian order …","Reads an unsigned 16-bit integer in little-endian order …","Reads an unsigned 32-bit integer in big-endian order from …","Reads an unsigned 32-bit integer in big-endian order from …","Reads an unsigned 32-bit integer in little-endian order …","Reads an unsigned 32-bit integer in little-endian order …","Reads an unsigned 64-bit integer in big-endian order from …","Reads an unsigned 64-bit integer in big-endian order from …","Reads an unsigned 64-bit integer in little-endian order …","Reads an unsigned 64-bit integer in little-endian order …","Reads an unsigned 8 bit integer from the underlying reader.","Reads an unsigned 8 bit integer from the underlying reader.","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …","Reads all bytes into <code>buf</code> until the delimiter <code>byte</code> or EOF …","Returns the number of bytes at the end of the slice that …","","Creates an instance of an async reader that infinitely …","Creates a future which will rewind to the beginning of the …","Creates a future which will rewind to the beginning of the …","Creates a future which will seek an IO object, and then …","Creates a future which will seek an IO object, and then …","Sets the size of the filled region of the buffer.","Sets the number of bytes that can be read before this …","Shuts down the output stream, ensuring that the value can …","Shuts down the output stream, ensuring that the value can …","Creates an instance of an async writer which will …","Splits a single value implementing <code>AsyncRead + AsyncWrite</code> …","Returns a stream of the contents of this reader split on …","Returns a stream of the contents of this reader split on …","Attempts to seek to an offset, in bytes, in a stream.","","","","Constructs a new handle to the standard error of the …","Constructs a new handle to the standard input of the …","Constructs a new handle to the standard output of the …","Creates a future which will return the current seek …","Creates a future which will return the current seek …","Returns a new <code>ReadBuf</code> comprised of the unfilled section up …","Creates an adaptor which reads at most <code>limit</code> bytes from it.","Creates an adaptor which reads at most <code>limit</code> bytes from it.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a mutable reference to the unfilled part of the …","Creates a new <code>ReadBuf</code> from a fully uninitialized buffer.","Reunites with a previously split <code>WriteHalf</code>.","Creates a new <code>BufWriter</code> with the specified buffer capacity.","Creates a <code>BufStream</code> with the specified <code>BufReader</code> capacity …","Creates a new <code>BufReader</code> with the specified buffer capacity.","Writes a buffer into this writer, returning how many bytes …","Writes a buffer into this writer, returning how many bytes …","Attempts to write an entire buffer into this writer.","Attempts to write an entire buffer into this writer.","Attempts to write an entire buffer into this writer.","Attempts to write an entire buffer into this writer.","Writes a buffer into this writer, advancing the buffer’s …","Writes a buffer into this writer, advancing the buffer’s …","Writes an 32-bit floating point type in big-endian order …","Writes an 32-bit floating point type in big-endian order …","Writes an 32-bit floating point type in little-endian …","Writes an 32-bit floating point type in little-endian …","Writes an 64-bit floating point type in big-endian order …","Writes an 64-bit floating point type in big-endian order …","Writes an 64-bit floating point type in little-endian …","Writes an 64-bit floating point type in little-endian …","Writes an signed 128-bit integer in big-endian order to the","Writes an signed 128-bit integer in big-endian order to the","Writes an signed 128-bit integer in little-endian order to …","Writes an signed 128-bit integer in little-endian order to …","Writes a signed 16-bit integer in big-endian order to the …","Writes a signed 16-bit integer in big-endian order to the …","Writes a signed 16-bit integer in little-endian order to …","Writes a signed 16-bit integer in little-endian order to …","Writes a signed 32-bit integer in big-endian order to the …","Writes a signed 32-bit integer in big-endian order to the …","Writes a signed 32-bit integer in little-endian order to …","Writes a signed 32-bit integer in little-endian order to …","Writes an signed 64-bit integer in big-endian order to the …","Writes an signed 64-bit integer in big-endian order to the …","Writes an signed 64-bit integer in little-endian order to …","Writes an signed 64-bit integer in little-endian order to …","Writes a signed 8-bit integer to the underlying writer.","Writes a signed 8-bit integer to the underlying writer.","Writes an unsigned 128-bit integer in big-endian order to …","Writes an unsigned 128-bit integer in big-endian order to …","Writes an unsigned 128-bit integer in little-endian order …","Writes an unsigned 128-bit integer in little-endian order …","Writes an unsigned 16-bit integer in big-endian order to …","Writes an unsigned 16-bit integer in big-endian order to …","Writes an unsigned 16-bit integer in little-endian order …","Writes an unsigned 16-bit integer in little-endian order …","Writes an unsigned 32-bit integer in big-endian order to …","Writes an unsigned 32-bit integer in big-endian order to …","Writes an unsigned 32-bit integer in little-endian order …","Writes an unsigned 32-bit integer in little-endian order …","Writes an unsigned 64-bit integer in big-endian order to …","Writes an unsigned 64-bit integer in big-endian order to …","Writes an unsigned 64-bit integer in little-endian order …","Writes an unsigned 64-bit integer in little-endian order …","Writes an unsigned 8-bit integer to the underlying writer.","Writes an unsigned 8-bit integer to the underlying writer.","Like <code>write</code>, except that it writes from a slice of buffers.","Like <code>write</code>, except that it writes from a slice of buffers.","Converts or resolves without blocking to one or more …","Builds Tokio Runtime with custom configuration values.","The flavor that executes all tasks on the current thread.","Runtime context guard.","Handle to the runtime.","The flavor that executes tasks across multiple threads.","The Tokio runtime.","The flavor of a <code>Runtime</code>.","Error returned by <code>try_current</code> when no Runtime has been …","Runs a future to completion on this <code>Handle</code>’s associated …","Runs a future to completion on the Tokio runtime. This is …","","","","","","","","","","","","","Creates the configured <code>Runtime</code>.","","","Returns a <code>Handle</code> view over the currently running <code>Runtime</code>.","","Enables both I/O and time drivers.","Enables the time driver.","Enters the runtime context. This allows you to construct …","Enters the runtime context.","","","Sets the number of scheduler ticks after which the …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Sets the number of scheduler ticks after which the …","Returns a handle to the runtime’s spawner.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the call failed because there is currently …","Returns true if the call failed because the Tokio context …","Specifies the limit for additional threads spawned by the …","Creates a new runtime instance with default configuration …","Returns a new builder with the current thread scheduler …","Returns a new builder with the multi thread scheduler …","Executes function <code>f</code> just before a thread is parked (goes …","Executes function <code>f</code> after each thread is started but …","Executes function <code>f</code> before each thread stops.","Executes function <code>f</code> just after a thread unparks (starts …","Returns the flavor of the current <code>Runtime</code>.","Shuts down the runtime, without waiting for any spawned …","Shuts down the runtime, waiting for at most <code>duration</code> for …","Spawns a future onto the Tokio runtime.","Spawns a future onto the Tokio runtime.","Runs the provided function on an executor dedicated to …","Runs the provided function on an executor dedicated to …","Sets a custom timeout for a thread in the blocking pool.","Sets name of threads spawned by the <code>Runtime</code>’s thread …","Sets a function used to generate the name of threads …","Sets the stack size (in bytes) for worker threads.","","","Returns a Handle view over the currently running Runtime","","","","","","","","","","","","","","","","","","","Sets the number of worker threads the <code>Runtime</code> will use.","Error returned from the <code>Semaphore::acquire</code> function.","The cell was already initialized when <code>OnceCell::set</code> was …","A barrier enables multiple tasks to synchronize the …","A <code>BarrierWaitResult</code> is returned by <code>wait</code> when all tasks in …","The semaphore has been closed and cannot issue new permits.","The cell is currently being initialized.","The maximum number of permits which a semaphore can hold. …","A handle to a held <code>Mutex</code> that has had a function applied …","An asynchronous <code>Mutex</code>-like type.","A handle to a held <code>Mutex</code>. The guard can be held across any …","The semaphore has no available permits.","Notifies a single task to wake up.","A thread-safe cell that can be written to only once.","A owned handle to a held <code>Mutex</code> that has had a function …","An owned handle to a held <code>Mutex</code>.","Owned RAII structure used to release the exclusive write …","Owned RAII structure used to release the shared read …","Owned RAII structure used to release the exclusive write …","An owned permit from the semaphore.","An asynchronous reader-writer lock.","RAII structure used to release the exclusive write access …","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","Counting semaphore performing asynchronous permit …","A permit from the semaphore.","Errors that can be returned from <code>OnceCell::set</code>.","Error returned from the <code>Semaphore::try_acquire</code> function.","Error returned from the <code>Mutex::try_lock</code>, <code>RwLock::try_read</code> …","Acquires a permit from the semaphore.","Acquires <code>n</code> permits from the semaphore.","Acquires <code>n</code> permits from the semaphore.","Acquires a permit from the semaphore.","Adds <code>n</code> new permits to the semaphore.","Returns the current number of available permits.","Blockingly locks this <code>Mutex</code>. When the lock has been …","Blockingly locks this <code>Mutex</code>. When the lock has been …","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A multi-producer, multi-consumer broadcast queue. Each …","","","","","Closes the semaphore.","Creates a new lock in an unlocked state ready for use.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new empty <code>OnceCell</code> instance.","Create a new <code>Notify</code>, initialized without a permit.","Creates a new semaphore with the initial number of permits.","Creates a new <code>OnceCell</code> that contains the provided value.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","","","","","","","","","","","","","","","","","","Atomically downgrades a write lock into a read lock …","Atomically downgrades a write lock into a read lock …","Makes a new <code>OwnedRwLockReadGuard</code> for a component of the …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Forgets the permit <strong>without</strong> releasing it back to the …","Forgets the permit <strong>without</strong> releasing it back to the …","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Named future types.","Returns a reference to the value currently stored in the …","Returns a mutable reference to the underlying data.","Returns a mutable reference to the underlying data.","Returns a mutable reference to the value currently stored …","Gets the value currently in the <code>OnceCell</code>, or initialize it …","Gets the value currently in the <code>OnceCell</code>, or initialize it …","Returns <code>true</code> if the <code>OnceCell</code> currently contains a value, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the mutex, returning the underlying data.","Consumes the lock, returning the underlying data.","Takes the value from the cell, destroying the cell in the …","Converts this <code>OwnedRwLockWriteGuard</code> into an …","Converts this <code>RwLockWriteGuard</code> into an …","Whether <code>SetError</code> is <code>SetError::AlreadyInitializedError</code>.","Returns true if the semaphore is closed","Whether <code>SetError</code> is <code>SetError::InitializingError</code>","Returns <code>true</code> if this task from wait is the “leader task…","Locks this mutex, causing the current task to yield until …","Locks this mutex, causing the current task to yield until …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>OwnedMappedMutexGuard</code> for a component of the …","Makes a new <code>MappedMutexGuard</code> for a component of the locked …","Makes a new <code>OwnedMappedMutexGuard</code> for a component of the …","Makes a new <code>OwnedRwLockReadGuard</code> for a component of the …","Makes a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …","Makes a new <code>OwnedRwLockMappedWriteGuard</code> for a component of …","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","Merge two <code>SemaphorePermit</code> instances together, consuming …","Merge two <code>OwnedSemaphorePermit</code> instances together, …","A multi-producer, single-consumer queue for sending values …","Returns a reference to the original <code>Mutex</code>.","Returns a reference to the original <code>Arc&lt;Mutex&gt;</code>.","Creates a new lock in an unlocked state ready for use.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new empty <code>OnceCell</code> instance.","Creates a new barrier that can block a given number of …","Create a new <code>Notify</code>, initialized without a permit.","Creates a new semaphore with the initial number of permits.","Creates a new <code>OnceCell</code> that contains the provided value, …","Wait for a notification.","Notifies a waiting task.","Notifies all waiting tasks.","A one-shot channel is used for sending a single message …","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","Returns the <code>Semaphore</code> from which this permit was acquired.","Sets the value of the <code>OnceCell</code> to the given value if the …","Takes ownership of the current value, leaving the cell …","","","","","","","","","","","","","","","","","Tries to acquire a permit from the semaphore.","Tries to acquire <code>n</code> permits from the semaphore.","Tries to acquire <code>n</code> permits from the semaphore.","Tries to acquire a permit from the semaphore.","Attempts to make a new <code>OwnedRwLockReadGuard</code> for a …","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to acquire the lock, and returns <code>TryLockError</code> if …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>OwnedMappedMutexGuard</code> for a …","Attempts to make a new <code>MappedMutexGuard</code> for a component of …","Attempts to make a new <code>OwnedMappedMutexGuard</code> for a …","Attempts to make a new <code>OwnedRwLockReadGuard</code> for a …","Attempts to make a new <code>OwnedRwLockMappedWriteGuard</code> for a …","Attempts to make a new <code>OwnedRwLockMappedWriteGuard</code> for a …","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to make a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","","","","","","","","","Does not resolve until all tasks have rendezvoused here.","A single-producer, multi-consumer channel that only …","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Receiving-half of the <code>broadcast</code> channel.","Sending-half of the <code>broadcast</code> channel.","Blocking receive to call outside of asynchronous contexts.","","","","","Create a bounded, multi-producer, multi-consumer channel …","","","","","Broadcast error types","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if there are no queued values.","Returns true if there aren’t any messages in the channel …","Returns the number of queued values.","Returns the number of messages that were sent into the …","Creates the sending-half of the <code>broadcast</code> channel.","Returns the number of active receivers","Receives the next value for this receiver.","Re-subscribes to the channel starting from the current …","Returns <code>true</code> if senders belong to the same channel.","Returns <code>true</code> if receivers belong to the same channel.","Attempts to send a value to all active <code>Receiver</code> handles, …","Creates a new <code>Receiver</code> handle that will receive values …","","","","","","Attempts to return a pending value on this receiver …","","","There are no more active senders implying no further …","There are no more active senders implying no further …","The channel is currently empty. There are still active …","The receiver lagged too far behind. Attempting to receive …","The receiver lagged too far behind and has been forcibly …","An error returned from the <code>recv</code> function on a <code>Receiver</code>.","Error returned by from the <code>send</code> function on a <code>Sender</code>.","An error returned from the <code>try_recv</code> function on a <code>Receiver</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Future returned from <code>Notify::notified()</code>.","","","","Adds this future to the list of futures that are ready to …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Owned permit to send one value into the channel.","Permits to send one value into the channel.","Receives values from the associated <code>Sender</code>.","Sends values to the associated <code>Receiver</code>.","Receive values from the associated <code>UnboundedSender</code>.","Send values to the associated <code>UnboundedReceiver</code>.","A sender that does not prevent the channel from being …","An unbounded sender that does not prevent the channel from …","Blocking receive to call outside of asynchronous contexts.","Blocking receive to call outside of asynchronous contexts.","Blocking send to call outside of asynchronous contexts.","","","","","","","","","","","","","","","","","Returns the current capacity of the channel.","Creates a bounded mpsc channel for communicating between …","","","","","","","","","Closes the receiving half of a channel without dropping it.","Closes the receiving half of a channel, without dropping …","Completes when the receiver has dropped.","Completes when the receiver has dropped.","Converts the <code>Sender</code> to a <code>WeakSender</code> that does not count …","Converts the <code>UnboundedSender</code> to a <code>WeakUnboundedSender</code> that …","","","Channel error types.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the channel has been closed. This happens when …","Checks if the channel has been closed. This happens when …","Returns the maximum buffer capacity of the channel.","Polls to receive the next message on this channel.","Polls to receive the next message on this channel.","Receives the next value for this receiver.","Receives the next value for this receiver.","Releases the reserved capacity <em>without</em> sending a message, …","Waits for channel capacity. Once capacity to send one …","Waits for channel capacity, moving the <code>Sender</code> and …","Returns <code>true</code> if senders belong to the same channel.","Returns <code>true</code> if senders belong to the same channel.","Sends a value, waiting until there is capacity.","Sends a value using the reserved capacity.","Sends a value using the reserved capacity.","Attempts to send a message on this <code>UnboundedSender</code> without …","Sends a value, waiting until there is capacity, but only …","","","","","","","","","","","","","","","","","","","","","Tries to receive the next value for this receiver.","Tries to receive the next value for this receiver.","Tries to acquire a slot in the channel without waiting for …","Tries to acquire a slot in the channel without waiting for …","Attempts to immediately send a message on this <code>Sender</code>","","","","","","","","","Creates an unbounded mpsc channel for communicating …","Tries to convert a WeakSender into a <code>Sender</code>. This will …","Tries to convert a WeakUnboundedSender into an …","The receive half of the channel was explicitly closed or …","The receive half of the channel was explicitly closed or …","The <strong>channel</strong>’s sending half has become disconnected, and …","This <strong>channel</strong> is currently empty, but the <strong>Sender</strong>(s) have …","The data could not be sent on the channel because the …","Error returned by the <code>Sender</code>.","Error returned by <code>Sender::send_timeout</code>].","The data could not be sent on the channel because the …","Error returned by <code>try_recv</code>.","This enumeration is the list of the possible error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Receives a value from the associated <code>Sender</code>.","Sends a value to the associated <code>Receiver</code>.","Blocking receive to call outside of asynchronous contexts.","","","","","Creates a new one-shot channel for sending single values …","Prevents the associated <code>Sender</code> handle from sending a value.","Waits for the associated <code>Receiver</code> handle to close.","","","Oneshot error types.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if the associated <code>Receiver</code> handle has been …","","Checks whether the oneshot channel has been closed, and if …","Attempts to send a value on this channel, returning it …","","","","","Attempts to receive a value.","","","The send half of the channel was dropped without sending a …","The send half of the channel has not yet sent a value.","Error returned by the <code>Future</code> implementation for <code>Receiver</code>.","Error returned by the <code>try_recv</code> function on <code>Receiver</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Receives values from the associated <code>Sender</code>.","Returns a reference to the inner value.","Sends values to the associated <code>Receiver</code>.","Returns a reference to the most recently sent value.","","Returns a reference to the most recently sent value","","","Returns a reference to the most recently sent value and …","","","","Waits for a change notification, then marks the newest …","Creates a new watch channel, returning the “send” and …","","","Completes when all receivers have dropped.","","","","Watch error types.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Checks if this channel contains a message that this …","Indicates if the borrowed value is considered as <em>changed</em> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the channel has been closed. This happens when …","Marks the state as changed.","Creates the sending-half of the <code>watch</code> channel.","Returns the number of receivers that currently exist.","Returns <code>true</code> if receivers belong to the same channel.","Sends a new value via the channel, notifying all receivers.","Modifies the watched value <strong>conditionally</strong> in-place, …","Modifies the watched value <strong>unconditionally</strong> in-place, …","Sends a new value via the channel, notifying all receivers …","Creates a new <code>Receiver</code> connected to this <code>Sender</code>.","","","","","","","","","","","Waits for a value that satisfies the provided condition.","Error produced when receiving a change notification.","Error produced when sending a value fails.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","An owned permission to abort a spawned task, without …","Task failed to execute to completion.","An owned permission to join on a task (await its …","A collection of tasks spawned on a Tokio runtime.","Context guard for LocalSet","A key for task-local data.","A set of tasks which are executed on the same thread.","Future for the <code>unconstrained</code> method.","Abort the task associated with the handle.","Abort the task associated with the handle.","Aborts all tasks on this <code>JoinSet</code>.","Returns a new <code>AbortHandle</code> that can be used to remotely …","Runs the provided blocking function on the current thread …","Runs a future to completion on the provided runtime, …","","","","","","","","","","","","","","","","","","","Removes all tasks from this <code>JoinSet</code> without aborting them.","","","","","","Enters the context of this <code>LocalSet</code>.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Task-related futures.","Returns a copy of the task-local value if the task-local …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Consumes the join error, returning the object with which …","Returns true if the error was caused by the task being …","Returns whether the <code>JoinSet</code> is empty.","Checks if the task associated with this <code>AbortHandle</code> has …","Checks if the task associated with this <code>JoinHandle</code> has …","Returns true if the error was caused by the task panicking.","Waits until one of the tasks in the set completes and …","Returns the number of tasks currently in the <code>JoinSet</code>.","Create a new <code>JoinSet</code>.","Returns a new local task set.","","","","Polls for one of the tasks in the set to complete.","Runs a future to completion on the local set, returning …","Sets a value <code>T</code> as the task-local value for the future <code>F</code>.","Aborts all tasks and waits for them to finish shutting …","Spawns a new asynchronous task, returning a <code>JoinHandle</code> for …","Spawn the provided task on the <code>JoinSet</code>, returning an …","Runs the provided closure on a thread where blocking is …","Spawn the blocking code on the blocking threadpool and …","Spawn the blocking code on the blocking threadpool of the …","Spawns a <code>!Send</code> future on the current <code>LocalSet</code>.","Spawn the provided task on the current <code>LocalSet</code> and store …","Spawns a <code>!Send</code> task onto the local task set.","Spawn the provided task on the provided <code>LocalSet</code> and store …","Spawn the provided task on the provided runtime and store …","Sets a value <code>T</code> as the task-local value for the closure <code>F</code>.","","","","","","","","","","","","","","","","","","Consumes the join error, returning the object with which …","Accesses the current task-local and runs the provided …","","","","","","","","","Turn off cooperative scheduling for a future. The future …","Accesses the current task-local and runs the provided …","Yields execution back to the Tokio runtime.","A future that sets a value <code>T</code> of a task local for the …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","Ticks as fast as possible until caught up.","Tick at multiples of <code>period</code> from when <code>tick</code> was called, …","","A measurement of a monotonically nondecreasing clock. …","Interval returned by <code>interval</code> and <code>interval_at</code>.","Defines the behavior of an <code>Interval</code> when it misses a tick.","Skips missed ticks and tick on the next multiple of <code>period</code> …","Future returned by <code>sleep</code> and <code>sleep_until</code>.","Future returned by <code>timeout</code> and <code>timeout_at</code>.","","","","","","","","","","","","","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …","Returns the amount of time elapsed from another instant to …","Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …","","","","","","Returns the instant at which the future will complete.","Returns <code>MissedTickBehavior::Burst</code>.","Returns the amount of time elapsed from another instant to …","Returns the amount of time elapsed since this instant was …","","","","","Time error types.","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>tokio::time::Instant</code> from a <code>std::time::Instant</code>.","Gets a mutable reference to the underlying value in this …","Gets a reference to the underlying value in this timeout.","","Creates new <code>Interval</code> that yields with interval of <code>period</code>. …","Creates new <code>Interval</code> that yields with interval of <code>period</code> …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Consumes this timeout, returning the underlying value.","Convert the value into a <code>std::time::Instant</code>.","Returns <code>true</code> if <code>Sleep</code> has elapsed.","Returns the <code>MissedTickBehavior</code> strategy currently being …","Returns an instant corresponding to “now”.","","Returns the period of the interval.","","","Polls for the next instant in the interval to be reached.","Resets the interval to complete one period after the …","Resets the <code>Sleep</code> instance to a new deadline.","Resets the interval after the specified <code>std::time::Duration</code>…","Resets the interval to a <code>crate::time::Instant</code> deadline.","Resets the interval immediately.","Returns the amount of time elapsed from another instant to …","Sets the <code>MissedTickBehavior</code> strategy that should be used.","Waits until <code>duration</code> has elapsed.","Waits until <code>deadline</code> is reached.","","","","Completes when the next instant in the interval has been …","Requires a <code>Future</code> to complete before the specified …","Requires a <code>Future</code> to complete before the specified instant …","","","","","","","","","","","","","","","","","","Errors returned by <code>Timeout</code>.","Errors encountered by the timer implementation.","Creates an error representing a timer at capacity.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates an error representing a misconfigured timer.","Returns <code>true</code> if the error was caused by the timer being at …","Returns <code>true</code> if the error was caused by the timer being …","Returns <code>true</code> if the error was caused by the timer being …","Creates an error representing a shutdown timer.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,3,3,3,13,1,20,15,3,13,1,20,15,0,1,1,0,3,13,1,0,0,1,1,13,1,15,15,3,13,1,20,15,3,3,13,1,1,20,15,3,3,0,15,3,13,1,20,15,3,3,0,3,15,13,1,13,1,20,3,1,3,15,3,3,20,3,3,3,3,0,1,0,0,0,13,0,0,0,0,3,0,3,3,0,0,3,3,1,1,3,0,3,13,1,20,15,3,13,1,20,15,3,3,13,1,20,15,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,39,40,41,39,40,41,29,29,39,40,41,55,56,49,53,57,58,51,59,60,43,52,45,29,39,40,41,55,56,49,53,57,58,51,59,60,43,52,45,43,45,29,165,165,29,29,50,166,166,49,51,43,52,45,0,0,0,53,0,0,166,166,29,29,167,167,29,39,40,41,55,56,49,53,57,58,51,59,60,43,52,45,29,39,40,41,55,56,49,53,57,58,51,59,60,43,52,52,52,45,51,60,43,52,45,51,43,52,45,51,60,43,52,45,29,29,29,29,29,29,39,40,41,55,56,49,53,57,58,51,59,60,43,52,45,51,60,43,52,45,55,56,42,42,56,53,43,52,45,51,166,166,29,43,52,45,60,59,62,43,52,45,50,49,51,43,52,45,42,39,41,56,53,58,43,52,45,60,59,44,40,55,49,53,57,51,43,52,45,42,39,41,56,53,58,43,52,45,42,39,41,56,53,58,43,52,45,42,42,56,53,43,52,45,29,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,166,166,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,166,166,29,29,0,168,168,168,168,29,51,167,167,0,0,166,166,62,43,52,45,0,0,0,168,168,29,165,165,29,39,40,41,55,56,49,53,57,58,51,59,60,43,52,45,29,39,40,41,55,56,49,53,57,58,51,59,60,43,52,45,29,39,40,41,55,56,49,53,57,58,51,59,60,43,52,45,29,29,55,43,52,45,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,0,0,78,0,0,78,0,0,0,73,75,76,73,77,79,75,78,76,73,77,79,75,78,76,73,73,73,75,76,76,73,75,78,78,76,76,73,77,79,79,75,78,76,73,77,79,75,78,76,75,76,73,77,79,75,78,79,79,76,75,76,76,76,76,76,76,73,75,75,73,75,73,75,76,76,76,76,73,79,73,76,73,77,79,75,78,76,73,77,79,75,78,76,73,77,79,75,78,76,0,111,0,0,110,111,87,0,0,0,110,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,87,87,87,87,87,87,92,92,95,95,92,95,99,112,100,93,94,103,104,114,101,110,89,87,88,91,105,106,107,96,97,108,111,92,95,99,112,100,93,94,103,104,114,101,110,89,87,88,91,105,106,107,96,97,108,111,0,99,100,99,100,87,92,95,99,101,87,99,95,92,95,99,101,93,94,103,104,105,106,107,96,97,108,93,94,103,104,106,107,97,108,106,97,106,97,99,93,94,103,104,88,91,105,106,107,96,97,108,99,110,111,99,110,111,92,95,99,112,100,93,93,94,94,103,103,104,104,114,114,101,110,110,89,89,87,88,91,105,105,106,106,107,107,96,96,97,97,108,108,111,111,88,91,92,92,92,95,95,95,99,99,99,112,100,93,94,103,104,114,101,110,89,87,88,91,105,106,107,96,97,108,111,0,99,92,95,99,99,99,99,92,95,99,112,100,93,94,103,104,114,101,110,89,87,88,91,105,106,107,96,97,108,111,92,95,99,106,97,111,87,111,100,92,92,93,94,103,104,105,106,107,96,97,108,88,91,0,93,94,92,95,99,112,101,87,99,101,101,101,0,95,95,91,99,99,99,100,93,94,103,104,114,110,89,105,106,107,96,97,108,111,87,87,87,87,106,97,92,95,99,112,100,93,94,103,104,114,101,110,89,87,88,91,105,106,107,96,97,108,111,92,95,99,112,100,93,94,103,104,114,101,110,89,87,88,91,105,106,107,96,97,108,111,92,92,93,94,103,104,105,106,107,96,97,108,95,95,95,95,92,95,99,112,100,93,94,103,104,114,101,110,89,87,88,91,105,106,107,96,97,108,111,112,0,95,95,95,0,0,117,119,117,119,117,0,119,119,119,117,0,119,117,119,117,119,117,119,117,119,117,119,119,117,117,119,117,119,119,119,119,117,119,117,117,119,117,118,121,121,118,121,0,0,0,120,118,121,120,118,121,118,121,118,121,118,121,118,121,120,120,118,118,121,121,120,118,121,120,118,121,118,121,120,118,121,120,118,121,120,118,121,120,118,121,0,116,116,116,116,116,116,116,116,116,116,116,116,0,0,0,0,0,0,0,0,122,123,124,124,126,129,130,122,127,128,123,124,126,129,130,122,127,128,123,124,0,124,126,127,128,124,126,127,128,122,123,124,127,124,127,129,130,0,124,126,129,130,122,127,128,123,124,126,129,130,122,127,128,123,124,126,129,130,122,127,128,123,124,127,124,122,123,122,123,130,124,124,124,127,124,129,130,127,124,124,126,127,128,124,126,129,130,122,127,128,123,124,126,129,130,122,127,128,123,122,123,124,124,124,124,126,129,130,122,127,128,123,0,126,128,133,131,132,132,133,0,0,131,0,0,125,133,132,131,125,133,132,131,125,133,132,131,125,133,132,131,125,133,132,131,125,133,132,131,125,125,133,133,132,132,131,131,125,133,133,132,131,125,133,132,131,125,133,132,131,125,133,132,131,125,133,132,131,125,133,132,131,125,133,132,131,0,0,134,136,134,136,134,0,134,136,136,134,0,136,134,136,134,136,134,134,136,134,136,136,136,134,136,134,134,136,134,137,137,0,0,135,137,135,137,135,137,135,137,135,137,135,137,135,135,137,137,135,137,135,137,135,137,135,137,135,137,135,137,135,137,0,0,0,138,138,140,140,139,138,138,140,139,138,0,138,138,140,139,138,140,0,138,140,139,138,140,139,138,139,138,140,139,140,138,140,140,138,140,140,140,140,140,138,138,140,139,138,140,139,138,140,139,138,0,0,142,141,142,141,142,141,142,141,142,142,142,142,141,141,142,141,142,141,142,141,142,141,142,141,142,141,142,141,0,0,0,0,0,0,0,0,144,84,145,84,0,146,144,148,84,147,149,145,146,153,144,148,84,147,149,145,146,153,145,146,145,144,84,147,145,146,146,144,148,148,84,147,149,145,146,144,148,84,147,149,145,146,153,0,149,144,148,84,147,149,145,146,153,84,146,153,148,148,145,144,84,148,145,145,145,146,84,146,153,145,146,149,145,0,145,0,145,145,0,145,146,145,145,149,148,144,148,84,147,149,145,146,153,144,148,84,147,149,145,146,153,148,149,144,148,84,147,149,145,146,153,0,149,0,0,154,154,154,154,154,154,154,154,154,154,154,156,156,0,0,0,0,156,0,0,155,155,155,156,159,160,158,155,156,159,160,158,155,155,155,155,156,155,156,155,158,156,155,155,155,156,155,156,0,155,156,159,160,158,155,155,156,159,160,158,155,160,160,155,0,0,155,156,159,160,158,160,158,160,155,158,159,155,155,159,160,158,159,159,158,159,159,159,155,159,0,0,155,155,155,159,0,0,155,156,155,156,159,160,158,155,156,159,160,158,155,156,159,160,158,0,0,163,163,164,163,164,163,163,164,164,163,163,164,164,163,164,163,164,163,163,163,163,163,163,163,164,163,164,163,164,163,164],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2],1],[3,4],[3,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[7,[6]]],[[9,[8]]]],[1,1],[[]],[[[7,[6]],[7,[6]]],[[12,[10,11]]]],[[[7,[6]]],[[9,[3]]]],[[13,[7,[6]]],9],[[1,2],1],[[[7,[6]]],9],[[[7,[6]]],9],[[1,2],1],[[1,14],1],[[],13],[[],1],[15,16],[15,[[9,[17]]]],[[3,18],19],[[13,18],19],[[1,18],19],[[20,18],19],[[15,18],19],[[]],[21,3],[[]],[22,1],[[]],[[]],[[]],[5,3],[21,3],[[[7,[6]],[7,[6]]],9],[15,10],[[]],[[]],[[]],[[]],[[]],[3,21],[3,2],[[[7,[6]]],[[9,[23]]]],[3,[[9,[23]]]],[15,[[9,[23]]]],[[13,24],13],[[1,24],1],[[],13],[[],1],[20,[[9,[[25,[15]]]]]],[[[7,[6]]],[[9,[3]]]],[[1,[7,[6]]],[[9,[3]]]],[[],1],[15,8],[[[26,[3]],27],[[28,[[9,[10]]]]]],[[[26,[3]],27],[[28,[[12,[11]]]]]],[[20,27],[[28,[[9,[[25,[15]]]]]]]],[[[26,[3]],27,29],[[28,[9]]]],[[[26,[3]],27],[[28,[[12,[11]]]]]],[[[26,[3]],27,[31,[30]]],[[28,[[9,[32]]]]]],[[[26,[3]],27,[31,[33]]],[[28,[[12,[32,11]]]]]],[[[7,[6]]],[[9,[[34,[30]]]]]],[[1,2],1],[[[7,[6]]],[[9,[20]]]],[[[7,[6]]],[[9,[8]]]],[[[7,[6]]],[[9,[35]]]],[[13,2],13],[[[7,[6]]],9],[[[7,[6]]],9],[[[7,[6]]],9],[[[7,[6]],[7,[6]]],9],[[3,10],9],[[[7,[6]],36],9],[[3,36],9],[[[26,[3]],37],9],[[[7,[6]],[7,[6]]],9],[[[7,[6]]],[[9,[23]]]],[3,9],[3,9],[[]],[[1,2],1],[3,[[9,[3]]]],[[[7,[6]]],[[9,[2]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[3,[[12,[21,3]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[[7,[6]],[7,[[31,[30]]]]],9],[[1,2],1],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[29,32]],[[29,32]],[39,4],[40,4],[41,4],[39,5],[40,5],[41,5],[[29,32]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[42]]],[[31,[30]]]],[[[45,[44]]],[[31,[30]]]],[29,32],[[46,44],[[0,[46,44]]]],[[46,44],[[0,[46,44]]]],[29,47],[29],[[26,32]],[[48,32]],[[48,32]],[[[26,[49]],32]],[[[26,[[51,[50]]]],32]],[[[26,[[43,[[0,[42,50]]]]]],32]],[[[26,[[52,[[0,[44,42]]]]]],32]],[[[26,[[45,[44]]]],32]],[[[0,[44,48,46]],[0,[42,48,46]]],[[9,[10]]]],[[[0,[44,42,48,46]],[0,[44,42,48,46]]],[[12,[11]]]],[[[0,[50,48,46]],[0,[42,48,46]]],[[9,[10]]]],[53],[32],[[],49],[48,[[0,[48]]]],[48,[[0,[48]]]],[29,[[31,[30]]]],[29,[[31,[30]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[[29,18],19],[[39,18],19],[[40,18],19],[[41,18],19],[[[55,[54]],18],19],[[[56,[54]],18],19],[[49,18],19],[[53,18],19],[[57,18],19],[[58,18],19],[[[51,[54]],18],19],[[[59,[54]],18],19],[[[60,[54]],18],19],[[[43,[54]],18],19],[[[52,[54]],18],19],[[[45,[54]],18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[43,[45]]],52],[[]],[[[45,[43]]],52],[[]],[[[51,[44]]],44],[[[60,[[0,[50,48]]]]],[[0,[50,48]]]],[[[43,[42]]],42],[[[52,[[0,[44,42]]]]],[[0,[44,42]]]],[[[45,[44]]],44],[[[26,[[51,[44]]]]],[[26,[44]]]],[[[26,[[43,[42]]]]],[[26,[42]]]],[[[26,[[52,[[0,[44,42]]]]]]],[[26,[[0,[44,42]]]]]],[[[26,[[45,[44]]]]],[[26,[44]]]],[[[51,[44]]],44],[[[60,[[0,[50,48]]]]],[[0,[50,48]]]],[[[43,[42]]],42],[[[52,[[0,[44,42]]]]],[[0,[44,42]]]],[[[45,[44]]],44],[29,[[31,[30]]]],[[29,32],[[31,[30]]]],[29,[[31,[30]]]],[29,[[31,[30]]]],[29,[[31,[[61,[30]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[51,[44]]],44],[[[60,[[0,[50,48]]]]],[[0,[50,48]]]],[[[43,[42]]],42],[[[52,[[0,[44,42]]]]],[[0,[44,42]]]],[[[45,[44]]],44],[[55,56],2],[[56,55],2],[[],2],[[],2],[[[56,[42]]],2],[53,2],[[[43,[42]]],2],[[[52,[[0,[44,42]]]]],2],[[[45,[[0,[44,42]]]]],2],[[[51,[44]]],10],[46,[[60,[46]]]],[46,[[60,[46]]]],[[[31,[30]]],29],[42,[[43,[42]]]],[[[0,[44,42]]],[[52,[[0,[44,42]]]]]],[44,[[45,[44]]]],[[[60,[[0,[50,48]]]]],[[9,[[25,[35]]]]]],[[[59,[[0,[50,48]]]]],[[9,[[25,[[34,[30]]]]]]]],[[26,27],[[28,[[9,[10]]]]]],[[[26,[[43,[[0,[42,62]]]]]],27],[[28,[[9,[10]]]]]],[[[26,[[52,[[0,[44,42,62]]]]]],27],[[28,[[9,[10]]]]]],[[[26,[[45,[[0,[44,62]]]]]],27],[[28,[[9,[10]]]]]],[[26,27],[[28,[[9,[[31,[30]]]]]]]],[[[26,[49]],27],[[28,[[9,[[31,[30]]]]]]]],[[[26,[[51,[50]]]],27],[[28,[[9,[[31,[30]]]]]]]],[[[26,[[43,[[0,[42,50]]]]]],27],[[28,[[9,[[31,[30]]]]]]]],[[[26,[[52,[[0,[44,42]]]]]],27],[[28,[[9,[[31,[30]]]]]]]],[[[26,[[45,[44]]]],27],[[28,[[9,[[31,[30]]]]]]]],[[26,27],[[28,[[12,[11]]]]]],[[[26,[39]],27],[[28,[[12,[11]]]]]],[[[26,[41]],27],[[28,[[12,[11]]]]]],[[[26,[[56,[42]]]],27],[[28,[[12,[11]]]]]],[[[26,[53]],27],[[28,[9]]]],[[[26,[58]],27],[[28,[[12,[11]]]]]],[[[26,[[43,[42]]]],27],[[28,[9]]]],[[[26,[[52,[[0,[44,42]]]]]],27],[[28,[9]]]],[[[26,[[45,[[0,[44,42]]]]]],27],[[28,[9]]]],[[[26,[[60,[50]]]],27],[[28,[[9,[[25,[35]]]]]]]],[[[26,[[59,[50]]]],27],[[28,[[9,[[25,[[34,[30]]]]]]]]]],[[26,27,29],[[28,[9]]]],[[[26,[40]],27,29],[[28,[9]]]],[[[26,[[55,[44]]]],27,29],[[28,[9]]]],[[[26,[49]],27,29],[[28,[9]]]],[[[26,[53]],27,29],[[28,[9]]]],[[[26,[57]],27,29],[[28,[9]]]],[[[26,[[51,[44]]]],27,29],[[28,[[12,[11]]]]]],[[[26,[[43,[[0,[42,44]]]]]],27,29],[[28,[9]]]],[[[26,[[52,[[0,[44,42]]]]]],27,29],[[28,[9]]]],[[[26,[[45,[44]]]],27,29],[[28,[9]]]],[[26,27],[[28,[[12,[11]]]]]],[[[26,[39]],27],[[28,[[12,[11]]]]]],[[[26,[41]],27],[[28,[[12,[11]]]]]],[[[26,[[56,[42]]]],27],[[28,[[12,[11]]]]]],[[[26,[53]],27],[[28,[9]]]],[[[26,[58]],27],[[28,[[12,[11]]]]]],[[[26,[[43,[42]]]],27],[[28,[9]]]],[[[26,[[52,[[0,[44,42]]]]]],27],[[28,[9]]]],[[[26,[[45,[[0,[44,42]]]]]],27],[[28,[9]]]],[[26,27,[31,[30]]],[[28,[[12,[32,11]]]]]],[[[26,[39]],27,[31,[30]]],[[28,[[9,[32]]]]]],[[[26,[41]],27,[31,[30]]],[[28,[[9,[32]]]]]],[[[26,[[56,[42]]]],27,[31,[30]]],[[28,[[12,[32,11]]]]]],[[[26,[53]],27,[31,[30]]],[[28,[[9,[32]]]]]],[[[26,[58]],27,[31,[30]]],[[28,[[12,[32,11]]]]]],[[[26,[[43,[42]]]],27,[31,[30]]],[[28,[[9,[32]]]]]],[[[26,[[52,[[0,[44,42]]]]]],27,[31,[30]]],[[28,[[9,[32]]]]]],[[[26,[[45,[[0,[44,42]]]]]],27,[31,[30]]],[[28,[[9,[32]]]]]],[[26,27,[31,[33]]],[[28,[[12,[32,11]]]]]],[[26,27,[31,[33]]],[[28,[[12,[32,11]]]]]],[[[26,[[56,[42]]]],27,[31,[33]]],[[28,[[12,[32,11]]]]]],[[[26,[53]],27,[31,[33]]],[[28,[[12,[32,11]]]]]],[[[26,[[43,[42]]]],27,[31,[33]]],[[28,[[9,[32]]]]]],[[[26,[[52,[[0,[44,42]]]]]],27,[31,[33]]],[[28,[[9,[32]]]]]],[[[26,[[45,[[0,[44,42]]]]]],27,[31,[33]]],[[28,[[9,[32]]]]]],[[29,[31,[30]]]],[[48,[31,[30]]],[[0,[48]]]],[[48,[31,[30]]],[[0,[48]]]],[[[0,[46,48]],63],[[0,[[0,[46,48]],63]]]],[[[0,[46,48]],63],[[0,[[0,[46,48]],63]]]],[[48,[31,[30]]],[[0,[48]]]],[[48,[31,[30]]],[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[[48,35],[[0,[48]]]],[[48,35],[[0,[48]]]],[[48,[34,[30]]],[[0,[48]]]],[[48,[34,[30]]],[[0,[48]]]],[[48,35],[[0,[48]]]],[[48,35],[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[48,[[0,[48]]]],[[48,30,[34,[30]]],[[0,[48]]]],[[48,30,[34,[30]]],[[0,[48]]]],[29,32],[29,32],[30,57],[48,[[0,[48]]]],[48,[[0,[48]]]],[[48,37],[[0,[48]]]],[[48,37],[[0,[48]]]],[[29,32]],[[[51,[44]],10]],[48,[[0,[48]]]],[48,[[0,[48]]]],[[],58],[[[0,[44,42]]]],[[[0,[46,48]],30],[[59,[[0,[46,48]]]]]],[[[0,[46,48]],30],[[59,[[0,[46,48]]]]]],[[26,37],9],[[[26,[[43,[[0,[42,62]]]]]],37],9],[[[26,[[52,[[0,[44,42,62]]]]]],37],9],[[[26,[[45,[[0,[44,62]]]]]],37],9],[[],39],[[],40],[[],41],[48,[[0,[48]]]],[48,[[0,[48]]]],[[29,32],29],[[46,10],[[51,[46]]]],[[46,10],[[51,[46]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[29,[[31,[[61,[30]]]]]],[[[31,[[61,[30]]]]],29],[[[55,[48]],[56,[48]]],48],[[32,42],[[43,[42]]]],[[32,32,[0,[44,42]]],[[52,[[0,[44,42]]]]]],[[32,44],[[45,[44]]]],[[48,[31,[30]]],[[0,[48]]]],[[48,[31,[30]]],[[0,[48]]]],[[48,[31,[30]]],[[0,[48]]]],[[48,[31,[30]]],[[0,[48]]]],[[[0,[46,48]],64],[[0,[[0,[46,48]],64]]]],[[[0,[46,48]],64],[[0,[[0,[46,48]],64]]]],[[[0,[46,48]],64],[[0,[[0,[46,48]],64]]]],[[[0,[46,48]],64],[[0,[[0,[46,48]],64]]]],[[48,65],[[0,[48]]]],[[48,65],[[0,[48]]]],[[48,65],[[0,[48]]]],[[48,65],[[0,[48]]]],[[48,66],[[0,[48]]]],[[48,66],[[0,[48]]]],[[48,66],[[0,[48]]]],[[48,66],[[0,[48]]]],[[48,67],[[0,[48]]]],[[48,67],[[0,[48]]]],[[48,67],[[0,[48]]]],[[48,67],[[0,[48]]]],[[48,68],[[0,[48]]]],[[48,68],[[0,[48]]]],[[48,68],[[0,[48]]]],[[48,68],[[0,[48]]]],[[48,14],[[0,[48]]]],[[48,14],[[0,[48]]]],[[48,14],[[0,[48]]]],[[48,14],[[0,[48]]]],[[48,69],[[0,[48]]]],[[48,69],[[0,[48]]]],[[48,69],[[0,[48]]]],[[48,69],[[0,[48]]]],[[48,70],[[0,[48]]]],[[48,70],[[0,[48]]]],[[48,71],[[0,[48]]]],[[48,71],[[0,[48]]]],[[48,71],[[0,[48]]]],[[48,71],[[0,[48]]]],[[48,72],[[0,[48]]]],[[48,72],[[0,[48]]]],[[48,72],[[0,[48]]]],[[48,72],[[0,[48]]]],[[48,24],[[0,[48]]]],[[48,24],[[0,[48]]]],[[48,24],[[0,[48]]]],[[48,24],[[0,[48]]]],[[48,10],[[0,[48]]]],[[48,10],[[0,[48]]]],[[48,10],[[0,[48]]]],[[48,10],[[0,[48]]]],[[48,30],[[0,[48]]]],[[48,30],[[0,[48]]]],[[48,[31,[33]]],[[0,[48]]]],[[48,[31,[33]]],[[0,[48]]]],0,0,0,0,0,0,0,0,0,[[73,74]],[[75,74]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[76,[[9,[75]]]],[73,73],[[]],[[],73],[75],[76,76],[76,76],[73,77],[75,77],[[78,78],2],[[],2],[[76,24],76],[[76,18],19],[[73,18],19],[[77,18],19],[[79,18],19],[[79,18],19],[[75,18],19],[[78,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[76,24],76],[75,73],[[]],[[]],[[]],[[]],[[]],[[]],[79,2],[79,2],[[76,32],76],[[],[[9,[75]]]],[[],76],[[],76],[[76,[0,[80,81,82]]],76],[[76,[0,[80,81,82]]],76],[[76,[0,[80,81,82]]],76],[[76,[0,[80,81,82]]],76],[73,78],[75],[[75,83]],[[73,[0,[74,81]]],84],[[75,[0,[74,81]]],84],[[73,[0,[85,81]]],[[84,[81]]]],[[75,[0,[85,81]]],[[84,[81]]]],[[76,83],76],[[76,[86,[35]]],76],[[76,[0,[80,81,82]]],76],[[76,32],76],[[]],[[],35],[[],[[12,[73,79]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[76,32],76],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[87,[[12,[88,89]]]],[[87,24],[[12,[88,89]]]],[[[90,[87]],24],[[12,[91,89]]]],[[[90,[87]]],[[12,[91,89]]]],[[87,32]],[87,32],[[[92,[46]]],[[93,[46]]]],[[[90,[[92,[46]]]]],[[94,[46]]]],[[[95,[46]]],[[96,[46]]]],[[[95,[46]]],[[97,[46]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[99,[98]]],[[99,[98]]]],[100,100],[[]],[[]],[87],[[46,46],[[92,[46,46]]]],[[46,46],[[95,[46,46]]]],[[],99],[[],101],[32,87],[[],99],[[46,46,24],[[95,[46,46]]]],[[],[[92,[102]]]],[[],[[95,[[0,[102,46]]]]]],[[],99],[[],101],[[[93,[46]]]],[[[94,[46]]]],[[[103,[46]]]],[[[104,[46,46]]]],[[[105,[46,46]]],46],[[[106,[46]]],46],[[[107,[46,46]]],46],[[[96,[46]]],46],[[[97,[46]]],46],[[[108,[46]]],46],[[[93,[46]]]],[[[94,[46]]]],[[[103,[46]]]],[[[104,[46,46]]]],[[[106,[46]]],46],[[[107,[46,46]]],46],[[[97,[46]]],46],[[[108,[46]]],46],[[[106,[46]]],[[105,[46]]]],[[[97,[46]]],[[96,[46]]]],[[[106,[46]],85],[[105,[46,46]]]],[[[97,[46]],85],[[96,[46]]]],[99],[[[93,[46]]]],[[[94,[46]]]],[[[103,[46]]]],[[[104,[46,46]]]],[88],[91],[[[105,[46,46]]]],[[[106,[46]]]],[[[107,[46,46]]]],[[[96,[46]]]],[[[97,[46]]]],[[[108,[46]]]],[[[99,[109]],[99,[109]]],2],[[110,110],2],[[[111,[109]],[111,[109]]],2],[[],2],[[],2],[[],2],[[[92,[[0,[54,46]]]],18],19],[[[95,[[0,[54,46]]]],18],19],[[[99,[54]],18],19],[[112,18],19],[[100,18],19],[[[93,[[0,[46,54]]]],18],19],[[[93,[[0,[46,113]]]],18],19],[[[94,[[0,[46,54]]]],18],19],[[[94,[[0,[46,113]]]],18],19],[[[103,[[0,[46,54]]]],18],19],[[[103,[[0,[46,113]]]],18],19],[[[104,[46,[0,[46,113]]]],18],19],[[[104,[46,[0,[46,54]]]],18],19],[[114,18],19],[[114,18],19],[[101,18],19],[[110,18],19],[[110,18],19],[[89,18],19],[[89,18],19],[[87,18],19],[[88,18],19],[[91,18],19],[[[105,[46,[0,[113,46]]]],18],19],[[[105,[46,[0,[54,46]]]],18],19],[[[106,[[0,[113,46]]]],18],19],[[[106,[[0,[54,46]]]],18],19],[[[107,[46,[0,[54,46]]]],18],19],[[[107,[46,[0,[113,46]]]],18],19],[[[96,[[0,[113,46]]]],18],19],[[[96,[[0,[54,46]]]],18],19],[[[97,[[0,[54,46]]]],18],19],[[[97,[[0,[113,46]]]],18],19],[[[108,[[0,[113,46]]]],18],19],[[[108,[[0,[54,46]]]],18],19],[[[111,[54]],18],19],[[111,18],19],[88],[91],[115],[[]],[[],92],[115],[[]],[[],95],[115],[[]],[[],99],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[99,25],[[[92,[46]]],46],[[[95,[46]]],46],[99,25],[[99,85]],[[99,85],12],[99,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[92,[46,46]]],[46,46]],[[[95,[46,46]]],[46,46]],[99,25],[[[106,[46]]],[[107,[46]]]],[[[97,[46]]],[[108,[46]]]],[111,2],[87,2],[111,2],[100,2],[[[92,[46]]],[[93,[46]]]],[[[90,[[92,[46]]]]],[[94,[46]]]],[[[93,[46]],85],[[103,[46]]]],[[[94,[46]],85],[[104,[46,46]]]],[[[103,[46]],85],103],[[[104,[46,46]],85],[[104,[46]]]],[[[105,[46,46]],85],[[105,[46,46]]]],[[[106,[46]],85],[[107,[46,46]]]],[[[107,[46,46]],85],[[107,[46,46]]]],[[[96,[46]],85],[[96,[46]]]],[[[97,[46]],85],[[108,[46]]]],[[[108,[46]],85],[[108,[46]]]],[[88,88]],[[91,91]],0,[[[93,[46]]],[[92,[46]]]],[[[94,[46]]],[[90,[[92,[46]]]]]],[[46,46],[[92,[46,46]]]],[[46,46],[[95,[46,46]]]],[[],99],[32,112],[[],101],[32,87],[25,99],[101,116],[101],[101],0,[[[95,[46]]],[[96,[46]]]],[[[90,[[95,[46]]]]],[[105,[46]]]],[91,[[90,[87]]]],[99,[[12,[111]]]],[99,25],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[[],35],[87,[[12,[88,110]]]],[[87,24],[[12,[88,110]]]],[[[90,[87]],24],[[12,[91,110]]]],[[[90,[87]]],[[12,[91,110]]]],[[[106,[46]],85],[[12,[[105,[46,46]],[106,[46]]]]]],[[[97,[46]],85],[[12,[[96,[46]],[97,[46]]]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[[92,[46]]],[[12,[[93,[46]],114]]]],[[[90,[[92,[46]]]]],[[12,[[94,[46]],114]]]],[[[93,[46]],85],[[12,[[103,[46]],[93,[46]]]]]],[[[94,[46]],85],[[12,[[104,[46,46]],[94,[46]]]]]],[[[103,[46]],85],[[12,[103,[103,[46]]]]]],[[[104,[46,46]],85],[[12,[[104,[46]],[104,[46,46]]]]]],[[[105,[46,46]],85],[[12,[[105,[46,46]],[105,[46,46]]]]]],[[[106,[46]],85],[[12,[[107,[46,46]],[106,[46]]]]]],[[[107,[46,46]],85],[[12,[[107,[46,46]],[107,[46,46]]]]]],[[[96,[46]],85],[[12,[[96,[46]],[96,[46]]]]]],[[[97,[46]],85],[[12,[[108,[46]],[97,[46]]]]]],[[[108,[46]],85],[[12,[[108,[46]],[108,[46]]]]]],[[[95,[46]]],[[12,[[96,[46]],114]]]],[[[90,[[95,[46]]]]],[[12,[[105,[46]],114]]]],[[[95,[46]]],[[12,[[97,[46]],114]]]],[[[90,[[95,[46]]]]],[[12,[[106,[46]],114]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[112,100],0,[[46,46,24],[[95,[46,46]]]],[[[95,[46]]],[[97,[46]]]],[[[90,[[95,[46]]]]],[[106,[46]]]],0,0,[[[117,[98]]],[[12,[98,118]]]],[[]],[[]],[[]],[[]],[32],[119,119],[[]],[119],[117],0,[[119,18],19],[[117,18],19],[[]],[[]],[[]],[[]],[119,2],[117,2],[119,32],[117,32],[32,119],[119,32],[[[117,[98]]],[[12,[98,118]]]],[[[117,[98]]],[[117,[98]]]],[[119,119],2],[[117,117],2],[119,[[12,[32,120]]]],[119,117],[[]],[[],12],[[],12],[[],12],[[],12],[[[117,[98]]],[[12,[98,121]]]],[[],38],[[],38],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[118,118],[121,121],[[]],[[]],[[118,118],2],[[121,121],2],[[],2],[[],2],[[[120,[54]],18],19],[[120,18],19],[[118,18],19],[[118,18],19],[[121,18],19],[[121,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],38],[[],38],[[],38],0,[[]],[[]],[116],[[[26,[116]]],2],[[116,18],19],[[]],[[]],[[]],[[[26,[116]],27],28],[[],12],[[],12],[[],38],0,0,0,0,0,0,0,0,[122,25],[123,25],[124,[[12,[125]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,32],[32],[124,124],[126,126],[127,127],[128,128],[[]],[[]],[[]],[[]],[122],[123],[124],[127],[124,126],[127,128],[129],[130],0,[[124,18],19],[[126,18],19],[[129,18],19],[[130,18],19],[[122,18],19],[[127,18],19],[[128,18],19],[[123,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[124,2],[127,2],[124,32],[[122,27],[[28,[25]]]],[[123,27],[[28,[25]]]],[122,25],[123,25],[130,124],[124,[[12,[129,125]]]],[124,[[12,[130,125]]]],[[124,124],2],[[127,127],2],[124,[[12,[125]]]],[129],[130,124],[127,[[12,[125]]]],[[124,83],[[12,[131]]]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[122,[[12,[132]]]],[123,[[12,[132]]]],[124,[[12,[129,133]]]],[124,[[12,[130,[133,[124]]]]]],[124,[[12,[133]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[]],[126,[[25,[124]]]],[128,[[25,[127]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[125,[98]]],[[125,[98]]]],[[[133,[98]]],[[133,[98]]]],[132,132],[[[131,[98]]],[[131,[98]]]],[[]],[[]],[[]],[[]],[[[125,[109]],[125,[109]]],2],[[[133,[109]],[133,[109]]],2],[[132,132],2],[[[131,[109]],[131,[109]]],2],[[],2],[[],2],[[],2],[[],2],[[125,18],19],[[125,18],19],[[133,18],19],[[133,18],19],[[132,18],19],[[132,18],19],[[131,18],19],[[131,18],19],[[]],[125,133],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],35],[[],35],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],38],[[],38],[[],38],[[],38],0,0,[134,[[12,[135]]]],[[]],[[]],[[]],[[]],[[]],[134],[136],[136],[134],0,[[[136,[54]],18],19],[[[134,[54]],18],19],[[]],[[]],[[]],[[]],[[]],[136,2],[[[26,[134]],27],28],[[136,27],28],[136,12],[[],12],[[],12],[[],12],[[],12],[134,[[12,[137]]]],[[],38],[[],38],0,0,0,0,[[]],[[]],[[]],[[]],[135,135],[137,137],[[]],[[]],[[135,135],2],[[137,137],2],[[],2],[[],2],[[135,18],19],[[135,18],19],[[137,18],19],[[137,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],12],[[],12],[[],12],[[],12],[[],38],[[],38],0,0,0,[138,139],[[]],[140,139],[[]],[[]],[138,139],[[]],[[]],[[]],[138,[[12,[141]]]],[[]],[138,138],[[]],[140],[139],[138],[140],0,[[[138,[54]],18],19],[[[140,[54]],18],19],[[[139,[54]],18],19],[[]],[[]],[[]],[138,[[12,[2,141]]]],[139,2],[[]],[[]],[[]],[140,2],[138],[[],140],[140,32],[[138,138],2],[140,[[12,[142]]]],[[140,85],2],[[140,85]],[140],[140,138],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],38],[[],38],[[],38],[[138,143],[[12,[139,141]]]],0,0,[[]],[[]],[[]],[[]],[[[142,[98]]],[[142,[98]]]],[141,141],[[]],[[]],[[[142,[109]],[142,[109]]],2],[[],2],[[142,18],19],[[142,18],19],[[141,18],19],[[141,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[],35],[[],35],[[],12],[[],12],[[],12],[[],12],[[],38],[[],38],0,0,0,0,0,0,0,0,[144],[84],[145],[84,144],[85],[[146,75,74]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],145],[[],146],[145],[144],[84],[147],[145],[146],[146,147],[[144,18],19],[[148,18],19],[[148,18],19],[[[84,[54]],18],19],[[147,18],19],[[149,18],19],[[145,18],19],[[146,18],19],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[149,[150]]],150],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[148,[[152,[151]]]],[148,2],[145,2],[144,2],[84,2],[148,2],[145,[[25,[[12,[148]]]]]],[145,32],[[],145],[[],146],[[[26,[84]],27],28],[[[26,[146]],27],28],[[[26,[[153,[74]]]],27],28],[[145,27],[[28,[[25,[[12,[148]]]]]]]],[[146,74]],[[149,74],[[154,[74]]]],[145],[[[0,[74,81]]],84],[[[145,[81]],[0,[74,81]]],144],[[[0,[85,81]]],[[84,[81]]]],[[[145,[81]],[0,[85,81]]],144],[[[145,[81]],[0,[85,81]],73],144],[74,84],[[145,74],144],[[146,74],84],[[145,74,146],144],[[[145,[81]],[0,[74,81]],73],144],[[149,85]],[[],35],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[148,[[12,[[152,[151]],148]]]],[[149,85],[[12,[0]]]],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],153],[[149,85]],[[]],0,[[]],[[]],[154],[[[154,[54]],18],19],[[]],[[]],[[]],[[[26,[[154,[74]]]],27],28],[[],12],[[],12],[[],38],0,0,0,0,0,0,0,0,0,[[155,83],155],[[155,83]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[155,83],[[25,[155]]]],[[155,155],[[25,[83]]]],[[155,83],[[25,[155]]]],[155,155],[156,156],[[]],[[]],[[155,155],157],[158,155],[[],156],[[155,155],83],[155,83],[[155,155],2],[[156,156],2],[[],2],[[],2],0,[[155,18],19],[[156,18],19],[[159,18],19],[[[160,[54]],18],19],[[158,18],19],[[]],[161,155],[[]],[[]],[[]],[[]],[161,155],[160],[160],[[155,162]],[83,159],[[155,83],159],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[160],[155,161],[158,2],[159,156],[[],155],[[155,155],[[25,[157]]]],[159,83],[[[26,[[160,[74]]]],27],28],[[[26,[158]],27],28],[[159,27],[[28,[155]]]],[159],[[[26,[158]],155]],[[159,83]],[[159,155]],[159],[[155,155],83],[[159,156]],[83,158],[155,158],[[155,83],155],[[155,155],83],[[155,83]],[159,155],[[83,74],[[160,[74]]]],[[155,74],[[160,[74]]]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],38],[[],38],[[],38],[[],38],[[],38],0,0,[[],163],[[]],[[]],[[]],[[]],[163,163],[[]],[[164,164],2],[[],2],[[163,18],19],[[163,18],19],[[164,18],19],[[164,18],19],[[]],[[]],[[]],[[]],[[],163],[163,2],[163,2],[163,2],[[],163],[[]],[[],35],[[],35],[[],12],[[],12],[[],12],[[],12],[[],38],[[],38]],"c":[],"p":[[3,"OpenOptions"],[15,"bool"],[3,"File"],[3,"BorrowedFd"],[6,"RawFd"],[3,"Path"],[8,"AsRef"],[3,"PathBuf"],[6,"Result"],[15,"u64"],[3,"Error"],[4,"Result"],[3,"DirBuilder"],[15,"i32"],[3,"DirEntry"],[3,"OsString"],[3,"FileType"],[3,"Formatter"],[6,"Result"],[3,"ReadDir"],[3,"File"],[3,"OpenOptions"],[3,"Metadata"],[15,"u32"],[4,"Option"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"ReadBuf"],[15,"u8"],[15,"slice"],[15,"usize"],[3,"IoSlice"],[3,"Vec"],[3,"String"],[3,"Permissions"],[4,"SeekFrom"],[3,"TypeId"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[8,"AsyncWrite"],[3,"BufWriter"],[8,"AsyncRead"],[3,"BufReader"],[8,"Sized"],[3,"UninitSlice"],[8,"Unpin"],[3,"Empty"],[8,"AsyncBufRead"],[3,"Take"],[3,"BufStream"],[3,"DuplexStream"],[8,"Debug"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"Repeat"],[3,"Sink"],[3,"Split"],[3,"Lines"],[19,"MaybeUninit"],[8,"AsyncSeek"],[8,"BufMut"],[8,"Buf"],[15,"f32"],[15,"f64"],[15,"i128"],[15,"i16"],[15,"i64"],[15,"i8"],[15,"u128"],[15,"u16"],[3,"Handle"],[8,"Future"],[3,"Runtime"],[3,"Builder"],[3,"EnterGuard"],[4,"RuntimeFlavor"],[3,"TryCurrentError"],[8,"Fn"],[8,"Send"],[8,"Sync"],[3,"Duration"],[3,"JoinHandle"],[8,"FnOnce"],[8,"Into"],[3,"Semaphore"],[3,"SemaphorePermit"],[3,"AcquireError"],[3,"Arc"],[3,"OwnedSemaphorePermit"],[3,"Mutex"],[3,"MutexGuard"],[3,"OwnedMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[8,"Clone"],[3,"OnceCell"],[3,"BarrierWaitResult"],[3,"Notify"],[8,"Default"],[3,"MappedMutexGuard"],[3,"OwnedMappedMutexGuard"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"OwnedRwLockMappedWriteGuard"],[3,"RwLockMappedWriteGuard"],[8,"PartialEq"],[4,"TryAcquireError"],[4,"SetError"],[3,"Barrier"],[8,"Display"],[3,"TryLockError"],[15,"never"],[3,"Notified"],[3,"Receiver"],[4,"RecvError"],[3,"Sender"],[3,"SendError"],[4,"TryRecvError"],[3,"Receiver"],[3,"UnboundedReceiver"],[3,"Sender"],[3,"SendError"],[3,"WeakSender"],[3,"UnboundedSender"],[3,"WeakUnboundedSender"],[3,"Permit"],[3,"OwnedPermit"],[4,"SendTimeoutError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Receiver"],[3,"RecvError"],[3,"Sender"],[4,"TryRecvError"],[3,"Receiver"],[3,"Ref"],[3,"Sender"],[3,"RecvError"],[3,"SendError"],[8,"FnMut"],[3,"AbortHandle"],[3,"JoinSet"],[3,"LocalSet"],[3,"LocalEnterGuard"],[3,"JoinError"],[3,"LocalKey"],[8,"Copy"],[8,"Any"],[3,"Box"],[3,"Unconstrained"],[3,"TaskLocalFuture"],[3,"Instant"],[4,"MissedTickBehavior"],[4,"Ordering"],[3,"Sleep"],[3,"Interval"],[3,"Timeout"],[3,"Instant"],[8,"Hasher"],[3,"Error"],[3,"Elapsed"],[8,"AsyncReadExt"],[8,"AsyncBufReadExt"],[8,"AsyncWriteExt"],[8,"AsyncSeekExt"]]},\
"tokio_macros":{"doc":"Macros for use with Tokio","t":"XXXXXX","n":["main","main_fail","main_rt","test","test_fail","test_rt"],"q":[[0,"tokio_macros"]],"d":["Marks async function to be executed by the selected …","Always fails with the error message below.","Marks async function to be executed by selected runtime. …","Marks async function to be executed by runtime, suitable …","Always fails with the error message below.","Marks async function to be executed by runtime, suitable …"],"i":[0,0,0,0,0,0],"f":[0,0,0,0,0,0],"c":[],"p":[]},\
"tree_magic_mini":{"doc":"<code>tree_magic_mini</code> is a Rust crate that determines the MIME …","t":"FFFF","n":["from_filepath","from_u8","match_filepath","match_u8"],"q":[[0,"tree_magic_mini"]],"d":["Gets the type of a file from a filepath.","Gets the type of a file from a byte stream.","Check if the given filepath matches the given MIME type.","Checks if the given bytestream matches the given MIME type."],"i":[0,0,0,0],"f":[[1,[[3,[2]]]],[[[5,[4]]],2],[[2,1],6],[[2,[5,[4]]],6]],"c":[],"p":[[3,"Path"],[15,"str"],[4,"Option"],[15,"u8"],[15,"slice"],[15,"bool"]]},\
"unicode_ident":{"doc":"github crates-io docs-rs","t":"FF","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"d":["",""],"i":[0,0],"f":[[1,2],[1,2]],"c":[],"p":[[15,"char"],[15,"bool"]]},\
"unicode_segmentation":{"doc":"Iterators which split strings on Grapheme Cluster, Word or …","t":"DEDDNNNNRDDDDIDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKK","n":["GraphemeCursor","GraphemeIncomplete","GraphemeIndices","Graphemes","InvalidOffset","NextChunk","PreContext","PrevChunk","UNICODE_VERSION","USentenceBoundIndices","USentenceBounds","UWordBoundIndices","UWordBounds","UnicodeSegmentation","UnicodeSentences","UnicodeWordIndices","UnicodeWords","as_str","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","cur_cursor","eq","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","grapheme_indices","graphemes","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","is_boundary","new","next","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","next_back","next_back","next_boundary","prev_boundary","provide_context","set_cursor","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","split_sentence_bound_indices","split_sentence_bounds","split_word_bound_indices","split_word_bounds","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unicode_sentences","unicode_word_indices","unicode_words"],"q":[[0,"unicode_segmentation"]],"d":["Cursor-based segmenter for grapheme clusters.","An error return indicating that not enough content was …","External iterator for grapheme clusters and byte offsets.","External iterator for a string’s grapheme clusters.","An error returned when the chunk given does not contain …","When requesting <code>next_boundary</code>, the cursor is moving past …","More pre-context is needed. The caller should call …","When requesting <code>prev_boundary</code>, the cursor is moving past …","The version of Unicode that this version of …","External iterator for sentence boundaries and byte offsets.","External iterator for a string’s sentence boundaries.","External iterator for word boundaries and byte offsets.","External iterator for a string’s word boundaries.","Methods for segmenting strings according to Unicode …","An iterator over the substrings of a string which, after …","An iterator over the substrings of a string which, after …","An iterator over the substrings of a string which, after …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","View the underlying data (the part yet to be iterated) as …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The current offset of the cursor. Equal to the last value …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns an iterator over the grapheme clusters of <code>self</code> and …","Returns an iterator over the grapheme clusters of <code>self</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Determine whether the current cursor location is a …","Create a new cursor. The string and initial offset are …","","","","","","","","","","","","","","","","Find the next boundary after the current cursor position. …","Find the previous boundary after the current cursor …","Provide additional pre-context when it is needed to decide …","Set the cursor to a new location in the same string.","","","","","","","Returns an iterator over substrings of <code>self</code>, split on …","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over substrings of <code>self</code>, split on …","Returns an iterator over substrings of <code>self</code> separated on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an iterator over substrings of <code>self</code> separated on …","Returns an iterator over the words of <code>self</code>, separated on …","Returns an iterator over the words of <code>self</code>, separated on …"],"i":[0,0,0,0,11,11,11,11,0,0,0,0,0,0,0,0,0,1,3,4,5,16,18,1,3,6,11,7,8,9,4,5,16,18,1,3,6,11,7,8,9,4,5,1,3,6,7,8,9,4,5,6,11,3,6,11,16,18,1,3,6,11,7,8,9,4,5,20,20,16,18,1,3,6,11,7,8,9,4,5,16,18,1,3,7,8,9,4,5,6,6,16,18,1,3,7,8,9,4,5,16,18,1,3,4,5,6,6,6,6,1,3,8,9,4,5,20,20,20,20,16,18,1,3,6,11,7,8,9,4,5,16,18,1,3,6,11,7,8,9,4,5,16,18,1,3,6,11,7,8,9,4,5,20,20,20],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],[4,2],[5,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[3,3],[6,6],[7,7],[8,8],[9,9],[4,4],[5,5],[6,10],[[11,11],12],[[3,13],14],[[6,13],14],[[11,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[12,1],[12,3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,2,10],[[15,[12,11]]]],[[10,10,12],6],[16,[[17,[2]]]],[18,17],[1,17],[3,[[17,[2]]]],[7,[[17,[2]]]],[8,[[17,[2]]]],[9,17],[4,[[17,[2]]]],[5,17],[16,[[17,[2]]]],[18,17],[1,17],[3,[[17,[2]]]],[4,[[17,[2]]]],[5,17],[[6,2,10],[[15,[[17,[10]],11]]]],[[6,2,10],[[15,[[17,[10]],11]]]],[[6,2,10]],[[6,10]],[1],[3],[8],[9],[4],[5],[[],9],[[],8],[[],5],[[],4],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],7],[[],18],[[],16]],"c":[],"p":[[3,"GraphemeIndices"],[15,"str"],[3,"Graphemes"],[3,"UWordBounds"],[3,"UWordBoundIndices"],[3,"GraphemeCursor"],[3,"UnicodeSentences"],[3,"USentenceBounds"],[3,"USentenceBoundIndices"],[15,"usize"],[4,"GraphemeIncomplete"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"Result"],[3,"UnicodeWords"],[4,"Option"],[3,"UnicodeWordIndices"],[3,"TypeId"],[8,"UnicodeSegmentation"]]},\
"wayland_client":{"doc":"Client-side Wayland connector","t":"DENDEDDQDNDNEEIDNINNSDQINSNNNENNDDDDDDNQNNDSNNLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLKLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLOLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLKLLLLLLLOLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLKLLLMMLLLKLMMKLMLALLLLLLLLKLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMAAAAAAAAAAAAAAAAAAAAAANRERNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHNREEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMNNERREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHNNRRRRRRNEENNRRRNENNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMSSNDENSSRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMNNNRRREENNNNNNRRRRRNENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMNNNNNRRRRRREENNNRRRENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMNRRENENNNNNRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMRRRRRRNENENENNNNRNNNEDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMMMMSNNRRRRRRENNNNNNNDNNNNSRNENEENNNDNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMENNENNNENRRRRRRRRRNEENNNNNNRRNNENNNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMMMMMMMMMMNNERRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMMMMMMMMNRRENNREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMNDRREENNNSNNSRRRRNESDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMEENRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMSSSNNNRRRENESSNSNNNRRRRRRRRRREDNSNNNNNNNNSSSDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNREEENNNNNNNNNNNNNNNNNNNNNRENNNNNNNNNNNNNNNNNNNNDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMNNERRRENDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMMMMMMNNEENRREDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMMNNEENNRRRRRRENNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHMMMMNNNNNRRNEENNNNNNNRRRRRRRRRRRENNNNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMMMMNNRRRRRRRENNNRNENNDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLHHHMMMMMMMMMMMMMMMMMMAALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLEEEMMLLLLLLLLLLLLLLLLLLLLMMMMLLLLLMMLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLMMMTDGFFGFFDDGD","n":["AnonymousObject","Argument","Array","Attached","ConnectError","DispatchData","Display","Event","EventQueue","Fd","Filter","Float","GlobalError","GlobalEvent","GlobalImplementor","GlobalManager","Int","Interface","InvalidFd","InvalidName","MESSAGES","Main","Map","MessageGroup","Missing","NAME","New","NewId","NoCompositorListening","NoMessage","NoWaylandLib","Object","ProtocolError","Proxy","ProxyMap","QueueToken","RawEvent","ReadEventsGuard","Removed","Request","Str","Uint","UserData","VERSION","VersionTooLow","XdgRuntimeDirNotSet","anonymize","args","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","assign","attach","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","c_interface","c_ptr","cancel","child","child","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","connect_to_env","connect_to_name","create_event_queue","deanonymize","deanonymize","deref","deref","deref","description","detach","dispatch","dispatch_pending","display","drop","drop","eq","eq","eq","eq","eq","equals","equivalent","equivalent","error","error","event_enum","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_c_ptr","from_c_ptr","from_fd","from_raw","from_raw","from_raw_c","from_raw_c","get","get","get","get_connection_fd","get_new","get_or_dead","global_filter","id","instantiate_exact","instantiate_range","interface","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_alive","is_destructor","is_destructor","is_external","list","message","name","new","new","new","new_global","new_with_cb","object_id","object_interface","opcode","opcode","opcode","prepare_read","protocol","protocol_error","quick_assign","read_events","reborrow","send","send","set","set_threadsafe","since","since","sync_roundtrip","sys","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data","version","wrap","id","id","interface","interface","version","wl_buffer","wl_callback","wl_compositor","wl_data_device","wl_data_device_manager","wl_data_offer","wl_data_source","wl_display","wl_keyboard","wl_output","wl_pointer","wl_region","wl_registry","wl_seat","wl_shell","wl_shell_surface","wl_shm","wl_shm_pool","wl_subcompositor","wl_subsurface","wl_surface","wl_touch","Destroy","EVT_RELEASE_SINCE","Event","REQ_DESTROY_SINCE","Release","Request","WlBuffer","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_buffer_events","wl_buffer_interface","wl_buffer_requests","Done","EVT_DONE_SINCE","Event","Request","WlCallback","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_callback_events","wl_callback_interface","callback_data","CreateRegion","CreateSurface","Event","REQ_CREATE_REGION_SINCE","REQ_CREATE_SURFACE_SINCE","Request","WlCompositor","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_region","create_surface","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_compositor_interface","wl_compositor_requests","DataOffer","Drop","EVT_DATA_OFFER_SINCE","EVT_DROP_SINCE","EVT_ENTER_SINCE","EVT_LEAVE_SINCE","EVT_MOTION_SINCE","EVT_SELECTION_SINCE","Enter","Error","Event","Leave","Motion","REQ_RELEASE_SINCE","REQ_SET_SELECTION_SINCE","REQ_START_DRAG_SINCE","Release","Request","Role","Selection","SetSelection","StartDrag","WlDataDevice","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","set_selection","since","since","start_drag","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_data_device_events","wl_data_device_interface","wl_data_device_requests","id","id","id","serial","surface","time","x","x","y","y","icon","origin","serial","serial","source","source","Ask","Copy","CreateDataSource","DndAction","Event","GetDataDevice","Move","None","REQ_CREATE_DATA_SOURCE_SINCE","REQ_GET_DATA_DEVICE_SINCE","Request","WlDataDeviceManager","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","cmp","complement","contains","create_data_source","difference","empty","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_data_device","hash","insert","intersection","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_raw","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","wl_data_device_manager_interface","wl_data_device_manager_requests","seat","Accept","Action","Destroy","EVT_ACTION_SINCE","EVT_OFFER_SINCE","EVT_SOURCE_ACTIONS_SINCE","Error","Event","Finish","InvalidAction","InvalidActionMask","InvalidFinish","InvalidOffer","Offer","REQ_ACCEPT_SINCE","REQ_DESTROY_SINCE","REQ_FINISH_SINCE","REQ_RECEIVE_SINCE","REQ_SET_ACTIONS_SINCE","Receive","Request","SetActions","SourceActions","WlDataOffer","accept","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","finish","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","receive","set_actions","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_data_offer_events","wl_data_offer_interface","wl_data_offer_requests","dnd_action","mime_type","source_actions","dnd_actions","fd","mime_type","mime_type","preferred_action","serial","Action","Cancelled","Destroy","DndDropPerformed","DndFinished","EVT_ACTION_SINCE","EVT_CANCELLED_SINCE","EVT_DND_DROP_PERFORMED_SINCE","EVT_DND_FINISHED_SINCE","EVT_SEND_SINCE","EVT_TARGET_SINCE","Error","Event","InvalidActionMask","InvalidSource","Offer","REQ_DESTROY_SINCE","REQ_OFFER_SINCE","REQ_SET_ACTIONS_SINCE","Request","Send","SetActions","Target","WlDataSource","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","offer","opcode","opcode","set_actions","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_data_source_events","wl_data_source_interface","wl_data_source_requests","dnd_action","fd","mime_type","mime_type","dnd_actions","mime_type","DeleteId","EVT_DELETE_ID_SINCE","EVT_ERROR_SINCE","Error","Error","Event","GetRegistry","Implementation","InvalidMethod","InvalidObject","NoMemory","REQ_GET_REGISTRY_SINCE","REQ_SYNC_SINCE","Request","Sync","WlDisplay","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_registry","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","sync","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_display_events","wl_display_interface","wl_display_requests","code","id","message","object_id","EVT_ENTER_SINCE","EVT_KEYMAP_SINCE","EVT_KEY_SINCE","EVT_LEAVE_SINCE","EVT_MODIFIERS_SINCE","EVT_REPEAT_INFO_SINCE","Enter","Event","Key","KeyState","Keymap","KeymapFormat","Leave","Modifiers","NoKeymap","Pressed","REQ_RELEASE_SINCE","Release","Released","RepeatInfo","Request","WlKeyboard","XkbV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wl_keyboard_events","wl_keyboard_interface","wl_keyboard_requests","delay","fd","format","group","key","keys","mods_depressed","mods_latched","mods_locked","rate","serial","serial","serial","serial","size","state","surface","surface","time","Current","Description","Done","EVT_DESCRIPTION_SINCE","EVT_DONE_SINCE","EVT_GEOMETRY_SINCE","EVT_MODE_SINCE","EVT_NAME_SINCE","EVT_SCALE_SINCE","Event","Flipped","Flipped180","Flipped270","Flipped90","Geometry","HorizontalBgr","HorizontalRgb","Mode","Mode","Name","None","Normal","Preferred","REQ_RELEASE_SINCE","Release","Request","Scale","Subpixel","Transform","Unknown","VerticalBgr","VerticalRgb","WlOutput","_180","_270","_90","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","release","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","wl_output_events","wl_output_interface","wl_output_requests","description","factor","flags","height","make","model","name","physical_height","physical_width","refresh","subpixel","transform","width","x","y","Axis","Axis","AxisDiscrete","AxisSource","AxisSource","AxisStop","Button","ButtonState","Continuous","EVT_AXIS_DISCRETE_SINCE","EVT_AXIS_SINCE","EVT_AXIS_SOURCE_SINCE","EVT_AXIS_STOP_SINCE","EVT_BUTTON_SINCE","EVT_ENTER_SINCE","EVT_FRAME_SINCE","EVT_LEAVE_SINCE","EVT_MOTION_SINCE","Enter","Error","Event","Finger","Frame","HorizontalScroll","Leave","Motion","Pressed","REQ_RELEASE_SINCE","REQ_SET_CURSOR_SINCE","Release","Released","Request","Role","SetCursor","VerticalScroll","Wheel","WheelTilt","WlPointer","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","set_cursor","since","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wl_pointer_events","wl_pointer_interface","wl_pointer_requests","axis","axis","axis","axis_source","button","discrete","serial","serial","serial","state","surface","surface","surface_x","surface_x","surface_y","surface_y","time","time","time","time","value","hotspot_x","hotspot_y","serial","surface","Add","Destroy","Event","REQ_ADD_SINCE","REQ_DESTROY_SINCE","REQ_SUBTRACT_SINCE","Request","Subtract","WlRegion","add","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","subtract","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_region_interface","wl_region_requests","height","height","width","width","x","x","y","y","Bind","EVT_GLOBAL_REMOVE_SINCE","EVT_GLOBAL_SINCE","Event","Global","GlobalRemove","REQ_BIND_SINCE","Request","WlRegistry","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bind","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_registry_events","wl_registry_interface","wl_registry_requests","interface","name","name","version","id","name","Capabilities","Capability","EVT_CAPABILITIES_SINCE","EVT_NAME_SINCE","Error","Event","GetKeyboard","GetPointer","GetTouch","Keyboard","MissingCapability","Name","Pointer","REQ_GET_KEYBOARD_SINCE","REQ_GET_POINTER_SINCE","REQ_GET_TOUCH_SINCE","REQ_RELEASE_SINCE","Release","Request","Touch","WlSeat","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_keyboard","get_pointer","get_touch","hash","insert","intersection","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","release","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","wl_seat_events","wl_seat_interface","wl_seat_requests","capabilities","name","Error","Event","GetShellSurface","REQ_GET_SHELL_SURFACE_SINCE","Request","Role","WlShell","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_shell_surface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_shell_interface","wl_shell_requests","surface","Bottom","BottomLeft","BottomRight","Configure","Default","Driver","EVT_CONFIGURE_SINCE","EVT_PING_SINCE","EVT_POPUP_DONE_SINCE","Event","Fill","FullscreenMethod","Inactive","Left","Move","None","Ping","Pong","PopupDone","REQ_MOVE_SINCE","REQ_PONG_SINCE","REQ_RESIZE_SINCE","REQ_SET_CLASS_SINCE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_POPUP_SINCE","REQ_SET_TITLE_SINCE","REQ_SET_TOPLEVEL_SINCE","REQ_SET_TRANSIENT_SINCE","Request","Resize","Resize","Right","Scale","SetClass","SetFullscreen","SetMaximized","SetPopup","SetTitle","SetToplevel","SetTransient","Top","TopLeft","TopRight","Transient","WlShellSurface","_move","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","complement","complement","contains","contains","difference","difference","empty","empty","eq","eq","eq","eq","equivalent","equivalent","equivalent","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_all","is_destructor","is_destructor","is_empty","is_empty","not","not","opcode","opcode","partial_cmp","partial_cmp","pong","remove","remove","resize","set","set","set_class","set_fullscreen","set_maximized","set_popup","set_title","set_toplevel","set_transient","since","since","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","union","wl_shell_surface_events","wl_shell_surface_interface","wl_shell_surface_requests","edges","height","serial","width","class_","edges","flags","flags","framerate","method","output","output","parent","parent","seat","seat","seat","serial","serial","serial","serial","title","x","x","y","y","Abgr1555","Abgr16161616","Abgr16161616f","Abgr2101010","Abgr4444","Abgr8888","Argb1555","Argb16161616","Argb16161616f","Argb2101010","Argb4444","Argb8888","Axbxgxrx106106106106","Ayuv","Bgr233","Bgr565","Bgr565A8","Bgr888","Bgr888A8","Bgra1010102","Bgra4444","Bgra5551","Bgra8888","Bgrx1010102","Bgrx4444","Bgrx5551","Bgrx8888","Bgrx8888A8","C8","CreatePool","EVT_FORMAT_SINCE","Error","Event","Format","Format","Gr1616","Gr88","InvalidFd","InvalidFormat","InvalidStride","Nv12","Nv15","Nv16","Nv21","Nv24","Nv42","Nv61","P010","P012","P016","P210","Q401","Q410","R16","R8","REQ_CREATE_POOL_SINCE","Request","Rg1616","Rg88","Rgb332","Rgb565","Rgb565A8","Rgb888","Rgb888A8","Rgba1010102","Rgba4444","Rgba5551","Rgba8888","Rgbx1010102","Rgbx4444","Rgbx5551","Rgbx8888","Rgbx8888A8","Uyvy","Vuy101010","Vuy888","Vyuy","WlShm","X0l0","X0l2","Xbgr1555","Xbgr16161616","Xbgr16161616f","Xbgr2101010","Xbgr4444","Xbgr8888","Xbgr8888A8","Xrgb1555","Xrgb16161616","Xrgb16161616f","Xrgb2101010","Xrgb4444","Xrgb8888","Xrgb8888A8","Xvyu1216161616","Xvyu16161616","Xvyu2101010","Xyuv8888","Y0l0","Y0l2","Y210","Y212","Y216","Y410","Y412","Y416","Yuv410","Yuv411","Yuv420","Yuv42010bit","Yuv4208bit","Yuv422","Yuv444","Yuyv","Yvu410","Yvu411","Yvu420","Yvu422","Yvu444","Yvyu","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","create_pool","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wl_shm_events","wl_shm_interface","wl_shm_requests","format","fd","size","CreateBuffer","Destroy","Event","REQ_CREATE_BUFFER_SINCE","REQ_DESTROY_SINCE","REQ_RESIZE_SINCE","Request","Resize","WlShmPool","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_buffer","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","resize","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_shm_pool_interface","wl_shm_pool_requests","format","height","offset","size","stride","width","BadSurface","Destroy","Error","Event","GetSubsurface","REQ_DESTROY_SINCE","REQ_GET_SUBSURFACE_SINCE","Request","WlSubcompositor","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_subsurface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_subcompositor_interface","wl_subcompositor_requests","parent","surface","BadSurface","Destroy","Error","Event","PlaceAbove","PlaceBelow","REQ_DESTROY_SINCE","REQ_PLACE_ABOVE_SINCE","REQ_PLACE_BELOW_SINCE","REQ_SET_DESYNC_SINCE","REQ_SET_POSITION_SINCE","REQ_SET_SYNC_SINCE","Request","SetDesync","SetPosition","SetSync","WlSubsurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","place_above","place_below","set_desync","set_position","set_sync","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_subsurface_interface","wl_subsurface_requests","sibling","sibling","x","y","Attach","Commit","Damage","DamageBuffer","Destroy","EVT_ENTER_SINCE","EVT_LEAVE_SINCE","Enter","Error","Event","Frame","InvalidOffset","InvalidScale","InvalidSize","InvalidTransform","Leave","Offset","REQ_ATTACH_SINCE","REQ_COMMIT_SINCE","REQ_DAMAGE_BUFFER_SINCE","REQ_DAMAGE_SINCE","REQ_DESTROY_SINCE","REQ_FRAME_SINCE","REQ_OFFSET_SINCE","REQ_SET_BUFFER_SCALE_SINCE","REQ_SET_BUFFER_TRANSFORM_SINCE","REQ_SET_INPUT_REGION_SINCE","REQ_SET_OPAQUE_REGION_SINCE","Request","SetBufferScale","SetBufferTransform","SetInputRegion","SetOpaqueRegion","WlSurface","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","attach","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","commit","damage","damage_buffer","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","offset","opcode","opcode","set_buffer_scale","set_buffer_transform","set_input_region","set_opaque_region","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wl_surface_events","wl_surface_interface","wl_surface_requests","output","output","buffer","height","height","region","region","scale","transform","width","width","x","x","x","x","y","y","y","y","Cancel","Down","EVT_CANCEL_SINCE","EVT_DOWN_SINCE","EVT_FRAME_SINCE","EVT_MOTION_SINCE","EVT_ORIENTATION_SINCE","EVT_SHAPE_SINCE","EVT_UP_SINCE","Event","Frame","Motion","Orientation","REQ_RELEASE_SINCE","Release","Request","Shape","Up","WlTouch","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_touch_events","wl_touch_interface","wl_touch_requests","id","id","id","id","id","major","minor","orientation","serial","serial","surface","time","time","time","x","x","y","y","client","common","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_display","wl_event_queue","wl_proxy","a","alloc","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","event_count","events","f","from","from","from","from","from","h","i","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","n","name","name","next","o","prev","request_count","requests","s","signature","size","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","u","version","wl_argument","wl_array","wl_dispatcher_func_t","wl_fixed_from_double","wl_fixed_from_int","wl_fixed_t","wl_fixed_to_double","wl_fixed_to_int","wl_interface","wl_list","wl_log_func_t","wl_message"],"q":[[0,"wayland_client"],[450,"wayland_client::GlobalEvent"],[455,"wayland_client::protocol"],[477,"wayland_client::protocol::wl_buffer"],[551,"wayland_client::protocol::wl_callback"],[621,"wayland_client::protocol::wl_callback::Event"],[622,"wayland_client::protocol::wl_compositor"],[696,"wayland_client::protocol::wl_data_device"],[806,"wayland_client::protocol::wl_data_device::Event"],[816,"wayland_client::protocol::wl_data_device::Request"],[822,"wayland_client::protocol::wl_data_device_manager"],[958,"wayland_client::protocol::wl_data_device_manager::Request"],[959,"wayland_client::protocol::wl_data_offer"],[1073,"wayland_client::protocol::wl_data_offer::Event"],[1076,"wayland_client::protocol::wl_data_offer::Request"],[1082,"wayland_client::protocol::wl_data_source"],[1194,"wayland_client::protocol::wl_data_source::Event"],[1198,"wayland_client::protocol::wl_data_source::Request"],[1200,"wayland_client::protocol::wl_display"],[1303,"wayland_client::protocol::wl_display::Event"],[1307,"wayland_client::protocol::wl_keyboard"],[1435,"wayland_client::protocol::wl_keyboard::Event"],[1454,"wayland_client::protocol::wl_output"],[1652,"wayland_client::protocol::wl_output::Event"],[1667,"wayland_client::protocol::wl_pointer"],[1849,"wayland_client::protocol::wl_pointer::Event"],[1870,"wayland_client::protocol::wl_pointer::Request"],[1874,"wayland_client::protocol::wl_region"],[1951,"wayland_client::protocol::wl_region::Request"],[1959,"wayland_client::protocol::wl_registry"],[2035,"wayland_client::protocol::wl_registry::Event"],[2039,"wayland_client::protocol::wl_registry::Request"],[2041,"wayland_client::protocol::wl_seat"],[2208,"wayland_client::protocol::wl_seat::Event"],[2210,"wayland_client::protocol::wl_shell"],[2302,"wayland_client::protocol::wl_shell::Request"],[2303,"wayland_client::protocol::wl_shell_surface"],[2558,"wayland_client::protocol::wl_shell_surface::Event"],[2562,"wayland_client::protocol::wl_shell_surface::Request"],[2584,"wayland_client::protocol::wl_shm"],[2809,"wayland_client::protocol::wl_shm::Event"],[2810,"wayland_client::protocol::wl_shm::Request"],[2812,"wayland_client::protocol::wl_shm_pool"],[2889,"wayland_client::protocol::wl_shm_pool::Request"],[2895,"wayland_client::protocol::wl_subcompositor"],[2990,"wayland_client::protocol::wl_subcompositor::Request"],[2992,"wayland_client::protocol::wl_subsurface"],[3099,"wayland_client::protocol::wl_subsurface::Request"],[3103,"wayland_client::protocol::wl_surface"],[3233,"wayland_client::protocol::wl_surface::Event"],[3235,"wayland_client::protocol::wl_surface::Request"],[3252,"wayland_client::protocol::wl_touch"],[3338,"wayland_client::protocol::wl_touch::Event"],[3356,"wayland_client::sys"],[3358,"wayland_client::sys::client"],[3397,"wayland_client::sys::common"]],"d":["Anonymous interface","Enum of possible argument in an event","Vec","A handle to a proxy that has been attached to an event …","Enum representing the possible reasons why connecting to …","Holder of global dispatch-related data","A connection to a wayland server","Set of events associated to this interface","An event queue for protocol messages","RawFd","An event filter","float","An error that occurred trying to bind a global","Event provided to the user callback of GlobalManager","A trait for implementation of the global advertisement","An utility to manage global objects","i32","The description of a wayland interface","The FD provided in <code>WAYLAND_SOCKET</code> was invalid","The provided socket name is invalid","Wire representation of this MessageGroup","A main handle to a proxy","The wrapper type for ObjectMap allowing the mapping of …","A group of messages","The requested global was missing","Name of this interface","A new global was created","id of a newly created wayland object","Any needed library was found, but the listening socket of …","An empty enum representing a MessageGroup with no messages","The library was compiled with the <code>dlopen</code> feature, and the …","id of a wayland object","A protocol error","An handle to a wayland proxy","A handle to the object map internal to the library state.","A token representing this event queue","An generic event","A guard over a read intention.","A global was removed","Set of requests associated to this interface","CString","u32","A wrapper for user data, able to store any type, and …","Maximum supported version of this interface","The global advertised by the server has a lower version …","The <code>XDG_RUNTIME_DIR</code> variable is not set while it should be","Erase the actual type of this proxy","Arguments of the message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build a C representation of this message","","","Assign this object to given filter","Attach this proxy to the event queue represented by this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Pointer to the C representation of this interface","","Get a raw pointer to the underlying wayland object","Cancel the read","Retrieve the child <code>Object</code> associated with this message if …","","","","","","","","","","","","","","","","","","","","The error code associated with the error","Attempt to connect to a wayland server using the contents …","Attempt to connect to a wayland server socket with given …","Create a new event queue associated with this wayland …","Attempt to recover the typed variant of an anonymous proxy","Attempt to recover the typed variant of an anonymous proxy","","","","","Create a non-attached handle from this one","Dispatches events from the internal buffer.","Dispatches pending events from the internal buffer.","Access the <code>Display</code> of the connection","","","","","","","","Check if the other proxy refers to the same underlying …","","","A global was advertised but its version was lower than the …","A global was advertised but its version was lower than the …","Generate an enum joining several objects events","Non-blocking write to the server","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a <code>Proxy</code> instance from a C pointer","Create a <code>Main</code> instance from a C pointer","Attempt to use an already connected unix socket on given …","Construct a message from its raw representation","","Construct a message of this group from its C representation","","Access the dispatch data knowing its type","Attempt to access the wrapped user data","Returns the Proxy corresponding to a given id","Retrieve the file descriptor associated with the wayland …","Creates a new proxy for given id","Returns the Proxy corresponding to a given id, and create …","Convenience macro to create a <code>GlobalManager</code> callback","Retrieve the object id of this wayland object","Instantiate a global with a specific version","Instantiate a global from a version range","Interface of the associated object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Turn this message into its raw representation","","Check if the object associated with this proxy is still …","Whether this message is a destructor","","Check whether this proxy is managed by the library or not","Retrieve the list of currently known globals","The message sent by the server describing the error","Name of the event","Create a new filter from given closure","Create a new UserData instance","Create a global manager handling a registry","A new global of given interface has been instantiated and …","Create a global manager handling a registry with a callback","The id of the object that caused the error","The interface of the object that caused the error","The opcode of this message","","Opcode of the event","Prepare an concurrent read","","Retrieve the last protocol error if any occured","Shorthand for assigning a closure to an object","Read events","Reborrows this <code>DispatchData</code> to create a new one with the …","Send a message to this filter","Send a request creating an object through this object","Sets the UserData to a given value","Sets the UserData to a given threadsafe value","The minimal object version for which this message exists","","Synchronous roundtrip","C-associated types","","","","","","","","","","","","","Create a new token associated with this event queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Access the UserData associated to this object","Retrieve the interface version of this wayland object …","Wrap a mutable reference","Id of the new global","Id of the removed global","Interface of the new global","Interface of the removed global","Maximum supported version of the new global","content for a wl_surface","callback object","the compositor singleton","data transfer device","data transfer interface","offer to transfer data","offer to transfer data","core global object","keyboard input device","compositor output region","pointer input device","region interface","global registry object","group of input devices","create desktop-style surfaces","desktop-style metadata interface","shared memory support","a shared memory pool","sub-surface compositing","sub-surface interface to a wl_surface","an onscreen surface","touchscreen input device","destroy a buffer","The minimal object version supporting this event","","The minimal object version supporting this request","compositor releases buffer","","","","","","","","","","","","","","","","","","","","","","","destroy a buffer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","done event","The minimal object version supporting this event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","create new region","create new surface","","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","create new region","create new surface","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","introduce a new wl_data_offer","end drag-and-drop session successfully","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","initiate drag-and-drop session","","","end drag-and-drop session","drag-and-drop session motion","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","destroy data device","","given wl_surface has another role","advertise new selection","copy data to the selection","start drag-and-drop operation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","destroy data device","copy data to the selection","","","start drag-and-drop operation","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","ask action","copy action","create a new data source","drag and drop actions","","create a new data device","move action","no action","The minimal object version supporting this request","The minimal object version supporting this request","","","Returns the set containing all flags.","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","create a new data source","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","create a new data device","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","accept one of the offered mime types","notify the selected action","destroy data offer","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","the offer will no longer be used","action argument has an invalid value","action mask contains invalid values","finish request was called untimely","offer doesn’t accept this request","advertise offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","request that the data is transferred","","set the available/preferred drag-and-drop actions","notify the source-side available actions","","accept one of the offered mime types","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy data offer","","","","the offer will no longer be used","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","request that the data is transferred","set the available/preferred drag-and-drop actions","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","notify the selected action","selection was cancelled","destroy the data source","the drag-and-drop operation physically finished","the drag-and-drop operation concluded","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","action mask contains invalid values","source doesn’t accept this request","add an offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","send the data","set the available drag-and-drop actions","a target accepts an offered mime type","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the data source","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","add an offered mime type","","","set the available drag-and-drop actions","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","acknowledge object ID deletion","The minimal object version supporting this event","The minimal object version supporting this event","global error values","fatal error event","","get global registry object","implementation error in compositor","method doesn’t exist on the specified interface or …","server couldn’t find object","server is out of memory","The minimal object version supporting this request","The minimal object version supporting this request","","asynchronous roundtrip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","get global registry object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","asynchronous roundtrip","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","enter event","","key event","physical key state","keyboard mapping","keyboard mapping format","leave event","modifier and group state","no keymap; client must understand how to interpret the raw …","key is pressed","The minimal object version supporting this request","release the keyboard object","key is not pressed","repeat rate and delay","","","libxkbcommon compatible; to determine the xkb keycode, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","release the keyboard object","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","indicates this is the current mode","human-readable description of this output","sent all information about output","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","180 degree flip around a vertical axis","flip and rotate 180 degrees counter-clockwise","flip and rotate 270 degrees counter-clockwise","flip and rotate 90 degrees counter-clockwise","properties of the output","horizontal BGR","horizontal RGB","mode information","advertise available modes for the output","name of this output","no geometry","no transform","indicates this is the preferred mode","The minimal object version supporting this request","release the output object","","output scaling properties","subpixel geometry information","transform from framebuffer to output","unknown geometry","vertical BGR","vertical RGB","","180 degrees counter-clockwise","270 degrees counter-clockwise","90 degrees counter-clockwise","Returns the set containing all flags.","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","release the output object","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","axis types","axis event","axis click event","axis source types","axis source event","axis stop event","pointer button event","physical button state","continuous coordinate space","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","enter event","","","finger on a touch surface","end of a pointer event sequence","horizontal axis","leave event","pointer motion event","the button is pressed","The minimal object version supporting this request","The minimal object version supporting this request","release the pointer object","the button is not pressed","","given wl_surface has another role","set the pointer surface","vertical axis","a physical wheel rotation","a physical wheel tilt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","release the pointer object","set the pointer surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","add rectangle to region","destroy region","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","subtract rectangle from region","","add rectangle to region","","","","","","","","","","","","","","","","","","","","","destroy region","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","subtract rectangle from region","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","bind an object to the display","The minimal object version supporting this event","The minimal object version supporting this event","","announce global object","announce removal of global object","The minimal object version supporting this request","","","","","","","","","","","","bind an object to the display","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","seat capabilities changed","seat capability bitmask","The minimal object version supporting this event","The minimal object version supporting this event","wl_seat error values","","return keyboard object","return pointer object","return touch object","the seat has one or more keyboards","get_pointer, get_keyboard or get_touch called on seat …","unique identifier for this seat","the seat has pointer devices","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","release the seat object","","the seat has touch devices","","Returns the set containing all flags.","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","return keyboard object","return pointer object","return touch object","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","release the seat object","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","create a shell surface from a surface","The minimal object version supporting this request","","given wl_surface has another role","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","create a shell surface from a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","bottom edge","bottom and left edges","bottom and right edges","suggest resize","no preference, apply default policy","switch output mode to the smallest mode that can fit the …","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","no upscaling, center on output and add black borders to …","different method to set the surface fullscreen","do not set keyboard focus","left edge","start an interactive move","no edge","ping client","respond to a ping event","popup interaction is done","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","edge values for resizing","start an interactive resize","right edge","scale, preserve the surface’s aspect ratio and center on …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","top edge","top and left edges","top and right edges","details of transient behaviour","","start an interactive move","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","respond to a ping event","Removes the specified flags in-place.","Removes the specified flags in-place.","start an interactive resize","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","set surface class","make the surface a fullscreen surface","make the surface a maximized surface","make the surface a popup surface","set surface title","make the surface a toplevel surface","make the surface a transient surface","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little …","[63:0] A:B:G:R 16:16:16:16 little endian","[63:0] A:B:G:R 16:16:16:16 little endian","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little …","[63:0] A:R:G:B 16:16:16:16 little endian","[63:0] A:R:G:B 16:16:16:16 little endian","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian","[63:0] A:x:B:x:G:x:R:x 10:6:10:6:10:6:10:6 little endian","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little …","8-bit BGR format, [7:0] B:G:R 2:3:3","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian","","24-bit BGR format, [23:0] B:G:R little endian","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little …","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little …","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian","","8-bit color index format, [7:0] C","create a shm pool","The minimal object version supporting this event","wl_shm error values","","pixel formats","pixel format description","[31:0] G:R 16:16 little endian","[15:0] G:R 8:8 little endian","mmapping the file descriptor failed","buffer format is not known","invalid size or stride during pool or buffer creation","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane","2x2 subsampled Cr:Cb plane","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane","non-subsampled Cr:Cb plane","non-subsampled Cb:Cr plane","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane","2x2 subsampled Cr:Cb plane 10 bits per channel","2x2 subsampled Cr:Cb plane 12 bits per channel","2x2 subsampled Cr:Cb plane 16 bits per channel","2x1 subsampled Cr:Cb plane, 10 bit per channel","","","[15:0] R little endian","[7:0] R","The minimal object version supporting this request","","[31:0] R:G 16:16 little endian","[15:0] R:G 8:8 little endian","8-bit RGB format, [7:0] R:G:B 3:3:2","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian","","24-bit RGB format, [23:0] R:G:B little endian","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little …","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little …","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little …","Y followed by U then V, 10:10:10. Non-linear modifier only","[23:0] Cr:Cb:Y 8:8:8 little endian","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little …","","[63:0] X3:X2:Y3:0:Cr0:0:Y2:0:X1:X0:Y1:0:Cb0:0:Y0:0 …","[63:0] X3:X2:Y3:Cr0:Y2:X1:X0:Y1:Cb0:Y0 …","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little …","[63:0] x:B:G:R 16:16:16:16 little endian","[63:0] x:B:G:R 16:16:16:16 little endian","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","[63:0] x:R:G:B 16:16:16:16 little endian","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian","","[63:0] X:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] X:Cr:Y:Cb 16:16:16:16 little endian","[31:0] X:Cr:Y:Cb 2:10:10:10 little endian","[31:0] X:Y:Cb:Cr 8:8:8:8 little endian","[63:0] A3:A2:Y3:0:Cr0:0:Y2:0:A1:A0:Y1:0:Cb0:0:Y0:0 …","[63:0] A3:A2:Y3:Cr0:Y2:A1:A0:Y1:Cb0:Y0 …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 10:6:10:6:10:6:10:6 little …","[63:0] Cr0:0:Y1:0:Cb0:0:Y0:0 12:4:12:4:12:4:12:4 little …","[63:0] Cr0:Y1:Cb0:Y0 16:16:16:16 little endian per 2 Y …","[31:0] A:Cr:Y:Cb 2:10:10:10 little endian","[63:0] A:0:Cr:0:Y:0:Cb:0 12:4:12:4:12:4:12:4 little endian","[63:0] A:Cr:Y:Cb 16:16:16:16 little endian","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) …","","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) …","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) …","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little …","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) …","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) …","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","create a shm pool","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","create a buffer from the pool","destroy the pool","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","change the size of the pool mapping","","","","","","","","","","","","","","","","","","","","","","create a buffer from the pool","destroy the pool","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","change the size of the pool mapping","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","the to-be sub-surface is invalid","unbind from the subcompositor interface","","","give a surface the role sub-surface","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unbind from the subcompositor interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","give a surface the role sub-surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","wl_surface is not a sibling or the parent","remove sub-surface interface","","","restack the sub-surface","restack the sub-surface","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","","","","","","","","","","","","","","","","","","","","","","","","","","","","remove sub-surface interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","restack the sub-surface","restack the sub-surface","set sub-surface to desynchronized mode","reposition the sub-surface","set sub-surface to synchronized mode","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","set the surface contents","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","delete surface","The minimal object version supporting this event","The minimal object version supporting this event","surface enters an output","wl_surface error values","","request a frame throttling hint","buffer offset is invalid","buffer scale value is invalid","buffer size is invalid","buffer transform value is invalid","surface leaves an output","set the surface contents offset","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","","","","","","","","","","","","","set the surface contents","","","","","","","","","","","","","","","","commit pending surface state","mark part of the surface damaged","mark part of the surface damaged using buffer coordinates","delete surface","","","","","","","","request a frame throttling hint","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","set the surface contents offset","","","sets the buffer scaling factor","sets the buffer transformation","set input region","set opaque region","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","touch session cancelled","touch down event and beginning of a touch sequence","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","end of touch frame event","update of touch point coordinates","update orientation of touch point","The minimal object version supporting this request","release the touch object","","update shape of touch point","end of a touch event sequence","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","release the touch object","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","Bindings to the client library <code>libwayland-client.so</code>","Various types and functions that are used by both the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,46,0,0,0,0,4,0,46,0,46,0,0,0,0,46,0,26,26,155,0,155,0,37,4,45,46,26,0,26,46,0,0,0,0,0,0,45,4,46,46,0,4,37,26,1,47,39,11,30,16,1,35,44,8,26,22,23,12,24,37,45,13,10,5,46,47,39,11,30,16,1,35,44,8,26,22,23,12,24,37,45,13,10,5,46,47,155,8,5,10,1,39,11,30,16,1,35,44,8,26,22,23,12,24,37,45,13,10,5,46,47,39,11,30,16,1,35,44,8,26,22,23,12,24,37,45,13,10,5,46,47,4,5,1,16,155,8,11,1,22,23,12,24,13,10,5,11,1,22,23,12,24,13,10,5,22,23,23,23,1,10,23,13,10,22,13,30,30,30,16,35,1,37,13,10,5,1,1,5,156,156,0,23,39,11,30,16,1,35,44,8,26,26,22,22,23,12,24,37,37,45,13,10,5,46,47,39,11,30,16,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,35,44,8,26,22,23,12,24,37,45,13,13,10,5,5,46,47,1,10,23,155,8,155,8,39,35,44,23,44,44,0,1,24,24,47,39,11,30,16,1,35,44,8,26,22,23,12,24,37,45,13,10,5,46,47,39,11,30,16,1,35,44,8,26,22,23,12,24,37,45,13,10,5,46,47,1,35,44,8,26,22,23,37,45,5,39,11,30,16,1,35,44,8,26,22,23,12,24,37,45,13,10,5,46,47,155,8,1,155,8,1,24,22,47,11,35,24,156,24,22,22,155,8,47,30,0,23,10,16,39,11,1,35,35,155,8,30,0,11,1,22,23,12,24,13,10,5,26,22,37,30,39,11,30,16,1,35,44,8,26,22,23,12,24,37,45,13,10,5,46,47,39,11,30,16,1,35,44,8,26,22,23,12,24,37,45,13,10,5,46,47,39,11,30,16,1,35,44,8,26,22,23,12,24,37,45,13,10,5,46,47,1,1,39,157,158,157,158,157,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,0,0,0,81,0,0,80,81,67,80,81,67,80,81,67,80,81,67,80,81,67,67,80,81,67,67,67,67,67,80,81,67,80,81,67,67,80,81,80,81,80,81,67,80,81,67,80,81,67,80,81,67,80,81,80,81,80,81,80,81,67,80,81,67,80,81,67,80,81,67,0,0,0,84,0,0,0,0,83,84,60,83,84,60,83,84,60,83,84,60,83,84,60,60,83,84,60,60,60,60,83,84,60,83,84,60,60,83,84,83,84,83,84,60,83,84,60,83,84,60,83,84,60,83,84,83,84,83,84,83,84,60,83,84,60,83,84,60,83,84,60,0,0,159,85,85,0,0,0,0,0,85,86,52,85,86,52,85,86,52,85,86,52,85,86,52,52,85,86,52,52,52,52,52,52,85,86,52,85,86,52,52,85,86,85,86,85,86,52,85,86,52,85,86,52,85,86,52,85,86,85,86,85,86,85,86,52,85,86,52,85,86,52,85,86,52,0,0,88,88,0,0,0,0,0,0,88,0,0,88,88,0,0,0,87,0,89,88,87,87,0,89,87,88,55,89,87,88,55,87,88,55,89,87,88,55,89,87,88,55,55,87,88,89,55,89,55,89,55,55,89,87,88,55,89,87,88,55,55,89,87,88,87,88,89,87,88,55,89,87,88,55,89,87,55,89,87,88,55,87,88,87,88,87,88,55,55,87,88,55,89,55,89,89,87,88,55,89,87,88,55,89,87,88,55,0,0,0,160,161,162,161,161,163,161,163,161,163,164,164,164,165,164,165,90,90,91,0,0,91,90,90,0,0,0,0,90,90,91,92,56,90,91,92,56,91,92,56,90,90,90,90,90,90,90,90,91,92,56,90,91,92,56,56,91,92,90,56,90,56,90,90,90,56,90,90,90,56,90,56,90,90,90,90,90,90,91,92,56,90,91,92,56,56,90,90,90,90,90,91,92,91,92,56,90,90,90,90,90,91,92,56,90,91,92,56,90,91,92,56,90,91,92,56,91,92,90,91,92,90,90,91,92,90,90,90,91,92,90,90,90,90,56,90,90,90,91,92,56,90,91,92,56,90,91,92,56,90,0,0,166,96,97,96,0,0,0,0,0,96,98,98,98,98,97,0,0,0,0,0,96,0,96,97,0,61,98,96,97,61,98,96,97,61,96,97,61,98,96,97,61,98,96,97,61,61,96,97,98,61,98,61,61,98,61,61,61,98,96,97,61,98,96,97,61,61,98,96,97,96,97,98,96,97,61,98,96,97,61,98,96,97,61,98,96,97,61,96,97,96,97,96,97,61,61,96,97,98,61,98,98,96,97,61,98,96,97,61,98,96,97,61,0,0,0,167,168,169,170,171,172,171,170,172,100,100,99,100,100,0,0,0,0,0,0,0,0,101,101,99,0,0,0,0,100,99,100,0,101,99,100,66,101,99,100,66,99,100,66,101,99,100,66,101,99,100,66,66,99,100,101,66,101,66,66,101,66,66,101,99,100,66,101,99,100,66,66,101,99,100,99,100,101,99,100,66,101,99,100,66,101,99,100,66,101,99,100,66,99,100,99,100,66,99,100,66,99,100,101,66,101,101,99,100,66,101,99,100,66,101,99,100,66,0,0,0,173,174,175,174,176,177,103,0,0,0,103,0,102,104,104,104,104,0,0,0,102,0,104,102,103,31,104,102,103,31,102,103,31,104,102,103,31,104,102,103,31,31,102,103,104,31,104,31,104,31,31,104,102,103,31,104,102,103,31,31,104,102,103,102,103,31,104,102,103,31,104,102,103,31,104,102,103,31,104,102,103,31,102,103,102,103,102,103,102,103,31,104,31,104,104,102,103,31,104,102,103,31,104,102,103,31,0,0,0,178,179,178,178,0,0,0,0,0,0,106,0,106,0,106,0,106,106,107,108,0,105,108,106,0,0,107,107,108,105,106,68,107,108,105,106,68,105,106,68,107,108,105,106,68,107,108,105,106,68,68,105,106,107,108,68,107,108,68,107,108,68,68,107,108,105,106,68,107,108,105,106,68,68,107,108,105,106,105,106,107,108,105,106,68,107,108,105,106,68,107,108,105,106,68,107,108,105,106,68,105,106,105,106,105,106,68,105,106,107,108,68,107,108,107,108,105,106,68,107,108,105,106,68,107,108,105,106,68,0,0,0,180,181,181,182,183,184,182,182,182,180,184,185,183,182,181,183,184,185,183,109,111,111,0,0,0,0,0,0,0,113,113,113,113,111,112,112,0,111,111,112,113,109,0,110,0,111,0,0,112,112,112,0,113,113,113,109,112,113,109,110,111,65,112,113,109,110,111,65,110,111,65,109,109,109,109,109,109,109,112,113,109,110,111,65,112,113,109,110,111,65,65,110,111,112,113,109,65,112,113,109,65,109,109,109,109,109,112,113,109,65,109,65,109,112,113,109,109,109,109,109,110,111,65,112,113,109,110,111,65,65,109,109,109,109,112,113,109,110,111,110,111,109,109,109,109,112,113,109,110,111,65,112,113,109,110,111,65,112,113,109,110,111,65,112,113,109,110,111,65,110,111,109,110,111,109,109,110,111,109,65,109,109,110,111,109,109,109,112,113,109,65,112,113,109,109,112,113,109,110,111,65,112,113,109,110,111,65,112,113,109,110,111,65,109,0,0,0,186,187,188,188,189,189,190,189,189,188,189,189,188,189,189,0,115,115,0,115,115,115,0,119,0,0,0,0,0,0,0,0,0,115,0,0,119,115,118,115,115,117,0,0,114,117,0,116,114,118,119,119,0,116,117,118,119,114,115,49,116,117,118,119,114,115,49,114,115,49,116,117,118,119,114,115,49,116,117,118,119,114,115,49,49,114,115,116,117,118,119,49,116,117,118,119,49,116,117,118,119,49,49,116,117,118,119,114,115,49,116,117,118,119,114,115,49,49,116,117,118,119,114,115,114,115,116,117,118,119,114,115,49,116,117,118,119,114,115,49,116,117,118,119,114,115,49,116,117,118,119,114,115,49,114,115,114,115,114,115,49,49,114,115,116,117,118,119,49,116,117,118,119,116,117,118,119,114,115,49,116,117,118,119,114,115,49,116,117,118,119,114,115,49,0,0,0,191,192,193,194,195,193,196,197,195,195,196,197,196,198,196,198,198,195,191,192,191,199,199,199,199,121,121,0,0,0,0,0,121,0,48,121,122,48,121,122,48,121,122,48,121,122,48,121,122,48,48,121,122,48,48,48,48,48,121,122,48,121,122,48,48,121,122,121,122,121,122,48,121,122,48,121,122,48,121,122,48,121,122,121,122,121,122,121,122,48,48,121,122,48,121,122,48,121,122,48,0,0,200,201,200,201,200,201,200,201,123,0,0,0,124,124,0,0,0,123,124,58,123,124,58,123,124,58,58,123,124,58,123,124,58,58,123,124,58,58,58,58,123,124,58,123,124,58,58,123,124,123,124,123,124,58,123,124,58,123,124,58,123,124,58,123,124,123,124,123,124,123,124,58,123,124,58,123,124,58,123,124,58,0,0,0,202,202,203,202,204,204,127,0,0,0,0,0,126,126,126,125,128,127,125,0,0,0,0,126,0,125,0,125,125,128,126,127,64,125,128,126,127,64,126,127,64,125,125,125,125,125,125,125,125,128,126,127,64,125,128,126,127,64,64,126,127,125,128,64,125,128,64,125,125,125,125,125,125,128,64,125,64,125,125,125,125,125,125,128,126,127,64,125,128,126,127,64,64,125,125,125,125,125,128,126,127,126,127,64,64,64,125,125,125,125,125,128,126,127,64,125,128,126,127,64,125,128,126,127,64,125,128,126,127,64,126,127,125,126,127,125,125,126,127,125,64,125,125,126,127,125,125,125,125,128,64,125,128,125,125,128,126,127,64,125,128,126,127,64,125,128,126,127,64,125,0,0,0,205,206,0,0,129,0,0,131,0,131,129,130,63,131,129,130,63,129,130,63,131,129,130,63,131,129,130,63,63,129,130,131,63,131,63,131,63,63,131,129,130,63,131,129,130,63,63,131,129,130,129,130,63,131,129,130,63,131,129,130,63,131,129,130,63,131,129,130,63,129,130,129,130,129,130,129,130,131,63,131,131,129,130,63,131,129,130,63,131,129,130,63,0,0,207,132,132,132,135,136,136,0,0,0,0,136,0,133,132,134,132,135,134,135,0,0,0,0,0,0,0,0,0,0,0,0,134,132,136,134,134,134,134,134,134,134,132,132,132,0,0,57,132,133,132,133,136,134,135,57,132,133,136,134,135,57,134,135,57,132,133,132,133,132,133,132,133,132,133,132,133,132,133,132,133,136,134,135,57,132,133,136,134,135,57,57,134,135,132,133,136,57,132,133,136,57,132,133,132,133,132,133,132,133,132,133,132,133,136,57,132,133,57,132,133,132,132,132,132,132,133,133,133,133,133,136,134,135,57,132,133,136,134,135,57,57,132,133,132,133,132,133,132,133,132,133,136,134,135,134,135,132,133,132,133,132,133,132,133,132,133,136,134,135,57,132,133,136,134,135,57,132,133,136,134,135,57,132,133,136,134,135,57,134,135,132,133,134,135,132,133,132,133,134,135,132,133,57,132,133,57,132,133,57,57,57,57,57,57,57,134,135,132,133,132,133,132,133,132,133,136,57,132,133,136,132,133,132,133,136,134,135,57,132,133,136,134,135,57,132,133,136,134,135,57,132,133,0,0,0,208,208,209,208,210,211,212,213,214,214,214,215,212,213,216,211,213,217,216,211,213,218,212,213,212,213,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,137,0,0,0,0,138,140,140,139,139,139,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,0,0,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,0,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,139,140,137,138,59,139,140,137,138,59,137,138,59,139,140,137,138,59,139,140,137,138,59,59,137,138,139,140,59,139,140,59,59,139,140,59,59,139,140,137,138,59,139,140,137,138,59,59,139,140,137,138,137,138,139,140,137,138,59,139,140,137,138,59,139,140,137,138,59,139,140,137,138,59,137,138,137,138,137,138,137,138,139,140,59,139,140,139,140,137,138,59,139,140,137,138,59,139,140,137,138,59,0,0,0,219,220,220,141,141,0,0,0,0,0,141,0,141,142,54,141,142,54,141,142,54,141,142,54,141,142,54,54,141,142,54,54,54,54,54,54,141,142,54,141,142,54,54,141,142,141,142,141,142,54,141,142,54,141,142,54,141,142,54,141,142,141,142,141,142,54,141,142,54,141,142,54,141,142,54,141,142,54,0,0,221,221,221,222,221,221,145,143,0,0,143,0,0,0,0,145,143,144,62,145,143,144,62,143,144,62,145,143,144,62,145,143,144,62,62,143,144,145,62,145,62,62,145,62,62,145,143,144,62,145,143,144,62,62,145,143,144,143,144,62,145,143,144,62,145,143,144,62,145,143,144,62,145,143,144,62,143,144,143,144,143,144,143,144,145,62,145,145,143,144,62,145,143,144,62,145,143,144,62,0,0,223,223,148,146,0,0,146,146,0,0,0,0,0,0,0,146,146,146,0,148,146,147,51,148,146,147,51,146,147,51,148,146,147,51,148,146,147,51,51,146,147,148,51,148,51,51,148,51,51,148,146,147,51,148,146,147,51,51,148,146,147,146,147,148,146,147,51,148,146,147,51,148,146,147,51,148,146,147,51,146,147,146,147,146,147,51,51,51,51,51,146,147,148,51,148,148,146,147,51,148,146,147,51,148,146,147,51,0,0,224,225,226,226,149,149,149,149,149,0,0,150,0,0,149,151,151,151,151,150,149,0,0,0,0,0,0,0,0,0,0,0,0,149,149,149,149,0,151,149,150,53,151,149,150,53,149,150,53,53,151,149,150,53,151,149,150,53,53,149,150,151,53,151,53,53,53,53,53,151,53,53,151,149,150,53,53,151,149,150,53,53,151,149,150,149,150,151,149,150,53,151,149,150,53,151,149,150,53,151,149,150,53,149,150,149,150,53,149,150,53,53,53,53,149,150,151,53,151,151,149,150,53,151,149,150,53,151,149,150,53,0,0,0,227,228,229,230,231,232,233,234,235,230,231,229,230,231,236,229,230,231,236,153,153,0,0,0,0,0,0,0,0,153,153,153,0,152,0,153,153,0,152,153,50,152,153,50,152,153,50,152,153,50,152,153,50,50,152,153,50,50,50,50,152,153,50,152,153,50,50,152,153,152,153,152,153,50,152,153,50,152,153,50,152,153,50,152,153,152,153,152,153,50,152,153,50,152,153,50,152,153,50,152,153,50,0,0,0,237,238,239,240,241,240,240,241,237,238,237,237,238,239,237,239,237,239,0,0,15,242,243,15,242,243,15,242,243,15,242,243,15,242,243,15,242,243,15,242,243,15,242,243,15,242,243,15,242,243,15,242,243,15,242,243,0,0,0,72,244,245,14,246,244,72,245,14,246,244,72,245,14,246,244,72,245,14,246,244,72,244,14,14,72,245,14,246,244,72,72,72,245,14,246,244,72,245,14,246,244,72,245,14,246,244,72,72,245,14,246,72,246,14,14,72,245,244,245,14,246,244,72,245,14,246,244,72,245,14,246,244,72,245,72,14,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],[[1,[5]]]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[7],[[8,7]],[5,[[1,[5]]]],[[[10,[9,[0,[[2,[[1,[9,[0,[[2,[[1,[9,[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[9,[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[9,[0,[[2,[[1,[9,[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[9,[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],[11,[3]]]],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],12],[[13,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[],14],[[[1,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]],15],[16],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[11,11],[[[1,[4]]],[[1,[4]]]],[22,22],[23,23],[12,12],[24,24],[[[13,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],[[13,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]]],[[[10,[[0,[25,4,[2,[[1,[[0,[25,4,[2,[[1,[[0,[25,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[25,4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[25,4,[2,[[1,[[0,[25,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[25,4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]],[[10,[[0,[25,4,[2,[[1,[[0,[25,4,[2,[[1,[[0,[25,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[25,4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[25,4,[2,[[1,[[0,[25,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[25,4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]]],[5,5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[27,[23,26]]]],[[[29,[28]]],[[27,[23,26]]]],[23,30],[[[1,[5]]],[[27,[[1,[4]],[1,[5]]]]]],[[[10,[5]]],[[27,[[10,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]],[10,[5]]]]]],[23,[[1,[31]]]],[[[13,[4]]],4],[[[10,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],[[13,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]]],[22,32],[[[13,[[0,[[29,[[1,[[0,[[29,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[29,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],[2,[[1,[[0,[[29,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],4]]]]],[[0,[[29,[[1,[[0,[[29,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[29,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],[2,[[1,[[0,[[29,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[3,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],[2,[[1,[[0,[[29,[1]],[3,[1]],[2,[1]],4]]]]]],4]]]]]],4]]]],[[30,6,33],[[34,[18]]]],[[30,6,33],[[34,[18]]]],[30,23],[16],[35],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],36],[[37,37],36],[[[13,[[0,[38,4]]]],[13,[[0,[38,4]]]]],36],[[[10,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]],[10,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[38,4,[2,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[38,4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]],36],[[5,5],36],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],36],[[],36],[[],36],[[18,39]],[[18,39]],0,[23,34],[[39,40],[[27,[41]]]],[[[11,[42]],40],[[27,[41]]]],[[30,40],43],[[16,40],43],[[[1,[4]],40],43],[[35,40],[[27,[41]]]],[[44,40],43],[[8,40],[[27,[41]]]],[[26,40],43],[[26,40],[[27,[41]]]],[[22,40],43],[[22,40],[[27,[41]]]],[[23,40],43],[[12,40],43],[[24,40],43],[[37,40],[[27,[41]]]],[[37,40],43],[[45,40],43],[[[13,[[0,[4,42]]]],40],43],[[[10,[[0,[42,[2,[[1,[[0,[42,[2,[[1,[[0,[42,[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[42,[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[42,[2,[[1,[[0,[42,[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[42,[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],40],43],[[5,40],43],[[46,40],43],[[47,40],43],[[]],[[]],[[]],[[]],[48,[[1,[48]]]],[49,[[1,[49]]]],[50,[[1,[50]]]],[51,[[1,[51]]]],[31,[[1,[31]]]],[52,[[1,[52]]]],[53,[[1,[53]]]],[54,[[1,[54]]]],[55,[[1,[55]]]],[56,[[1,[56]]]],[57,[[1,[57]]]],[58,[[1,[58]]]],[59,[[1,[59]]]],[[]],[60,[[1,[60]]]],[61,[[1,[61]]]],[5,[[1,[5]]]],[62,[[1,[62]]]],[63,[[1,[63]]]],[64,[[1,[64]]]],[65,[[1,[65]]]],[66,[[1,[66]]]],[67,[[1,[67]]]],[68,[[1,[68]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],[[13,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]]],[[]],[[]],[[[1,[5]]],5],[[]],[[]],[[]],[15,[[1,[[3,[[1,[[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[0,[4,[2,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]],[0,[4,[2,[[1,[[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[0,[4,[2,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[0,[4,[2,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[3,[1]],[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]]],[15,[[10,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]]],[69,[[27,[23,26]]]],[70,27],[70,[[27,[8]]]],[[71,18,72],27],[[71,18,72],[[27,[8]]]],[39,[[21,[6]]]],[35,21],[[44,18],[[21,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]]]]]],[23,69],[[44,18],[[21,[[10,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]]]]]],[[44,18],[[1,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]]],0,[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],18],[[24,18],[[27,[[10,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]],37]]]],[[24,18,18],[[27,[[10,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]],37]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[18,70],[[8,18],70],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],36],[[],36],[8,36],[[[1,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]]]]]]]]]]]]]]]]]]],36],[24,77],0,0,[33,11],[[],35],[[[13,[31]]],24],[[10,39]],[[[13,[31]],33],24],0,0,[[],17],[8,17],0,[30,[[21,[16]]]],0,[23,[[21,[22]]]],[[[10,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],9]],[0,[[2,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],9]],[0,[[2,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],9]],[0,[[2,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],9]],[0,[[2,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],9]],[0,[[2,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[4,[2,[1]],[3,[1]],9]],[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],33]],[16,34],[39,39],[[11,39]],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]],[21,[18]]],[[21,[[10,[[0,[4,[2,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]],[3,[[1,[[0,[4,[2,[[1,[[0,[4,2,3]]]]]],[3,[[1,[[0,[4,2,3]]]]]]]]]]]]]]]]]]]],[[35,7]],[[35,7]],[[],18],[8,18],[[30,6,33],[[34,[18]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],78],[30,12],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],35],[[[1,[[0,[[2,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],[3,[[1,[[0,[[2,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],[3,[[1,[[0,[[2,[1]],[3,[1]],4]]]]]],4]]]]]],4]]]]],18],[6,39],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[80,7]],[[81,7]],[67,[[1,[67]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[67,67],[[]],[67],[[67,67],36],[[],36],[[80,40],43],[[81,40],43],[[67,40],43],[[]],[[]],[[[1,[67]]],67],[[]],[70,[[27,[80]]]],[70,[[27,[81]]]],[[82,18,72],[[27,[80]]]],[[82,18,72],[[27,[81]]]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[80,18],70],[[81,18],70],[80,36],[81,36],[80,17],[81,17],[80,18],[81,18],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[83,7]],[[84,7]],[60,[[1,[60]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[60,60],[[]],[[60,60],36],[[],36],[[83,40],43],[[84,40],43],[[60,40],43],[[]],[[]],[[]],[[[1,[60]]],60],[70,[[27,[83]]]],[70,[[27,[84]]]],[[82,18,72],[[27,[83]]]],[[82,18,72],[[27,[84]]]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[83,18],70],[[84,18],70],[83,36],[84,36],[83,17],[84,17],[83,18],[84,18],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[85,7]],[[86,7]],[52,[[1,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[52,52],[[]],[52,[[10,[48]]]],[52,[[10,[53]]]],[[52,52],36],[[],36],[[85,40],43],[[86,40],43],[[52,40],43],[[]],[[]],[[]],[[[1,[52]]],52],[70,[[27,[85]]]],[70,[[27,[86]]]],[[82,18,72],[[27,[85]]]],[[82,18,72],[[27,[86]]]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[85,18],70],[[86,18],70],[85,36],[86,36],[85,17],[86,17],[85,18],[86,18],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[87,7]],[[88,7]],[55,[[1,[55]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[89,89],[55,55],[[]],[[]],[[89,89],36],[[55,55],36],[[],36],[[89,40],43],[[87,40],43],[[88,40],43],[[55,40],43],[[]],[[]],[[]],[[[1,[55]]],55],[[]],[18,[[21,[89]]]],[70,[[27,[87]]]],[70,[[27,[88]]]],[[82,18,72],[[27,[87]]]],[[82,18,72],[[27,[88]]]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[87,18],70],[[88,18],70],[87,36],[88,36],[87,17],[88,17],[55],[[55,[21,[66]],18]],[87,18],[88,18],[[55,[21,[66]],53,[21,[53]],18]],[[]],[[]],[89,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],90],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[91,7]],[[92,7]],[56,[[1,[56]]]],[[90,90],90],[[90,90]],[[90,90],90],[[90,90]],[90,18],[[90,90],90],[[90,90]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[90,90],[56,56],[[]],[[]],[[90,90],93],[90,90],[[90,90],36],[56,[[10,[66]]]],[[90,90],90],[[],90],[[90,90],36],[[56,56],36],[[],36],[[],36],[[90,94]],[[90,40],43],[[90,40],43],[[90,40],43],[[90,40],43],[[90,40],43],[[91,40],43],[[92,40],43],[[56,40],43],[[]],[[]],[[]],[[[1,[56]]],56],[[]],[18,[[21,[90]]]],[18,90],[18,90],[94,90],[18,[[21,[90]]]],[70,[[27,[91]]]],[70,[[27,[92]]]],[[82,18,72],[[27,[91]]]],[[82,18,72],[[27,[92]]]],[[56,64],[[10,[55]]]],[[90,95]],[[90,90]],[[90,90],90],[[90,90],36],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[91,18],70],[[92,18],70],[90,36],[91,36],[92,36],[90,36],[90,90],[91,17],[92,17],[[90,90],[[21,[93]]]],[[90,90]],[[90,90,36]],[91,18],[92,18],[[90,90],90],[[90,90]],[[90,90],90],[[]],[[]],[90,18],[[90,90]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],[[90,90],90],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[61,18,[21,[78]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[96,7]],[[97,7]],[61,[[1,[61]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[98,98],[61,61],[[]],[[]],[61],[[98,98],36],[[61,61],36],[[],36],[61],[[98,40],43],[[96,40],43],[[97,40],43],[[61,40],43],[[]],[[]],[[]],[[[1,[61]]],61],[[]],[18,[[21,[98]]]],[70,[[27,[96]]]],[70,[[27,[97]]]],[[82,18,72],[[27,[96]]]],[[82,18,72],[[27,[97]]]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[96,18],70],[[97,18],70],[96,36],[97,36],[96,17],[97,17],[[61,78,69]],[[61,90,90]],[96,18],[97,18],[[]],[[]],[98,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[99,7]],[[100,7]],[66,[[1,[66]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[101,101],[66,66],[[]],[[]],[66],[[101,101],36],[[66,66],36],[[],36],[[101,40],43],[[99,40],43],[[100,40],43],[[66,40],43],[[]],[[]],[[]],[[[1,[66]]],66],[[]],[18,[[21,[101]]]],[70,[[27,[99]]]],[70,[[27,[100]]]],[[82,18,72],[[27,[99]]]],[[82,18,72],[[27,[100]]]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[99,18],70],[[100,18],70],[99,36],[100,36],[[66,78]],[99,17],[100,17],[[66,90]],[99,18],[100,18],[[]],[[]],[101,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[102,7]],[[103,7]],[31,[[1,[31]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[104,104],[31,31],[[]],[[]],[[104,104],36],[[31,31],36],[[],36],[[104,40],43],[[102,40],43],[[103,40],43],[[31,40],43],[[]],[[]],[[]],[[]],[[[1,[31]]],31],[18,[[21,[104]]]],[70,[[27,[102]]]],[70,[[27,[103]]]],[[82,18,72],[[27,[102]]]],[[82,18,72],[[27,[103]]]],[31,[[10,[58]]]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[102,18],70],[[103,18],70],[102,36],[103,36],[102,17],[103,17],[102,18],[103,18],[31,[[10,[60]]]],[[]],[[]],[104,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[105,7]],[[106,7]],[68,[[1,[68]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[107,107],[108,108],[68,68],[[]],[[]],[[]],[[107,107],36],[[108,108],36],[[68,68],36],[[],36],[[107,40],43],[[108,40],43],[[105,40],43],[[106,40],43],[[68,40],43],[[]],[[]],[[]],[[]],[[[1,[68]]],68],[[]],[18,[[21,[107]]]],[18,[[21,[108]]]],[70,[[27,[105]]]],[70,[[27,[106]]]],[[82,18,72],[[27,[105]]]],[[82,18,72],[[27,[106]]]],[[]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[105,18],70],[[106,18],70],[105,36],[106,36],[105,17],[106,17],[68],[105,18],[106,18],[[]],[[]],[[]],[107,18],[108,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],109],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[110,7]],[[111,7]],[65,[[1,[65]]]],[[109,109],109],[[109,109]],[[109,109],109],[[109,109]],[109,18],[[109,109],109],[[109,109]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[112,112],[113,113],[109,109],[65,65],[[]],[[]],[[]],[[]],[[109,109],93],[109,109],[[109,109],36],[[109,109],109],[[],109],[[112,112],36],[[113,113],36],[[109,109],36],[[65,65],36],[[],36],[[],36],[[109,94]],[[112,40],43],[[113,40],43],[[109,40],43],[[109,40],43],[[109,40],43],[[109,40],43],[[109,40],43],[[110,40],43],[[111,40],43],[[65,40],43],[[]],[[]],[[]],[[]],[[]],[[[1,[65]]],65],[[]],[18,[[21,[109]]]],[18,109],[18,109],[94,109],[18,[[21,[112]]]],[18,[[21,[113]]]],[18,[[21,[109]]]],[70,[[27,[110]]]],[70,[[27,[111]]]],[[82,18,72],[[27,[110]]]],[[82,18,72],[[27,[111]]]],[[109,95]],[[109,109]],[[109,109],109],[[109,109],36],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[110,18],70],[[111,18],70],[109,36],[110,36],[111,36],[109,36],[109,109],[110,17],[111,17],[[109,109],[[21,[93]]]],[65],[[109,109]],[[109,109,36]],[110,18],[111,18],[[109,109],109],[[109,109]],[[109,109],109],[[]],[[]],[[]],[[]],[112,18],[113,18],[109,18],[[109,109]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[109,109],109],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[114,7]],[[115,7]],[49,[[1,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[116,116],[117,117],[118,118],[119,119],[49,49],[[]],[[]],[[]],[[]],[[]],[[116,116],36],[[117,117],36],[[118,118],36],[[119,119],36],[[49,49],36],[[],36],[[116,40],43],[[117,40],43],[[118,40],43],[[119,40],43],[[114,40],43],[[115,40],43],[[49,40],43],[[]],[[]],[[]],[[]],[[]],[[]],[[[1,[49]]],49],[[]],[18,[[21,[116]]]],[18,[[21,[117]]]],[18,[[21,[118]]]],[18,[[21,[119]]]],[70,[[27,[114]]]],[70,[[27,[115]]]],[[82,18,72],[[27,[114]]]],[[82,18,72],[[27,[115]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[114,18],70],[[115,18],70],[114,36],[115,36],[114,17],[115,17],[49],[[49,18,[21,[53]],120,120]],[114,18],[115,18],[[]],[[]],[[]],[[]],[[]],[116,18],[117,18],[118,18],[119,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[48,120,120,120,120]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[121,7]],[[122,7]],[48,[[1,[48]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[48,48],[[]],[48],[[48,48],36],[[],36],[[121,40],43],[[122,40],43],[[48,40],43],[[]],[[]],[[[1,[48]]],48],[[]],[70,[[27,[121]]]],[70,[[27,[122]]]],[[82,18,72],[[27,[121]]]],[[82,18,72],[[27,[122]]]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[121,18],70],[[122,18],70],[121,36],[122,36],[121,17],[122,17],[121,18],[122,18],[[48,120,120,120,120]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[123,7]],[[124,7]],[58,[[1,[58]]]],[[58,18,18],[[10,[[0,[4,[3,[[1,[[0,[4,[3,[[1,[[0,[4,[3,[1]],[2,[1]]]]]]]],[2,[[1,[[0,[4,[3,[1]],[2,[1]]]]]]]]]]]]]],[2,[[1,[[0,[4,[3,[[1,[[0,[4,[3,[1]],[2,[1]]]]]]]],[2,[[1,[[0,[4,[3,[1]],[2,[1]]]]]]]]]]]]]]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[58,58],[[]],[[58,58],36],[[],36],[[123,40],43],[[124,40],43],[[58,40],43],[[]],[[]],[[[1,[58]]],58],[[]],[70,[[27,[123]]]],[70,[[27,[124]]]],[[82,18,72],[[27,[123]]]],[[82,18,72],[[27,[124]]]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[123,18],70],[[124,18],70],[123,36],[124,36],[123,17],[124,17],[123,18],[124,18],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],125],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[126,7]],[[127,7]],[64,[[1,[64]]]],[[125,125],125],[[125,125]],[[125,125],125],[[125,125]],[125,18],[[125,125],125],[[125,125]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[125,125],[128,128],[64,64],[[]],[[]],[[]],[[125,125],93],[125,125],[[125,125],36],[[125,125],125],[[],125],[[125,125],36],[[128,128],36],[[64,64],36],[[],36],[[],36],[[125,94]],[[125,40],43],[[125,40],43],[[125,40],43],[[125,40],43],[[125,40],43],[[128,40],43],[[126,40],43],[[127,40],43],[[64,40],43],[[]],[[]],[[]],[[]],[[[1,[64]]],64],[[]],[18,[[21,[125]]]],[18,125],[18,125],[94,125],[18,[[21,[125]]]],[18,[[21,[128]]]],[70,[[27,[126]]]],[70,[[27,[127]]]],[[82,18,72],[[27,[126]]]],[[82,18,72],[[27,[127]]]],[64,[[10,[68]]]],[64,[[10,[49]]]],[64,[[10,[50]]]],[[125,95]],[[125,125]],[[125,125],125],[[125,125],36],[[]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[126,18],70],[[127,18],70],[125,36],[126,36],[127,36],[125,36],[125,125],[126,17],[127,17],[[125,125],[[21,[93]]]],[64],[[125,125]],[[125,125,36]],[126,18],[127,18],[[125,125],125],[[125,125]],[[125,125],125],[[]],[[]],[[]],[125,18],[128,18],[[125,125]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],[[],79],[[125,125],125],0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[129,7]],[[130,7]],[63,[[1,[63]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[131,131],[63,63],[[]],[[]],[[131,131],36],[[63,63],36],[[],36],[[131,40],43],[[129,40],43],[[130,40],43],[[63,40],43],[[]],[[]],[[]],[[[1,[63]]],63],[[]],[18,[[21,[131]]]],[70,[[27,[129]]]],[70,[[27,[130]]]],[[82,18,72],[[27,[129]]]],[[82,18,72],[[27,[130]]]],[[63,53],[[10,[57]]]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[129,18],70],[[130,18],70],[129,36],[130,36],[129,17],[130,17],[129,18],[130,18],[[]],[[]],[131,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[57,64,18]],[[],132],[[],133],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[134,7]],[[135,7]],[57,[[1,[57]]]],[[132,132],132],[[133,133],133],[[132,132]],[[133,133]],[[132,132],132],[[133,133],133],[[132,132]],[[133,133]],[132,18],[133,18],[[132,132],132],[[133,133],133],[[132,132]],[[133,133]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[132,132],[133,133],[136,136],[57,57],[[]],[[]],[[]],[[]],[[132,132],93],[[133,133],93],[132,132],[133,133],[[132,132],36],[[133,133],36],[[132,132],132],[[133,133],133],[[],132],[[],133],[[132,132],36],[[133,133],36],[[136,136],36],[[57,57],36],[[],36],[[],36],[[],36],[[132,94]],[[133,94]],[[132,40],43],[[132,40],43],[[132,40],43],[[132,40],43],[[132,40],43],[[133,40],43],[[133,40],43],[[133,40],43],[[133,40],43],[[133,40],43],[[136,40],43],[[134,40],43],[[135,40],43],[[57,40],43],[[]],[[]],[[]],[[]],[[]],[[[1,[57]]],57],[[]],[18,[[21,[132]]]],[18,[[21,[133]]]],[18,132],[18,133],[18,132],[18,133],[94,132],[94,133],[18,[[21,[132]]]],[18,[[21,[133]]]],[18,[[21,[136]]]],[70,[[27,[134]]]],[70,[[27,[135]]]],[[82,18,72],[[27,[134]]]],[[82,18,72],[[27,[135]]]],[[132,95]],[[133,95]],[[132,132]],[[133,133]],[[132,132],132],[[133,133],133],[[132,132],36],[[133,133],36],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[134,18],70],[[135,18],70],[132,36],[133,36],[134,36],[135,36],[132,36],[133,36],[132,132],[133,133],[134,17],[135,17],[[132,132],[[21,[93]]]],[[133,133],[[21,[93]]]],[[57,18]],[[132,132]],[[133,133]],[[57,64,18,132]],[[132,132,36]],[[133,133,36]],[[57,78]],[[57,136,18,[21,[65]]]],[[57,[21,[65]]]],[[57,64,18,53,120,120,133]],[[57,78]],[57],[[57,53,120,120,133]],[134,18],[135,18],[[132,132],132],[[133,133],133],[[132,132]],[[133,133]],[[132,132],132],[[133,133],133],[[]],[[]],[[]],[[]],[132,18],[133,18],[136,18],[[132,132]],[[133,133]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[132,132],132],[[133,133],133],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[137,7]],[[138,7]],[59,[[1,[59]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[139,139],[140,140],[59,59],[[]],[[]],[[]],[[59,69,120],[[10,[54]]]],[[139,139],36],[[140,140],36],[[59,59],36],[[],36],[[139,40],43],[[140,40],43],[[137,40],43],[[138,40],43],[[59,40],43],[[]],[[]],[[]],[[]],[[]],[[[1,[59]]],59],[18,[[21,[139]]]],[18,[[21,[140]]]],[70,[[27,[137]]]],[70,[[27,[138]]]],[[82,18,72],[[27,[137]]]],[[82,18,72],[[27,[138]]]],[[]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[137,18],70],[[138,18],70],[137,36],[138,36],[137,17],[138,17],[137,18],[138,18],[[]],[[]],[[]],[139,18],[140,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[141,7]],[[142,7]],[54,[[1,[54]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[54,54],[[]],[[54,120,120,120,120,140],[[10,[67]]]],[54],[[54,54],36],[[],36],[[141,40],43],[[142,40],43],[[54,40],43],[[]],[[]],[[[1,[54]]],54],[[]],[70,[[27,[141]]]],[70,[[27,[142]]]],[[82,18,72],[[27,[141]]]],[[82,18,72],[[27,[142]]]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[141,18],70],[[142,18],70],[141,36],[142,36],[141,17],[142,17],[[54,120]],[141,18],[142,18],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[143,7]],[[144,7]],[62,[[1,[62]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[145,145],[62,62],[[]],[[]],[62],[[145,145],36],[[62,62],36],[[],36],[[145,40],43],[[143,40],43],[[144,40],43],[[62,40],43],[[]],[[]],[[]],[[[1,[62]]],62],[[]],[18,[[21,[145]]]],[70,[[27,[143]]]],[70,[[27,[144]]]],[[82,18,72],[[27,[143]]]],[[82,18,72],[[27,[144]]]],[[62,53,53],[[10,[51]]]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[143,18],70],[[144,18],70],[143,36],[144,36],[143,17],[144,17],[143,18],[144,18],[[]],[[]],[145,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[146,7]],[[147,7]],[51,[[1,[51]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[148,148],[51,51],[[]],[[]],[51],[[148,148],36],[[51,51],36],[[],36],[[148,40],43],[[146,40],43],[[147,40],43],[[51,40],43],[[]],[[]],[[]],[[]],[[[1,[51]]],51],[18,[[21,[148]]]],[70,[[27,[146]]]],[70,[[27,[147]]]],[[82,18,72],[[27,[146]]]],[[82,18,72],[[27,[147]]]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[146,18],70],[[147,18],70],[146,36],[147,36],[146,17],[147,17],[[51,53]],[[51,53]],[51],[[51,120,120]],[51],[146,18],[147,18],[[]],[[]],[148,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[149,7]],[[150,7]],[53,[[1,[53]]]],[[53,[21,[67]],120,120]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[151,151],[53,53],[[]],[[]],[53],[[53,120,120,120,120]],[[53,120,120,120,120]],[53],[[151,151],36],[[53,53],36],[[],36],[[151,40],43],[[149,40],43],[[150,40],43],[[53,40],43],[53,[[10,[60]]]],[[]],[[]],[[]],[[]],[[[1,[53]]],53],[18,[[21,[151]]]],[70,[[27,[149]]]],[70,[[27,[150]]]],[[82,18,72],[[27,[149]]]],[[82,18,72],[[27,[150]]]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[149,18],70],[[150,18],70],[149,36],[150,36],[[53,120,120]],[149,17],[150,17],[[53,120]],[[53,113]],[[53,[21,[48]]]],[[53,[21,[48]]]],[149,18],[150,18],[[]],[[]],[151,18],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[152,7]],[[153,7]],[50,[[1,[50]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],14],[[17,18,19],[[21,[[20,[19]]]]]],[[17,18,19],[[21,[[20,[19]]]]]],[50,50],[[]],[[50,50],36],[[],36],[[152,40],43],[[153,40],43],[[50,40],43],[[]],[[]],[[]],[[[1,[50]]],50],[70,[[27,[152]]]],[70,[[27,[153]]]],[[82,18,72],[[27,[152]]]],[[82,18,72],[[27,[153]]]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[152,18],70],[[153,18],70],[152,36],[153,36],[152,17],[153,17],[50],[152,18],[153,18],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[75,[73]]],[[75,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],0,0,0,0,0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[74,[73]]],[[74,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],[[[76,[73]]],[[76,[6,73]]]],0,0,0,0,0,0,0,0,0,0,0,[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,[154,120],[120,120],0,[120,154],[120,120],0,0,0,0],"c":[],"p":[[3,"Proxy"],[8,"AsRef"],[8,"From"],[8,"Interface"],[3,"AnonymousObject"],[8,"Any"],[8,"FnOnce"],[4,"NoMessage"],[8,"Sync"],[3,"Main"],[3,"Filter"],[3,"QueueToken"],[3,"Attached"],[3,"wl_interface"],[4,"wl_proxy"],[3,"ReadEventsGuard"],[15,"u16"],[15,"u32"],[8,"ObjectMetadata"],[3,"Object"],[4,"Option"],[3,"ProtocolError"],[3,"Display"],[3,"GlobalManager"],[8,"Clone"],[4,"ConnectError"],[4,"Result"],[3,"OsString"],[8,"Into"],[3,"EventQueue"],[3,"WlDisplay"],[15,"str"],[8,"FnMut"],[6,"Result"],[3,"UserData"],[15,"bool"],[4,"GlobalError"],[8,"PartialEq"],[3,"DispatchData"],[3,"Formatter"],[3,"Error"],[8,"Debug"],[6,"Result"],[3,"ProxyMap"],[4,"GlobalEvent"],[4,"Argument"],[3,"RawEvent"],[3,"WlRegion"],[3,"WlPointer"],[3,"WlTouch"],[3,"WlSubsurface"],[3,"WlCompositor"],[3,"WlSurface"],[3,"WlShmPool"],[3,"WlDataDevice"],[3,"WlDataDeviceManager"],[3,"WlShellSurface"],[3,"WlRegistry"],[3,"WlShm"],[3,"WlCallback"],[3,"WlDataOffer"],[3,"WlSubcompositor"],[3,"WlShell"],[3,"WlSeat"],[3,"WlOutput"],[3,"WlDataSource"],[3,"WlBuffer"],[3,"WlKeyboard"],[6,"RawFd"],[3,"Message"],[4,"c_void"],[19,"wl_argument"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"Vec"],[3,"String"],[3,"TypeId"],[4,"Request"],[4,"Event"],[6,"c_void"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"DndAction"],[4,"Request"],[4,"Event"],[4,"Ordering"],[8,"IntoIterator"],[8,"Hasher"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"KeymapFormat"],[4,"KeyState"],[3,"Mode"],[4,"Request"],[4,"Event"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[15,"i32"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"Capability"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"Resize"],[3,"Transient"],[4,"Request"],[4,"Event"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[15,"f64"],[8,"MessageGroup"],[8,"GlobalImplementor"],[13,"New"],[13,"Removed"],[13,"Done"],[13,"DataOffer"],[13,"Enter"],[13,"Selection"],[13,"Motion"],[13,"StartDrag"],[13,"SetSelection"],[13,"GetDataDevice"],[13,"Action"],[13,"Offer"],[13,"SourceActions"],[13,"SetActions"],[13,"Receive"],[13,"Accept"],[13,"Action"],[13,"Send"],[13,"Target"],[13,"SetActions"],[13,"Offer"],[13,"Error"],[13,"DeleteId"],[13,"RepeatInfo"],[13,"Keymap"],[13,"Modifiers"],[13,"Key"],[13,"Enter"],[13,"Leave"],[13,"Description"],[13,"Scale"],[13,"Mode"],[13,"Geometry"],[13,"Name"],[13,"Axis"],[13,"AxisStop"],[13,"AxisDiscrete"],[13,"AxisSource"],[13,"Button"],[13,"Enter"],[13,"Leave"],[13,"Motion"],[13,"SetCursor"],[13,"Add"],[13,"Subtract"],[13,"Global"],[13,"GlobalRemove"],[13,"Bind"],[13,"Capabilities"],[13,"Name"],[13,"GetShellSurface"],[13,"Configure"],[13,"Ping"],[13,"SetClass"],[13,"Resize"],[13,"SetTransient"],[13,"SetPopup"],[13,"SetFullscreen"],[13,"SetMaximized"],[13,"Move"],[13,"Pong"],[13,"SetTitle"],[13,"Format"],[13,"CreatePool"],[13,"CreateBuffer"],[13,"Resize"],[13,"GetSubsurface"],[13,"PlaceAbove"],[13,"PlaceBelow"],[13,"SetPosition"],[13,"Enter"],[13,"Leave"],[13,"Attach"],[13,"Damage"],[13,"DamageBuffer"],[13,"SetOpaqueRegion"],[13,"SetInputRegion"],[13,"SetBufferScale"],[13,"SetBufferTransform"],[13,"Offset"],[13,"Down"],[13,"Up"],[13,"Motion"],[13,"Shape"],[13,"Orientation"],[4,"wl_display"],[4,"wl_event_queue"],[3,"wl_array"],[3,"wl_message"],[3,"wl_list"]]},\
"wayland_commons":{"doc":"Common definitions for wayland","t":"QISQISEQDSKLLLLLKKLALALLLLKLKLLLLLKLKLALKLKLOALLLLLLLLAAFFDDLLLLLLLLLLLLLLLLLLLLLLLLDDIRLLLLKMMLLLLLMLLLLLLLMLLLMLLLLMLLLLLLLLMLLDRRDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLLLEENNNNNNNNNNNDDEENNNNNNNNNNMLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Event","Interface","MESSAGES","Map","MessageGroup","NAME","NoMessage","Request","ThreadGuard","VERSION","as_raw_c_in","as_raw_c_in","borrow","borrow","borrow_mut","borrow_mut","c_interface","child","child","debug","drop","filter","fmt","fmt","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get","get_mut","into","into","into_raw","into_raw","is_destructor","is_destructor","map","new","opcode","opcode","since","since","smallvec","socket","try_from","try_from","try_get","try_get_mut","try_into","try_into","type_id","type_id","user_data","wire","print_dispatched_message","print_send_message","DispatchData","Filter","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","from","from","get","into","into","new","reborrow","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","wrap","Object","ObjectMap","ObjectMetadata","SERVER_ID_LIMIT","borrow","borrow","borrow_mut","borrow_mut","child","childs_from_events","childs_from_requests","client_insert_new","clone","clone_into","default","event_child","events","find","fmt","fmt","from","from","from_interface","insert_at","interface","into","into","is_interface","meta","new","placeholder","remove","request_child","requests","server_insert_new","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","with","with_all","BufferedSocket","MAX_BYTES_OUT","MAX_FDS_OUT","Socket","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","drop","fill_incoming_buffers","flush","fmt","fmt","from","from","from_raw_fd","get_socket","into","into","into_raw_fd","into_socket","new","opt","rcv_msg","read_messages","read_one_message","send_msg","try_from","try_from","try_into","try_into","type_id","type_id","write_message","UserData","UserDataMap","borrow","borrow","borrow_mut","borrow_mut","default","drop","fmt","fmt","from","from","get","get","insert_if_missing","insert_if_missing_threadsafe","into","into","new","new","set","set_threadsafe","try_from","try_from","try_into","try_into","type_id","type_id","Argument","ArgumentType","Array","Array","BufferTooSmall","DupFdFailed","Fd","Fd","Fixed","Fixed","Int","Int","Malformed","Message","MessageDesc","MessageParseError","MessageWriteError","MissingData","MissingFD","NewId","NewId","Object","Object","Str","Str","Uint","Uint","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","destructor","dup_fd_cloexec","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","get_type","into","into","into","into","into","into","name","opcode","sender_id","signature","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write_to_buffers"],"q":[[0,"wayland_commons"],[56,"wayland_commons::debug"],[58,"wayland_commons::filter"],[84,"wayland_commons::map"],[129,"wayland_commons::socket"],[164,"wayland_commons::user_data"],[192,"wayland_commons::wire"]],"d":["Set of events associated to this interface","The description of a wayland interface","Wire representation of this MessageGroup","The wrapper type for ObjectMap allowing the mapping of …","A group of messages","Name of this interface","An empty enum representing a MessageGroup with no messages","Set of requests associated to this interface","Stores a value in a threadafe container that only lets you …","Maximum supported version of this interface","Build a C representation of this message","","","","","","Pointer to the C representation of this interface","Retrieve the child <code>Object</code> associated with this message if …","","Debugging helpers to handle <code>WAYLAND_DEBUG</code> env variable.","","Filter","","","Returns the argument unchanged.","Returns the argument unchanged.","Construct a message from its raw representation","","Construct a message of this group from its C representation","","Access the underlying value","Mutably access the underlying value","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Turn this message into its raw representation","","Whether this message is a destructor","","Wayland objects map","Create a new ThreadGuard wrapper","The opcode of this message","","The minimal object version for which this message exists","","Creates a <code>SmallVec</code> containing the arguments.","Wayland socket manipulation","","","Try to access the underlying value","Try to mutably access the underlying value","","","","","Various utilities used for other implementations","Types and routines used to manipulate arguments from the …","Print the dispatched message to stderr in a following …","Print the send message to stderr in a following format:","Holder of global dispatch-related data","An event filter","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Access the dispatch data knowing its type","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new filter from given closure","Reborrows this <code>DispatchData</code> to create a new one with the …","Send a message to this filter","","","","","","","","Wrap a mutable reference","The representation of a protocol object","A holder for the object store of a connection","A trait representing the metadata a wayland implementation …","Limit separating server-created from client-created …","","","","","Create the metadata for a child object","A function which, from an opcode, a version, and the Meta, …","A function which, from an opcode, a version, and the Meta, …","Allocate a new id for an object in the client namespace","","","","Create an optional <code>Object</code> corresponding to the possible …","Description of the events of this object","Find an object in the store","","","Returns the argument unchanged.","Returns the argument unchanged.","Create an Object corresponding to given interface and …","Insert given object for given id","Interface name of this object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Check whether this object is of given interface","Metadata associated to this object (ex: its event queue …","Create a new empty object map","Create a placeholder object that will be filled-in by the …","Remove an object from the store","Create an optional <code>Object</code> corresponding to the possible …","Description of the requests of this object","Allocate a new id for an object in the server namespace","","","","","","","","Version of this object","Mutably access an object of the map","Mutably access all objects of the map in sequence","An adapter around a raw Socket that directly handles …","Maximum number of bytes that can be sent in a single …","Maximum number of FD that can be sent in a single socket …","A wayland socket","","","","","","","Try to fill the incoming buffers of this socket, to prepare","Flush the contents of the outgoing buffer into the socket","","","Returns the argument unchanged.","Returns the argument unchanged.","","Get direct access to the underlying socket","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Retrieve ownership of the underlying Socket","Wrap a Socket into a Buffered Socket","Retrieve the current value of the requested …","Receive a single message from the socket","Read and deserialize messages from the socket","Read and deserialize a single message from the incoming …","Send a single message to the socket","","","","","","","Write a message to the outgoing buffer","A wrapper for user data, able to store any type, and …","A storage able to store several values of <code>UserData</code> of …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Attempt to access the wrapped user data","Attempt to access the wrapped user data of a given type","Insert a value in the map if it is not already there","Insert a value in the map if it is not already there","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new UserData instance","Create a new map","Sets the UserData to a given value","Sets the UserData to a given threadsafe value","","","","","","","Enum of possible argument as recognized by the wire, …","Enum of possible argument types as recognized by the wire","Vec","Vec","The buffer is too small to hold the message contents","The message contains a FD that could not be dup-ed","RawFd","RawFd","fixed point, 1/256 precision","fixed point, 1/256 precision","i32","i32","The message is malformed and cannot be parsed","A wire message","Wire metadata of a given message","Error generated when trying to deserialize a message from …","Error generated when trying to serialize a message into …","More data is needed to deserialize the message","The message references a FD but the buffer FD is empty","id of a newly created wayland object","id of a newly created wayland object","id of a wayland object","id of a wayland object","CString","CString","u32","u32","Arguments of the message","","","","","","","","","","","","","","","","","","","","","","","","","Whether this message is a destructor","Duplicate a <code>RawFd</code> and set the CLOEXEC flag on the copy","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Attempts to parse a single wayland message with the given …","Retrieve the type of a given argument instance","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Name of this message","Opcode of the message","ID of the object sending this message","Signature of the message","Minimum required version of the interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize the contents of this message into provided …"],"i":[45,0,46,46,0,45,0,45,0,45,46,2,2,10,2,10,45,46,2,0,10,0,2,10,2,10,46,2,46,2,10,10,2,10,46,2,46,2,0,10,46,2,46,2,0,0,2,10,10,10,2,10,2,10,0,0,0,0,0,0,24,23,24,23,23,23,24,23,24,23,24,24,23,23,24,23,23,24,23,24,23,24,23,24,0,0,0,0,7,27,7,27,6,7,7,27,7,7,27,7,7,27,7,27,7,27,7,27,7,7,27,7,7,27,7,27,7,7,27,7,7,27,7,27,7,27,7,27,27,0,0,0,0,30,30,32,30,32,30,32,32,30,32,30,32,30,32,30,32,30,32,32,30,30,32,32,30,30,32,30,32,30,32,32,0,0,39,38,39,38,38,39,39,38,39,38,39,38,38,38,39,38,39,38,39,39,39,38,39,38,39,38,0,0,41,21,42,42,41,21,41,21,41,21,37,0,0,0,0,37,37,41,21,41,21,41,21,41,21,14,40,41,21,14,42,37,40,41,21,14,42,37,40,41,21,14,42,37,40,41,21,14,42,37,40,0,41,21,14,40,41,21,21,14,42,42,37,37,40,41,21,14,42,37,14,21,40,41,21,14,42,37,40,14,14,40,40,40,41,21,14,42,37,21,42,37,40,41,21,14,42,37,40,41,21,14,42,37,40,41,21,14,42,37,14],"f":[0,0,0,0,0,0,0,0,0,0,[1],[[2,1]],[[]],[[]],[[]],[[]],[[],3],[[4,5,6],[[8,[[7,[6]]]]]],[[4,5,6],[[8,[[7,[6]]]]]],0,[[[10,[9]]]],0,[[2,11],12],[[[10,[[0,[13,9]]]],11],12],[[]],[[]],[14,15],[14,[[15,[2]]]],[[16,5,17],15],[[16,5,17],[[15,[2]]]],[[[10,[9]]],9],[[[10,[9]]],9],[[]],[[]],[5,14],[[2,5],14],[[],18],[2,18],0,[[],10],[[],4],[2,4],[[],5],[2,5],0,0,[[],15],[[],15],[[[10,[9]]],[[8,[9]]]],[[[10,[9]]],[[8,[9]]]],[[],15],[[],15],[[],19],[[],19],0,0,[[20,5,20,[22,[21]]]],[[20,5,18,20,[22,[21]]]],0,0,[[]],[[]],[[]],[[]],[23,23],[[]],[[24,11],12],[[[23,[13]],11],12],[[]],[[]],[24,[[8,[25]]]],[[]],[[]],[26,23],[24,24],[[23,24]],[[]],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],[25,24],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,[[[27,[6]],[7,[6]]],5],[[[7,[[0,[28,6]]]]],[[7,[[0,[28,6]]]]]],[[]],[[],[[27,[[0,[29,6]]]]]],[[[7,[6]],4],[[8,[[7,[6]]]]]],0,[[[27,[6]],5],[[8,[[7,[6]]]]]],[[[7,[[0,[6,13]]]],11],12],[[[27,[[0,[13,6]]]],11],12],[[]],[[]],[[5,6],[[7,[6]]]],[[[27,[6]],5,[7,[6]]],15],0,[[]],[[]],[[[7,[6]]],18],0,[[],[[27,[6]]]],[6,[[7,[6]]]],[[[27,[6]],5]],[[[7,[6]],4],[[8,[[7,[6]]]]]],0,[[[27,[6]],[7,[6]]],5],[[]],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],0,[[[27,[6]],5,1],15],[[[27,[6]],26]],0,0,0,0,[30,31],[[]],[[]],[[]],[[]],[30],[32,33],[32,33],[[30,11],12],[[32,11],12],[[]],[[]],[31,30],[32,30],[[]],[[]],[30,31],[32,30],[30,32],[[30,34],33],[[30,[22,[35]],[22,[31]]],33],[[32,26,26],[[33,[[15,[36,37]]]]]],[[32,26],[[15,[14,37]]]],[[30,[22,[35]],[22,[31]]],33],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],[[32,14],33],0,0,[[]],[[]],[[]],[[]],[[],38],[39],[[39,11],12],[[38,11],12],[[]],[[]],[39,8],[38,8],[[38,1],18],[[38,1],18],[[]],[[]],[[],39],[[],38],[[39,1]],[[39,1]],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[40,40],[41,41],[21,21],[14,14],[42,42],[37,37],[[]],[[]],[[]],[[]],[[]],[[]],0,[31,[[33,[31]]]],[[41,41],18],[[21,21],18],[[14,14],18],[[40,11],12],[[41,11],12],[[21,11],12],[[21,11],12],[[14,11],12],[[42,11],12],[[42,11],[[15,[43]]]],[[37,11],12],[[37,11],[[15,[43]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[5]],[22,[41]],[22,[31]]],[[15,[37]]]],[21,41],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],44],[[],44],[[],44],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[14,[22,[5]],[22,[31]]],[[15,[42]]]]],"c":[],"p":[[8,"FnOnce"],[4,"NoMessage"],[3,"wl_interface"],[15,"u16"],[15,"u32"],[8,"ObjectMetadata"],[3,"Object"],[4,"Option"],[8,"Sized"],[3,"ThreadGuard"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Message"],[4,"Result"],[6,"c_void"],[19,"wl_argument"],[15,"bool"],[3,"TypeId"],[15,"str"],[4,"Argument"],[15,"slice"],[3,"Filter"],[3,"DispatchData"],[8,"Any"],[8,"FnMut"],[3,"ObjectMap"],[8,"Clone"],[8,"Default"],[3,"Socket"],[6,"RawFd"],[3,"BufferedSocket"],[6,"Result"],[8,"GetSockOpt"],[15,"u8"],[15,"usize"],[4,"MessageParseError"],[3,"UserDataMap"],[3,"UserData"],[3,"MessageDesc"],[4,"ArgumentType"],[4,"MessageWriteError"],[3,"Error"],[3,"String"],[8,"Interface"],[8,"MessageGroup"]]},\
"wayland_protocols":{"doc":"This crate provides bindings to the official wayland …","t":"","n":["misc","presentation_time","unstable","viewporter","wlr","xdg_shell","gtk_primary_selection","server_decoration","zwp_input_method_v2","client","gtk_primary_selection_device","gtk_primary_selection_device_manager","gtk_primary_selection_offer","gtk_primary_selection_source","DataOffer","Destroy","EVT_DATA_OFFER_SINCE","EVT_SELECTION_SINCE","Event","GtkPrimarySelectionDevice","REQ_DESTROY_SINCE","REQ_SET_SELECTION_SINCE","Request","Selection","SetSelection","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","gtk_primary_selection_device_events","gtk_primary_selection_device_interface","gtk_primary_selection_device_requests","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_selection","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","id","offer","serial","source","CreateSource","Destroy","Event","GetDevice","GtkPrimarySelectionDeviceManager","REQ_CREATE_SOURCE_SINCE","REQ_DESTROY_SINCE","REQ_GET_DEVICE_SINCE","Request","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_source","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_device","gtk_primary_selection_device_manager_interface","gtk_primary_selection_device_manager_requests","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","seat","Destroy","EVT_OFFER_SINCE","Event","GtkPrimarySelectionOffer","Offer","REQ_DESTROY_SINCE","REQ_RECEIVE_SINCE","Receive","Request","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","gtk_primary_selection_offer_events","gtk_primary_selection_offer_interface","gtk_primary_selection_offer_requests","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","receive","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","mime_type","fd","mime_type","Cancelled","Destroy","EVT_CANCELLED_SINCE","EVT_SEND_SINCE","Event","GtkPrimarySelectionSource","Offer","REQ_DESTROY_SINCE","REQ_OFFER_SINCE","Request","Send","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","gtk_primary_selection_source_events","gtk_primary_selection_source_interface","gtk_primary_selection_source_requests","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","offer","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","fd","mime_type","mime_type","client","org_kde_kwin_server_decoration","org_kde_kwin_server_decoration_manager","Client","EVT_MODE_SINCE","Event","Mode","Mode","None","OrgKdeKwinServerDecoration","REQ_RELEASE_SINCE","REQ_REQUEST_MODE_SINCE","Release","Request","RequestMode","Server","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","org_kde_kwin_server_decoration_events","org_kde_kwin_server_decoration_interface","org_kde_kwin_server_decoration_requests","release","request_mode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","mode","mode","Client","Create","DefaultMode","EVT_DEFAULT_MODE_SINCE","Event","Mode","None","OrgKdeKwinServerDecorationManager","REQ_CREATE_SINCE","Request","Server","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","create","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","org_kde_kwin_server_decoration_manager_events","org_kde_kwin_server_decoration_manager_interface","org_kde_kwin_server_decoration_manager_requests","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","mode","surface","client","zwp_input_method_keyboard_grab_v2","zwp_input_method_manager_v2","zwp_input_method_v2","zwp_input_popup_surface_v2","EVT_KEYMAP_SINCE","EVT_KEY_SINCE","EVT_MODIFIERS_SINCE","EVT_REPEAT_INFO_SINCE","Event","Key","Keymap","Modifiers","REQ_RELEASE_SINCE","Release","RepeatInfo","Request","ZwpInputMethodKeyboardGrabV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_method_keyboard_grab_v2_events","zwp_input_method_keyboard_grab_v2_interface","zwp_input_method_keyboard_grab_v2_requests","delay","fd","format","group","key","mods_depressed","mods_latched","mods_locked","rate","serial","serial","size","state","time","Destroy","Event","GetInputMethod","REQ_DESTROY_SINCE","REQ_GET_INPUT_METHOD_SINCE","Request","ZwpInputMethodManagerV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_input_method","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_method_manager_v2_interface","zwp_input_method_manager_v2_requests","seat","Activate","Commit","CommitString","ContentType","Deactivate","DeleteSurroundingText","Destroy","Done","EVT_ACTIVATE_SINCE","EVT_CONTENT_TYPE_SINCE","EVT_DEACTIVATE_SINCE","EVT_DONE_SINCE","EVT_SURROUNDING_TEXT_SINCE","EVT_TEXT_CHANGE_CAUSE_SINCE","EVT_UNAVAILABLE_SINCE","Event","GetInputPopupSurface","GrabKeyboard","REQ_COMMIT_SINCE","REQ_COMMIT_STRING_SINCE","REQ_DELETE_SURROUNDING_TEXT_SINCE","REQ_DESTROY_SINCE","REQ_GET_INPUT_POPUP_SURFACE_SINCE","REQ_GRAB_KEYBOARD_SINCE","REQ_SET_PREEDIT_STRING_SINCE","Request","SetPreeditString","SurroundingText","TextChangeCause","Unavailable","ZwpInputMethodV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","commit","commit_string","delete_surrounding_text","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_input_popup_surface","grab_keyboard","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_preedit_string","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_method_v2_events","zwp_input_method_v2_interface","zwp_input_method_v2_requests","anchor","cause","cursor","hint","purpose","text","after_length","before_length","cursor_begin","cursor_end","serial","surface","text","text","Destroy","EVT_TEXT_INPUT_RECTANGLE_SINCE","Event","REQ_DESTROY_SINCE","Request","TextInputRectangle","ZwpInputPopupSurfaceV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_popup_surface_v2_events","zwp_input_popup_surface_v2_interface","zwp_input_popup_surface_v2_requests","height","width","x","y","client","wp_presentation","wp_presentation_feedback","ClockId","Destroy","EVT_CLOCK_ID_SINCE","Error","Event","Feedback","InvalidFlag","InvalidTimestamp","REQ_DESTROY_SINCE","REQ_FEEDBACK_SINCE","Request","WpPresentation","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","feedback","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wp_presentation_events","wp_presentation_interface","wp_presentation_requests","clk_id","surface","Discarded","EVT_DISCARDED_SINCE","EVT_PRESENTED_SINCE","EVT_SYNC_OUTPUT_SINCE","Event","HwClock","HwCompletion","Kind","Presented","Request","SyncOutput","Vsync","WpPresentationFeedback","ZeroCopy","all","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_raw","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","wp_presentation_feedback_events","wp_presentation_feedback_interface","flags","output","refresh","seq_hi","seq_lo","tv_nsec","tv_sec_hi","tv_sec_lo","fullscreen_shell","idle_inhibit","input_method","input_timestamps","keyboard_shortcuts_inhibit","linux_dmabuf","linux_explicit_synchronization","pointer_constraints","pointer_gestures","primary_selection","relative_pointer","tablet","text_input","xdg_decoration","xdg_foreign","xdg_output","xdg_shell","xwayland_keyboard_grab","v1","client","zwp_fullscreen_shell_mode_feedback_v1","zwp_fullscreen_shell_v1","EVT_MODE_FAILED_SINCE","EVT_MODE_SUCCESSFUL_SINCE","EVT_PRESENT_CANCELLED_SINCE","Event","ModeFailed","ModeSuccessful","PresentCancelled","Request","ZwpFullscreenShellModeFeedbackV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_fullscreen_shell_mode_feedback_v1_events","zwp_fullscreen_shell_mode_feedback_v1_interface","ArbitraryModes","Capability","Capability","Center","CursorPlane","Default","EVT_CAPABILITY_SINCE","Error","Event","InvalidMethod","PresentMethod","PresentSurface","PresentSurfaceForMode","REQ_PRESENT_SURFACE_FOR_MODE_SINCE","REQ_PRESENT_SURFACE_SINCE","REQ_RELEASE_SINCE","Release","Request","Role","Stretch","Zoom","ZoomCrop","ZwpFullscreenShellV1","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","present_surface","present_surface_for_mode","release","since","since","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","zwp_fullscreen_shell_v1_events","zwp_fullscreen_shell_v1_interface","zwp_fullscreen_shell_v1_requests","capability","framerate","method","output","output","surface","surface","v1","client","zwp_idle_inhibit_manager_v1","zwp_idle_inhibitor_v1","CreateInhibitor","Destroy","Event","REQ_CREATE_INHIBITOR_SINCE","REQ_DESTROY_SINCE","Request","ZwpIdleInhibitManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_inhibitor","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_idle_inhibit_manager_v1_interface","zwp_idle_inhibit_manager_v1_requests","surface","Destroy","Event","REQ_DESTROY_SINCE","Request","ZwpIdleInhibitorV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_idle_inhibitor_v1_interface","zwp_idle_inhibitor_v1_requests","v1","client","zwp_input_method_context_v1","zwp_input_method_v1","zwp_input_panel_surface_v1","zwp_input_panel_v1","CommitState","CommitString","ContentType","CursorPosition","DeleteSurroundingText","Destroy","EVT_COMMIT_STATE_SINCE","EVT_CONTENT_TYPE_SINCE","EVT_INVOKE_ACTION_SINCE","EVT_PREFERRED_LANGUAGE_SINCE","EVT_RESET_SINCE","EVT_SURROUNDING_TEXT_SINCE","Event","GrabKeyboard","InvokeAction","Key","Keysym","Language","Modifiers","ModifiersMap","PreeditCursor","PreeditString","PreeditStyling","PreferredLanguage","REQ_COMMIT_STRING_SINCE","REQ_CURSOR_POSITION_SINCE","REQ_DELETE_SURROUNDING_TEXT_SINCE","REQ_DESTROY_SINCE","REQ_GRAB_KEYBOARD_SINCE","REQ_KEYSYM_SINCE","REQ_KEY_SINCE","REQ_LANGUAGE_SINCE","REQ_MODIFIERS_MAP_SINCE","REQ_MODIFIERS_SINCE","REQ_PREEDIT_CURSOR_SINCE","REQ_PREEDIT_STRING_SINCE","REQ_PREEDIT_STYLING_SINCE","REQ_TEXT_DIRECTION_SINCE","Request","Reset","SurroundingText","TextDirection","ZwpInputMethodContextV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","commit_string","cursor_position","delete_surrounding_text","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","grab_keyboard","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","key","keysym","language","modifiers","modifiers_map","opcode","opcode","preedit_cursor","preedit_string","preedit_styling","since","since","text_direction","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_method_context_v1_events","zwp_input_method_context_v1_interface","zwp_input_method_context_v1_requests","anchor","button","cursor","hint","index","language","purpose","serial","text","anchor","commit","direction","group","index","index","index","index","key","language","length","length","map","modifiers","mods_depressed","mods_latched","mods_locked","serial","serial","serial","serial","serial","serial","serial","state","state","style","sym","text","text","time","time","Activate","Deactivate","EVT_ACTIVATE_SINCE","EVT_DEACTIVATE_SINCE","Event","Request","ZwpInputMethodV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_method_v1_events","zwp_input_method_v1_interface","context","id","CenterBottom","Event","Position","REQ_SET_OVERLAY_PANEL_SINCE","REQ_SET_TOPLEVEL_SINCE","Request","SetOverlayPanel","SetToplevel","ZwpInputPanelSurfaceV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_overlay_panel","set_toplevel","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_input_panel_surface_v1_interface","zwp_input_panel_surface_v1_requests","output","position","Event","GetInputPanelSurface","REQ_GET_INPUT_PANEL_SURFACE_SINCE","Request","ZwpInputPanelV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_input_panel_surface","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_panel_v1_interface","zwp_input_panel_v1_requests","surface","v1","client","zwp_input_timestamps_manager_v1","zwp_input_timestamps_v1","Destroy","Event","GetKeyboardTimestamps","GetPointerTimestamps","GetTouchTimestamps","REQ_DESTROY_SINCE","REQ_GET_KEYBOARD_TIMESTAMPS_SINCE","REQ_GET_POINTER_TIMESTAMPS_SINCE","REQ_GET_TOUCH_TIMESTAMPS_SINCE","Request","ZwpInputTimestampsManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_keyboard_timestamps","get_pointer_timestamps","get_touch_timestamps","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_timestamps_manager_v1_interface","zwp_input_timestamps_manager_v1_requests","keyboard","pointer","touch","Destroy","EVT_TIMESTAMP_SINCE","Event","REQ_DESTROY_SINCE","Request","Timestamp","ZwpInputTimestampsV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_input_timestamps_v1_events","zwp_input_timestamps_v1_interface","zwp_input_timestamps_v1_requests","tv_nsec","tv_sec_hi","tv_sec_lo","v1","client","zwp_keyboard_shortcuts_inhibit_manager_v1","zwp_keyboard_shortcuts_inhibitor_v1","AlreadyInhibited","Destroy","Error","Event","InhibitShortcuts","REQ_DESTROY_SINCE","REQ_INHIBIT_SHORTCUTS_SINCE","Request","ZwpKeyboardShortcutsInhibitManagerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","inhibit_shortcuts","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_keyboard_shortcuts_inhibit_manager_v1_interface","zwp_keyboard_shortcuts_inhibit_manager_v1_requests","seat","surface","Active","Destroy","EVT_ACTIVE_SINCE","EVT_INACTIVE_SINCE","Event","Inactive","REQ_DESTROY_SINCE","Request","ZwpKeyboardShortcutsInhibitorV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_keyboard_shortcuts_inhibitor_v1_events","zwp_keyboard_shortcuts_inhibitor_v1_interface","zwp_keyboard_shortcuts_inhibitor_v1_requests","v1","client","zwp_linux_buffer_params_v1","zwp_linux_dmabuf_v1","Add","AlreadyUsed","BottomFirst","Create","CreateImmed","Created","Destroy","EVT_CREATED_SINCE","EVT_FAILED_SINCE","Error","Event","Failed","Flags","Incomplete","Interlaced","InvalidDimensions","InvalidFormat","InvalidWlBuffer","OutOfBounds","PlaneIdx","PlaneSet","REQ_ADD_SINCE","REQ_CREATE_IMMED_SINCE","REQ_CREATE_SINCE","REQ_DESTROY_SINCE","Request","YInvert","ZwpLinuxBufferParamsV1","add","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","create","create_immed","destroy","difference","empty","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","zwp_linux_buffer_params_v1_events","zwp_linux_buffer_params_v1_interface","zwp_linux_buffer_params_v1_requests","buffer","fd","flags","flags","format","format","height","height","modifier_hi","modifier_lo","offset","plane_idx","stride","width","width","CreateParams","Destroy","EVT_FORMAT_SINCE","EVT_MODIFIER_SINCE","Event","Format","Modifier","REQ_CREATE_PARAMS_SINCE","REQ_DESTROY_SINCE","Request","ZwpLinuxDmabufV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_params","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_linux_dmabuf_v1_events","zwp_linux_dmabuf_v1_interface","zwp_linux_dmabuf_v1_requests","format","format","modifier_hi","modifier_lo","v1","client","zwp_linux_buffer_release_v1","zwp_linux_explicit_synchronization_v1","zwp_linux_surface_synchronization_v1","EVT_FENCED_RELEASE_SINCE","EVT_IMMEDIATE_RELEASE_SINCE","Event","FencedRelease","ImmediateRelease","Request","ZwpLinuxBufferReleaseV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_linux_buffer_release_v1_events","zwp_linux_buffer_release_v1_interface","fence","Destroy","Error","Event","GetSynchronization","REQ_DESTROY_SINCE","REQ_GET_SYNCHRONIZATION_SINCE","Request","SynchronizationExists","ZwpLinuxExplicitSynchronizationV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_synchronization","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_linux_explicit_synchronization_v1_interface","zwp_linux_explicit_synchronization_v1_requests","surface","Destroy","DuplicateFence","DuplicateRelease","Error","Event","GetRelease","InvalidFence","NoBuffer","NoSurface","REQ_DESTROY_SINCE","REQ_GET_RELEASE_SINCE","REQ_SET_ACQUIRE_FENCE_SINCE","Request","SetAcquireFence","UnsupportedBuffer","ZwpLinuxSurfaceSynchronizationV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_release","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_acquire_fence","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_linux_surface_synchronization_v1_interface","zwp_linux_surface_synchronization_v1_requests","fd","v1","client","zwp_confined_pointer_v1","zwp_locked_pointer_v1","zwp_pointer_constraints_v1","Confined","Destroy","EVT_CONFINED_SINCE","EVT_UNCONFINED_SINCE","Event","REQ_DESTROY_SINCE","REQ_SET_REGION_SINCE","Request","SetRegion","Unconfined","ZwpConfinedPointerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_region","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_confined_pointer_v1_events","zwp_confined_pointer_v1_interface","zwp_confined_pointer_v1_requests","region","Destroy","EVT_LOCKED_SINCE","EVT_UNLOCKED_SINCE","Event","Locked","REQ_DESTROY_SINCE","REQ_SET_CURSOR_POSITION_HINT_SINCE","REQ_SET_REGION_SINCE","Request","SetCursorPositionHint","SetRegion","Unlocked","ZwpLockedPointerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_cursor_position_hint","set_region","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_locked_pointer_v1_events","zwp_locked_pointer_v1_interface","zwp_locked_pointer_v1_requests","region","surface_x","surface_y","AlreadyConstrained","ConfinePointer","Destroy","Error","Event","Lifetime","LockPointer","Oneshot","Persistent","REQ_CONFINE_POINTER_SINCE","REQ_DESTROY_SINCE","REQ_LOCK_POINTER_SINCE","Request","ZwpPointerConstraintsV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","confine_pointer","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","lock_pointer","opcode","opcode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zwp_pointer_constraints_v1_interface","zwp_pointer_constraints_v1_requests","lifetime","lifetime","pointer","pointer","region","region","surface","surface","v1","client","zwp_pointer_gesture_pinch_v1","zwp_pointer_gesture_swipe_v1","zwp_pointer_gestures_v1","Begin","Destroy","EVT_BEGIN_SINCE","EVT_END_SINCE","EVT_UPDATE_SINCE","End","Event","REQ_DESTROY_SINCE","Request","Update","ZwpPointerGesturePinchV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_pointer_gesture_pinch_v1_events","zwp_pointer_gesture_pinch_v1_interface","zwp_pointer_gesture_pinch_v1_requests","cancelled","dx","dy","fingers","rotation","scale","serial","serial","surface","time","time","time","Begin","Destroy","EVT_BEGIN_SINCE","EVT_END_SINCE","EVT_UPDATE_SINCE","End","Event","REQ_DESTROY_SINCE","Request","Update","ZwpPointerGestureSwipeV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_pointer_gesture_swipe_v1_events","zwp_pointer_gesture_swipe_v1_interface","zwp_pointer_gesture_swipe_v1_requests","cancelled","dx","dy","fingers","serial","serial","surface","time","time","time","Event","GetPinchGesture","GetSwipeGesture","REQ_GET_PINCH_GESTURE_SINCE","REQ_GET_SWIPE_GESTURE_SINCE","REQ_RELEASE_SINCE","Release","Request","ZwpPointerGesturesV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_pinch_gesture","get_swipe_gesture","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","release","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_pointer_gestures_v1_interface","zwp_pointer_gestures_v1_requests","pointer","pointer","v1","client","zwp_primary_selection_device_manager_v1","zwp_primary_selection_device_v1","zwp_primary_selection_offer_v1","zwp_primary_selection_source_v1","CreateSource","Destroy","Event","GetDevice","REQ_CREATE_SOURCE_SINCE","REQ_DESTROY_SINCE","REQ_GET_DEVICE_SINCE","Request","ZwpPrimarySelectionDeviceManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_source","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_device","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_primary_selection_device_manager_v1_interface","zwp_primary_selection_device_manager_v1_requests","seat","DataOffer","Destroy","EVT_DATA_OFFER_SINCE","EVT_SELECTION_SINCE","Event","REQ_DESTROY_SINCE","REQ_SET_SELECTION_SINCE","Request","Selection","SetSelection","ZwpPrimarySelectionDeviceV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_selection","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_primary_selection_device_v1_events","zwp_primary_selection_device_v1_interface","zwp_primary_selection_device_v1_requests","id","offer","serial","source","Destroy","EVT_OFFER_SINCE","Event","Offer","REQ_DESTROY_SINCE","REQ_RECEIVE_SINCE","Receive","Request","ZwpPrimarySelectionOfferV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","receive","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_primary_selection_offer_v1_events","zwp_primary_selection_offer_v1_interface","zwp_primary_selection_offer_v1_requests","mime_type","fd","mime_type","Cancelled","Destroy","EVT_CANCELLED_SINCE","EVT_SEND_SINCE","Event","Offer","REQ_DESTROY_SINCE","REQ_OFFER_SINCE","Request","Send","ZwpPrimarySelectionSourceV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","offer","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_primary_selection_source_v1_events","zwp_primary_selection_source_v1_interface","zwp_primary_selection_source_v1_requests","fd","mime_type","mime_type","v1","client","zwp_relative_pointer_manager_v1","zwp_relative_pointer_v1","Destroy","Event","GetRelativePointer","REQ_DESTROY_SINCE","REQ_GET_RELATIVE_POINTER_SINCE","Request","ZwpRelativePointerManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_relative_pointer","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_relative_pointer_manager_v1_interface","zwp_relative_pointer_manager_v1_requests","pointer","Destroy","EVT_RELATIVE_MOTION_SINCE","Event","REQ_DESTROY_SINCE","RelativeMotion","Request","ZwpRelativePointerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_relative_pointer_v1_events","zwp_relative_pointer_v1_interface","zwp_relative_pointer_v1_requests","dx","dx_unaccel","dy","dy_unaccel","utime_hi","utime_lo","v1","v2","client","zwp_tablet_manager_v1","zwp_tablet_seat_v1","zwp_tablet_tool_v1","zwp_tablet_v1","Destroy","Event","GetTabletSeat","REQ_DESTROY_SINCE","REQ_GET_TABLET_SEAT_SINCE","Request","ZwpTabletManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_tablet_seat","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_manager_v1_interface","zwp_tablet_manager_v1_requests","seat","Destroy","EVT_TABLET_ADDED_SINCE","EVT_TOOL_ADDED_SINCE","Event","REQ_DESTROY_SINCE","Request","TabletAdded","ToolAdded","ZwpTabletSeatV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_seat_v1_events","zwp_tablet_seat_v1_interface","zwp_tablet_seat_v1_requests","id","id","Airbrush","Brush","Button","ButtonState","Capability","Capability","Destroy","Distance","Distance","Done","Down","EVT_BUTTON_SINCE","EVT_CAPABILITY_SINCE","EVT_DISTANCE_SINCE","EVT_DONE_SINCE","EVT_DOWN_SINCE","EVT_FRAME_SINCE","EVT_HARDWARE_ID_WACOM_SINCE","EVT_HARDWARE_SERIAL_SINCE","EVT_MOTION_SINCE","EVT_PRESSURE_SINCE","EVT_PROXIMITY_IN_SINCE","EVT_PROXIMITY_OUT_SINCE","EVT_REMOVED_SINCE","EVT_ROTATION_SINCE","EVT_SLIDER_SINCE","EVT_TILT_SINCE","EVT_TYPE_SINCE","EVT_UP_SINCE","EVT_WHEEL_SINCE","Eraser","Error","Event","Finger","Frame","HardwareIdWacom","HardwareSerial","Lens","Motion","Mouse","Pen","Pencil","Pressed","Pressure","Pressure","ProximityIn","ProximityOut","REQ_DESTROY_SINCE","REQ_SET_CURSOR_SINCE","Released","Removed","Request","Role","Rotation","Rotation","SetCursor","Slider","Slider","Tilt","Tilt","Type","Type","Up","Wheel","Wheel","ZwpTabletToolV1","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","destroy","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_cursor","since","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","zwp_tablet_tool_v1_events","zwp_tablet_tool_v1_interface","zwp_tablet_tool_v1_requests","button","capability","clicks","degrees","degrees","distance","hardware_id_hi","hardware_id_lo","hardware_serial_hi","hardware_serial_lo","position","pressure","serial","serial","serial","state","surface","tablet","tilt_x","tilt_y","time","tool_type","x","y","hotspot_x","hotspot_y","serial","surface","Destroy","Done","EVT_DONE_SINCE","EVT_ID_SINCE","EVT_NAME_SINCE","EVT_PATH_SINCE","EVT_REMOVED_SINCE","Event","Id","Name","Path","REQ_DESTROY_SINCE","Removed","Request","ZwpTabletV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_v1_events","zwp_tablet_v1_interface","zwp_tablet_v1_requests","name","path","pid","vid","client","zwp_tablet_manager_v2","zwp_tablet_pad_group_v2","zwp_tablet_pad_ring_v2","zwp_tablet_pad_strip_v2","zwp_tablet_pad_v2","zwp_tablet_seat_v2","zwp_tablet_tool_v2","zwp_tablet_v2","Destroy","Event","GetTabletSeat","REQ_DESTROY_SINCE","REQ_GET_TABLET_SEAT_SINCE","Request","ZwpTabletManagerV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_tablet_seat","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_manager_v2_interface","zwp_tablet_manager_v2_requests","seat","Buttons","Destroy","Done","EVT_BUTTONS_SINCE","EVT_DONE_SINCE","EVT_MODES_SINCE","EVT_MODE_SWITCH_SINCE","EVT_RING_SINCE","EVT_STRIP_SINCE","Event","ModeSwitch","Modes","REQ_DESTROY_SINCE","Request","Ring","Strip","ZwpTabletPadGroupV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_pad_group_v2_events","zwp_tablet_pad_group_v2_interface","zwp_tablet_pad_group_v2_requests","buttons","mode","modes","ring","serial","strip","time","Angle","Destroy","EVT_ANGLE_SINCE","EVT_FRAME_SINCE","EVT_SOURCE_SINCE","EVT_STOP_SINCE","Event","Finger","Frame","REQ_DESTROY_SINCE","REQ_SET_FEEDBACK_SINCE","Request","SetFeedback","Source","Source","Stop","ZwpTabletPadRingV2","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_feedback","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_tablet_pad_ring_v2_events","zwp_tablet_pad_ring_v2_interface","zwp_tablet_pad_ring_v2_requests","degrees","source","time","description","serial","Destroy","EVT_FRAME_SINCE","EVT_POSITION_SINCE","EVT_SOURCE_SINCE","EVT_STOP_SINCE","Event","Finger","Frame","Position","REQ_DESTROY_SINCE","REQ_SET_FEEDBACK_SINCE","Request","SetFeedback","Source","Source","Stop","ZwpTabletPadStripV2","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_feedback","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_tablet_pad_strip_v2_events","zwp_tablet_pad_strip_v2_interface","zwp_tablet_pad_strip_v2_requests","position","source","time","description","serial","Button","ButtonState","Buttons","Destroy","Done","EVT_BUTTONS_SINCE","EVT_BUTTON_SINCE","EVT_DONE_SINCE","EVT_ENTER_SINCE","EVT_GROUP_SINCE","EVT_LEAVE_SINCE","EVT_PATH_SINCE","EVT_REMOVED_SINCE","Enter","Event","Group","Leave","Path","Pressed","REQ_DESTROY_SINCE","REQ_SET_FEEDBACK_SINCE","Released","Removed","Request","SetFeedback","ZwpTabletPadV2","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_feedback","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwp_tablet_pad_v2_events","zwp_tablet_pad_v2_interface","zwp_tablet_pad_v2_requests","button","buttons","pad_group","path","serial","serial","state","surface","surface","tablet","time","button","description","serial","Destroy","EVT_PAD_ADDED_SINCE","EVT_TABLET_ADDED_SINCE","EVT_TOOL_ADDED_SINCE","Event","PadAdded","REQ_DESTROY_SINCE","Request","TabletAdded","ToolAdded","ZwpTabletSeatV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_seat_v2_events","zwp_tablet_seat_v2_interface","zwp_tablet_seat_v2_requests","id","id","id","Airbrush","Brush","Button","ButtonState","Capability","Capability","Destroy","Distance","Distance","Done","Down","EVT_BUTTON_SINCE","EVT_CAPABILITY_SINCE","EVT_DISTANCE_SINCE","EVT_DONE_SINCE","EVT_DOWN_SINCE","EVT_FRAME_SINCE","EVT_HARDWARE_ID_WACOM_SINCE","EVT_HARDWARE_SERIAL_SINCE","EVT_MOTION_SINCE","EVT_PRESSURE_SINCE","EVT_PROXIMITY_IN_SINCE","EVT_PROXIMITY_OUT_SINCE","EVT_REMOVED_SINCE","EVT_ROTATION_SINCE","EVT_SLIDER_SINCE","EVT_TILT_SINCE","EVT_TYPE_SINCE","EVT_UP_SINCE","EVT_WHEEL_SINCE","Eraser","Error","Event","Finger","Frame","HardwareIdWacom","HardwareSerial","Lens","Motion","Mouse","Pen","Pencil","Pressed","Pressure","Pressure","ProximityIn","ProximityOut","REQ_DESTROY_SINCE","REQ_SET_CURSOR_SINCE","Released","Removed","Request","Role","Rotation","Rotation","SetCursor","Slider","Slider","Tilt","Tilt","Type","Type","Up","Wheel","Wheel","ZwpTabletToolV2","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","destroy","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_cursor","since","since","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","zwp_tablet_tool_v2_events","zwp_tablet_tool_v2_interface","zwp_tablet_tool_v2_requests","button","capability","clicks","degrees","degrees","distance","hardware_id_hi","hardware_id_lo","hardware_serial_hi","hardware_serial_lo","position","pressure","serial","serial","serial","state","surface","tablet","tilt_x","tilt_y","time","tool_type","x","y","hotspot_x","hotspot_y","serial","surface","Destroy","Done","EVT_DONE_SINCE","EVT_ID_SINCE","EVT_NAME_SINCE","EVT_PATH_SINCE","EVT_REMOVED_SINCE","Event","Id","Name","Path","REQ_DESTROY_SINCE","Removed","Request","ZwpTabletV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_tablet_v2_events","zwp_tablet_v2_interface","zwp_tablet_v2_requests","name","path","pid","vid","v1","v3","client","zwp_text_input_manager_v1","zwp_text_input_v1","CreateTextInput","Event","REQ_CREATE_TEXT_INPUT_SINCE","Request","ZwpTextInputManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_text_input","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_text_input_manager_v1_interface","zwp_text_input_manager_v1_requests","Activate","Active","Alpha","Auto","AutoCapitalization","AutoCompletion","AutoCorrection","CommitState","CommitString","ContentHint","ContentPurpose","CursorPosition","Date","Datetime","Deactivate","Default","Default","DeleteSurroundingText","Digits","EVT_COMMIT_STRING_SINCE","EVT_CURSOR_POSITION_SINCE","EVT_DELETE_SURROUNDING_TEXT_SINCE","EVT_ENTER_SINCE","EVT_INPUT_PANEL_STATE_SINCE","EVT_KEYSYM_SINCE","EVT_LANGUAGE_SINCE","EVT_LEAVE_SINCE","EVT_MODIFIERS_MAP_SINCE","EVT_PREEDIT_CURSOR_SINCE","EVT_PREEDIT_STRING_SINCE","EVT_PREEDIT_STYLING_SINCE","EVT_TEXT_DIRECTION_SINCE","Email","Enter","Event","HiddenText","HideInputPanel","Highlight","Inactive","Incorrect","InputPanelState","InvokeAction","Keysym","Language","Latin","Leave","Lowercase","Ltr","ModifiersMap","Multiline","Name","None","None","Normal","Number","Password","Password","Phone","PreeditCursor","PreeditString","PreeditStyle","PreeditStyling","REQ_ACTIVATE_SINCE","REQ_COMMIT_STATE_SINCE","REQ_DEACTIVATE_SINCE","REQ_HIDE_INPUT_PANEL_SINCE","REQ_INVOKE_ACTION_SINCE","REQ_RESET_SINCE","REQ_SET_CONTENT_TYPE_SINCE","REQ_SET_CURSOR_RECTANGLE_SINCE","REQ_SET_PREFERRED_LANGUAGE_SINCE","REQ_SET_SURROUNDING_TEXT_SINCE","REQ_SHOW_INPUT_PANEL_SINCE","Request","Reset","Rtl","Selection","SensitiveData","SetContentType","SetCursorRectangle","SetPreferredLanguage","SetSurroundingText","ShowInputPanel","Terminal","TextDirection","TextDirection","Time","Titlecase","Underline","Uppercase","Url","ZwpTextInputV1","activate","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","commit_state","complement","contains","deactivate","difference","empty","eq","eq","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","hide_input_panel","insert","intersection","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","invoke_action","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","reset","set","set_content_type","set_cursor_rectangle","set_preferred_language","set_surrounding_text","show_input_panel","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","zwp_text_input_v1_events","zwp_text_input_v1_interface","zwp_text_input_v1_requests","anchor","commit","direction","index","index","index","index","language","length","length","map","modifiers","serial","serial","serial","serial","serial","state","state","style","surface","sym","text","text","time","anchor","button","cursor","height","hint","index","language","purpose","seat","seat","serial","surface","text","width","x","y","client","zwp_text_input_manager_v3","zwp_text_input_v3","Destroy","Event","GetTextInput","REQ_DESTROY_SINCE","REQ_GET_TEXT_INPUT_SINCE","Request","ZwpTextInputManagerV3","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_text_input","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_text_input_manager_v3_interface","zwp_text_input_manager_v3_requests","seat","Alpha","AutoCapitalization","ChangeCause","Commit","CommitString","Completion","ContentHint","ContentPurpose","Date","Datetime","DeleteSurroundingText","Destroy","Digits","Disable","Done","EVT_COMMIT_STRING_SINCE","EVT_DELETE_SURROUNDING_TEXT_SINCE","EVT_DONE_SINCE","EVT_ENTER_SINCE","EVT_LEAVE_SINCE","EVT_PREEDIT_STRING_SINCE","Email","Enable","Enter","Event","HiddenText","InputMethod","Latin","Leave","Lowercase","Multiline","Name","None","Normal","Number","Other","Password","Phone","Pin","PreeditString","REQ_COMMIT_SINCE","REQ_DESTROY_SINCE","REQ_DISABLE_SINCE","REQ_ENABLE_SINCE","REQ_SET_CONTENT_TYPE_SINCE","REQ_SET_CURSOR_RECTANGLE_SINCE","REQ_SET_SURROUNDING_TEXT_SINCE","REQ_SET_TEXT_CHANGE_CAUSE_SINCE","Request","SensitiveData","SetContentType","SetCursorRectangle","SetSurroundingText","SetTextChangeCause","Spellcheck","Terminal","Time","Titlecase","Uppercase","Url","ZwpTextInputV3","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","commit","complement","contains","destroy","difference","disable","empty","enable","eq","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","set_content_type","set_cursor_rectangle","set_surrounding_text","set_text_change_cause","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","zwp_text_input_v3_events","zwp_text_input_v3_interface","zwp_text_input_v3_requests","after_length","before_length","cursor_begin","cursor_end","serial","surface","surface","text","text","anchor","cause","cursor","height","hint","purpose","text","width","x","y","v1","client","zxdg_decoration_manager_v1","zxdg_toplevel_decoration_v1","Destroy","Event","GetToplevelDecoration","REQ_DESTROY_SINCE","REQ_GET_TOPLEVEL_DECORATION_SINCE","Request","ZxdgDecorationManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_toplevel_decoration","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_decoration_manager_v1_interface","zxdg_decoration_manager_v1_requests","toplevel","AlreadyConstructed","ClientSide","Configure","Destroy","EVT_CONFIGURE_SINCE","Error","Event","Mode","Orphaned","REQ_DESTROY_SINCE","REQ_SET_MODE_SINCE","REQ_UNSET_MODE_SINCE","Request","ServerSide","SetMode","UnconfiguredBuffer","UnsetMode","ZxdgToplevelDecorationV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_mode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_mode","zxdg_toplevel_decoration_v1_events","zxdg_toplevel_decoration_v1_interface","zxdg_toplevel_decoration_v1_requests","mode","mode","v1","v2","client","zxdg_exported_v1","zxdg_exporter_v1","zxdg_imported_v1","zxdg_importer_v1","Destroy","EVT_HANDLE_SINCE","Event","Handle","REQ_DESTROY_SINCE","Request","ZxdgExportedV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_exported_v1_events","zxdg_exported_v1_interface","zxdg_exported_v1_requests","handle","Destroy","Event","Export","REQ_DESTROY_SINCE","REQ_EXPORT_SINCE","Request","ZxdgExporterV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","export","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_exporter_v1_interface","zxdg_exporter_v1_requests","surface","Destroy","Destroyed","EVT_DESTROYED_SINCE","Event","REQ_DESTROY_SINCE","REQ_SET_PARENT_OF_SINCE","Request","SetParentOf","ZxdgImportedV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_parent_of","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_imported_v1_events","zxdg_imported_v1_interface","zxdg_imported_v1_requests","surface","Destroy","Event","Import","REQ_DESTROY_SINCE","REQ_IMPORT_SINCE","Request","ZxdgImporterV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","import","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_importer_v1_interface","zxdg_importer_v1_requests","handle","client","zxdg_exported_v2","zxdg_exporter_v2","zxdg_imported_v2","zxdg_importer_v2","Destroy","EVT_HANDLE_SINCE","Event","Handle","REQ_DESTROY_SINCE","Request","ZxdgExportedV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_exported_v2_events","zxdg_exported_v2_interface","zxdg_exported_v2_requests","handle","Destroy","Error","Event","ExportToplevel","InvalidSurface","REQ_DESTROY_SINCE","REQ_EXPORT_TOPLEVEL_SINCE","Request","ZxdgExporterV2","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","export_toplevel","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zxdg_exporter_v2_interface","zxdg_exporter_v2_requests","surface","Destroy","Destroyed","EVT_DESTROYED_SINCE","Error","Event","InvalidSurface","REQ_DESTROY_SINCE","REQ_SET_PARENT_OF_SINCE","Request","SetParentOf","ZxdgImportedV2","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_parent_of","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zxdg_imported_v2_events","zxdg_imported_v2_interface","zxdg_imported_v2_requests","surface","Destroy","Event","ImportToplevel","REQ_DESTROY_SINCE","REQ_IMPORT_TOPLEVEL_SINCE","Request","ZxdgImporterV2","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","import_toplevel","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_importer_v2_interface","zxdg_importer_v2_requests","handle","v1","client","zxdg_output_manager_v1","zxdg_output_v1","Destroy","Event","GetXdgOutput","REQ_DESTROY_SINCE","REQ_GET_XDG_OUTPUT_SINCE","Request","ZxdgOutputManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_xdg_output","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_output_manager_v1_interface","zxdg_output_manager_v1_requests","output","Description","Destroy","Done","EVT_DESCRIPTION_SINCE","EVT_DONE_SINCE","EVT_LOGICAL_POSITION_SINCE","EVT_LOGICAL_SIZE_SINCE","EVT_NAME_SINCE","Event","LogicalPosition","LogicalSize","Name","REQ_DESTROY_SINCE","Request","ZxdgOutputV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zxdg_output_v1_events","zxdg_output_v1_interface","zxdg_output_v1_requests","description","height","name","width","x","y","v5","v6","client","xdg_popup","xdg_shell","xdg_surface","Destroy","EVT_POPUP_DONE_SINCE","Event","PopupDone","REQ_DESTROY_SINCE","Request","XdgPopup","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","xdg_popup_events","xdg_popup_interface","xdg_popup_requests","Current","DefunctSurfaces","Destroy","EVT_PING_SINCE","Error","Event","GetXdgPopup","GetXdgSurface","InvalidPopupParent","NotTheTopmostPopup","Ping","Pong","REQ_DESTROY_SINCE","REQ_GET_XDG_POPUP_SINCE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_SINCE","REQ_USE_UNSTABLE_VERSION_SINCE","Request","Role","UseUnstableVersion","Version","XdgShell","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_xdg_popup","get_xdg_surface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","pong","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_unstable_version","xdg_shell_events","xdg_shell_interface","xdg_shell_requests","serial","parent","seat","serial","serial","surface","surface","version","x","y","AckConfigure","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","Destroy","EVT_CLOSE_SINCE","EVT_CONFIGURE_SINCE","Event","Fullscreen","Left","Maximized","Move","None","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_SINCE","REQ_MOVE_SINCE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_SINCE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_SINCE","REQ_SET_WINDOW_GEOMETRY_SINCE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaximized","SetMinimized","SetParent","SetTitle","SetWindowGeometry","ShowWindowMenu","State","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","XdgSurface","_move","ack_configure","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","resize","set_app_id","set_fullscreen","set_maximized","set_minimized","set_parent","set_title","set_window_geometry","show_window_menu","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","xdg_surface_events","xdg_surface_interface","xdg_surface_requests","height","serial","states","width","app_id","edges","height","output","parent","seat","seat","seat","serial","serial","serial","serial","title","width","x","x","y","y","client","zxdg_popup_v6","zxdg_positioner_v6","zxdg_shell_v6","zxdg_surface_v6","zxdg_toplevel_v6","Configure","Destroy","EVT_CONFIGURE_SINCE","EVT_POPUP_DONE_SINCE","Error","Event","Grab","InvalidGrab","PopupDone","REQ_DESTROY_SINCE","REQ_GRAB_SINCE","Request","ZxdgPopupV6","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","grab","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zxdg_popup_v6_events","zxdg_popup_v6_interface","zxdg_popup_v6_requests","height","width","x","y","seat","serial","Anchor","Bottom","Bottom","ConstraintAdjustment","Destroy","Error","Event","FlipX","FlipY","Gravity","InvalidInput","Left","Left","None","None","None","REQ_DESTROY_SINCE","REQ_SET_ANCHOR_RECT_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","REQ_SET_GRAVITY_SINCE","REQ_SET_OFFSET_SINCE","REQ_SET_SIZE_SINCE","Request","ResizeX","ResizeY","Right","Right","SetAnchor","SetAnchorRect","SetConstraintAdjustment","SetGravity","SetOffset","SetSize","SlideX","SlideY","Top","Top","ZxdgPositionerV6","all","all","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","complement","contains","contains","contains","destroy","difference","difference","difference","empty","empty","empty","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","extend","extend","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","hash","hash","insert","insert","insert","intersection","intersection","intersection","intersects","intersects","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_all","is_all","is_destructor","is_destructor","is_empty","is_empty","is_empty","not","not","not","opcode","opcode","partial_cmp","partial_cmp","partial_cmp","remove","remove","remove","set","set","set","set_anchor","set_anchor_rect","set_constraint_adjustment","set_gravity","set_offset","set_size","since","since","sub","sub","sub","sub_assign","sub_assign","sub_assign","symmetric_difference","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","union","zxdg_positioner_v6_interface","zxdg_positioner_v6_requests","anchor","constraint_adjustment","gravity","height","height","width","width","x","x","y","y","CreatePositioner","DefunctSurfaces","Destroy","EVT_PING_SINCE","Error","Event","GetXdgSurface","InvalidPopupParent","InvalidPositioner","InvalidSurfaceState","NotTheTopmostPopup","Ping","Pong","REQ_CREATE_POSITIONER_SINCE","REQ_DESTROY_SINCE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_SINCE","Request","Role","ZxdgShellV6","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","create_positioner","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_xdg_surface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","pong","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zxdg_shell_v6_events","zxdg_shell_v6_interface","zxdg_shell_v6_requests","serial","serial","surface","AckConfigure","AlreadyConstructed","Configure","Destroy","EVT_CONFIGURE_SINCE","Error","Event","GetPopup","GetToplevel","NotConstructed","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_SINCE","REQ_GET_POPUP_SINCE","REQ_GET_TOPLEVEL_SINCE","REQ_SET_WINDOW_GEOMETRY_SINCE","Request","SetWindowGeometry","UnconfiguredBuffer","ZxdgSurfaceV6","ack_configure","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_popup","get_toplevel","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_window_geometry","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zxdg_surface_v6_events","zxdg_surface_v6_interface","zxdg_surface_v6_requests","serial","height","parent","positioner","serial","width","x","y","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","Destroy","EVT_CLOSE_SINCE","EVT_CONFIGURE_SINCE","Event","Fullscreen","Left","Maximized","Move","None","REQ_DESTROY_SINCE","REQ_MOVE_SINCE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MAX_SIZE_SINCE","REQ_SET_MINIMIZED_SINCE","REQ_SET_MIN_SIZE_SINCE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_SINCE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetParent","SetTitle","ShowWindowMenu","State","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","ZxdgToplevelV6","_move","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","resize","set_app_id","set_fullscreen","set_max_size","set_maximized","set_min_size","set_minimized","set_parent","set_title","show_window_menu","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","zxdg_toplevel_v6_events","zxdg_toplevel_v6_interface","zxdg_toplevel_v6_requests","height","states","width","app_id","edges","height","height","output","parent","seat","seat","seat","serial","serial","serial","title","width","width","x","y","v1","client","zwp_xwayland_keyboard_grab_manager_v1","zwp_xwayland_keyboard_grab_v1","Destroy","Event","GrabKeyboard","REQ_DESTROY_SINCE","REQ_GRAB_KEYBOARD_SINCE","Request","ZwpXwaylandKeyboardGrabManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","grab_keyboard","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_xwayland_keyboard_grab_manager_v1_interface","zwp_xwayland_keyboard_grab_manager_v1_requests","seat","surface","Destroy","Event","REQ_DESTROY_SINCE","Request","ZwpXwaylandKeyboardGrabV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwp_xwayland_keyboard_grab_v1_interface","zwp_xwayland_keyboard_grab_v1_requests","client","wp_viewport","wp_viewporter","BadSize","BadValue","Destroy","Error","Event","NoSurface","OutOfBuffer","REQ_DESTROY_SINCE","REQ_SET_DESTINATION_SINCE","REQ_SET_SOURCE_SINCE","Request","SetDestination","SetSource","WpViewport","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_destination","set_source","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wp_viewport_interface","wp_viewport_requests","height","height","width","width","x","y","Destroy","Error","Event","GetViewport","REQ_DESTROY_SINCE","REQ_GET_VIEWPORT_SINCE","Request","ViewportExists","WpViewporter","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_viewport","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wp_viewporter_interface","wp_viewporter_requests","surface","unstable","data_control","export_dmabuf","foreign_toplevel","gamma_control","input_inhibitor","layer_shell","output_management","output_power_management","screencopy","virtual_pointer","v1","client","zwlr_data_control_device_v1","zwlr_data_control_manager_v1","zwlr_data_control_offer_v1","zwlr_data_control_source_v1","DataOffer","Destroy","EVT_DATA_OFFER_SINCE","EVT_FINISHED_SINCE","EVT_PRIMARY_SELECTION_SINCE","EVT_SELECTION_SINCE","Error","Event","Finished","PrimarySelection","REQ_DESTROY_SINCE","REQ_SET_PRIMARY_SELECTION_SINCE","REQ_SET_SELECTION_SINCE","Request","Selection","SetPrimarySelection","SetSelection","UsedSource","ZwlrDataControlDeviceV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_primary_selection","set_selection","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_data_control_device_v1_events","zwlr_data_control_device_v1_interface","zwlr_data_control_device_v1_requests","id","id","id","source","source","CreateDataSource","Destroy","Event","GetDataDevice","REQ_CREATE_DATA_SOURCE_SINCE","REQ_DESTROY_SINCE","REQ_GET_DATA_DEVICE_SINCE","Request","ZwlrDataControlManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_data_source","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_data_device","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_data_control_manager_v1_interface","zwlr_data_control_manager_v1_requests","seat","Destroy","EVT_OFFER_SINCE","Event","Offer","REQ_DESTROY_SINCE","REQ_RECEIVE_SINCE","Receive","Request","ZwlrDataControlOfferV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","receive","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_data_control_offer_v1_events","zwlr_data_control_offer_v1_interface","zwlr_data_control_offer_v1_requests","mime_type","fd","mime_type","Cancelled","Destroy","EVT_CANCELLED_SINCE","EVT_SEND_SINCE","Error","Event","InvalidOffer","Offer","REQ_DESTROY_SINCE","REQ_OFFER_SINCE","Request","Send","ZwlrDataControlSourceV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","offer","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_data_control_source_v1_events","zwlr_data_control_source_v1_interface","zwlr_data_control_source_v1_requests","fd","mime_type","mime_type","v1","client","zwlr_export_dmabuf_frame_v1","zwlr_export_dmabuf_manager_v1","Cancel","CancelReason","Destroy","EVT_CANCEL_SINCE","EVT_FRAME_SINCE","EVT_OBJECT_SINCE","EVT_READY_SINCE","Event","Flags","Frame","Object","Permanent","REQ_DESTROY_SINCE","Ready","Request","Resizing","Temporary","Transient","ZwlrExportDmabufFrameV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zwlr_export_dmabuf_frame_v1_events","zwlr_export_dmabuf_frame_v1_interface","zwlr_export_dmabuf_frame_v1_requests","buffer_flags","fd","flags","format","height","index","mod_high","mod_low","num_objects","offset","offset_x","offset_y","plane_index","reason","size","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","CaptureOutput","Destroy","Event","REQ_CAPTURE_OUTPUT_SINCE","REQ_DESTROY_SINCE","Request","ZwlrExportDmabufManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","capture_output","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_export_dmabuf_manager_v1_interface","zwlr_export_dmabuf_manager_v1_requests","output","overlay_cursor","v1","client","zwlr_foreign_toplevel_handle_v1","zwlr_foreign_toplevel_manager_v1","Activate","Activated","AppId","Close","Closed","Destroy","Done","EVT_APP_ID_SINCE","EVT_CLOSED_SINCE","EVT_DONE_SINCE","EVT_OUTPUT_ENTER_SINCE","EVT_OUTPUT_LEAVE_SINCE","EVT_PARENT_SINCE","EVT_STATE_SINCE","EVT_TITLE_SINCE","Error","Event","Fullscreen","InvalidRectangle","Maximized","Minimized","OutputEnter","OutputLeave","Parent","REQ_ACTIVATE_SINCE","REQ_CLOSE_SINCE","REQ_DESTROY_SINCE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MINIMIZED_SINCE","REQ_SET_RECTANGLE_SINCE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_SINCE","REQ_UNSET_MINIMIZED_SINCE","Request","SetFullscreen","SetMaximized","SetMinimized","SetRectangle","State","State","Title","UnsetFullscreen","UnsetMaximized","UnsetMinimized","ZwlrForeignToplevelHandleV1","activate","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","close","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_fullscreen","set_maximized","set_minimized","set_rectangle","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","unset_minimized","zwlr_foreign_toplevel_handle_v1_events","zwlr_foreign_toplevel_handle_v1_interface","zwlr_foreign_toplevel_handle_v1_requests","app_id","output","output","parent","state","title","height","output","seat","surface","width","x","y","EVT_FINISHED_SINCE","EVT_TOPLEVEL_SINCE","Event","Finished","REQ_STOP_SINCE","Request","Stop","Toplevel","ZwlrForeignToplevelManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_foreign_toplevel_manager_v1_events","zwlr_foreign_toplevel_manager_v1_interface","zwlr_foreign_toplevel_manager_v1_requests","toplevel","v1","client","zwlr_gamma_control_manager_v1","zwlr_gamma_control_v1","Destroy","Event","GetGammaControl","REQ_DESTROY_SINCE","REQ_GET_GAMMA_CONTROL_SINCE","Request","ZwlrGammaControlManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_gamma_control","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_gamma_control_manager_v1_interface","zwlr_gamma_control_manager_v1_requests","output","Destroy","EVT_FAILED_SINCE","EVT_GAMMA_SIZE_SINCE","Error","Event","Failed","GammaSize","InvalidGamma","REQ_DESTROY_SINCE","REQ_SET_GAMMA_SINCE","Request","SetGamma","ZwlrGammaControlV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_gamma","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_gamma_control_v1_events","zwlr_gamma_control_v1_interface","zwlr_gamma_control_v1_requests","size","fd","v1","client","zwlr_input_inhibit_manager_v1","zwlr_input_inhibitor_v1","AlreadyInhibited","Error","Event","GetInhibitor","REQ_GET_INHIBITOR_SINCE","Request","ZwlrInputInhibitManagerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_inhibitor","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_input_inhibit_manager_v1_interface","zwlr_input_inhibit_manager_v1_requests","Destroy","Event","REQ_DESTROY_SINCE","Request","ZwlrInputInhibitorV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_input_inhibitor_v1_interface","zwlr_input_inhibitor_v1_requests","v1","client","zwlr_layer_shell_v1","zwlr_layer_surface_v1","AlreadyConstructed","Background","Bottom","Destroy","Error","Event","GetLayerSurface","InvalidLayer","Layer","Overlay","REQ_DESTROY_SINCE","REQ_GET_LAYER_SURFACE_SINCE","Request","Role","Top","ZwlrLayerShellV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_layer_surface","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zwlr_layer_shell_v1_interface","zwlr_layer_shell_v1_requests","layer","namespace","output","surface","AckConfigure","Anchor","Bottom","Closed","Configure","Destroy","EVT_CLOSED_SINCE","EVT_CONFIGURE_SINCE","Error","Event","Exclusive","GetPopup","InvalidAnchor","InvalidKeyboardInteractivity","InvalidSize","InvalidSurfaceState","KeyboardInteractivity","Left","None","OnDemand","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_SINCE","REQ_GET_POPUP_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_EXCLUSIVE_ZONE_SINCE","REQ_SET_KEYBOARD_INTERACTIVITY_SINCE","REQ_SET_LAYER_SINCE","REQ_SET_MARGIN_SINCE","REQ_SET_SIZE_SINCE","Request","Right","SetAnchor","SetExclusiveZone","SetKeyboardInteractivity","SetLayer","SetMargin","SetSize","Top","ZwlrLayerSurfaceV1","ack_configure","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","destroy","difference","empty","eq","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_popup","hash","insert","intersection","intersects","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","set_anchor","set_exclusive_zone","set_keyboard_interactivity","set_layer","set_margin","set_size","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","zwlr_layer_surface_v1_events","zwlr_layer_surface_v1_interface","zwlr_layer_surface_v1_requests","height","serial","width","anchor","bottom","height","keyboard_interactivity","layer","left","popup","right","serial","top","width","zone","v1","client","zwlr_output_configuration_head_v1","zwlr_output_configuration_v1","zwlr_output_head_v1","zwlr_output_manager_v1","zwlr_output_mode_v1","AlreadySet","Error","Event","InvalidCustomMode","InvalidMode","InvalidScale","InvalidTransform","REQ_SET_CUSTOM_MODE_SINCE","REQ_SET_MODE_SINCE","REQ_SET_POSITION_SINCE","REQ_SET_SCALE_SINCE","REQ_SET_TRANSFORM_SINCE","Request","SetCustomMode","SetMode","SetPosition","SetScale","SetTransform","ZwlrOutputConfigurationHeadV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_custom_mode","set_mode","set_position","set_scale","set_transform","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_output_configuration_head_v1_interface","zwlr_output_configuration_head_v1_requests","height","mode","refresh","scale","transform","width","x","y","AlreadyConfiguredHead","AlreadyUsed","Apply","Cancelled","Destroy","DisableHead","EVT_CANCELLED_SINCE","EVT_FAILED_SINCE","EVT_SUCCEEDED_SINCE","EnableHead","Error","Event","Failed","REQ_APPLY_SINCE","REQ_DESTROY_SINCE","REQ_DISABLE_HEAD_SINCE","REQ_ENABLE_HEAD_SINCE","REQ_TEST_SINCE","Request","Succeeded","Test","UnconfiguredHead","ZwlrOutputConfigurationV1","apply","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","disable_head","enable_head","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","test","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_output_configuration_v1_events","zwlr_output_configuration_v1_interface","zwlr_output_configuration_v1_requests","head","head","CurrentMode","Description","EVT_CURRENT_MODE_SINCE","EVT_DESCRIPTION_SINCE","EVT_ENABLED_SINCE","EVT_FINISHED_SINCE","EVT_MAKE_SINCE","EVT_MODEL_SINCE","EVT_MODE_SINCE","EVT_NAME_SINCE","EVT_PHYSICAL_SIZE_SINCE","EVT_POSITION_SINCE","EVT_SCALE_SINCE","EVT_SERIAL_NUMBER_SINCE","EVT_TRANSFORM_SINCE","Enabled","Event","Finished","Make","Mode","Model","Name","PhysicalSize","Position","Request","Scale","SerialNumber","Transform","ZwlrOutputHeadV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_output_head_v1_events","zwlr_output_head_v1_interface","description","enabled","height","make","mode","mode","model","name","scale","serial_number","transform","width","x","y","CreateConfiguration","Done","EVT_DONE_SINCE","EVT_FINISHED_SINCE","EVT_HEAD_SINCE","Event","Finished","Head","REQ_CREATE_CONFIGURATION_SINCE","REQ_STOP_SINCE","Request","Stop","ZwlrOutputManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_configuration","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","stop","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_output_manager_v1_events","zwlr_output_manager_v1_interface","zwlr_output_manager_v1_requests","head","serial","serial","EVT_FINISHED_SINCE","EVT_PREFERRED_SINCE","EVT_REFRESH_SINCE","EVT_SIZE_SINCE","Event","Finished","Preferred","Refresh","Request","Size","ZwlrOutputModeV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_output_mode_v1_events","zwlr_output_mode_v1_interface","height","refresh","width","v1","client","zwlr_output_power_manager_v1","zwlr_output_power_v1","Destroy","Event","GetOutputPower","REQ_DESTROY_SINCE","REQ_GET_OUTPUT_POWER_SINCE","Request","ZwlrOutputPowerManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","get_output_power","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_output_power_manager_v1_interface","zwlr_output_power_manager_v1_requests","output","Destroy","EVT_FAILED_SINCE","EVT_MODE_SINCE","Error","Event","Failed","InvalidMode","Mode","Mode","Off","On","REQ_DESTROY_SINCE","REQ_SET_MODE_SINCE","Request","SetMode","ZwlrOutputPowerV1","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_mode","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","zwlr_output_power_v1_events","zwlr_output_power_v1_interface","zwlr_output_power_v1_requests","mode","mode","v1","client","zwlr_screencopy_frame_v1","zwlr_screencopy_manager_v1","AlreadyUsed","Buffer","BufferDone","Copy","CopyWithDamage","Damage","Destroy","EVT_BUFFER_DONE_SINCE","EVT_BUFFER_SINCE","EVT_DAMAGE_SINCE","EVT_FAILED_SINCE","EVT_FLAGS_SINCE","EVT_LINUX_DMABUF_SINCE","EVT_READY_SINCE","Error","Event","Failed","Flags","Flags","InvalidBuffer","LinuxDmabuf","REQ_COPY_SINCE","REQ_COPY_WITH_DAMAGE_SINCE","REQ_DESTROY_SINCE","Ready","Request","YInvert","ZwlrScreencopyFrameV1","all","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","cmp","complement","contains","copy","copy_with_damage","destroy","difference","empty","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","zwlr_screencopy_frame_v1_events","zwlr_screencopy_frame_v1_interface","zwlr_screencopy_frame_v1_requests","flags","format","format","height","height","height","stride","tv_nsec","tv_sec_hi","tv_sec_lo","width","width","width","x","y","buffer","buffer","CaptureOutput","CaptureOutputRegion","Destroy","Event","REQ_CAPTURE_OUTPUT_REGION_SINCE","REQ_CAPTURE_OUTPUT_SINCE","REQ_DESTROY_SINCE","Request","ZwlrScreencopyManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","capture_output","capture_output_region","child","child","clone","clone_into","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_screencopy_manager_v1_interface","zwlr_screencopy_manager_v1_requests","height","output","output","overlay_cursor","overlay_cursor","width","x","y","v1","client","zwlr_virtual_pointer_manager_v1","zwlr_virtual_pointer_v1","CreateVirtualPointer","CreateVirtualPointerWithOutput","Destroy","Event","REQ_CREATE_VIRTUAL_POINTER_SINCE","REQ_CREATE_VIRTUAL_POINTER_WITH_OUTPUT_SINCE","REQ_DESTROY_SINCE","Request","ZwlrVirtualPointerManagerV1","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone_into","create_virtual_pointer","create_virtual_pointer_with_output","destroy","eq","equivalent","fmt","fmt","fmt","from","from","from","from","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","since","since","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","zwlr_virtual_pointer_manager_v1_interface","zwlr_virtual_pointer_manager_v1_requests","output","seat","seat","Axis","AxisDiscrete","AxisSource","AxisStop","Button","Destroy","Error","Event","Frame","InvalidAxis","InvalidAxisSource","Motion","MotionAbsolute","REQ_AXIS_DISCRETE_SINCE","REQ_AXIS_SINCE","REQ_AXIS_SOURCE_SINCE","REQ_AXIS_STOP_SINCE","REQ_BUTTON_SINCE","REQ_DESTROY_SINCE","REQ_FRAME_SINCE","REQ_MOTION_ABSOLUTE_SINCE","REQ_MOTION_SINCE","Request","ZwlrVirtualPointerV1","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","axis","axis_discrete","axis_source","axis_stop","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","frame","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","motion","motion_absolute","opcode","opcode","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","zwlr_virtual_pointer_v1_interface","zwlr_virtual_pointer_v1_requests","axis","axis","axis","axis_source","button","discrete","dx","dy","state","time","time","time","time","time","time","value","value","x","x_extent","y","y_extent","client","xdg_popup","xdg_positioner","xdg_surface","xdg_toplevel","xdg_wm_base","Configure","Destroy","EVT_CONFIGURE_SINCE","EVT_POPUP_DONE_SINCE","EVT_REPOSITIONED_SINCE","Error","Event","Grab","InvalidGrab","PopupDone","REQ_DESTROY_SINCE","REQ_GRAB_SINCE","REQ_REPOSITION_SINCE","Reposition","Repositioned","Request","XdgPopup","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","grab","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","reposition","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","xdg_popup_events","xdg_popup_interface","xdg_popup_requests","height","token","width","x","y","positioner","seat","serial","token","Anchor","Bottom","Bottom","BottomLeft","BottomLeft","BottomRight","BottomRight","ConstraintAdjustment","Destroy","Error","Event","FlipX","FlipY","Gravity","InvalidInput","Left","Left","None","None","None","REQ_DESTROY_SINCE","REQ_SET_ANCHOR_RECT_SINCE","REQ_SET_ANCHOR_SINCE","REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","REQ_SET_GRAVITY_SINCE","REQ_SET_OFFSET_SINCE","REQ_SET_PARENT_CONFIGURE_SINCE","REQ_SET_PARENT_SIZE_SINCE","REQ_SET_REACTIVE_SINCE","REQ_SET_SIZE_SINCE","Request","ResizeX","ResizeY","Right","Right","SetAnchor","SetAnchorRect","SetConstraintAdjustment","SetGravity","SetOffset","SetParentConfigure","SetParentSize","SetReactive","SetSize","SlideX","SlideY","Top","Top","TopLeft","TopLeft","TopRight","TopRight","XdgPositioner","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","destroy","difference","empty","eq","eq","eq","eq","eq","equivalent","equivalent","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_all","is_destructor","is_destructor","is_empty","not","opcode","opcode","partial_cmp","remove","set","set_anchor","set_anchor_rect","set_constraint_adjustment","set_gravity","set_offset","set_parent_configure","set_parent_size","set_reactive","set_size","since","since","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_raw","to_raw","to_raw","to_raw","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","xdg_positioner_interface","xdg_positioner_requests","anchor","constraint_adjustment","gravity","height","height","parent_height","parent_width","serial","width","width","x","x","y","y","AckConfigure","AlreadyConstructed","Configure","Destroy","EVT_CONFIGURE_SINCE","Error","Event","GetPopup","GetToplevel","NotConstructed","REQ_ACK_CONFIGURE_SINCE","REQ_DESTROY_SINCE","REQ_GET_POPUP_SINCE","REQ_GET_TOPLEVEL_SINCE","REQ_SET_WINDOW_GEOMETRY_SINCE","Request","SetWindowGeometry","UnconfiguredBuffer","XdgSurface","ack_configure","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_popup","get_toplevel","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","set_window_geometry","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","xdg_surface_events","xdg_surface_interface","xdg_surface_requests","serial","height","parent","positioner","serial","width","x","y","Activated","Bottom","BottomLeft","BottomRight","Close","Configure","Destroy","EVT_CLOSE_SINCE","EVT_CONFIGURE_SINCE","Event","Fullscreen","Left","Maximized","Move","None","REQ_DESTROY_SINCE","REQ_MOVE_SINCE","REQ_RESIZE_SINCE","REQ_SET_APP_ID_SINCE","REQ_SET_FULLSCREEN_SINCE","REQ_SET_MAXIMIZED_SINCE","REQ_SET_MAX_SIZE_SINCE","REQ_SET_MINIMIZED_SINCE","REQ_SET_MIN_SIZE_SINCE","REQ_SET_PARENT_SINCE","REQ_SET_TITLE_SINCE","REQ_SHOW_WINDOW_MENU_SINCE","REQ_UNSET_FULLSCREEN_SINCE","REQ_UNSET_MAXIMIZED_SINCE","Request","Resize","ResizeEdge","Resizing","Right","SetAppId","SetFullscreen","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetParent","SetTitle","ShowWindowMenu","State","TiledBottom","TiledLeft","TiledRight","TiledTop","Top","TopLeft","TopRight","UnsetFullscreen","UnsetMaximized","XdgToplevel","_move","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone","clone_into","clone_into","clone_into","destroy","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","resize","set_app_id","set_fullscreen","set_max_size","set_maximized","set_min_size","set_minimized","set_parent","set_title","show_window_menu","since","since","to_owned","to_owned","to_owned","to_raw","to_raw","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unset_fullscreen","unset_maximized","xdg_toplevel_events","xdg_toplevel_interface","xdg_toplevel_requests","height","states","width","app_id","edges","height","height","output","parent","seat","seat","seat","serial","serial","serial","title","width","width","x","y","CreatePositioner","DefunctSurfaces","Destroy","EVT_PING_SINCE","Error","Event","GetXdgSurface","InvalidPopupParent","InvalidPositioner","InvalidSurfaceState","NotTheTopmostPopup","Ping","Pong","REQ_CREATE_POSITIONER_SINCE","REQ_DESTROY_SINCE","REQ_GET_XDG_SURFACE_SINCE","REQ_PONG_SINCE","Request","Role","XdgWmBase","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_raw_c_in","as_raw_c_in","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c_interface","child","child","clone","clone","clone_into","clone_into","create_positioner","destroy","eq","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_raw","from_raw","from_raw","from_raw_c","from_raw_c","get_xdg_surface","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_raw","into_raw","is_destructor","is_destructor","opcode","opcode","pong","since","since","to_owned","to_owned","to_raw","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","xdg_wm_base_events","xdg_wm_base_interface","xdg_wm_base_requests","serial","serial","surface"],"q":[[0,"wayland_protocols"],[6,"wayland_protocols::misc"],[9,"wayland_protocols::misc::gtk_primary_selection"],[10,"wayland_protocols::misc::gtk_primary_selection::client"],[14,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device"],[92,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Event"],[94,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Request"],[96,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager"],[173,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager::Request"],[174,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer"],[251,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer::Event"],[252,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer::Request"],[254,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source"],[333,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source::Event"],[335,"wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source::Request"],[336,"wayland_protocols::misc::server_decoration"],[337,"wayland_protocols::misc::server_decoration::client"],[339,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration"],[439,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration::Event"],[440,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration::Request"],[441,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration_manager"],[538,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration_manager::Event"],[539,"wayland_protocols::misc::server_decoration::client::org_kde_kwin_server_decoration_manager::Request"],[540,"wayland_protocols::misc::zwp_input_method_v2"],[541,"wayland_protocols::misc::zwp_input_method_v2::client"],[545,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_keyboard_grab_v2"],[625,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_keyboard_grab_v2::Event"],[639,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_manager_v2"],[713,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_manager_v2::Request"],[714,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_v2"],[818,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_v2::Event"],[824,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_method_v2::Request"],[832,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_popup_surface_v2"],[906,"wayland_protocols::misc::zwp_input_method_v2::client::zwp_input_popup_surface_v2::Event"],[910,"wayland_protocols::presentation_time"],[911,"wayland_protocols::presentation_time::client"],[913,"wayland_protocols::presentation_time::client::wp_presentation"],[1012,"wayland_protocols::presentation_time::client::wp_presentation::Event"],[1013,"wayland_protocols::presentation_time::client::wp_presentation::Request"],[1014,"wayland_protocols::presentation_time::client::wp_presentation_feedback"],[1150,"wayland_protocols::presentation_time::client::wp_presentation_feedback::Event"],[1158,"wayland_protocols::unstable"],[1176,"wayland_protocols::unstable::fullscreen_shell"],[1177,"wayland_protocols::unstable::fullscreen_shell::v1"],[1178,"wayland_protocols::unstable::fullscreen_shell::v1::client"],[1180,"wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1"],[1254,"wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1"],[1403,"wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Event"],[1404,"wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request"],[1410,"wayland_protocols::unstable::idle_inhibit"],[1411,"wayland_protocols::unstable::idle_inhibit::v1"],[1412,"wayland_protocols::unstable::idle_inhibit::v1::client"],[1414,"wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1"],[1488,"wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1::Request"],[1489,"wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1"],[1560,"wayland_protocols::unstable::input_method"],[1561,"wayland_protocols::unstable::input_method::v1"],[1562,"wayland_protocols::unstable::input_method::v1::client"],[1566,"wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1"],[1689,"wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event"],[1698,"wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request"],[1730,"wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1"],[1801,"wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event"],[1803,"wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1"],[1898,"wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1::Request"],[1900,"wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1"],[1971,"wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1::Request"],[1972,"wayland_protocols::unstable::input_timestamps"],[1973,"wayland_protocols::unstable::input_timestamps::v1"],[1974,"wayland_protocols::unstable::input_timestamps::v1::client"],[1976,"wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1"],[2056,"wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_manager_v1::Request"],[2059,"wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1"],[2133,"wayland_protocols::unstable::input_timestamps::v1::client::zwp_input_timestamps_v1::Event"],[2136,"wayland_protocols::unstable::keyboard_shortcuts_inhibit"],[2137,"wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1"],[2138,"wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client"],[2140,"wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1"],[2235,"wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request"],[2237,"wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1"],[2313,"wayland_protocols::unstable::linux_dmabuf"],[2314,"wayland_protocols::unstable::linux_dmabuf::v1"],[2315,"wayland_protocols::unstable::linux_dmabuf::v1::client"],[2317,"wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1"],[2490,"wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Event"],[2491,"wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request"],[2505,"wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1"],[2584,"wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event"],[2588,"wayland_protocols::unstable::linux_explicit_synchronization"],[2589,"wayland_protocols::unstable::linux_explicit_synchronization::v1"],[2590,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client"],[2593,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1"],[2665,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_buffer_release_v1::Event"],[2666,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1"],[2761,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_explicit_synchronization_v1::Request"],[2762,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1"],[2865,"wayland_protocols::unstable::linux_explicit_synchronization::v1::client::zwp_linux_surface_synchronization_v1::Request"],[2866,"wayland_protocols::unstable::pointer_constraints"],[2867,"wayland_protocols::unstable::pointer_constraints::v1"],[2868,"wayland_protocols::unstable::pointer_constraints::v1::client"],[2871,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1"],[2950,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1::Request"],[2951,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1"],[3033,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request"],[3036,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1"],[3156,"wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request"],[3164,"wayland_protocols::unstable::pointer_gestures"],[3165,"wayland_protocols::unstable::pointer_gestures::v1"],[3166,"wayland_protocols::unstable::pointer_gestures::v1::client"],[3169,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1"],[3247,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event"],[3259,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1"],[3337,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event"],[3347,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1"],[3424,"wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request"],[3426,"wayland_protocols::unstable::primary_selection"],[3427,"wayland_protocols::unstable::primary_selection::v1"],[3428,"wayland_protocols::unstable::primary_selection::v1::client"],[3432,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1"],[3509,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_manager_v1::Request"],[3510,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1"],[3588,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1::Event"],[3590,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_device_v1::Request"],[3592,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1"],[3669,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1::Event"],[3670,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_offer_v1::Request"],[3672,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1"],[3751,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1::Event"],[3753,"wayland_protocols::unstable::primary_selection::v1::client::zwp_primary_selection_source_v1::Request"],[3754,"wayland_protocols::unstable::relative_pointer"],[3755,"wayland_protocols::unstable::relative_pointer::v1"],[3756,"wayland_protocols::unstable::relative_pointer::v1::client"],[3758,"wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1"],[3832,"wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1::Request"],[3833,"wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1"],[3907,"wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1::Event"],[3913,"wayland_protocols::unstable::tablet"],[3915,"wayland_protocols::unstable::tablet::v1"],[3916,"wayland_protocols::unstable::tablet::v1::client"],[3920,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1"],[3994,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1::Request"],[3995,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1"],[4070,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event"],[4072,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1"],[4282,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event"],[4306,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Request"],[4310,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1"],[4392,"wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event"],[4396,"wayland_protocols::unstable::tablet::v2"],[4397,"wayland_protocols::unstable::tablet::v2::client"],[4405,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2"],[4479,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2::Request"],[4480,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2"],[4563,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event"],[4570,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2"],[4674,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event"],[4677,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Request"],[4679,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2"],[4783,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event"],[4786,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Request"],[4788,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2"],[4900,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event"],[4911,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Request"],[4914,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2"],[4991,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event"],[4994,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2"],[5204,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event"],[5228,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Request"],[5232,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2"],[5314,"wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event"],[5318,"wayland_protocols::unstable::text_input"],[5320,"wayland_protocols::unstable::text_input::v1"],[5321,"wayland_protocols::unstable::text_input::v1::client"],[5323,"wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1"],[5394,"wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1"],[5677,"wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event"],[5702,"wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request"],[5718,"wayland_protocols::unstable::text_input::v3"],[5719,"wayland_protocols::unstable::text_input::v3::client"],[5721,"wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3"],[5795,"wayland_protocols::unstable::text_input::v3::client::zwp_text_input_manager_v3::Request"],[5796,"wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3"],[6026,"wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Event"],[6035,"wayland_protocols::unstable::text_input::v3::client::zwp_text_input_v3::Request"],[6045,"wayland_protocols::unstable::xdg_decoration"],[6046,"wayland_protocols::unstable::xdg_decoration::v1"],[6047,"wayland_protocols::unstable::xdg_decoration::v1::client"],[6049,"wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1"],[6123,"wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1::Request"],[6124,"wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1"],[6249,"wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Event"],[6250,"wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Request"],[6251,"wayland_protocols::unstable::xdg_foreign"],[6253,"wayland_protocols::unstable::xdg_foreign::v1"],[6254,"wayland_protocols::unstable::xdg_foreign::v1::client"],[6258,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1"],[6332,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1::Event"],[6333,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1"],[6407,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1::Request"],[6408,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1"],[6485,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1::Request"],[6486,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1"],[6560,"wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1::Request"],[6561,"wayland_protocols::unstable::xdg_foreign::v2"],[6562,"wayland_protocols::unstable::xdg_foreign::v2::client"],[6566,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2"],[6640,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2::Event"],[6641,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2"],[6736,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2::Request"],[6737,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2"],[6835,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2::Request"],[6836,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2"],[6910,"wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2::Request"],[6911,"wayland_protocols::unstable::xdg_output"],[6912,"wayland_protocols::unstable::xdg_output::v1"],[6913,"wayland_protocols::unstable::xdg_output::v1::client"],[6915,"wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1"],[6989,"wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1::Request"],[6990,"wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1"],[7072,"wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event"],[7078,"wayland_protocols::unstable::xdg_shell"],[7080,"wayland_protocols::unstable::xdg_shell::v5"],[7081,"wayland_protocols::unstable::xdg_shell::v5::client"],[7084,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup"],[7158,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell"],[7289,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Event"],[7290,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request"],[7299,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface"],[7467,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Event"],[7471,"wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request"],[7489,"wayland_protocols::unstable::xdg_shell::v6"],[7490,"wayland_protocols::unstable::xdg_shell::v6::client"],[7495,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6"],[7595,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Event"],[7599,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Request"],[7601,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6"],[7902,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request"],[7913,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6"],[8022,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Event"],[8023,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request"],[8025,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6"],[8134,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Event"],[8135,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request"],[8142,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6"],[8310,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Event"],[8313,"wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request"],[8330,"wayland_protocols::unstable::xwayland_keyboard_grab"],[8331,"wayland_protocols::unstable::xwayland_keyboard_grab::v1"],[8332,"wayland_protocols::unstable::xwayland_keyboard_grab::v1::client"],[8334,"wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1"],[8408,"wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1::Request"],[8410,"wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1"],[8481,"wayland_protocols::viewporter"],[8482,"wayland_protocols::viewporter::client"],[8484,"wayland_protocols::viewporter::client::wp_viewport"],[8585,"wayland_protocols::viewporter::client::wp_viewport::Request"],[8591,"wayland_protocols::viewporter::client::wp_viewporter"],[8686,"wayland_protocols::viewporter::client::wp_viewporter::Request"],[8687,"wayland_protocols::wlr"],[8688,"wayland_protocols::wlr::unstable"],[8698,"wayland_protocols::wlr::unstable::data_control"],[8699,"wayland_protocols::wlr::unstable::data_control::v1"],[8700,"wayland_protocols::wlr::unstable::data_control::v1::client"],[8704,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1"],[8810,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1::Event"],[8813,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_device_v1::Request"],[8815,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1"],[8892,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_manager_v1::Request"],[8893,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1"],[8970,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1::Event"],[8971,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_offer_v1::Request"],[8973,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1"],[9073,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1::Event"],[9075,"wayland_protocols::wlr::unstable::data_control::v1::client::zwlr_data_control_source_v1::Request"],[9076,"wayland_protocols::wlr::unstable::export_dmabuf"],[9077,"wayland_protocols::wlr::unstable::export_dmabuf::v1"],[9078,"wayland_protocols::wlr::unstable::export_dmabuf::v1::client"],[9080,"wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1"],[9204,"wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_frame_v1::Event"],[9224,"wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1"],[9298,"wayland_protocols::wlr::unstable::export_dmabuf::v1::client::zwlr_export_dmabuf_manager_v1::Request"],[9300,"wayland_protocols::wlr::unstable::foreign_toplevel"],[9301,"wayland_protocols::wlr::unstable::foreign_toplevel::v1"],[9302,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client"],[9304,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1"],[9464,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Event"],[9470,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_handle_v1::Request"],[9477,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1"],[9552,"wayland_protocols::wlr::unstable::foreign_toplevel::v1::client::zwlr_foreign_toplevel_manager_v1::Event"],[9553,"wayland_protocols::wlr::unstable::gamma_control"],[9554,"wayland_protocols::wlr::unstable::gamma_control::v1"],[9555,"wayland_protocols::wlr::unstable::gamma_control::v1::client"],[9557,"wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1"],[9631,"wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_manager_v1::Request"],[9632,"wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1"],[9732,"wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1::Event"],[9733,"wayland_protocols::wlr::unstable::gamma_control::v1::client::zwlr_gamma_control_v1::Request"],[9734,"wayland_protocols::wlr::unstable::input_inhibitor"],[9735,"wayland_protocols::wlr::unstable::input_inhibitor::v1"],[9736,"wayland_protocols::wlr::unstable::input_inhibitor::v1::client"],[9738,"wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibit_manager_v1"],[9830,"wayland_protocols::wlr::unstable::input_inhibitor::v1::client::zwlr_input_inhibitor_v1"],[9901,"wayland_protocols::wlr::unstable::layer_shell"],[9902,"wayland_protocols::wlr::unstable::layer_shell::v1"],[9903,"wayland_protocols::wlr::unstable::layer_shell::v1::client"],[9905,"wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1"],[10026,"wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_shell_v1::Request"],[10030,"wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1"],[10239,"wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Event"],[10242,"wayland_protocols::wlr::unstable::layer_shell::v1::client::zwlr_layer_surface_v1::Request"],[10254,"wayland_protocols::wlr::unstable::output_management"],[10255,"wayland_protocols::wlr::unstable::output_management::v1"],[10256,"wayland_protocols::wlr::unstable::output_management::v1::client"],[10261,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_configuration_head_v1"],[10369,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_configuration_head_v1::Request"],[10377,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_configuration_v1"],[10490,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_configuration_v1::Request"],[10492,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_head_v1"],[10585,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_head_v1::Event"],[10599,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_manager_v1"],[10679,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_manager_v1::Event"],[10681,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_manager_v1::Request"],[10682,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_mode_v1"],[10758,"wayland_protocols::wlr::unstable::output_management::v1::client::zwlr_output_mode_v1::Event"],[10761,"wayland_protocols::wlr::unstable::output_power_management"],[10762,"wayland_protocols::wlr::unstable::output_power_management::v1"],[10763,"wayland_protocols::wlr::unstable::output_power_management::v1::client"],[10765,"wayland_protocols::wlr::unstable::output_power_management::v1::client::zwlr_output_power_manager_v1"],[10839,"wayland_protocols::wlr::unstable::output_power_management::v1::client::zwlr_output_power_manager_v1::Request"],[10840,"wayland_protocols::wlr::unstable::output_power_management::v1::client::zwlr_output_power_v1"],[10962,"wayland_protocols::wlr::unstable::output_power_management::v1::client::zwlr_output_power_v1::Event"],[10963,"wayland_protocols::wlr::unstable::output_power_management::v1::client::zwlr_output_power_v1::Request"],[10964,"wayland_protocols::wlr::unstable::screencopy"],[10965,"wayland_protocols::wlr::unstable::screencopy::v1"],[10966,"wayland_protocols::wlr::unstable::screencopy::v1::client"],[10968,"wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1"],[11141,"wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Event"],[11156,"wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_frame_v1::Request"],[11158,"wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1"],[11235,"wayland_protocols::wlr::unstable::screencopy::v1::client::zwlr_screencopy_manager_v1::Request"],[11243,"wayland_protocols::wlr::unstable::virtual_pointer"],[11244,"wayland_protocols::wlr::unstable::virtual_pointer::v1"],[11245,"wayland_protocols::wlr::unstable::virtual_pointer::v1::client"],[11247,"wayland_protocols::wlr::unstable::virtual_pointer::v1::client::zwlr_virtual_pointer_manager_v1"],[11324,"wayland_protocols::wlr::unstable::virtual_pointer::v1::client::zwlr_virtual_pointer_manager_v1::Request"],[11327,"wayland_protocols::wlr::unstable::virtual_pointer::v1::client::zwlr_virtual_pointer_v1"],[11444,"wayland_protocols::wlr::unstable::virtual_pointer::v1::client::zwlr_virtual_pointer_v1::Request"],[11465,"wayland_protocols::xdg_shell"],[11466,"wayland_protocols::xdg_shell::client"],[11471,"wayland_protocols::xdg_shell::client::xdg_popup"],[11576,"wayland_protocols::xdg_shell::client::xdg_popup::Event"],[11581,"wayland_protocols::xdg_shell::client::xdg_popup::Request"],[11585,"wayland_protocols::xdg_shell::client::xdg_positioner"],[11827,"wayland_protocols::xdg_shell::client::xdg_positioner::Request"],[11841,"wayland_protocols::xdg_shell::client::xdg_surface"],[11950,"wayland_protocols::xdg_shell::client::xdg_surface::Event"],[11951,"wayland_protocols::xdg_shell::client::xdg_surface::Request"],[11958,"wayland_protocols::xdg_shell::client::xdg_toplevel"],[12130,"wayland_protocols::xdg_shell::client::xdg_toplevel::Event"],[12133,"wayland_protocols::xdg_shell::client::xdg_toplevel::Request"],[12150,"wayland_protocols::xdg_shell::client::xdg_wm_base"],[12259,"wayland_protocols::xdg_shell::client::xdg_wm_base::Event"],[12260,"wayland_protocols::xdg_shell::client::xdg_wm_base::Request"]],"d":["Misc protocols","Presentation time protocol","Unstable protocols from wayland-protocols","Viewporter protocol","wlr-procotols extension family","XDG Shell protocol","Gtk primary selection protocol","KDE server decoration protocol","Input method v2 unstable","Client-side API of this protocol","","X primary selection emulation","offer to transfer primary selection contents","offer to replace the contents of the primary selection","introduce a new wp_primary_selection_offer","destroy the primary selection device","The minimal object version supporting this event","The minimal object version supporting this event","","","The minimal object version supporting this request","The minimal object version supporting this request","","advertise a new primary selection","set the primary selection","","","","","","","","","","","","","","","","","","","","","destroy the primary selection device","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","set the primary selection","","","","","","","","","","","","","","","","","create a new primary selection source","destroy the primary selection device manager","","create a new primary selection device","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","create a new primary selection source","destroy the primary selection device manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","create a new primary selection device","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the primary selection offer","The minimal object version supporting this event","","","advertise offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","request that the data is transferred","","","","","","","","","","","","","","","","","","","","","","destroy the primary selection offer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","request that the data is transferred","","","","","","","","","","","","","","","","request for primary selection contents was canceled","destroy the primary selection source","The minimal object version supporting this event","The minimal object version supporting this event","","","add an offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","","send the primary selection contents","","","","","","","","","","","","","","","","","","","","","destroy the primary selection source","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","add an offered mime type","","","","","","","","","","","","","","","","","","Client-side API of this protocol","","Server side window decoration manager","Client-side decoration: The decoration is part of the …","The minimal object version supporting this event","","Possible values to use in request_mode and the event mode.","The new decoration mode applied by the server","Undecorated: The surface is not decorated at all, neither …","","The minimal object version supporting this request","The minimal object version supporting this request","release the server decoration object","","The decoration mode the surface wants to use.","Server-side decoration: The server embeds the surface into …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","release the server decoration object","The decoration mode the surface wants to use.","","","","","","","","","","","","","","","","","","","","Client-side decoration: The decoration is part of the …","Create a server-side decoration object for a given surface","The default mode used on the server","The minimal object version supporting this event","","Possible values to use in request_mode and the event mode.","Undecorated: The surface is not decorated at all, neither …","","The minimal object version supporting this request","","Server-side decoration: The server embeds the surface into …","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a server-side decoration object for a given surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","keyboard grab","input method manager","input method","popup surface","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","key event","keyboard mapping","modifier and group state","The minimal object version supporting this request","release the grab object","repeat rate and delay","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","release the grab object","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","destroy the input method manager","","request an input method object","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the input method manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","request an input method object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","input method has been requested","apply state","commit string","content purpose and hint","deactivate event","delete text","destroy the text input","apply state","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","create popup surface","grab hardware keyboard","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","pre-edit string","surrounding text event","indicates the cause of surrounding text change","input method unavailable","","","","","","","","","","","","","","","","","","","","","","apply state","commit string","delete text","destroy the text input","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","create popup surface","grab hardware keyboard","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","pre-edit string","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","This is a destructor, once sent this object cannot be used …","The minimal object version supporting this event","","The minimal object version supporting this request","","set text input area position","","","","","","","","","","","","","","","","","","","","","","This is a destructor, you cannot send requests to this …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","timed presentation related wl_surface requests","presentation time feedback event","clock ID for timestamps","unbind from the presentation interface","The minimal object version supporting this event","fatal presentation errors","","request presentation feedback information","invalid flag","invalid value in tv_nsec","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","unbind from the presentation interface","","","","request presentation feedback information","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","the content update was not displayed","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","hardware provided the presentation timestamp","hardware signalled the start of the presentation","bitmask of flags in presented event","the content update was displayed","","presentation synchronized to this output","presentation was vsync’d","","presentation was done zero-copy","Returns the set containing all flags.","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","","","","","","","","Fullscreen shell protocol","Screensaver inhibition protocol","Input method protocol","Input timestamps protocol","Protocol for inhibiting the compositor keyboard shortcuts","Linux DMA-BUF protocol","Linux explicit synchronization protocol","protocol for constraining pointer motions","Pointer gestures protocol","Primary selection protocol","protocol for relative pointer motion events","Wayland protocol for graphics tablets","Text input protocol","This interface allows a compositor to announce support for …","Protocol for exporting xdg surface handles","Protocol to describe output regions","XDG Shell protocol","Protocol for grabbing the keyboard from Xwayland","","Client-side API of this protocol","","displays a single surface per output","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","mode switch failed","mode switch succeeded","mode switch cancelled","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","compositor is capable of almost any output mode","capabilities advertised by the compositor","advertises a capability of the compositor","center the surface on the output","compositor has a separate cursor plane","no preference, apply default policy","The minimal object version supporting this event","wl_fullscreen_shell error values","","present_method is not known","different method to set the surface fullscreen","present surface for display","present surface for display at a particular mode","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","release the wl_fullscreen_shell interface","","given wl_surface has another role","scale the surface to the size of the output ignoring …","scale the surface, preserving aspect ratio, to the largest …","scale the surface, preserving aspect ratio, to fully fill …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","present surface for display","present surface for display at a particular mode","release the wl_fullscreen_shell interface","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","Client-side API of this protocol","control behavior when display idles","context object for inhibiting idle behavior","create a new inhibitor object","destroy the idle inhibitor object","","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","create a new inhibitor object","destroy the idle inhibitor object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the idle inhibitor object","","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the idle inhibitor object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","Client-side API of this protocol","input method context","input method","","interface for implementing keyboards","","commit string","","set cursor to a new position","delete text","This is a destructor, once sent this object cannot be used …","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","grab hardware keyboard","","forward key event","keysym","","forward modifiers event","","pre-edit cursor","pre-edit string","pre-edit styling","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","surrounding text event","","","","","","","","","","","","","","","","","","","","","","","commit string","set cursor to a new position","delete text","This is a destructor, you cannot send requests to this …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","grab hardware keyboard","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","forward key event","keysym","","forward modifiers event","","","","pre-edit cursor","pre-edit string","pre-edit styling","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","activate event","deactivate event","The minimal object version supporting this event","The minimal object version supporting this event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","","","","","The minimal object version supporting this request","The minimal object version supporting this request","","set the surface type as an overlay panel","set the surface type as a keyboard","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","set the surface type as an overlay panel","set the surface type as a keyboard","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Client-side API of this protocol","context object for high-resolution input timestamps","context object for input timestamps","destroy the input timestamps manager object","","subscribe to high-resolution keyboard timestamp events","subscribe to high-resolution pointer timestamp events","subscribe to high-resolution touch timestamp events","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the input timestamps manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","subscribe to high-resolution keyboard timestamp events","subscribe to high-resolution pointer timestamp events","subscribe to high-resolution touch timestamp events","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","destroy the input timestamps object","The minimal object version supporting this event","","The minimal object version supporting this request","","high-resolution timestamp event","","","","","","","","","","","","","","","","","","","","","","destroy the input timestamps object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","context object for keyboard grab_manager","context object for keyboard shortcuts inhibitor","the shortcuts are already inhibited for this surface","destroy the keyboard shortcuts inhibitor object","","","create a new keyboard shortcuts inhibitor object","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the keyboard shortcuts inhibitor object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","create a new keyboard shortcuts inhibitor object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","shortcuts are inhibited","destroy the keyboard shortcuts inhibitor object","The minimal object version supporting this event","The minimal object version supporting this event","","shortcuts are restored","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the keyboard shortcuts inhibitor object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","Client-side API of this protocol","parameters for creating a dmabuf-based wl_buffer","factory for creating dmabuf-based wl_buffers","add a dmabuf to the temporary set","the dmabuf_batch object has already been used to create a …","bottom field first","create a wl_buffer from the given dmabufs","immediately create a wl_buffer from the given dmabufs","buffer creation succeeded","delete this object, used or not","The minimal object version supporting this event","The minimal object version supporting this event","","","buffer creation failed","","missing or too many planes to create a buffer","content is interlaced","invalid width or height","format not supported","invalid wl_buffer resulted from importing dmabufs via the …","offset + stride * height goes out of dmabuf bounds","plane index out of bounds","the plane index was already set","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","contents are y-inverted","","add a dmabuf to the temporary set","Returns the set containing all flags.","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","create a wl_buffer from the given dmabufs","immediately create a wl_buffer from the given dmabufs","delete this object, used or not","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","create a temporary object for buffer parameters","unbind the factory","The minimal object version supporting this event","The minimal object version supporting this event","","supported buffer format","supported buffer format modifier","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","create a temporary object for buffer parameters","unbind the factory","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","Client-side API of this protocol","buffer release explicit synchronization","protocol for providing explicit synchronization","per-surface explicit synchronization support","The minimal object version supporting this event","The minimal object version supporting this event","","release buffer with fence","release buffer immediately","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","destroy explicit synchronization factory object","","","extend surface interface for explicit synchronization","The minimal object version supporting this request","The minimal object version supporting this request","","the surface already has a synchronization object associated","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy explicit synchronization factory object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","extend surface interface for explicit synchronization","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy synchronization object","multiple fences added for a single surface commit","multiple releases added for a single surface commit","","","release fence for last-attached buffer","the fence specified by the client could not be imported","no buffer was attached","the associated wl_surface was destroyed","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set the acquire fence","the buffer does not support explicit synchronization","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy synchronization object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","release fence for last-attached buffer","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","set the acquire fence","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Client-side API of this protocol","confined pointer object","receive relative pointer motion events","constrain the movement of a pointer","pointer confined","destroy the confined pointer object","The minimal object version supporting this event","The minimal object version supporting this event","","The minimal object version supporting this request","The minimal object version supporting this request","","set a new confine region","pointer unconfined","","","","","","","","","","","","","","","","","","","","","","destroy the confined pointer object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","set a new confine region","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the locked pointer object","The minimal object version supporting this event","The minimal object version supporting this event","","lock activation event","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set the pointer cursor position hint","set a new lock region","lock deactivation event","","","","","","","","","","","","","","","","","","","","","","destroy the locked pointer object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","set the pointer cursor position hint","set a new lock region","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","pointer constraint already requested on that surface","confine pointer to a region","destroy the pointer constraints manager object","wp_pointer_constraints error values","","constraint lifetime","lock pointer to a position","the pointer constraint is defunct once deactivated","the pointer constraint may reactivate","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","confine pointer to a region","destroy the pointer constraints manager object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","lock pointer to a position","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","Client-side API of this protocol","a pinch gesture object","a swipe gesture object","touchpad gestures","multi-finger pinch begin","destroy the pinch gesture object","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","multi-finger pinch end","","The minimal object version supporting this request","","multi-finger pinch motion","","","","","","","","","","","","","","","","","","","","","","destroy the pinch gesture object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","multi-finger swipe begin","destroy the pointer swipe gesture object","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","multi-finger swipe end","","The minimal object version supporting this request","","multi-finger swipe motion","","","","","","","","","","","","","","","","","","","","","","destroy the pointer swipe gesture object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","get pinch gesture","get swipe gesture","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","destroy the pointer gesture object","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","get pinch gesture","get swipe gesture","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","destroy the pointer gesture object","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","Client-side API of this protocol","X primary selection emulation","","offer to transfer primary selection contents","offer to replace the contents of the primary selection","create a new primary selection source","destroy the primary selection device manager","","create a new primary selection device","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","create a new primary selection source","destroy the primary selection device manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","create a new primary selection device","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","introduce a new wp_primary_selection_offer","destroy the primary selection device","The minimal object version supporting this event","The minimal object version supporting this event","","The minimal object version supporting this request","The minimal object version supporting this request","","advertise a new primary selection","set the primary selection","","","","","","","","","","","","","","","","","","","","","","destroy the primary selection device","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","set the primary selection","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","destroy the primary selection offer","The minimal object version supporting this event","","advertise offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","request that the data is transferred","","","","","","","","","","","","","","","","","","","","","","","destroy the primary selection offer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","request that the data is transferred","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","request for primary selection contents was canceled","destroy the primary selection source","The minimal object version supporting this event","The minimal object version supporting this event","","add an offered mime type","The minimal object version supporting this request","The minimal object version supporting this request","","send the primary selection contents","","","","","","","","","","","","","","","","","","","","","","destroy the primary selection source","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","add an offered mime type","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","get relative pointer objects","relative pointer object","destroy the relative pointer manager object","","get a relative pointer object","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the relative pointer manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","get a relative pointer object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","release the relative pointer object","The minimal object version supporting this event","","The minimal object version supporting this request","relative pointer motion","","","","","","","","","","","","","","","","","","","","","","","release the relative pointer object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","Client-side API of this protocol","controller object for graphic tablet devices","controller object for graphic tablet devices of a seat","a physical tablet tool","graphics tablet device","release the memory for the tablet manager object","","get the tablet seat","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","release the memory for the tablet manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","get the tablet seat","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","release the memory for the tablet seat object","The minimal object version supporting this event","The minimal object version supporting this event","","The minimal object version supporting this request","","new device notification","a new tool has been used with a tablet","","","","","","","","","","","","","","","","","","","","","","release the memory for the tablet seat object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Airbrush","Brush","button event","physical button state","capability flags for a tool","tool capability notification","destroy the tool object","Distance axis","distance change event","tool description events sequence complete","tablet tool is making contact","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","Eraser","","","Finger","frame event","hardware id notification in Wacom’s format","unique hardware serial number of the tool","Lens","motion event","Mouse","Pen","Pencil","button is pressed","Pressure axis","pressure change event","proximity in event","proximity out event","The minimal object version supporting this request","The minimal object version supporting this request","button is not pressed","tool removed","","given wl_surface has another role","Z-rotation axis","z-rotation change event","set the tablet tool’s surface","Slider axis","Slider position change event","Tilt axes","tilt change event","a physical tool type","tool type","tablet tool is no longer making contact","Wheel axis","Wheel delta event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the tool object","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","set the tablet tool’s surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the tablet object","tablet description events sequence complete","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","tablet device USB vendor/product id","tablet device name","path to the device","The minimal object version supporting this request","tablet removed event","","","","","","","","","","","","","","","","","","","","","","","destroy the tablet object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","controller object for graphic tablet devices","a set of buttons, rings and strips","pad ring","pad strip","a set of buttons, rings and strips","controller object for graphic tablet devices of a seat","a physical tablet tool","graphics tablet device","release the memory for the tablet manager object","","get the tablet seat","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","release the memory for the tablet manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","get the tablet seat","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","buttons announced","destroy the pad object","tablet group description events sequence complete","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","mode switch event","mode-switch ability announced","The minimal object version supporting this request","","ring announced","strip announced","","","","","","","","","","","","","","","","","","","","","","destroy the pad object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","angle changed","destroy the ring object","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","finger","end of a ring event sequence","The minimal object version supporting this request","The minimal object version supporting this request","","set compositor feedback","ring axis source","ring event source","interaction stopped","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the ring object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","set compositor feedback","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","destroy the strip object","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","finger","end of a strip event sequence","position changed","The minimal object version supporting this request","The minimal object version supporting this request","","set compositor feedback","strip axis source","strip event source","interaction stopped","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the strip object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","set compositor feedback","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","physical button state","physical button state","buttons announced","destroy the pad object","pad description event sequence complete","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","enter event","","group announced","enter event","path to the device","the button is pressed","The minimal object version supporting this request","The minimal object version supporting this request","the button is not pressed","pad removed event","","set compositor feedback","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the pad object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","set compositor feedback","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","release the memory for the tablet seat object","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","new pad notification","The minimal object version supporting this request","","new device notification","a new tool has been used with a tablet","","","","","","","","","","","","","","","","","","","","","","release the memory for the tablet seat object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","Airbrush","Brush","button event","physical button state","capability flags for a tool","tool capability notification","destroy the tool object","Distance axis","distance change event","tool description events sequence complete","tablet tool is making contact","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","Eraser","","","Finger","frame event","hardware id notification in Wacom’s format","unique hardware serial number of the tool","Lens","motion event","Mouse","Pen","Pencil","button is pressed","Pressure axis","pressure change event","proximity in event","proximity out event","The minimal object version supporting this request","The minimal object version supporting this request","button is not pressed","tool removed","","given wl_surface has another role","Z-rotation axis","z-rotation change event","set the tablet tool’s surface","Slider axis","Slider position change event","Tilt axes","tilt change event","a physical tool type","tool type","tablet tool is no longer making contact","Wheel axis","Wheel delta event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the tool object","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","set the tablet tool’s surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the tablet object","tablet description events sequence complete","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","tablet device USB vendor/product id","tablet device name","path to the device","The minimal object version supporting this request","tablet removed event","","","","","","","","","","","","","","","","","","","","","","","destroy the tablet object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","Client-side API of this protocol","text input manager","text input","create text input","","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","create text input","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","request activation","","allow only alphabetic characters","automatic text direction based on text and language","switch to uppercase letters at the start of a sentence","suggest word completions","suggest word corrections","","commit","content hint","content purpose","set cursor to new position","input a date","input a date and time","request deactivation","default style for composing text","auto completion, correction and capitalization","delete surrounding text","allow only digits","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","input an email address","enter event","","characters should be hidden","hide input panels","","","","state of the input panel","","keysym","language","just latin characters should be entered","leave event","prefer lowercase letters","left-to-right","modifiers map","the text input is multiline","input a name of a person","style should be the same as in non-composing text","no special behaviour","default input, allowing all characters","input a number (including decimal separator and sign)","input a password (combine with password or sensitive_data …","hidden and sensitive text","input a phone number","pre-edit cursor","pre-edit","","pre-edit styling","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","reset","right-to-left","","typed text should not be stored","set content purpose and hint","","sets preferred language","sets the surrounding text","show input panels","input for a terminal","","text direction","input a time","prefer casing for titles and headings (can be language …","","prefer uppercase letters","input an URL","","request activation","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","request deactivation","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","hide input panels","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","reset","Inserts or removes the specified flags depending on the …","set content purpose and hint","","sets preferred language","sets the surrounding text","show input panels","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","text input manager","text input","Destroy the wp_text_input_manager","","create a new text input object","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","Destroy the wp_text_input_manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","create a new text input object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","allow only alphabetic characters","switch to uppercase letters at the start of a sentence","text change reason","commit state","text commit","suggest word completions","content hint","content purpose","input a date","input a date and time","delete surrounding text","Destroy the wp_text_input","allow only digits","Disable text input on a surface","apply changes","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","input an email address","Request text input to be enabled","enter event","","characters should be hidden","input method caused the change","just Latin characters should be entered","leave event","prefer lowercase letters","the text input is multiline","input a name of a person","no special behavior","default input, allowing all characters","input a number (including decimal separator and sign)","something else than the input method caused the change","input a password (combine with sensitive_data hint)","input a phone number","input is a numeric password (combine with sensitive_data …","pre-edit","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","typed text should not be stored","set content purpose and hint","set cursor position","sets the surrounding text","indicates the cause of surrounding text change","suggest word corrections","input for a terminal","input a time","prefer casing for titles and headings (can be language …","prefer uppercase letters","input an URL","","Returns the set containing all flags.","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","commit state","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Destroy the wp_text_input","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Disable text input on a surface","Returns an empty set of flags.","Request text input to be enabled","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","set content purpose and hint","set cursor position","sets the surrounding text","indicates the cause of surrounding text change","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","window decoration manager","decoration object for a toplevel surface","destroy the decoration manager object","","create a new toplevel decoration object","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the decoration manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","create a new toplevel decoration object","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","xdg_toplevel already has a decoration object","no server-side window decoration","suggest a surface change","destroy the decoration object","The minimal object version supporting this event","","","window decoration modes","xdg_toplevel destroyed before the decoration object","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","server-side window decoration","set the decoration mode","xdg_toplevel has a buffer attached before configure","unset the decoration mode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the decoration object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","set the decoration mode","","","","","","","","","","","","","","","","","","","","","","","unset the decoration mode","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","an exported surface handle","interface for exporting surfaces","an imported surface handle","interface for importing surfaces","unexport the exported surface","The minimal object version supporting this event","","the exported surface handle","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","unexport the exported surface","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_exporter object","","export a surface","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_exporter object","","","export a surface","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_imported object","the imported surface handle has been destroyed","The minimal object version supporting this event","","The minimal object version supporting this request","The minimal object version supporting this request","","set as the parent of some surface","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_imported object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","set as the parent of some surface","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_importer object","","import a surface","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_importer object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","import a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","Client-side API of this protocol","an exported surface handle","interface for exporting surfaces","an imported surface handle","interface for importing surfaces","unexport the exported surface","The minimal object version supporting this event","","the exported surface handle","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","unexport the exported surface","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_exporter object","error values","","export a toplevel surface","surface is not an xdg_toplevel","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_exporter object","","","","export a toplevel surface","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_imported object","the imported surface handle has been destroyed","The minimal object version supporting this event","error values","","surface is not an xdg_toplevel","The minimal object version supporting this request","The minimal object version supporting this request","","set as the parent of some surface","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_imported object","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","set as the parent of some surface","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy the xdg_importer object","","import a toplevel surface","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_importer object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","import a toplevel surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Client-side API of this protocol","manage xdg_output objects","compositor logical output region","destroy the xdg_output_manager object","","create an xdg output from a wl_output","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_output_manager object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","create an xdg output from a wl_output","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","human-readable description of this output","destroy the xdg_output object","all information about the output have been sent","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","position of the output within the global compositor space","size of the output in the global compositor space","name of this output","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_output object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","Client-side API of this protocol","short-lived, popup surfaces for menus","create desktop-style surfaces","A desktop window","remove xdg_popup interface","The minimal object version supporting this event","","popup interaction is done","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","remove xdg_popup interface","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Always the latest version","xdg_shell was destroyed before children","destroy xdg_shell","The minimal object version supporting this event","","","create a popup for a surface","create a shell surface from a surface","the client specified an invalid popup parent surface","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","given wl_surface has another role","enable use of this unstable version","latest protocol version","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy xdg_shell","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","create a popup for a surface","create a shell surface from a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","respond to a ping event","","","","","","","","","","","","","","","","","","","","","","","enable use of this unstable version","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","ack a configure event","the surface is now activated","","","","surface wants to be closed","suggest a surface change","Destroy the xdg_surface","The minimal object version supporting this event","The minimal object version supporting this event","","the surface is fullscreen","","the surface is maximized","start an interactive move","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on a monitor","maximize the window","set the window as minimized","set the parent of this surface","set surface title","set the new window geometry","show the window menu","types of state on the surface","","","","","unmaximize the window","","start an interactive move","ack a configure event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Destroy the xdg_surface","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","start an interactive resize","set application ID","set the window as fullscreen on a monitor","maximize the window","set the window as minimized","set the parent of this surface","set surface title","set the new window geometry","show the window menu","","","","","","","","","","","","","","","","","","","","","","","","unmaximize the window","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","short-lived, popup surfaces for menus","child surface positioner","create desktop-style surfaces","desktop user interface surface base interface","toplevel surface","configure the popup surface","remove xdg_popup interface","The minimal object version supporting this event","The minimal object version supporting this event","","","make the popup take an explicit grab","tried to grab after being mapped","popup interaction is done","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","remove xdg_popup interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","make the popup take an explicit grab","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","the bottom edge of the anchor rectangle","position below the anchor edge","constraint adjustments","destroy the xdg_positioner object","","","invert the anchor and gravity on the x axis","invert the anchor and gravity on the y axis","","invalid input provided","the left edge of the anchor rectangle","position to the left of the anchor edge","the center of the anchor rectangle","center over the anchor edge","don’t move the child surface when constrained","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","horizontally resize the surface","vertically resize the surface","the right edge of the anchor rectangle","position to the right of the anchor edge","set anchor rectangle anchor edges","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set the size of the to-be positioned rectangle","move along the x axis until unconstrained","move along the y axis until unconstrained","the top edge of the anchor rectangle","position above the anchor edge","","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","destroy the xdg_positioner object","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","set anchor rectangle anchor edges","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set the size of the to-be positioned rectangle","","","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","create a positioner object","xdg_shell was destroyed before children","destroy xdg_shell","The minimal object version supporting this event","","","create a shell surface from a surface","the client specified an invalid popup parent surface","the client provided an invalid positioner","the client provided an invalid surface state","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","given wl_surface has another role","","","","","","","","","","","","","","","","","","","","","","","","","","","","create a positioner object","destroy xdg_shell","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","create a shell surface from a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","respond to a ping event","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","ack a configure event","","suggest a surface change","destroy the xdg_surface","The minimal object version supporting this event","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set the new window geometry","","","ack a configure event","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","set the new window geometry","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","the surface is now activated","","","","surface wants to be closed","suggest a surface change","destroy the xdg_toplevel","The minimal object version supporting this event","The minimal object version supporting this event","","the surface is fullscreen","","the surface is maximized","start an interactive move","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on a monitor","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","types of state on the surface","","","","","unmaximize the window","","start an interactive move","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_toplevel","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","start an interactive resize","set application ID","set the window as fullscreen on a monitor","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","","","","","","","","","","","","","","","","","","","","","","","","unmaximize the window","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","context object for keyboard grab manager","interface for grabbing the keyboard","destroy the keyboard grab manager","","grab the keyboard to a surface","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the keyboard grab manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","grab the keyboard to a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","destroy the grabbed keyboard object","","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the grabbed keyboard object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","Client-side API of this protocol","crop and scale interface to a wl_surface","surface cropping and scaling","destination size is not integer","negative or zero values in width or height","remove scaling and cropping from the surface","","","the wl_surface was destroyed","source rectangle extends outside of the content area","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set the surface size for scaling","set the source rectangle for cropping","","","","","","","","","","","","","","","","","","","","","","","","","","","","remove scaling and cropping from the surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","set the surface size for scaling","set the source rectangle for cropping","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","unbind from the cropping and scaling interface","","","extend surface interface for crop and scale","The minimal object version supporting this request","The minimal object version supporting this request","","the surface already has a viewport object associated","","","","","","","","","","","","","","","","","","","","","","","","","","","","unbind from the cropping and scaling interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","extend surface interface for crop and scale","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","Unstable protocols from wlr-protocols","Control data devices, particularly the clipboard.","A protocol for low overhead screen content capturing","List and control opened apps","Manage gamma tables of outputs.","Inhibits input events to other clients","Layered shell protocol","Output management protocol","Output power management protocol","Screen content capturing on client buffers","Virtual pointer protocol","","Client-side API of this protocol","manage a data device for a seat","manager to control data devices","offer to transfer data","offer to transfer data","introduce a new wlr_data_control_offer","destroy this data device","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","this data control is no longer valid","advertise new primary selection","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","advertise new selection","copy data to the primary selection","copy data to the selection","source given to set_selection or set_primary_selection was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy this data device","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","copy data to the primary selection","copy data to the selection","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","create a new data source","destroy the manager","","get a data device for a seat","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","create a new data source","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","get a data device for a seat","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy this offer","The minimal object version supporting this event","","advertise offered MIME type","The minimal object version supporting this request","The minimal object version supporting this request","request that the data is transferred","","","","","","","","","","","","","","","","","","","","","","","destroy this offer","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","request that the data is transferred","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","selection was cancelled","destroy this source","The minimal object version supporting this event","The minimal object version supporting this event","","","offer sent after wlr_data_control_device.set_selection","add an offered MIME type","The minimal object version supporting this request","The minimal object version supporting this request","","send the data","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy this source","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","add an offered MIME type","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","Client-side API of this protocol","a DMA-BUF frame","manager to inform clients and begin capturing","indicates the frame is no longer valid","cancel reason","delete this object, used or not","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","frame flags","a frame description","an object description","fatal error, source will not produce frames","The minimal object version supporting this request","indicates frame is available for reading","","temporary error, source will produce more frames","temporary error, source will produce more frames","clients should copy frame before processing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","delete this object, used or not","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","capture a frame from an output","destroy the manager","","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","capture a frame from an output","","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","Client-side API of this protocol","an opened toplevel","list and control opened apps","activate the toplevel","the toplevel is active","app-id change","request that the toplevel be closed","this toplevel has been destroyed","destroy the zwlr_foreign_toplevel_handle_v1 object","all information about the toplevel has been sent","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","the toplevel is fullscreen","the provided rectangle is invalid","the toplevel is maximized","the toplevel is minimized","toplevel entered an output","toplevel left an output","parent change","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","request that the toplevel be fullscreened","requests that the toplevel be maximized","requests that the toplevel be minimized","the rectangle which represents the toplevel","types of states on the toplevel","the toplevel state changed","title change","request that the toplevel be unfullscreened","requests that the toplevel be unmaximized","requests that the toplevel be unminimized","","activate the toplevel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","request that the toplevel be closed","destroy the zwlr_foreign_toplevel_handle_v1 object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","request that the toplevel be fullscreened","requests that the toplevel be maximized","requests that the toplevel be minimized","the rectangle which represents the toplevel","","","","","","","","","","","","","","","","","","","","","","","request that the toplevel be unfullscreened","requests that the toplevel be unmaximized","requests that the toplevel be unminimized","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","The minimal object version supporting this event","The minimal object version supporting this event","","the compositor has finished with the toplevel manager","The minimal object version supporting this request","","stop sending events","a toplevel has been created","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","stop sending events","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","Client-side API of this protocol","manager to create per-output gamma controls","adjust gamma tables for an output","destroy the manager","","get a gamma control for an output","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","get a gamma control for an output","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy this control","The minimal object version supporting this event","The minimal object version supporting this event","","","object no longer valid","size of gamma ramps","invalid gamma tables","The minimal object version supporting this request","The minimal object version supporting this request","","set the gamma table","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy this control","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","set the gamma table","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","Client-side API of this protocol","inhibits input events to other clients","inhibits input to other clients","an input inhibitor is already in use on the compositor","","","inhibit input to other clients","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","inhibit input to other clients","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","destroy the input inhibitor object","","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the input inhibitor object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","Client-side API of this protocol","create surfaces that are layers of the desktop","layer metadata interface","wl_surface has a buffer attached or committed","","","destroy the layer_shell object","","","create a layer_surface from a surface","layer value is invalid","available layers for surfaces","","The minimal object version supporting this request","The minimal object version supporting this request","","wl_surface has another role","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the layer_shell object","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","create a layer_surface from a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","ack a configure event","","the bottom edge of the anchor rectangle","surface should be closed","suggest a surface change","destroy the layer_surface","The minimal object version supporting this event","The minimal object version supporting this event","","","request exclusive keyboard focus","assign this layer_surface as an xdg_popup parent","anchor bitfield is invalid","keyboard interactivity is invalid","size is invalid","provided surface state is invalid","types of keyboard interaction possible for a layer shell …","the left edge of the anchor rectangle","no keyboard focus is possible","request regular keyboard focus semantics","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","the right edge of the anchor rectangle","configures the anchor point of the surface","configures the exclusive geometry of this surface","requests keyboard events","change the layer of the surface","sets a margin from the anchor point","sets the size of the surface","the top edge of the anchor rectangle","","ack a configure event","Returns the set containing all flags.","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","destroy the layer_surface","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","assign this layer_surface as an xdg_popup parent","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","configures the anchor point of the surface","configures the exclusive geometry of this surface","requests keyboard events","change the layer of the surface","sets a margin from the anchor point","sets the size of the surface","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","Client-side API of this protocol","head configuration","output configuration","output device","output device configuration manager","output mode","property has already been set","","","mode is invalid","mode doesn’t belong to head","scale negative or zero","transform value outside enum","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set a custom mode","set the mode","set the position","set the scale","set the transform","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","set a custom mode","set the mode","set the position","set the scale","set the transform","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","head has been configured twice","request sent after configuration has been applied or tested","apply the configuration","configuration has been cancelled","destroy the output configuration","disable a head","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","enable and configure a head","","","configuration changes failed","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","configuration changes succeeded","test the configuration","head has not been configured","","apply the configuration","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the output configuration","disable a head","enable and configure a head","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","test the configuration","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","current mode","head description","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","head is enabled or disabled","","the head has been destroyed","head manufacturer","introduce a mode","head model","head name","head physical size","current position","","current scale","head serial number","current transformation","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","","","","","","","","","","","","","","create a new output configuration object","sent all information about current configuration","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","the compositor has finished with the manager","introduce a new head","The minimal object version supporting this request","The minimal object version supporting this request","","stop sending events","","","","","","","","","","","","","","","","","","","","","","create a new output configuration object","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","stop sending events","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","the mode has been destroyed","mode is preferred","mode refresh rate","","mode size","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","","","","","Client-side API of this protocol","manager to create per-output power management","adjust power management mode for an output","destroy the manager","","get a power management for an output","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","get a power management for an output","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","destroy this power management","The minimal object version supporting this event","The minimal object version supporting this event","","","object no longer valid","nonexistent power save mode","","Report a power management mode change","Output is turned off.","Output is turned on, no power saving","The minimal object version supporting this request","The minimal object version supporting this request","","Set an outputs power save mode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy this power management","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Set an outputs power save mode","","","","","","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","Client-side API of this protocol","a frame ready for copy","manager to inform clients and begin capturing","the object has already been used to copy a wl_buffer","wl_shm buffer information","all buffer types reported","copy the frame","copy the frame when it’s damaged","carries the coordinates of the damaged region","delete this object, used or not","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","frame copy failed","","frame flags","buffer attributes are invalid","linux-dmabuf buffer information","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","indicates frame is available for reading","","contents are y-inverted","","Returns the set containing all flags.","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","copy the frame","copy the frame when it’s damaged","delete this object, used or not","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","capture an output","capture an output’s region","destroy the manager","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","capture an output","capture an output’s region","","","","","destroy the manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","Client-side API of this protocol","virtual pointer manager","virtual pointer","Create a new virtual pointer","Create a new virtual pointer","destroy the virtual pointer manager","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","","","","","","","","","","Create a new virtual pointer","Create a new virtual pointer","destroy the virtual pointer manager","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","axis event","axis click event","axis source event","axis stop event","button event","destroy the virtual pointer object","","","end of a pointer event sequence","client sent invalid axis enumeration value","client sent invalid axis source enumeration value","pointer relative motion event","pointer absolute motion event","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","","","","","","","","","","","","","axis event","axis click event","axis source event","axis stop event","","","","","","","","","button event","","","","","","","","destroy the virtual pointer object","","","","","","","","end of a pointer event sequence","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","pointer relative motion event","pointer absolute motion event","","","","","","","","","","","","","","","","","","","","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","","Client-side API of this protocol","short-lived, popup surfaces for menus","child surface positioner","desktop user interface surface base interface","toplevel surface","create desktop-style surfaces","configure the popup surface","remove xdg_popup interface","The minimal object version supporting this event","The minimal object version supporting this event","The minimal object version supporting this event","","","make the popup take an explicit grab","tried to grab after being mapped","popup interaction is done","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","recalculate the popup’s location","signal the completion of a repositioned request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","remove xdg_popup interface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","make the popup take an explicit grab","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","recalculate the popup’s location","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","constraint adjustments","destroy the xdg_positioner object","","","invert the anchor and gravity on the x axis","invert the anchor and gravity on the y axis","","invalid input provided","","","","","don’t move the child surface when constrained","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","horizontally resize the surface","vertically resize the surface","","","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","move along the x axis until unconstrained","move along the y axis until unconstrained","","","","","","","","Returns the set containing all flags.","","","","","","","","","","","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","destroy the xdg_positioner object","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","","","Returns <code>true</code> if no flags are currently stored.","Returns the complement of this set of flags.","","","","Removes the specified flags in-place.","Inserts or removes the specified flags depending on the …","set anchor rectangle anchor","set the anchor rectangle within the parent surface","set the adjustment to be done when constrained","set child surface gravity","set surface position offset","set parent configure this is a response to","Set the parent window geometry the compositor should use …","continuously reconstrain the surface","set the size of the to-be positioned rectangle","","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","ack a configure event","","suggest a surface change","destroy the xdg_surface","The minimal object version supporting this event","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","set the new window geometry","","","ack a configure event","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_surface","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","assign the xdg_popup surface role","assign the xdg_toplevel surface role","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","set the new window geometry","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","the surface is now activated","","","","surface wants to be closed","suggest a surface change","destroy the xdg_toplevel","The minimal object version supporting this event","The minimal object version supporting this event","","the surface is fullscreen","","the surface is maximized","start an interactive move","","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","start an interactive resize","edge values for resizing","the surface is being resized","","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","types of state on the surface","the surface is tiled","the surface is tiled","the surface is tiled","the surface is tiled","","","","unset the window as fullscreen","unmaximize the window","","start an interactive move","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destroy the xdg_toplevel","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","start an interactive resize","set application ID","set the window as fullscreen on an output","set the maximum size","maximize the window","set the minimum size","set the window as minimized","set the parent of this surface","set surface title","show the window menu","","","","","","","","","","","","","","","","","","","","","","","unset the window as fullscreen","unmaximize the window","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","","","","","","","","","","","","","","","","","","","","create a positioner object","xdg_wm_base was destroyed before children","destroy xdg_wm_base","The minimal object version supporting this event","","","create a shell surface from a surface","the client specified an invalid popup parent surface","the client provided an invalid positioner","the client provided an invalid surface state","the client tried to map or destroy a non-topmost popup","check if the client is alive","respond to a ping event","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","The minimal object version supporting this request","","given wl_surface has another role","","","","","","","","","","","","","","","","","","","","","","","","","","","","create a positioner object","destroy xdg_wm_base","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","create a shell surface from a surface","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","respond to a ping event","","","","","","","","","","","","","","","","","","C-representation of the messages of this interface, for …","C representation of this interface, for interop","C-representation of the messages of this interface, for …","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,0,0,0,0,0,0,0,4,2,2,4,5,2,4,5,2,4,5,2,4,5,2,4,5,5,2,4,5,5,5,5,5,2,4,5,2,4,5,5,2,4,2,4,0,0,0,2,4,5,2,4,5,2,5,2,4,5,2,4,2,4,2,4,5,2,4,5,2,4,5,2,4,5,2,4,5,458,459,460,460,26,26,0,26,0,0,0,0,0,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,28,26,27,28,28,28,28,28,28,26,27,28,26,27,28,28,26,27,26,27,28,0,0,26,27,28,26,27,28,26,27,28,26,27,28,26,27,26,27,26,27,26,27,28,26,27,28,26,27,28,26,27,28,461,31,0,0,0,32,0,0,31,0,31,32,33,31,32,33,31,32,33,31,32,33,31,32,33,33,31,32,33,33,33,33,33,31,32,33,31,32,33,33,31,32,31,32,0,0,0,31,32,33,31,32,33,31,32,33,31,32,33,31,32,31,32,31,32,33,31,32,33,31,32,33,31,32,33,31,32,33,462,463,463,37,36,0,0,0,0,36,0,0,0,37,36,37,24,36,37,24,36,37,24,36,37,24,36,37,24,24,36,37,24,24,24,24,24,36,37,24,36,37,24,24,36,37,36,37,0,0,0,36,37,24,36,37,24,36,37,24,36,37,24,36,37,36,37,24,36,37,36,37,24,36,37,24,36,37,24,36,37,24,464,464,465,0,0,0,41,0,0,0,39,41,0,0,0,38,0,38,41,41,38,39,40,41,38,39,40,38,39,40,41,38,39,40,41,38,39,40,40,38,39,41,40,41,40,41,40,40,41,38,39,40,41,38,39,40,40,41,38,39,38,39,41,38,39,40,41,38,39,40,41,38,39,40,41,38,39,40,38,39,38,39,38,39,0,0,0,40,40,38,39,41,40,41,41,38,39,40,41,38,39,40,41,38,39,40,466,467,45,42,43,0,0,0,45,0,0,0,45,45,42,43,44,45,42,43,44,42,43,44,45,42,43,44,45,42,43,44,44,42,43,45,44,45,44,44,45,44,44,45,42,43,44,45,42,43,44,44,45,42,43,42,43,45,42,43,44,45,42,43,44,45,42,43,44,45,42,43,44,42,43,42,43,42,43,0,0,0,42,43,45,44,45,45,42,43,44,45,42,43,44,45,42,43,44,468,469,0,0,0,0,0,0,0,0,0,0,48,48,48,0,47,48,0,0,47,48,49,47,48,49,47,48,49,47,48,49,47,48,49,49,47,48,49,49,49,49,47,48,49,47,48,49,49,47,48,47,48,47,48,49,47,48,49,47,48,49,47,48,49,47,48,47,48,47,48,49,47,48,49,47,48,49,47,48,49,47,48,49,0,0,0,470,471,471,472,473,472,472,472,470,473,472,471,473,473,50,0,50,0,0,0,0,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,52,50,51,52,52,52,52,52,50,51,52,50,51,52,52,50,51,50,51,52,50,51,52,50,51,52,50,51,52,50,51,52,50,51,50,51,50,51,50,51,52,50,51,52,50,51,52,50,51,52,0,0,474,55,54,54,55,55,54,54,55,0,0,0,0,0,0,0,0,54,54,0,0,0,0,0,0,0,0,54,55,55,55,0,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,53,54,55,53,53,53,53,53,53,53,53,54,55,53,54,55,53,53,54,55,54,55,53,53,54,55,53,54,55,53,54,55,53,54,55,53,54,55,54,55,54,55,53,54,55,53,54,55,53,54,55,53,54,55,53,0,0,0,475,476,475,477,477,475,478,478,479,479,480,481,482,479,58,0,0,0,0,59,0,58,59,56,58,59,56,58,59,56,58,59,56,58,59,56,56,58,59,56,56,56,56,56,58,59,56,58,59,56,56,58,59,58,59,58,59,56,58,59,56,58,59,56,58,59,56,58,59,58,59,58,59,58,59,56,58,59,56,58,59,56,58,59,56,0,0,0,483,483,483,483,0,0,0,61,60,0,0,0,60,63,63,0,0,0,0,63,60,61,62,63,60,61,62,60,61,62,63,60,61,62,63,60,61,62,62,60,61,63,62,63,62,62,63,62,62,62,63,60,61,62,63,60,61,62,62,63,60,61,60,61,63,60,61,62,63,60,61,62,63,60,61,62,63,60,61,62,60,61,60,61,60,61,60,61,63,62,63,63,60,61,62,63,60,61,62,63,60,61,62,0,0,0,484,485,67,0,0,0,0,65,65,0,67,0,67,65,0,65,65,65,66,67,64,65,66,67,64,66,67,64,65,65,65,65,65,65,65,65,66,67,64,65,66,67,64,64,66,67,65,64,65,64,65,65,65,65,65,65,64,65,64,65,65,65,65,65,65,66,67,64,65,66,67,64,64,65,65,65,65,65,66,67,66,67,65,65,65,65,65,66,67,64,65,66,67,64,65,66,67,64,65,66,67,64,66,67,65,66,67,65,65,66,67,65,65,65,66,67,65,65,65,65,64,65,65,65,66,67,64,65,66,67,64,65,66,67,64,65,0,0,486,487,486,486,486,486,486,486,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,72,72,72,0,0,71,72,73,71,72,73,71,72,73,71,72,73,71,72,73,73,71,72,73,73,73,73,71,72,73,71,72,73,73,71,72,71,72,71,72,73,71,72,73,71,72,73,71,72,73,71,72,71,72,71,72,71,72,73,71,72,73,71,72,73,71,72,73,0,0,77,0,75,78,77,78,0,0,0,79,0,74,74,0,0,0,74,0,79,78,78,78,0,77,78,79,74,75,76,77,78,79,74,75,76,74,75,76,77,78,79,74,75,76,77,78,79,74,75,76,76,74,75,77,78,79,76,77,78,79,76,77,78,79,76,76,77,78,79,74,75,76,77,78,79,74,75,76,76,77,78,79,74,75,74,75,77,78,79,74,75,76,77,78,79,74,75,76,77,78,79,74,75,76,77,78,79,74,75,76,74,75,74,75,74,75,76,76,76,74,75,77,78,79,76,77,78,79,77,78,79,74,75,76,77,78,79,74,75,76,77,78,79,74,75,76,0,0,0,488,489,490,490,489,490,489,0,0,0,0,81,81,0,0,0,0,0,81,82,83,81,82,83,81,82,83,81,82,83,81,82,83,83,81,82,83,83,83,83,83,83,81,82,83,81,82,83,83,81,82,81,82,81,82,83,81,82,83,81,82,83,81,82,83,81,82,81,82,81,82,81,82,83,81,82,83,81,82,83,81,82,83,0,0,491,85,0,0,0,0,85,86,84,85,86,84,85,86,84,85,86,84,85,86,84,84,85,86,84,84,84,84,84,85,86,84,85,86,84,84,85,86,85,86,85,86,84,85,86,84,85,86,84,85,86,84,85,86,85,86,85,86,85,86,84,85,86,84,85,86,84,85,86,84,0,0,0,0,0,0,0,0,88,87,88,87,87,87,0,0,0,0,0,0,0,87,88,87,87,87,87,87,87,87,87,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,88,87,0,87,88,89,87,88,89,87,88,89,87,88,89,87,88,89,89,87,88,89,89,89,89,89,89,89,89,87,88,89,87,88,89,89,87,88,87,88,89,87,88,89,87,88,89,87,88,89,87,88,89,87,88,87,88,89,89,89,89,89,87,88,89,89,89,87,88,89,89,87,88,89,87,88,89,87,88,89,0,0,0,492,493,492,494,493,495,494,496,492,497,498,499,500,501,502,503,497,504,505,501,503,506,507,500,500,500,508,498,507,504,500,505,499,507,504,501,507,508,498,507,504,94,94,0,0,0,0,0,93,94,95,93,94,95,93,94,95,93,94,95,93,94,95,95,93,94,95,95,95,95,93,94,95,93,94,95,95,93,94,93,94,93,94,95,93,94,95,93,95,93,94,95,93,94,93,94,93,94,93,94,95,93,94,95,93,94,95,93,94,95,0,0,509,510,99,0,0,0,0,0,96,96,0,99,96,97,98,99,96,97,98,96,97,98,99,96,97,98,99,96,97,98,98,96,97,99,98,99,98,99,98,98,99,96,97,98,99,96,97,98,98,99,96,97,96,97,99,96,97,98,99,96,97,98,99,96,97,98,99,96,97,98,96,97,96,97,96,97,98,98,96,97,99,98,99,99,96,97,98,99,96,97,98,99,96,97,98,0,0,511,511,0,100,0,0,0,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,102,100,101,102,102,102,102,100,101,102,100,101,102,102,100,101,100,101,102,100,101,102,100,101,102,100,101,102,100,101,102,100,101,100,101,100,101,100,101,102,100,101,102,100,101,102,100,101,102,0,0,512,0,0,0,0,103,0,103,103,103,0,0,0,0,0,0,103,104,105,103,104,105,103,104,105,103,104,105,103,104,105,105,103,104,105,105,105,105,105,103,104,105,103,104,105,105,103,104,103,104,105,105,105,103,104,105,103,104,105,103,104,105,103,104,105,103,104,103,104,103,104,103,104,105,103,104,105,103,104,105,103,104,105,0,0,513,514,515,109,0,0,0,0,110,0,109,110,106,109,110,106,109,110,106,109,110,106,109,110,106,106,109,110,106,106,106,106,106,109,110,106,109,110,106,106,109,110,109,110,109,110,106,109,110,106,109,110,106,109,110,106,109,110,109,110,109,110,109,110,106,109,110,106,109,110,106,109,110,106,0,0,0,516,516,516,0,0,0,0,114,111,0,0,111,0,0,0,0,114,111,112,113,114,111,112,113,111,112,113,114,111,112,113,114,111,112,113,113,111,112,114,113,114,113,113,114,113,113,114,111,112,113,114,111,112,113,113,114,111,112,111,112,113,114,111,112,113,114,111,112,113,114,111,112,113,114,111,112,113,111,112,111,112,111,112,111,112,114,113,114,114,111,112,113,114,111,112,113,114,111,112,113,0,0,517,517,117,116,0,0,0,117,0,0,0,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,115,116,117,115,115,115,115,115,116,117,115,116,117,115,115,116,117,116,117,116,117,115,116,117,115,116,117,115,116,117,115,116,117,116,117,116,117,116,117,115,116,117,115,116,117,115,116,117,115,0,0,0,0,0,0,0,120,122,119,120,120,121,120,0,0,0,0,121,0,122,119,122,122,122,122,122,122,0,0,0,0,0,119,0,118,119,122,119,120,121,118,122,119,120,121,118,120,121,118,119,119,119,119,119,119,119,122,119,120,121,118,122,119,120,121,118,118,120,121,122,119,118,122,119,118,119,119,119,118,118,118,119,119,122,119,118,119,118,119,122,119,119,119,119,119,120,121,118,122,119,120,121,118,118,119,119,119,119,122,119,120,121,120,121,119,119,119,119,122,119,120,121,118,122,119,120,121,118,122,119,120,118,122,119,120,121,118,120,121,119,120,121,119,119,120,121,119,119,119,120,121,119,119,119,122,119,118,122,119,119,122,119,120,121,118,122,119,120,121,118,122,119,120,121,118,119,0,0,0,518,519,520,521,520,521,520,521,519,519,519,519,519,520,521,124,124,0,0,0,125,125,0,0,0,0,124,125,126,124,125,126,124,125,126,124,125,126,124,125,126,126,124,125,126,126,126,126,126,126,124,125,126,124,125,126,126,124,125,124,125,124,125,126,124,125,126,124,125,126,124,125,126,124,125,124,125,124,125,124,125,126,124,125,126,124,125,126,124,125,126,0,0,0,522,523,523,523,0,0,0,0,0,0,0,0,128,128,0,0,127,128,129,127,128,129,127,128,129,127,128,129,127,128,129,129,127,128,129,129,129,129,127,128,129,127,128,129,129,127,128,127,128,127,128,129,127,128,129,127,128,129,127,128,129,127,128,127,128,127,128,127,128,129,127,128,129,127,128,129,127,128,129,0,0,524,130,0,0,130,0,0,0,133,0,133,130,131,132,133,130,131,132,130,131,132,133,130,131,132,133,130,131,132,132,130,131,133,132,133,132,132,133,132,132,133,130,131,132,133,130,131,132,132,133,130,131,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,133,130,131,132,130,131,130,131,130,131,130,131,133,132,133,133,130,131,132,133,130,131,132,133,130,131,132,0,0,525,135,137,137,0,0,135,137,137,137,0,0,0,0,135,137,0,137,135,136,134,137,135,136,134,135,136,134,137,135,136,134,137,135,136,134,134,135,136,137,134,137,134,134,137,134,134,137,135,136,134,137,135,136,134,134,137,135,136,135,136,134,137,135,136,134,137,135,136,134,137,135,136,134,137,135,136,134,135,136,135,136,135,136,134,135,136,137,134,137,137,135,136,134,137,135,136,134,137,135,136,134,0,0,526,0,0,0,0,0,139,138,0,0,0,0,0,0,138,139,0,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,140,138,139,140,140,140,140,140,138,139,140,138,139,140,140,138,139,138,139,138,139,140,138,139,140,138,139,140,138,139,140,138,139,138,139,138,139,140,138,139,140,138,139,140,138,139,140,138,139,140,0,0,0,527,142,0,0,0,143,0,0,0,0,142,142,143,0,142,143,144,142,143,144,142,143,144,142,143,144,142,143,144,144,142,143,144,144,144,144,144,142,143,144,142,143,144,144,142,143,142,143,142,143,144,142,143,144,142,143,144,142,143,144,142,143,142,143,142,143,144,144,142,143,144,142,143,144,142,143,144,142,143,144,0,0,0,528,529,529,149,146,146,0,0,0,146,150,150,0,0,0,0,0,149,150,146,147,148,149,150,146,147,148,146,147,148,149,150,146,147,148,149,150,146,147,148,148,146,147,149,150,148,149,150,148,148,148,149,150,148,148,149,150,146,147,148,149,150,146,147,148,148,149,150,146,147,146,147,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,146,147,146,147,148,146,147,146,147,149,150,148,149,150,149,150,146,147,148,149,150,146,147,148,149,150,146,147,148,0,0,530,531,530,531,530,531,530,531,0,0,0,0,0,152,151,0,0,0,152,0,0,0,152,0,151,152,153,151,152,153,151,152,153,151,152,153,151,152,153,153,151,152,153,153,153,153,153,151,152,153,151,152,153,153,151,152,151,152,151,152,153,151,152,153,151,152,153,151,152,153,151,152,151,152,151,152,151,152,153,151,152,153,151,152,153,151,152,153,0,0,0,532,533,533,534,533,533,534,532,534,534,533,532,155,154,0,0,0,155,0,0,0,155,0,154,155,156,154,155,156,154,155,156,154,155,156,154,155,156,156,154,155,156,156,156,156,156,154,155,156,154,155,156,156,154,155,154,155,154,155,156,154,155,156,154,155,156,154,155,156,154,155,154,155,154,155,154,155,156,154,155,156,154,155,156,154,155,156,0,0,0,535,536,536,537,537,535,537,537,536,535,0,157,157,0,0,0,157,0,0,157,158,159,157,158,159,157,158,159,157,158,159,157,158,159,159,157,158,159,159,159,159,157,158,159,157,158,159,159,157,158,157,158,159,159,157,158,159,157,158,159,157,158,159,157,158,159,157,158,157,158,157,158,159,157,158,159,157,158,159,157,158,159,157,158,159,0,0,538,539,0,0,0,0,0,0,160,160,0,160,0,0,0,0,0,160,161,162,160,161,162,160,161,162,160,161,162,160,161,162,162,160,161,162,162,162,162,162,162,160,161,162,160,161,162,162,160,161,160,161,162,160,161,162,160,161,162,160,161,162,160,161,162,160,161,160,161,160,161,160,161,162,160,161,162,160,161,162,160,161,162,0,0,540,166,165,0,0,0,0,0,0,166,165,0,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,164,165,166,164,164,164,164,164,165,166,164,165,166,164,164,165,166,165,166,165,166,164,165,166,164,165,164,165,166,164,165,166,165,166,165,166,164,165,166,164,165,166,164,165,166,164,165,166,164,0,0,0,541,542,543,543,167,0,0,168,0,0,167,0,0,167,168,169,167,168,169,167,168,169,167,168,169,167,168,169,169,167,168,169,169,169,169,169,167,168,169,167,168,169,169,167,168,167,168,167,168,169,167,168,169,167,168,169,167,168,169,167,168,167,168,167,168,169,167,168,169,167,168,169,167,168,169,167,168,169,0,0,0,544,545,545,171,170,0,0,0,170,0,0,0,171,0,170,171,163,170,171,163,170,171,163,170,171,163,170,171,163,163,170,171,163,163,163,163,163,170,171,163,170,171,163,163,170,171,170,171,170,171,163,170,171,163,170,171,163,170,171,163,170,171,170,171,163,170,171,170,171,163,170,171,163,170,171,163,170,171,163,0,0,0,546,546,547,0,0,0,0,172,0,172,0,0,0,0,172,173,174,172,173,174,172,173,174,172,173,174,172,173,174,174,172,173,174,174,174,174,174,172,173,174,172,173,174,174,172,173,172,173,174,172,173,174,172,173,174,172,173,174,172,173,174,172,173,172,173,172,173,172,173,174,172,173,174,172,173,174,172,173,174,0,0,548,176,0,0,0,177,0,0,176,177,175,176,177,175,176,177,175,176,177,175,176,177,175,175,176,177,175,175,175,175,175,176,177,175,176,177,175,175,176,177,176,177,176,177,175,176,177,175,176,177,175,176,177,175,176,177,176,177,176,177,176,177,175,176,177,175,176,177,175,176,177,175,0,0,0,549,549,549,549,549,549,0,0,0,0,0,0,0,178,0,178,0,0,0,0,178,179,180,178,179,180,178,179,180,178,179,180,178,179,180,180,178,179,180,180,180,180,180,178,179,180,178,179,180,180,178,179,178,179,180,178,179,180,178,179,180,178,179,180,178,179,180,178,179,178,179,178,179,178,179,180,178,179,180,178,179,180,178,179,180,0,0,550,182,0,0,0,0,0,183,183,0,182,183,181,182,183,181,182,183,181,182,183,181,182,183,181,181,182,183,181,181,181,181,181,182,183,181,182,183,181,181,182,183,182,183,182,183,181,182,183,181,182,181,182,183,181,182,183,182,183,182,183,182,183,181,182,183,181,182,183,181,182,183,181,0,0,0,551,552,187,187,185,0,0,185,184,188,185,185,185,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,187,0,0,187,185,185,185,187,185,187,187,187,189,188,185,185,185,0,0,189,185,0,190,188,185,184,188,185,188,185,0,185,185,188,185,0,187,188,189,190,184,185,186,187,188,189,190,184,185,186,184,185,186,187,188,189,190,184,185,186,187,188,189,190,184,185,186,186,184,185,187,188,189,190,186,187,188,189,190,186,186,187,188,189,190,186,186,187,188,189,190,184,185,186,187,188,189,190,184,185,186,186,187,188,189,190,184,185,184,185,187,188,189,190,184,185,186,187,188,189,190,184,185,186,187,188,189,190,184,185,186,187,188,189,190,184,185,186,184,185,184,185,184,185,186,184,185,187,188,189,190,186,187,188,189,190,187,188,189,190,184,185,186,187,188,189,190,184,185,186,187,188,189,190,184,185,186,0,0,0,553,554,555,556,555,557,558,558,559,559,560,561,562,563,553,553,562,562,564,564,565,566,567,567,568,568,568,568,191,192,0,0,0,0,0,0,192,192,192,0,192,0,0,191,192,193,191,192,193,191,192,193,191,192,193,191,192,193,193,191,192,193,193,193,193,193,191,192,193,191,192,193,193,191,192,191,192,191,192,193,191,192,193,191,192,193,191,192,193,191,192,191,192,191,192,191,192,193,191,192,193,191,192,193,191,192,193,0,0,0,569,570,571,571,0,0,0,0,0,0,0,0,0,194,0,194,0,0,0,0,194,195,196,194,195,196,194,195,196,194,195,196,194,195,196,196,194,195,196,196,196,196,196,194,195,196,194,195,196,196,194,195,194,195,196,194,195,196,194,195,196,194,195,196,194,195,196,194,195,194,195,194,195,194,195,196,194,195,196,194,195,196,194,195,196,0,0,572,199,198,199,0,0,0,0,0,0,0,199,199,0,0,199,199,0,198,199,200,198,199,200,198,199,200,198,199,200,198,199,200,200,198,199,200,200,200,200,200,198,199,200,198,199,200,200,198,199,198,199,198,199,200,198,199,200,198,200,198,199,200,198,199,198,199,198,199,198,199,200,198,199,200,198,199,200,198,199,200,0,0,0,573,574,575,576,574,577,574,202,201,0,0,0,0,0,204,202,0,0,0,201,0,202,202,0,204,201,202,203,204,201,202,203,201,202,203,204,201,202,203,204,201,202,203,203,201,202,204,203,204,203,203,204,203,203,204,201,202,203,204,201,202,203,203,204,201,202,201,202,204,201,202,203,204,201,202,203,204,201,202,203,204,201,202,203,201,202,201,202,201,202,203,201,202,204,203,204,204,201,202,203,204,201,202,203,204,201,202,203,0,0,0,578,579,580,581,581,205,0,0,0,0,0,208,206,206,0,0,0,205,0,206,206,0,208,205,206,207,208,205,206,207,205,206,207,208,205,206,207,208,205,206,207,207,205,206,208,207,208,207,207,208,207,207,208,205,206,207,208,205,206,207,207,208,205,206,205,206,208,205,206,207,208,205,206,207,208,205,206,207,208,205,206,207,205,206,205,206,205,206,207,205,206,208,207,208,208,205,206,207,208,205,206,207,208,205,206,207,0,0,0,582,583,584,585,585,210,0,210,209,210,0,0,0,0,0,0,0,0,210,0,210,210,210,212,0,0,212,210,0,209,0,212,209,210,211,212,209,210,211,209,210,211,212,209,210,211,212,209,210,211,211,209,210,212,211,212,211,211,212,211,211,212,209,210,211,212,209,210,211,211,212,209,210,209,210,212,209,210,211,212,209,210,211,212,209,211,212,209,210,211,209,210,209,210,209,210,211,209,210,212,211,212,212,209,210,211,212,209,210,211,212,209,210,211,0,0,0,586,587,588,589,590,591,586,590,591,590,586,592,592,592,213,0,0,0,0,214,0,0,214,214,0,213,214,197,213,214,197,213,214,197,213,214,197,213,214,197,197,213,214,197,197,197,197,197,213,214,197,213,214,197,197,213,214,213,214,213,214,197,213,214,197,213,197,213,214,197,213,214,213,214,213,214,213,214,197,213,214,197,213,214,197,213,214,197,0,0,0,593,594,595,218,218,216,0,0,216,215,219,216,216,216,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,218,0,0,218,216,216,216,218,216,218,218,218,220,219,216,216,216,0,0,220,216,0,221,219,216,215,219,216,219,216,0,216,216,219,216,0,218,219,220,221,215,216,217,218,219,220,221,215,216,217,215,216,217,218,219,220,221,215,216,217,218,219,220,221,215,216,217,217,215,216,218,219,220,221,217,218,219,220,221,217,217,218,219,220,221,217,217,218,219,220,221,215,216,217,218,219,220,221,215,216,217,217,218,219,220,221,215,216,215,216,218,219,220,221,215,216,217,218,219,220,221,215,216,217,218,219,220,221,215,216,217,218,219,220,221,215,216,217,215,216,215,216,215,216,217,215,216,218,219,220,221,217,218,219,220,221,218,219,220,221,215,216,217,218,219,220,221,215,216,217,218,219,220,221,215,216,217,0,0,0,596,597,598,599,598,600,601,601,602,602,603,604,605,606,596,596,605,605,607,607,608,609,610,610,611,611,611,611,222,223,0,0,0,0,0,0,223,223,223,0,223,0,0,222,223,224,222,223,224,222,223,224,222,223,224,222,223,224,224,222,223,224,224,224,224,224,222,223,224,222,223,224,224,222,223,222,223,222,223,224,222,223,224,222,223,224,222,223,224,222,223,222,223,222,223,222,223,224,222,223,224,222,223,224,222,223,224,0,0,0,612,613,614,614,0,0,0,0,0,225,0,0,0,0,225,226,227,225,226,227,225,226,227,225,226,227,225,226,227,227,225,226,227,227,227,227,227,225,226,227,225,226,227,227,225,226,225,226,225,226,227,225,226,227,225,226,227,225,226,227,225,226,225,226,225,226,225,226,227,225,226,227,225,226,227,225,226,227,0,0,230,233,232,234,229,229,229,230,231,0,0,231,232,232,230,233,229,231,232,0,0,0,0,0,0,0,0,0,0,0,0,0,232,231,0,229,230,233,233,233,231,230,231,231,229,231,229,234,231,229,232,233,229,232,232,232,229,232,231,231,0,231,0,0,0,0,0,0,0,0,0,0,0,0,230,234,233,229,230,230,230,230,230,232,0,231,232,229,233,229,232,0,228,229,229,232,233,234,230,231,228,229,232,233,234,230,231,228,230,231,228,229,229,229,229,229,229,229,229,232,233,234,230,231,228,229,232,233,234,230,231,228,228,230,231,229,232,233,234,228,229,232,233,234,228,229,228,229,229,228,229,229,229,232,233,234,228,229,228,229,229,229,229,229,229,232,233,234,230,231,228,229,232,233,234,230,231,228,228,229,229,229,229,229,232,233,234,230,231,230,231,229,228,229,229,229,229,232,233,234,230,231,228,229,232,233,234,230,231,228,229,232,233,234,230,231,228,229,232,233,234,230,231,228,230,231,228,229,230,231,229,229,230,231,229,229,228,229,228,228,228,228,228,230,231,229,229,229,229,232,233,234,228,229,232,233,234,229,229,232,233,234,230,231,228,229,232,233,234,230,231,228,229,232,233,234,230,231,228,229,0,0,0,615,616,617,618,619,615,620,621,618,620,622,623,616,624,623,621,617,625,623,618,626,623,616,624,623,627,628,627,629,630,628,631,630,632,633,634,632,627,629,629,629,0,0,0,235,0,235,0,0,0,0,235,236,237,235,236,237,235,236,237,235,236,237,235,236,237,237,235,236,237,237,237,237,237,235,236,237,235,236,237,237,235,236,235,236,237,235,236,237,235,236,237,235,236,237,235,236,237,235,236,235,236,235,236,235,236,237,235,236,237,235,236,237,235,236,237,0,0,635,243,239,0,240,241,239,0,0,243,243,241,240,243,240,241,0,0,0,0,0,0,243,240,241,0,239,242,239,241,239,239,243,239,243,243,242,243,243,243,241,0,0,0,0,0,0,0,0,0,239,240,240,240,240,239,243,243,239,239,243,0,239,242,239,243,240,241,238,242,239,243,240,241,238,240,241,238,239,239,239,239,239,239,239,242,239,243,240,241,238,242,239,243,240,241,238,238,240,241,242,239,243,238,242,239,243,238,239,238,239,239,238,239,238,239,238,242,239,243,238,239,238,239,242,239,239,239,239,239,243,240,241,238,242,239,243,240,241,238,238,239,239,239,239,242,239,243,240,241,240,241,239,239,239,239,242,239,243,240,241,238,242,239,243,240,241,238,242,239,243,240,241,238,242,239,243,240,241,238,240,241,239,240,241,239,239,240,241,239,239,239,238,238,238,238,240,241,239,239,239,242,239,243,238,242,239,243,239,242,239,243,240,241,238,242,239,243,240,241,238,242,239,243,240,241,238,239,0,0,0,636,636,637,637,638,639,640,637,641,642,643,642,644,645,645,642,644,644,644,0,0,0,0,244,0,244,0,0,0,0,244,245,246,244,245,246,244,245,246,244,245,246,244,245,246,246,244,245,246,246,246,246,246,244,245,246,244,245,246,246,244,245,244,245,246,244,245,246,244,245,246,244,245,246,244,245,246,244,245,244,245,244,245,244,245,246,244,245,246,244,245,246,244,245,246,0,0,646,251,252,250,249,0,0,0,0,251,0,0,0,0,252,249,251,249,0,251,252,249,250,248,251,252,249,250,248,249,250,248,251,252,249,250,248,251,252,249,250,248,248,249,250,251,252,248,251,252,248,248,251,252,248,248,251,252,249,250,248,251,252,249,250,248,248,251,252,249,250,249,250,251,252,249,250,248,251,252,249,250,248,251,252,249,250,248,251,252,249,250,248,249,250,249,250,249,250,248,249,250,251,252,248,251,252,251,252,249,250,248,251,252,249,250,248,251,252,249,250,248,248,0,0,0,647,648,0,0,0,0,0,0,0,253,0,0,254,0,0,0,253,254,255,253,254,255,253,254,255,253,254,255,253,254,255,255,253,254,255,255,255,255,255,253,254,255,253,254,255,255,253,254,253,254,253,254,255,253,254,255,253,254,255,253,254,255,253,254,253,254,253,254,253,254,255,253,254,255,253,254,255,253,254,255,0,0,0,649,256,0,256,0,0,0,0,256,257,258,256,257,258,256,257,258,256,257,258,256,257,258,258,256,257,258,258,258,258,258,258,256,257,258,256,257,258,258,256,257,256,257,256,257,258,256,257,258,256,257,258,256,257,258,256,257,256,257,256,257,256,257,258,256,257,258,256,257,258,256,257,258,0,0,650,259,260,0,0,0,0,0,259,0,259,260,261,259,260,261,259,260,261,259,260,261,259,260,261,261,259,260,261,261,261,261,261,259,260,261,259,260,261,261,259,260,259,260,259,260,261,259,260,261,259,260,261,259,260,261,259,260,259,260,259,260,261,259,260,261,259,260,261,259,260,261,259,260,261,0,0,0,651,262,0,262,0,0,0,0,262,263,264,262,263,264,262,263,264,262,263,264,262,263,264,264,262,263,264,264,264,264,264,262,263,264,262,263,264,264,262,263,262,263,264,262,263,264,262,263,264,262,263,264,262,263,264,262,263,262,263,262,263,262,263,264,262,263,264,262,263,264,262,263,264,0,0,652,0,0,0,0,0,265,0,0,266,0,0,0,265,266,267,265,266,267,265,266,267,265,266,267,265,266,267,267,265,266,267,267,267,267,267,265,266,267,265,266,267,267,265,266,265,266,265,266,267,265,266,267,265,266,267,265,266,267,265,266,265,266,265,266,265,266,267,265,266,267,265,266,267,265,266,267,0,0,0,653,268,0,0,268,271,0,0,0,0,271,268,269,270,271,268,269,270,268,269,270,271,268,269,270,271,268,269,270,270,268,269,271,270,271,270,270,271,270,270,270,271,268,269,270,271,268,269,270,270,271,268,269,268,269,271,268,269,270,271,268,269,270,271,268,269,270,271,268,269,270,268,269,268,269,268,269,268,269,271,270,271,271,268,269,270,271,268,269,270,271,268,269,270,0,0,654,272,273,0,0,0,275,0,0,0,272,0,275,272,273,274,275,272,273,274,272,273,274,275,272,273,274,275,272,273,274,274,272,273,275,274,275,274,274,275,274,274,275,272,273,274,275,272,273,274,274,275,272,273,272,273,275,272,273,274,275,272,273,274,275,272,273,274,275,272,273,274,272,273,272,273,272,273,274,272,273,275,274,275,275,272,273,274,275,272,273,274,275,272,273,274,0,0,0,655,276,0,276,0,0,0,0,276,277,278,276,277,278,276,277,278,276,277,278,276,277,278,278,276,277,278,278,278,278,278,276,277,278,276,277,278,278,276,277,276,277,278,276,277,278,276,277,278,276,277,278,276,277,278,276,277,276,277,276,277,276,277,278,276,277,278,276,277,278,276,277,278,0,0,656,0,0,0,0,279,0,279,0,0,0,0,279,280,281,279,280,281,279,280,281,279,280,281,279,280,281,281,279,280,281,281,281,281,281,279,280,281,279,280,281,281,279,280,279,280,281,279,280,281,279,280,281,279,280,281,279,280,281,279,280,279,280,279,280,279,280,281,279,280,281,279,280,281,279,280,281,0,0,657,284,283,284,0,0,0,0,0,0,284,284,284,0,0,0,283,284,282,283,284,282,283,284,282,283,284,282,283,284,282,282,283,284,282,282,282,282,282,283,284,282,283,284,282,282,283,284,283,284,283,284,282,283,284,282,283,284,282,283,284,282,283,284,283,284,283,284,283,284,282,283,284,282,283,284,282,283,284,282,0,0,0,658,659,660,659,661,661,0,0,0,0,0,0,285,0,0,286,0,0,0,285,286,287,285,286,287,285,286,287,285,286,287,285,286,287,287,285,286,287,287,287,287,287,285,286,287,285,286,287,287,285,286,285,286,285,286,287,285,286,287,285,286,287,285,286,287,285,286,285,286,285,286,285,286,287,285,286,287,285,286,287,285,286,287,0,0,0,291,292,288,0,0,0,288,288,292,292,289,288,0,0,0,0,0,0,292,288,0,0,291,292,288,289,290,291,292,288,289,290,288,289,290,291,292,288,289,290,291,292,288,289,290,290,288,289,291,292,290,291,292,290,290,291,292,290,290,291,292,288,289,290,291,292,288,289,290,290,291,292,288,289,288,289,290,290,291,292,288,289,290,291,292,288,289,290,291,292,288,289,290,291,292,288,289,290,288,289,288,289,288,289,290,288,289,291,292,290,291,292,291,292,288,289,290,291,292,288,289,290,291,292,288,289,290,290,0,0,0,662,663,663,663,664,665,663,666,663,663,294,297,296,296,296,295,295,294,0,0,0,297,296,297,294,296,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,294,0,297,296,294,294,294,294,294,294,294,294,0,296,296,296,294,294,0,293,293,296,297,294,295,293,296,297,294,295,293,294,295,293,296,297,294,295,293,296,297,294,295,293,293,294,295,296,297,293,296,297,293,293,296,297,293,293,296,297,294,295,293,296,297,294,295,293,293,296,297,294,295,294,295,296,297,294,295,293,296,297,294,295,293,296,297,294,295,293,296,297,294,295,293,294,295,294,295,294,295,293,293,293,293,293,293,293,293,293,294,295,296,297,293,296,297,296,297,294,295,293,296,297,294,295,293,296,297,294,295,293,293,293,0,0,0,667,667,667,667,668,669,670,671,672,673,674,669,673,674,669,675,676,670,673,670,673,670,0,0,0,0,0,0,299,298,0,0,0,0,298,301,299,0,0,0,0,301,298,299,300,301,298,299,300,298,299,300,301,298,299,300,301,298,299,300,300,298,299,301,300,301,300,300,301,300,300,301,298,299,300,301,298,299,300,300,301,298,299,298,299,300,301,298,299,300,301,298,299,300,301,298,299,300,301,298,299,300,298,299,298,299,298,299,298,299,301,300,301,301,298,299,300,301,298,299,300,301,298,299,300,0,0,0,677,677,677,677,678,678,0,302,303,0,305,0,0,304,304,0,308,302,303,302,303,304,0,0,0,0,0,0,0,0,304,304,302,303,305,305,305,305,305,305,304,304,302,303,0,302,303,304,308,302,303,304,305,306,307,308,302,303,304,305,306,307,305,306,307,302,303,304,302,303,304,302,303,304,302,303,304,302,303,304,302,303,304,302,303,304,308,302,303,304,305,306,307,308,302,303,304,305,306,307,307,305,306,308,302,303,304,307,308,302,303,304,307,302,303,304,302,303,304,302,303,304,307,302,303,304,302,303,304,308,302,303,304,307,302,303,304,307,302,303,304,308,302,302,302,302,302,303,303,303,303,303,304,304,304,304,304,305,306,307,308,302,303,304,305,306,307,307,302,303,304,302,303,304,302,303,304,302,303,304,308,302,303,304,305,306,305,306,302,303,304,302,303,304,302,303,304,302,303,304,308,302,303,304,305,306,307,308,302,303,304,305,306,307,308,302,303,304,305,306,307,308,302,303,304,305,306,307,305,306,302,303,304,305,306,302,303,304,302,303,304,305,306,302,303,304,302,303,304,302,303,304,307,307,307,307,307,307,305,306,302,303,304,302,303,304,302,303,304,308,302,303,304,307,308,302,303,304,302,303,304,308,302,303,304,305,306,307,308,302,303,304,305,306,307,308,302,303,304,305,306,307,302,303,304,0,0,679,680,681,682,683,682,683,683,684,683,684,309,312,309,0,0,0,309,312,312,312,312,310,309,0,0,0,0,0,312,0,312,309,310,311,312,309,310,311,309,310,311,312,309,310,311,312,309,310,311,311,309,310,312,311,312,311,311,311,312,311,311,312,309,310,311,312,309,310,311,311,312,309,310,309,310,311,312,309,310,311,312,309,310,311,312,309,310,311,312,309,310,311,309,310,309,310,309,310,311,309,310,312,311,312,312,309,310,311,312,309,310,311,312,309,310,311,0,0,0,685,686,687,314,316,315,314,0,0,0,314,314,316,0,0,0,0,0,0,314,316,0,313,316,314,315,313,316,314,315,313,314,315,313,316,314,315,313,316,314,315,313,313,314,315,316,313,316,313,313,316,313,313,316,314,315,313,316,314,315,313,313,316,314,315,314,315,313,313,316,314,315,313,316,314,315,313,316,314,315,313,316,314,315,313,314,315,314,315,314,315,313,314,315,316,313,316,316,314,315,313,316,314,315,313,316,314,315,313,0,0,0,688,689,690,690,691,689,689,689,321,320,320,320,319,319,318,0,0,0,321,320,321,318,320,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,318,0,321,320,318,318,318,318,318,318,318,318,318,0,320,320,320,318,318,0,317,320,321,318,319,317,320,321,318,319,317,318,319,317,320,321,318,319,317,320,321,318,319,317,317,318,319,320,321,317,320,321,317,317,320,321,317,317,320,321,318,319,317,320,321,318,319,317,317,320,321,318,319,318,319,320,321,318,319,317,320,321,318,319,317,320,321,318,319,317,320,321,318,319,317,318,319,318,319,318,319,317,317,317,317,317,317,317,317,317,317,318,319,320,321,317,320,321,320,321,318,319,317,320,321,318,319,317,320,321,318,319,317,317,317,0,0,0,692,692,692,693,694,695,696,697,698,699,700,694,699,700,694,701,695,696,699,699,0,0,0,0,322,0,322,0,0,0,0,322,323,324,322,323,324,322,323,324,322,323,324,322,323,324,324,322,323,324,324,324,324,324,322,323,324,322,323,324,324,322,323,322,323,324,322,323,324,322,323,324,322,323,324,322,323,324,322,323,322,323,322,323,322,323,324,322,323,324,322,323,324,322,323,324,0,0,702,702,326,0,0,0,0,326,327,325,326,327,325,326,327,325,326,327,325,326,327,325,325,326,327,325,325,325,325,325,326,327,325,326,327,325,325,326,327,326,327,326,327,325,326,327,325,326,327,325,326,327,325,326,327,326,327,326,327,326,327,325,326,327,325,326,327,325,326,327,325,0,0,0,0,0,331,331,328,0,0,331,331,0,0,0,0,328,328,0,331,328,329,330,331,328,329,330,328,329,330,331,328,329,330,331,328,329,330,330,328,329,331,330,331,330,330,331,330,330,331,328,329,330,331,328,329,330,330,331,328,329,328,329,331,328,329,330,331,328,329,330,331,328,329,330,331,328,329,330,328,329,328,329,328,329,330,330,328,329,331,330,331,331,328,329,330,331,328,329,330,331,328,329,330,0,0,703,704,703,704,703,703,332,0,0,332,0,0,0,335,0,335,332,333,334,335,332,333,334,332,333,334,335,332,333,334,335,332,333,334,334,332,333,335,334,335,334,334,335,334,334,335,332,333,334,335,332,333,334,334,335,332,333,332,333,334,335,332,333,334,335,332,333,334,335,332,333,334,335,332,333,334,332,333,332,333,332,333,332,333,335,334,335,335,332,333,334,335,332,333,334,335,332,333,334,0,0,705,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,337,336,0,0,0,0,0,0,337,337,0,0,0,0,337,336,336,339,0,339,336,337,338,339,336,337,338,336,337,338,339,336,337,338,339,336,337,338,338,336,337,339,338,339,338,338,339,338,338,339,336,337,338,339,336,337,338,338,339,336,337,336,337,339,336,337,338,339,336,337,338,339,336,338,339,336,337,338,336,337,336,337,336,337,338,338,336,337,339,338,339,339,336,337,338,339,336,337,338,339,336,337,338,0,0,0,706,707,708,709,710,341,341,0,341,0,0,0,0,0,341,342,343,341,342,343,341,342,343,341,342,343,341,342,343,343,341,342,343,343,343,343,343,343,341,342,343,341,342,343,343,341,342,341,342,343,341,342,343,341,342,343,341,342,343,341,342,343,341,342,341,342,341,342,341,342,343,341,342,343,341,342,343,341,342,343,0,0,711,344,0,0,345,0,0,344,0,0,344,345,346,344,345,346,344,345,346,344,345,346,344,345,346,346,344,345,346,346,346,346,346,344,345,346,344,345,346,346,344,345,344,345,344,345,346,344,345,346,344,345,346,344,345,346,344,345,344,345,344,345,346,344,345,346,344,345,346,344,345,346,344,345,346,0,0,0,712,713,713,348,347,0,0,0,0,349,347,0,0,0,348,0,349,347,348,340,349,347,348,340,347,348,340,349,347,348,340,349,347,348,340,340,347,348,349,340,349,340,340,349,340,340,349,347,348,340,349,347,348,340,340,349,347,348,347,348,349,347,348,340,349,347,348,340,349,347,348,340,349,347,348,340,347,348,347,348,340,347,348,347,348,349,340,349,349,347,348,340,349,347,348,340,349,347,348,340,0,0,0,714,714,715,0,0,0,0,351,0,350,0,0,0,0,0,0,351,351,354,0,351,0,354,354,353,0,353,354,350,351,352,353,354,350,351,352,350,351,352,353,354,350,351,352,353,354,350,351,352,352,350,351,353,354,352,353,354,352,352,353,354,352,352,353,354,350,351,352,353,354,350,351,352,352,353,354,350,351,350,351,353,354,350,351,352,353,354,350,351,352,353,354,350,351,352,353,354,350,351,352,350,351,350,351,350,351,350,351,353,354,352,353,354,353,354,350,351,352,353,354,350,351,352,353,354,350,351,352,0,0,0,716,717,716,716,716,717,716,716,716,717,716,716,717,718,717,717,719,719,719,716,355,355,0,0,0,0,0,355,356,357,355,356,357,355,356,357,355,356,357,355,356,357,357,357,355,356,357,357,357,357,357,355,356,357,355,356,357,357,355,356,355,356,355,356,357,355,356,357,355,356,357,355,356,357,355,356,355,356,355,356,355,356,357,355,356,357,355,356,357,355,356,357,0,0,720,720,0,0,0,0,359,361,360,359,360,359,360,0,0,0,0,0,0,0,0,0,0,361,362,361,361,360,360,360,0,0,0,0,0,0,0,0,0,0,0,359,359,359,359,0,360,360,359,359,359,0,358,361,362,359,360,358,361,362,359,360,358,359,360,358,361,362,359,360,358,361,362,359,360,358,358,359,360,361,362,358,361,362,358,358,358,361,362,358,358,361,362,359,360,358,361,362,359,360,358,358,361,362,359,360,359,360,361,362,359,360,358,361,362,359,360,358,361,362,359,360,358,361,362,359,360,358,359,360,359,360,359,360,358,358,358,358,359,360,361,362,358,361,362,361,362,359,360,358,361,362,359,360,358,361,362,359,360,358,358,358,358,0,0,0,721,722,723,724,725,726,727,728,729,727,727,727,727,0,0,0,364,0,0,363,364,0,363,364,365,363,364,365,363,364,365,363,364,365,363,364,365,365,363,364,365,365,365,365,363,364,365,363,364,365,365,363,364,363,364,363,364,365,363,364,365,363,365,363,364,365,363,364,363,364,363,364,363,364,365,365,363,364,365,363,364,365,363,364,365,0,0,0,730,0,0,0,0,366,0,366,0,0,0,0,366,367,368,366,367,368,366,367,368,366,367,368,366,367,368,368,366,367,368,368,368,368,368,366,367,368,366,367,368,368,366,367,366,367,368,366,367,368,366,367,368,366,367,368,366,367,368,366,367,366,367,366,367,366,367,368,366,367,368,366,367,368,366,367,368,0,0,731,370,0,0,0,0,371,371,372,0,0,0,370,0,372,370,371,369,372,370,371,369,370,371,369,372,370,371,369,372,370,371,369,369,370,371,372,369,372,369,369,372,369,369,372,370,371,369,372,370,371,369,369,372,370,371,370,371,372,370,371,369,372,370,371,369,372,370,371,369,372,370,371,369,370,371,370,371,370,371,369,370,371,372,369,372,372,370,371,369,372,370,371,369,372,370,371,369,0,0,0,732,733,0,0,0,0,376,0,0,373,0,0,0,376,373,374,375,376,373,374,375,373,374,375,376,373,374,375,376,373,374,375,375,373,374,376,375,376,375,376,375,375,376,373,374,375,376,373,374,375,375,376,373,374,373,374,375,376,373,374,375,376,373,374,375,376,373,374,375,376,373,374,375,373,374,373,374,373,374,373,374,376,375,376,376,373,374,375,376,373,374,375,376,373,374,375,0,0,378,0,0,0,0,378,379,377,378,379,377,378,379,377,378,379,377,378,379,377,377,378,379,377,377,377,377,377,378,379,377,378,379,377,377,378,379,378,379,378,379,377,378,379,377,378,379,377,378,379,377,378,379,378,379,378,379,378,379,377,378,379,377,378,379,377,378,379,377,0,0,0,0,0,0,383,384,384,380,0,0,380,383,0,384,0,0,0,383,384,0,383,384,380,381,382,383,384,380,381,382,380,381,382,383,384,380,381,382,383,384,380,381,382,382,380,381,383,384,382,383,384,382,382,383,384,382,382,383,384,380,381,382,383,384,380,381,382,382,383,384,380,381,380,381,382,383,384,380,381,382,383,384,380,381,382,383,384,380,381,382,383,384,380,381,382,380,381,380,381,380,381,380,381,383,384,382,383,384,383,384,380,381,382,383,384,380,381,382,383,384,380,381,382,0,0,734,734,734,734,387,0,386,388,388,387,0,0,0,0,389,387,390,390,390,390,0,386,389,389,0,0,0,0,0,0,0,0,0,0,386,387,387,387,387,387,387,386,0,385,386,389,390,386,387,388,385,389,390,386,387,388,385,387,388,385,386,386,386,386,386,386,386,389,390,386,387,388,385,389,390,386,387,388,385,385,387,388,389,390,386,385,389,390,386,385,386,386,386,385,386,386,389,390,386,385,386,385,386,389,390,386,386,386,386,386,387,388,385,389,390,386,387,388,385,385,386,386,386,386,389,390,386,387,388,387,388,385,386,386,386,386,389,390,386,387,388,385,389,390,386,387,388,385,389,390,386,387,388,385,389,390,386,387,388,385,387,388,386,387,388,386,386,387,388,386,386,386,385,385,385,385,385,385,387,388,386,386,386,389,390,386,385,389,390,386,386,389,390,386,387,388,385,389,390,386,387,388,385,389,390,386,387,388,385,386,0,0,0,735,735,735,736,737,738,739,740,737,741,737,742,737,738,743,0,0,0,0,0,0,0,395,0,0,395,395,395,395,0,0,0,0,0,0,392,392,392,392,392,0,395,392,393,394,395,392,393,394,392,393,394,395,392,393,394,395,392,393,394,394,392,393,395,394,395,394,395,394,394,395,392,393,394,395,392,393,394,394,395,392,393,392,393,395,392,393,394,395,392,393,394,395,392,393,394,395,392,393,394,392,393,392,393,392,393,394,394,394,394,394,392,393,395,394,395,395,392,393,394,395,392,393,394,395,392,393,394,0,0,744,745,744,746,747,744,748,748,401,401,399,400,399,399,0,0,0,399,0,0,400,0,0,0,0,0,0,400,399,401,0,398,401,399,400,398,401,399,400,398,399,400,398,401,399,400,398,401,399,400,398,398,399,400,401,398,401,398,398,398,398,401,398,398,401,399,400,398,401,399,400,398,398,401,399,400,399,400,401,399,400,398,401,399,400,398,401,399,400,398,401,399,400,398,399,400,399,400,399,400,399,400,398,401,398,401,401,399,400,398,401,399,400,398,401,399,400,398,0,0,0,749,750,404,404,0,0,0,0,0,0,0,0,0,0,0,0,0,404,0,404,404,404,404,404,404,404,0,404,404,404,0,403,404,402,403,404,402,403,404,402,403,404,402,403,404,402,402,403,404,402,402,402,402,403,404,402,403,404,402,402,403,404,403,404,403,404,402,403,404,402,403,402,403,404,402,403,404,403,404,403,404,403,404,402,403,404,402,403,404,402,403,404,402,0,0,751,752,753,754,755,756,757,758,759,760,761,753,762,762,405,406,0,0,0,0,406,406,0,0,0,405,0,405,406,407,405,406,407,405,406,407,405,406,407,405,406,407,407,405,406,407,407,407,407,407,405,406,407,405,406,407,407,405,406,405,406,405,406,407,405,406,407,405,407,405,406,407,405,406,405,406,405,406,405,406,407,407,405,406,407,405,406,407,405,406,407,0,0,0,763,764,765,0,0,0,0,0,409,409,409,0,409,0,408,409,396,408,409,396,408,409,396,408,409,396,408,409,396,396,408,409,396,396,396,396,408,409,396,408,409,396,396,408,409,408,409,408,409,396,408,409,396,408,409,396,408,409,396,408,409,408,409,408,409,408,409,396,408,409,396,408,409,396,408,409,396,0,0,766,767,766,0,0,0,0,410,0,410,0,0,0,0,410,411,412,410,411,412,410,411,412,410,411,412,410,411,412,412,410,411,412,412,412,412,412,410,411,412,410,411,412,412,410,411,410,411,412,410,411,412,410,411,412,410,411,412,410,411,412,410,411,410,411,410,411,410,411,412,410,411,412,410,411,412,410,411,412,0,0,768,414,0,0,0,0,415,417,0,415,416,416,0,0,0,414,0,416,417,414,415,413,416,417,414,415,413,414,415,413,416,417,414,415,413,416,417,414,415,413,413,414,415,416,417,413,416,417,413,413,416,417,413,413,416,417,414,415,413,416,417,414,415,413,413,416,417,414,415,414,415,416,417,414,415,413,416,417,414,415,413,416,417,414,415,413,416,417,414,415,413,414,415,414,415,414,415,413,414,415,416,417,413,416,417,416,417,414,415,413,416,417,414,415,413,416,417,414,415,413,0,0,0,769,770,0,0,0,0,422,420,420,419,419,420,419,0,0,0,0,0,0,0,0,0,420,0,420,422,420,0,0,0,420,0,418,0,418,422,418,419,420,421,422,418,419,420,421,419,420,421,418,418,418,418,418,418,418,422,418,419,420,421,422,418,419,420,421,421,419,420,422,418,421,422,418,421,418,418,418,421,421,421,418,418,422,418,421,418,421,418,422,418,418,418,418,418,419,420,421,422,418,419,420,421,421,418,418,418,418,422,418,419,420,419,420,418,418,418,418,422,418,419,420,421,422,418,419,420,421,422,418,419,420,421,422,418,419,420,421,419,420,418,419,420,418,418,419,420,418,418,418,419,420,418,418,418,422,418,421,422,418,418,422,418,419,420,421,422,418,419,420,421,422,418,419,420,421,418,0,0,0,771,772,773,772,774,773,772,775,775,775,772,774,773,774,774,776,777,423,423,423,0,0,0,0,0,0,423,424,425,423,424,425,423,424,425,423,424,425,423,424,425,425,425,425,423,424,425,425,425,425,425,423,424,425,423,424,425,425,423,424,423,424,423,424,425,423,424,425,423,424,425,423,424,425,423,424,423,424,423,424,423,424,425,423,424,425,423,424,425,423,424,425,0,0,778,779,778,779,778,778,778,778,0,0,0,0,426,426,426,0,0,0,0,0,0,426,427,428,426,427,428,426,427,428,426,427,428,426,427,428,428,426,427,428,428,428,428,428,428,428,426,427,428,426,427,428,428,426,427,426,427,426,427,428,426,427,428,426,427,428,426,427,428,426,427,426,427,426,427,426,427,428,426,427,428,426,427,428,426,427,428,0,0,780,781,780,430,430,430,430,430,430,0,0,430,435,435,430,430,0,0,0,0,0,0,0,0,0,0,0,435,430,431,429,435,430,431,429,430,431,429,429,429,429,429,435,430,431,429,435,430,431,429,429,429,430,431,435,429,435,429,429,435,429,429,435,430,431,429,429,435,430,431,429,429,435,430,431,430,431,435,430,431,429,435,430,431,429,435,430,431,429,435,430,431,429,430,431,430,431,429,429,430,431,430,431,435,429,435,435,430,431,429,435,430,431,429,435,430,431,429,0,0,782,783,784,785,786,784,787,787,786,787,788,786,782,783,784,782,784,788,788,788,788,0,0,0,0,0,0,437,436,0,0,0,0,0,436,438,437,0,0,0,436,437,0,0,438,436,437,391,438,436,437,391,436,437,391,438,436,437,391,438,436,437,391,391,436,437,438,391,438,391,391,438,391,391,438,436,437,391,438,436,437,391,391,438,436,437,436,437,391,438,436,437,391,438,436,437,391,438,436,437,391,438,436,437,391,436,437,436,437,436,437,391,436,437,438,391,438,438,436,437,391,438,436,437,391,438,436,437,391,0,0,0,789,790,789,789,789,791,792,792,791,0,444,445,444,445,444,445,0,441,0,0,440,440,0,443,444,445,444,445,440,0,0,0,0,0,0,0,0,0,0,0,440,440,444,445,441,441,441,441,441,441,441,441,441,440,440,444,445,444,445,444,445,0,440,443,444,445,440,441,442,439,443,444,445,440,441,442,439,441,442,439,440,440,440,440,440,440,440,443,444,445,440,441,442,439,443,444,445,440,441,442,439,439,441,442,443,444,445,440,439,443,444,445,440,439,440,440,440,439,440,440,443,444,445,440,439,440,439,440,443,444,445,440,440,440,440,440,441,442,439,443,444,445,440,441,442,439,439,440,440,440,440,443,444,445,440,441,442,441,442,440,440,440,440,443,444,445,440,441,442,439,443,444,445,440,441,442,439,443,444,445,440,441,442,439,443,444,445,440,441,442,439,441,442,440,441,442,440,440,441,442,440,440,440,439,439,439,439,439,439,439,439,439,441,442,440,440,440,443,444,445,440,439,443,444,445,440,440,443,444,445,440,441,442,439,443,444,445,440,441,442,439,443,444,445,440,441,442,439,440,0,0,793,794,795,796,797,798,798,799,796,797,797,800,797,800,447,449,448,447,0,0,0,447,447,449,0,0,0,0,0,0,447,449,0,446,449,447,448,446,449,447,448,446,447,448,446,449,447,448,446,449,447,448,446,446,447,448,449,446,449,446,446,449,446,446,449,447,448,446,449,447,448,446,446,449,447,448,447,448,446,446,449,447,448,446,449,447,448,446,449,447,448,446,449,447,448,446,447,448,447,448,447,448,446,447,448,449,446,449,449,447,448,446,449,447,448,446,449,447,448,446,0,0,0,801,802,803,803,804,802,802,802,453,452,452,452,451,451,450,0,0,0,453,452,453,450,452,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,450,0,453,452,450,450,450,450,450,450,450,450,450,0,453,453,453,453,452,452,452,450,450,0,247,452,453,450,451,247,452,453,450,451,247,450,451,247,452,453,450,451,247,452,453,450,451,247,247,450,451,452,453,247,452,453,247,247,452,453,247,247,452,453,450,451,247,452,453,450,451,247,247,452,453,450,451,450,451,452,453,450,451,247,452,453,450,451,247,452,453,450,451,247,452,453,450,451,247,450,451,450,451,450,451,247,247,247,247,247,247,247,247,247,247,450,451,452,453,247,452,453,452,453,450,451,247,452,453,450,451,247,452,453,450,451,247,247,247,0,0,0,805,805,805,806,807,808,809,810,811,812,813,807,812,813,807,814,808,809,812,812,454,457,454,0,0,0,454,457,457,457,457,455,454,0,0,0,0,0,457,0,457,454,455,456,457,454,455,456,454,455,456,457,454,455,456,457,454,455,456,456,454,455,457,456,457,456,456,456,457,456,456,457,454,455,456,457,454,455,456,456,457,454,455,454,455,456,457,454,455,456,457,454,455,456,457,454,455,456,457,454,455,456,454,455,454,455,454,455,456,454,455,457,456,457,457,454,455,456,457,454,455,456,457,454,455,456,0,0,0,815,816,817],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[2,3]],[[4,3]],[5,[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[5,5],[[]],[5],[[5,5],13],[[],13],[[2,14],15],[[4,14],15],[[5,14],15],[[]],[[]],[[[6,[5]]],5],[[]],[16,[[17,[2]]]],[16,[[17,[4]]]],[[18,9,19],[[17,[2]]]],[[18,9,19],[[17,[4]]]],0,0,0,[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[2,9],16],[[4,9],16],[2,13],[4,13],[2,8],[4,8],[[5,[12,[24]],9]],[2,9],[4,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[26,3]],[[27,3]],[28,[[6,[28]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[28,28],[[]],[28,[[29,[24]]]],[28],[[28,28],13],[[],13],[[26,14],15],[[27,14],15],[[28,14],15],[[]],[[]],[[[6,[28]]],28],[[]],[16,[[17,[26]]]],[16,[[17,[27]]]],[[18,9,19],[[17,[26]]]],[[18,9,19],[[17,[27]]]],[[28,30],[[29,[5]]]],0,0,[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[26,9],16],[[27,9],16],[26,13],[27,13],[26,8],[27,8],[26,9],[27,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[31,3]],[[32,3]],[33,[[6,[33]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[33,33],[[]],[33],[[33,33],13],[[],13],[[31,14],15],[[32,14],15],[[33,14],15],[[]],[[]],[[]],[[[6,[33]]],33],[16,[[17,[31]]]],[16,[[17,[32]]]],[[18,9,19],[[17,[31]]]],[[18,9,19],[[17,[32]]]],0,0,0,[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[31,9],16],[[32,9],16],[31,13],[32,13],[31,8],[32,8],[[33,34,35]],[31,9],[32,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[36,3]],[[37,3]],[24,[[6,[24]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[24,24],[[]],[24],[[24,24],13],[[],13],[[36,14],15],[[37,14],15],[[24,14],15],[[]],[[]],[[]],[[[6,[24]]],24],[16,[[17,[36]]]],[16,[[17,[37]]]],[[18,9,19],[[17,[36]]]],[[18,9,19],[[17,[37]]]],0,0,0,[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[36,9],16],[[37,9],16],[36,13],[37,13],[[24,34]],[36,8],[37,8],[36,9],[37,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[38,3]],[[39,3]],[40,[[6,[40]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[41,41],[40,40],[[]],[[]],[[41,41],13],[[40,40],13],[[],13],[[41,14],15],[[38,14],15],[[39,14],15],[[40,14],15],[[]],[[]],[[]],[[[6,[40]]],40],[[]],[9,[[12,[41]]]],[16,[[17,[38]]]],[16,[[17,[39]]]],[[18,9,19],[[17,[38]]]],[[18,9,19],[[17,[39]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[38,9],16],[[39,9],16],[38,13],[39,13],[38,8],[39,8],0,0,0,[40],[[40,41]],[38,9],[39,9],[[]],[[]],[41,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[42,3]],[[43,3]],[44,[[6,[44]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[45,45],[44,44],[[]],[[]],[[44,46],[[29,[40]]]],[[45,45],13],[[44,44],13],[[],13],[[45,14],15],[[42,14],15],[[43,14],15],[[44,14],15],[[]],[[]],[[]],[[[6,[44]]],44],[[]],[9,[[12,[45]]]],[16,[[17,[42]]]],[16,[[17,[43]]]],[[18,9,19],[[17,[42]]]],[[18,9,19],[[17,[43]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[42,9],16],[[43,9],16],[42,13],[43,13],[42,8],[43,8],0,0,0,[42,9],[43,9],[[]],[[]],[45,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[47,3]],[[48,3]],[49,[[6,[49]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[49,49],[[]],[[49,49],13],[[],13],[[47,14],15],[[48,14],15],[[49,14],15],[[]],[[]],[[[6,[49]]],49],[[]],[16,[[17,[47]]]],[16,[[17,[48]]]],[[18,9,19],[[17,[47]]]],[[18,9,19],[[17,[48]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[47,9],16],[[48,9],16],[47,13],[48,13],[47,8],[48,8],[49],[47,9],[48,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[50,3]],[[51,3]],[52,[[6,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[52,52],[[]],[52],[[52,52],13],[[],13],[[50,14],15],[[51,14],15],[[52,14],15],[[]],[[]],[[[6,[52]]],52],[[]],[16,[[17,[50]]]],[16,[[17,[51]]]],[[18,9,19],[[17,[50]]]],[[18,9,19],[[17,[51]]]],[[52,30],[[29,[53]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[50,9],16],[[51,9],16],[50,13],[51,13],[50,8],[51,8],[50,9],[51,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[54,3]],[[55,3]],[53,[[6,[53]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[53,53],[[]],[[53,9]],[[53,34]],[[53,9,9]],[53],[[53,53],13],[[],13],[[54,14],15],[[55,14],15],[[53,14],15],[[]],[[]],[[[6,[53]]],53],[[]],[16,[[17,[54]]]],[16,[[17,[55]]]],[[18,9,19],[[17,[54]]]],[[18,9,19],[[17,[55]]]],[[53,46],[[29,[56]]]],[53,[[29,[49]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[54,9],16],[[55,9],16],[54,13],[55,13],[54,8],[55,8],[[53,34,57,57]],[54,9],[55,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[58,3]],[[59,3]],[56,[[6,[56]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[56,56],[[]],[56],[[56,56],13],[[],13],[[58,14],15],[[59,14],15],[[56,14],15],[[]],[[]],[[]],[[[6,[56]]],56],[16,[[17,[58]]]],[16,[[17,[59]]]],[[18,9,19],[[17,[58]]]],[[18,9,19],[[17,[59]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[58,9],16],[[59,9],16],[58,13],[59,13],[58,8],[59,8],[58,9],[59,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[60,3]],[[61,3]],[62,[[6,[62]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[63,63],[62,62],[[]],[[]],[62],[[63,63],13],[[62,62],13],[[],13],[[62,46],[[29,[64]]]],[[63,14],15],[[60,14],15],[[61,14],15],[[62,14],15],[[]],[[]],[[]],[[]],[[[6,[62]]],62],[9,[[12,[63]]]],[16,[[17,[60]]]],[16,[[17,[61]]]],[[18,9,19],[[17,[60]]]],[[18,9,19],[[17,[61]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[60,9],16],[[61,9],16],[60,13],[61,13],[60,8],[61,8],[60,9],[61,9],[[]],[[]],[63,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],65],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[66,3]],[[67,3]],[64,[[6,[64]]]],[[65,65],65],[[65,65]],[[65,65],65],[[65,65]],[65,9],[[65,65],65],[[65,65]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[65,65],[64,64],[[]],[[]],[[65,65],68],[65,65],[[65,65],13],[[65,65],65],[[],65],[[65,65],13],[[64,64],13],[[],13],[[],13],[[65,69]],[[65,14],15],[[65,14],15],[[65,14],15],[[65,14],15],[[65,14],15],[[66,14],15],[[67,14],15],[[64,14],15],[[]],[[]],[[]],[[[6,[64]]],64],[[]],[9,[[12,[65]]]],[9,65],[9,65],[69,65],[9,[[12,[65]]]],[16,[[17,[66]]]],[16,[[17,[67]]]],[[18,9,19],[[17,[66]]]],[[18,9,19],[[17,[67]]]],[[65,70]],[[65,65]],[[65,65],65],[[65,65],13],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[66,9],16],[[67,9],16],[65,13],[66,13],[67,13],[65,13],[65,65],[66,8],[67,8],[[65,65],[[12,[68]]]],[[65,65]],[[65,65,13]],[66,9],[67,9],[[65,65],65],[[65,65]],[[65,65],65],[[]],[[]],[65,9],[[65,65]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[65,65],65],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[71,3]],[[72,3]],[73,[[6,[73]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[73,73],[[]],[[73,73],13],[[],13],[[71,14],15],[[72,14],15],[[73,14],15],[[]],[[]],[[[6,[73]]],73],[[]],[16,[[17,[71]]]],[16,[[17,[72]]]],[[18,9,19],[[17,[71]]]],[[18,9,19],[[17,[72]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[71,9],16],[[72,9],16],[71,13],[72,13],[71,8],[72,8],[71,9],[72,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[74,3]],[[75,3]],[76,[[6,[76]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[77,77],[78,78],[79,79],[76,76],[[]],[[]],[[]],[[]],[[77,77],13],[[78,78],13],[[79,79],13],[[76,76],13],[[],13],[[77,14],15],[[78,14],15],[[79,14],15],[[74,14],15],[[75,14],15],[[76,14],15],[[]],[[]],[[]],[[]],[[]],[[[6,[76]]],76],[[]],[9,[[12,[77]]]],[9,[[12,[78]]]],[9,[[12,[79]]]],[16,[[17,[74]]]],[16,[[17,[75]]]],[[18,9,19],[[17,[74]]]],[[18,9,19],[[17,[75]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[74,9],16],[[75,9],16],[74,13],[75,13],[74,8],[75,8],[[76,[12,[46]],78,[12,[80]]]],[[76,46,80,57],[[29,[73]]]],[76],[74,9],[75,9],[[]],[[]],[[]],[[]],[77,9],[78,9],[79,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[81,3]],[[82,3]],[83,[[6,[83]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[83,83],[[]],[[83,46],[[29,[84]]]],[83],[[83,83],13],[[],13],[[81,14],15],[[82,14],15],[[83,14],15],[[]],[[]],[[]],[[[6,[83]]],83],[16,[[17,[81]]]],[16,[[17,[82]]]],[[18,9,19],[[17,[81]]]],[[18,9,19],[[17,[82]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[81,9],16],[[82,9],16],[81,13],[82,13],[81,8],[82,8],[81,9],[82,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[85,3]],[[86,3]],[84,[[6,[84]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[84,84],[[]],[84],[[84,84],13],[[],13],[[85,14],15],[[86,14],15],[[84,14],15],[[]],[[]],[[]],[[[6,[84]]],84],[16,[[17,[85]]]],[16,[[17,[86]]]],[[18,9,19],[[17,[85]]]],[[18,9,19],[[17,[86]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[85,9],16],[[86,9],16],[85,13],[86,13],[85,8],[86,8],[85,9],[86,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[87,3]],[[88,3]],[89,[[6,[89]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[89,89],[[]],[[89,9,34]],[[89,57,57]],[[89,57,9]],[89],[[89,89],13],[[],13],[[87,14],15],[[88,14],15],[[89,14],15],[[]],[[]],[[]],[[[6,[89]]],89],[16,[[17,[87]]]],[16,[[17,[88]]]],[[18,9,19],[[17,[87]]]],[[18,9,19],[[17,[88]]]],[89,[[29,[90]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[87,9],16],[[88,9],16],[87,13],[88,13],[[89,9,9,9,9]],[[89,9,9,9,9,9]],[[89,9,34]],[[89,9,9,9,9,9]],[[89,[92,[91]]]],[87,8],[88,8],[[89,57]],[[89,9,34,34]],[[89,9,9,9]],[87,9],[88,9],[[89,9,9]],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[93,3]],[[94,3]],[95,[[6,[95]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[95,95],[[]],[[95,95],13],[[],13],[[93,14],15],[[94,14],15],[[95,14],15],[[]],[[]],[[[6,[95]]],95],[[]],[16,[[17,[93]]]],[16,[[17,[94]]]],[[18,9,19],[[17,[93]]]],[[18,9,19],[[17,[94]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[93,9],16],[[94,9],16],[93,13],[94,13],[93,8],[94,8],[93,9],[94,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[96,3]],[[97,3]],[98,[[6,[98]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[99,99],[98,98],[[]],[[]],[[99,99],13],[[98,98],13],[[],13],[[99,14],15],[[96,14],15],[[97,14],15],[[98,14],15],[[]],[[]],[[]],[[[6,[98]]],98],[[]],[9,[[12,[99]]]],[16,[[17,[96]]]],[16,[[17,[97]]]],[[18,9,19],[[17,[96]]]],[[18,9,19],[[17,[97]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[96,9],16],[[97,9],16],[96,13],[97,13],[96,8],[97,8],[98],[[98,80,9]],[96,9],[97,9],[[]],[[]],[99,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[100,3]],[[101,3]],[102,[[6,[102]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[102,102],[[]],[[102,102],13],[[],13],[[100,14],15],[[101,14],15],[[102,14],15],[[]],[[]],[[[6,[102]]],102],[[]],[16,[[17,[100]]]],[16,[[17,[101]]]],[[18,9,19],[[17,[100]]]],[[18,9,19],[[17,[101]]]],[[102,46],[[29,[98]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[100,9],16],[[101,9],16],[100,13],[101,13],[100,8],[101,8],[100,9],[101,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[103,3]],[[104,3]],[105,[[6,[105]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[105,105],[[]],[105],[[105,105],13],[[],13],[[103,14],15],[[104,14],15],[[105,14],15],[[]],[[]],[[]],[[[6,[105]]],105],[16,[[17,[103]]]],[16,[[17,[104]]]],[[18,9,19],[[17,[103]]]],[[18,9,19],[[17,[104]]]],[[105,90],[[29,[106]]]],[[105,107],[[29,[106]]]],[[105,108],[[29,[106]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[103,9],16],[[104,9],16],[103,13],[104,13],[103,8],[104,8],[103,9],[104,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[109,3]],[[110,3]],[106,[[6,[106]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[106,106],[[]],[106],[[106,106],13],[[],13],[[109,14],15],[[110,14],15],[[106,14],15],[[]],[[]],[[]],[[[6,[106]]],106],[16,[[17,[109]]]],[16,[[17,[110]]]],[[18,9,19],[[17,[109]]]],[[18,9,19],[[17,[110]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[109,9],16],[[110,9],16],[109,13],[110,13],[109,8],[110,8],[109,9],[110,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[111,3]],[[112,3]],[113,[[6,[113]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[114,114],[113,113],[[]],[[]],[113],[[114,114],13],[[113,113],13],[[],13],[[114,14],15],[[111,14],15],[[112,14],15],[[113,14],15],[[]],[[]],[[]],[[]],[[[6,[113]]],113],[9,[[12,[114]]]],[16,[[17,[111]]]],[16,[[17,[112]]]],[[18,9,19],[[17,[111]]]],[[18,9,19],[[17,[112]]]],[[113,46,30],[[29,[115]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[111,9],16],[[112,9],16],[111,13],[112,13],[111,8],[112,8],[111,9],[112,9],[[]],[[]],[114,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[116,3]],[[117,3]],[115,[[6,[115]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[115,115],[[]],[115],[[115,115],13],[[],13],[[116,14],15],[[117,14],15],[[115,14],15],[[]],[[]],[[]],[[[6,[115]]],115],[16,[[17,[116]]]],[16,[[17,[117]]]],[[18,9,19],[[17,[116]]]],[[18,9,19],[[17,[117]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[116,9],16],[[117,9],16],[116,13],[117,13],[116,8],[117,8],[116,9],[117,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[118,35,9,9,9,9,9]],[[],119],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[120,3]],[[121,3]],[118,[[6,[118]]]],[[119,119],119],[[119,119]],[[119,119],119],[[119,119]],[119,9],[[119,119],119],[[119,119]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[122,122],[119,119],[118,118],[[]],[[]],[[]],[[119,119],68],[119,119],[[119,119],13],[[118,57,57,9,119]],[[118,57,57,9,119],[[29,[123]]]],[118],[[119,119],119],[[],119],[[122,122],13],[[119,119],13],[[118,118],13],[[],13],[[],13],[[119,69]],[[122,14],15],[[119,14],15],[[119,14],15],[[119,14],15],[[119,14],15],[[119,14],15],[[120,14],15],[[121,14],15],[[118,14],15],[[]],[[]],[[]],[[]],[[[6,[118]]],118],[[]],[9,[[12,[119]]]],[9,119],[9,119],[69,119],[9,[[12,[122]]]],[9,[[12,[119]]]],[16,[[17,[120]]]],[16,[[17,[121]]]],[[18,9,19],[[17,[120]]]],[[18,9,19],[[17,[121]]]],[[119,70]],[[119,119]],[[119,119],119],[[119,119],13],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[120,9],16],[[121,9],16],[119,13],[120,13],[121,13],[119,13],[119,119],[120,8],[121,8],[[119,119],[[12,[68]]]],[[119,119]],[[119,119,13]],[120,9],[121,9],[[119,119],119],[[119,119]],[[119,119],119],[[]],[[]],[[]],[122,9],[119,9],[[119,119]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[119,119],119],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[124,3]],[[125,3]],[126,[[6,[126]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[126,126],[[]],[126,[[29,[118]]]],[126],[[126,126],13],[[],13],[[124,14],15],[[125,14],15],[[126,14],15],[[]],[[]],[[[6,[126]]],126],[[]],[16,[[17,[124]]]],[16,[[17,[125]]]],[[18,9,19],[[17,[124]]]],[[18,9,19],[[17,[125]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[124,9],16],[[125,9],16],[124,13],[125,13],[124,8],[125,8],[124,9],[125,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[127,3]],[[128,3]],[129,[[6,[129]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[129,129],[[]],[[129,129],13],[[],13],[[127,14],15],[[128,14],15],[[129,14],15],[[]],[[]],[[[6,[129]]],129],[[]],[16,[[17,[127]]]],[16,[[17,[128]]]],[[18,9,19],[[17,[127]]]],[[18,9,19],[[17,[128]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[127,9],16],[[128,9],16],[127,13],[128,13],[127,8],[128,8],[127,9],[128,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[130,3]],[[131,3]],[132,[[6,[132]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[133,133],[132,132],[[]],[[]],[132],[[133,133],13],[[132,132],13],[[],13],[[133,14],15],[[130,14],15],[[131,14],15],[[132,14],15],[[]],[[]],[[]],[[]],[[[6,[132]]],132],[9,[[12,[133]]]],[16,[[17,[130]]]],[16,[[17,[131]]]],[[18,9,19],[[17,[130]]]],[[18,9,19],[[17,[131]]]],[[132,46],[[29,[134]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[130,9],16],[[131,9],16],[130,13],[131,13],[130,8],[131,8],[130,9],[131,9],[[]],[[]],[133,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[135,3]],[[136,3]],[134,[[6,[134]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[137,137],[134,134],[[]],[[]],[134],[[137,137],13],[[134,134],13],[[],13],[[137,14],15],[[135,14],15],[[136,14],15],[[134,14],15],[[]],[[]],[[]],[[]],[[[6,[134]]],134],[9,[[12,[137]]]],[16,[[17,[135]]]],[16,[[17,[136]]]],[[18,9,19],[[17,[135]]]],[[18,9,19],[[17,[136]]]],[134,[[29,[129]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[135,9],16],[[136,9],16],[135,13],[136,13],[135,8],[136,8],[[134,35]],[135,9],[136,9],[[]],[[]],[137,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[138,3]],[[139,3]],[140,[[6,[140]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[140,140],[[]],[140],[[140,140],13],[[],13],[[138,14],15],[[139,14],15],[[140,14],15],[[]],[[]],[[[6,[140]]],140],[[]],[16,[[17,[138]]]],[16,[[17,[139]]]],[[18,9,19],[[17,[138]]]],[[18,9,19],[[17,[139]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[138,9],16],[[139,9],16],[138,13],[139,13],[138,8],[139,8],[[140,[12,[141]]]],[138,9],[139,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[142,3]],[[143,3]],[144,[[6,[144]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[144,144],[[]],[144],[[144,144],13],[[],13],[[142,14],15],[[143,14],15],[[144,14],15],[[]],[[]],[[[6,[144]]],144],[[]],[16,[[17,[142]]]],[16,[[17,[143]]]],[[18,9,19],[[17,[142]]]],[[18,9,19],[[17,[143]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[142,9],16],[[143,9],16],[142,13],[143,13],[142,8],[143,8],[[144,145,145]],[[144,[12,[141]]]],[142,9],[143,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[146,3]],[[147,3]],[148,[[6,[148]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[149,149],[150,150],[148,148],[[]],[[]],[[]],[[148,46,107,[12,[141]],150],[[29,[140]]]],[148],[[149,149],13],[[150,150],13],[[148,148],13],[[],13],[[149,14],15],[[150,14],15],[[146,14],15],[[147,14],15],[[148,14],15],[[]],[[]],[[]],[[]],[[[6,[148]]],148],[[]],[9,[[12,[149]]]],[9,[[12,[150]]]],[16,[[17,[146]]]],[16,[[17,[147]]]],[[18,9,19],[[17,[146]]]],[[18,9,19],[[17,[147]]]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[146,9],16],[[147,9],16],[146,13],[147,13],[[148,46,107,[12,[141]],150],[[29,[144]]]],[146,8],[147,8],[146,9],[147,9],[[]],[[]],[[]],[149,9],[150,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[151,3]],[[152,3]],[153,[[6,[153]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[153,153],[[]],[153],[[153,153],13],[[],13],[[151,14],15],[[152,14],15],[[153,14],15],[[]],[[]],[[]],[[[6,[153]]],153],[16,[[17,[151]]]],[16,[[17,[152]]]],[[18,9,19],[[17,[151]]]],[[18,9,19],[[17,[152]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[151,9],16],[[152,9],16],[151,13],[152,13],[151,8],[152,8],[151,9],[152,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[154,3]],[[155,3]],[156,[[6,[156]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[156,156],[[]],[156],[[156,156],13],[[],13],[[154,14],15],[[155,14],15],[[156,14],15],[[]],[[]],[[]],[[[6,[156]]],156],[16,[[17,[154]]]],[16,[[17,[155]]]],[[18,9,19],[[17,[154]]]],[[18,9,19],[[17,[155]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[154,9],16],[[155,9],16],[154,13],[155,13],[154,8],[155,8],[154,9],[155,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[157,3]],[[158,3]],[159,[[6,[159]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[159,159],[[]],[[159,159],13],[[],13],[[157,14],15],[[158,14],15],[[159,14],15],[[]],[[]],[[[6,[159]]],159],[[]],[16,[[17,[157]]]],[16,[[17,[158]]]],[[18,9,19],[[17,[157]]]],[[18,9,19],[[17,[158]]]],[[159,107],[[29,[153]]]],[[159,107],[[29,[156]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[157,9],16],[[158,9],16],[157,13],[158,13],[157,8],[158,8],[159],[157,9],[158,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[160,3]],[[161,3]],[162,[[6,[162]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[162,162],[[]],[162,[[29,[163]]]],[162],[[162,162],13],[[],13],[[160,14],15],[[161,14],15],[[162,14],15],[[]],[[]],[[[6,[162]]],162],[[]],[16,[[17,[160]]]],[16,[[17,[161]]]],[[18,9,19],[[17,[160]]]],[[18,9,19],[[17,[161]]]],[[162,30],[[29,[164]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[160,9],16],[[161,9],16],[160,13],[161,13],[160,8],[161,8],[160,9],[161,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[165,3]],[[166,3]],[164,[[6,[164]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[164,164],[[]],[164],[[164,164],13],[[],13],[[165,14],15],[[166,14],15],[[164,14],15],[[]],[[]],[[[6,[164]]],164],[[]],[16,[[17,[165]]]],[16,[[17,[166]]]],[[18,9,19],[[17,[165]]]],[[18,9,19],[[17,[166]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[165,9],16],[[166,9],16],[165,13],[166,13],[165,8],[166,8],[[164,[12,[163]],9]],[165,9],[166,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[167,3]],[[168,3]],[169,[[6,[169]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[169,169],[[]],[169],[[169,169],13],[[],13],[[167,14],15],[[168,14],15],[[169,14],15],[[]],[[]],[[[6,[169]]],169],[[]],[16,[[17,[167]]]],[16,[[17,[168]]]],[[18,9,19],[[17,[167]]]],[[18,9,19],[[17,[168]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[167,9],16],[[168,9],16],[167,13],[168,13],[167,8],[168,8],[[169,34,35]],[167,9],[168,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[170,3]],[[171,3]],[163,[[6,[163]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[163,163],[[]],[163],[[163,163],13],[[],13],[[170,14],15],[[171,14],15],[[163,14],15],[[]],[[]],[[]],[[[6,[163]]],163],[16,[[17,[170]]]],[16,[[17,[171]]]],[[18,9,19],[[17,[170]]]],[[18,9,19],[[17,[171]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[170,9],16],[[171,9],16],[170,13],[171,13],[[163,34]],[170,8],[171,8],[170,9],[171,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[172,3]],[[173,3]],[174,[[6,[174]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[174,174],[[]],[174],[[174,174],13],[[],13],[[172,14],15],[[173,14],15],[[174,14],15],[[]],[[]],[[[6,[174]]],174],[[]],[16,[[17,[172]]]],[16,[[17,[173]]]],[[18,9,19],[[17,[172]]]],[[18,9,19],[[17,[173]]]],[[174,107],[[29,[175]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[172,9],16],[[173,9],16],[172,13],[173,13],[172,8],[173,8],[172,9],[173,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[176,3]],[[177,3]],[175,[[6,[175]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[175,175],[[]],[175],[[175,175],13],[[],13],[[176,14],15],[[177,14],15],[[175,14],15],[[]],[[]],[[]],[[[6,[175]]],175],[16,[[17,[176]]]],[16,[[17,[177]]]],[[18,9,19],[[17,[176]]]],[[18,9,19],[[17,[177]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[176,9],16],[[177,9],16],[176,13],[177,13],[176,8],[177,8],[176,9],[177,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[178,3]],[[179,3]],[180,[[6,[180]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[180,180],[[]],[180],[[180,180],13],[[],13],[[178,14],15],[[179,14],15],[[180,14],15],[[]],[[]],[[]],[[[6,[180]]],180],[16,[[17,[178]]]],[16,[[17,[179]]]],[[18,9,19],[[17,[178]]]],[[18,9,19],[[17,[179]]]],[[180,30],[[29,[181]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[178,9],16],[[179,9],16],[178,13],[179,13],[178,8],[179,8],[178,9],[179,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[182,3]],[[183,3]],[181,[[6,[181]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[181,181],[[]],[181],[[181,181],13],[[],13],[[182,14],15],[[183,14],15],[[181,14],15],[[]],[[]],[[[6,[181]]],181],[[]],[16,[[17,[182]]]],[16,[[17,[183]]]],[[18,9,19],[[17,[182]]]],[[18,9,19],[[17,[183]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[182,9],16],[[183,9],16],[182,13],[183,13],[182,8],[183,8],[182,9],[183,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[184,3]],[[185,3]],[186,[[6,[186]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[187,187],[188,188],[189,189],[190,190],[186,186],[[]],[[]],[[]],[[]],[[]],[186],[[187,187],13],[[188,188],13],[[189,189],13],[[190,190],13],[[186,186],13],[[],13],[[187,14],15],[[188,14],15],[[189,14],15],[[190,14],15],[[184,14],15],[[185,14],15],[[186,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[186]]],186],[[]],[9,[[12,[187]]]],[9,[[12,[188]]]],[9,[[12,[189]]]],[9,[[12,[190]]]],[16,[[17,[184]]]],[16,[[17,[185]]]],[[18,9,19],[[17,[184]]]],[[18,9,19],[[17,[185]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[184,9],16],[[185,9],16],[184,13],[185,13],[184,8],[185,8],[[186,9,[12,[46]],57,57]],[184,9],[185,9],[[]],[[]],[[]],[[]],[[]],[187,9],[188,9],[189,9],[190,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[191,3]],[[192,3]],[193,[[6,[193]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[193,193],[[]],[193],[[193,193],13],[[],13],[[191,14],15],[[192,14],15],[[193,14],15],[[]],[[]],[[[6,[193]]],193],[[]],[16,[[17,[191]]]],[16,[[17,[192]]]],[[18,9,19],[[17,[191]]]],[[18,9,19],[[17,[192]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[191,9],16],[[192,9],16],[191,13],[192,13],[191,8],[192,8],[191,9],[192,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[194,3]],[[195,3]],[196,[[6,[196]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[196,196],[[]],[196],[[196,196],13],[[],13],[[194,14],15],[[195,14],15],[[196,14],15],[[]],[[]],[[[6,[196]]],196],[[]],[16,[[17,[194]]]],[16,[[17,[195]]]],[[18,9,19],[[17,[194]]]],[[18,9,19],[[17,[195]]]],[[196,30],[[29,[197]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[194,9],16],[[195,9],16],[194,13],[195,13],[194,8],[195,8],[194,9],[195,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[198,3]],[[199,3]],[200,[[6,[200]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[200,200],[[]],[200],[[200,200],13],[[],13],[[198,14],15],[[199,14],15],[[200,14],15],[[]],[[]],[[]],[[[6,[200]]],200],[16,[[17,[198]]]],[16,[[17,[199]]]],[[18,9,19],[[17,[198]]]],[[18,9,19],[[17,[199]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[198,9],16],[[199,9],16],[198,13],[199,13],[198,8],[199,8],[198,9],[199,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[201,3]],[[202,3]],[203,[[6,[203]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[204,204],[203,203],[[]],[[]],[203],[[204,204],13],[[203,203],13],[[],13],[[204,14],15],[[201,14],15],[[202,14],15],[[203,14],15],[[]],[[]],[[]],[[]],[[[6,[203]]],203],[9,[[12,[204]]]],[16,[[17,[201]]]],[16,[[17,[202]]]],[[18,9,19],[[17,[201]]]],[[18,9,19],[[17,[202]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[201,9],16],[[202,9],16],[201,13],[202,13],[201,8],[202,8],[[203,34,9]],[201,9],[202,9],[[]],[[]],[204,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[205,3]],[[206,3]],[207,[[6,[207]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[208,208],[207,207],[[]],[[]],[207],[[208,208],13],[[207,207],13],[[],13],[[208,14],15],[[205,14],15],[[206,14],15],[[207,14],15],[[]],[[]],[[]],[[]],[[[6,[207]]],207],[9,[[12,[208]]]],[16,[[17,[205]]]],[16,[[17,[206]]]],[[18,9,19],[[17,[205]]]],[[18,9,19],[[17,[206]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[205,9],16],[[206,9],16],[205,13],[206,13],[205,8],[206,8],[[207,34,9]],[205,9],[206,9],[[]],[[]],[208,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[209,3]],[[210,3]],[211,[[6,[211]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[212,212],[211,211],[[]],[[]],[211],[[212,212],13],[[211,211],13],[[],13],[[212,14],15],[[209,14],15],[[210,14],15],[[211,14],15],[[]],[[]],[[]],[[]],[[[6,[211]]],211],[9,[[12,[212]]]],[16,[[17,[209]]]],[16,[[17,[210]]]],[[18,9,19],[[17,[209]]]],[[18,9,19],[[17,[210]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[209,9],16],[[210,9],16],[209,13],[210,13],[209,8],[210,8],[[211,9,34,9]],[209,9],[210,9],[[]],[[]],[212,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[213,3]],[[214,3]],[197,[[6,[197]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[197,197],[[]],[197],[[197,197],13],[[],13],[[213,14],15],[[214,14],15],[[197,14],15],[[]],[[]],[[[6,[197]]],197],[[]],[16,[[17,[213]]]],[16,[[17,[214]]]],[[18,9,19],[[17,[213]]]],[[18,9,19],[[17,[214]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[213,9],16],[[214,9],16],[213,13],[214,13],[213,8],[214,8],[213,9],[214,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[215,3]],[[216,3]],[217,[[6,[217]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[218,218],[219,219],[220,220],[221,221],[217,217],[[]],[[]],[[]],[[]],[[]],[217],[[218,218],13],[[219,219],13],[[220,220],13],[[221,221],13],[[217,217],13],[[],13],[[218,14],15],[[219,14],15],[[220,14],15],[[221,14],15],[[215,14],15],[[216,14],15],[[217,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[217]]],217],[[]],[9,[[12,[218]]]],[9,[[12,[219]]]],[9,[[12,[220]]]],[9,[[12,[221]]]],[16,[[17,[215]]]],[16,[[17,[216]]]],[[18,9,19],[[17,[215]]]],[[18,9,19],[[17,[216]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[215,9],16],[[216,9],16],[215,13],[216,13],[215,8],[216,8],[[217,9,[12,[46]],57,57]],[215,9],[216,9],[[]],[[]],[[]],[[]],[[]],[218,9],[219,9],[220,9],[221,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[222,3]],[[223,3]],[224,[[6,[224]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[224,224],[[]],[224],[[224,224],13],[[],13],[[222,14],15],[[223,14],15],[[224,14],15],[[]],[[]],[[[6,[224]]],224],[[]],[16,[[17,[222]]]],[16,[[17,[223]]]],[[18,9,19],[[17,[222]]]],[[18,9,19],[[17,[223]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[222,9],16],[[223,9],16],[222,13],[223,13],[222,8],[223,8],[222,9],[223,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[225,3]],[[226,3]],[227,[[6,[227]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[227,227],[[]],[227,[[29,[228]]]],[[227,227],13],[[],13],[[225,14],15],[[226,14],15],[[227,14],15],[[]],[[]],[[[6,[227]]],227],[[]],[16,[[17,[225]]]],[16,[[17,[226]]]],[[18,9,19],[[17,[225]]]],[[18,9,19],[[17,[226]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[225,9],16],[[226,9],16],[225,13],[226,13],[225,8],[226,8],[225,9],[226,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[228,30,46]],[[],229],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[230,3]],[[231,3]],[228,[[6,[228]]]],[[229,229],229],[[229,229]],[[229,229],229],[[229,229]],[229,9],[[229,229],229],[[229,229]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[229,229],[232,232],[233,233],[234,234],[228,228],[[]],[[]],[[]],[[]],[[]],[[229,229],68],[[228,9]],[229,229],[[229,229],13],[[228,30]],[[229,229],229],[[],229],[[229,229],13],[[232,232],13],[[233,233],13],[[234,234],13],[[228,228],13],[[],13],[[],13],[[229,69]],[[229,14],15],[[229,14],15],[[229,14],15],[[229,14],15],[[229,14],15],[[232,14],15],[[233,14],15],[[234,14],15],[[230,14],15],[[231,14],15],[[228,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[228]]],228],[9,[[12,[229]]]],[9,229],[9,229],[69,229],[9,[[12,[229]]]],[9,[[12,[232]]]],[9,[[12,[233]]]],[9,[[12,[234]]]],[16,[[17,[230]]]],[16,[[17,[231]]]],[[18,9,19],[[17,[230]]]],[[18,9,19],[[17,[231]]]],[[229,70]],[228],[[229,229]],[[229,229],229],[[229,229],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[230,9],16],[[231,9],16],[[228,9,9]],[229,13],[230,13],[231,13],[229,13],[229,229],[230,8],[231,8],[[229,229],[[12,[68]]]],[[229,229]],[228],[[229,229,13]],[[228,229,232]],[[228,57,57,57,57]],[[228,34]],[[228,34,9,9]],[228],[230,9],[231,9],[[229,229],229],[[229,229]],[[229,229],229],[[]],[[]],[[]],[[]],[[]],[229,9],[232,9],[233,9],[234,9],[[229,229]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[229,229],229],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[235,3]],[[236,3]],[237,[[6,[237]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[237,237],[[]],[237],[[237,237],13],[[],13],[[235,14],15],[[236,14],15],[[237,14],15],[[]],[[]],[[[6,[237]]],237],[[]],[16,[[17,[235]]]],[16,[[17,[236]]]],[[18,9,19],[[17,[235]]]],[[18,9,19],[[17,[236]]]],[[237,30],[[29,[238]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[235,9],16],[[236,9],16],[235,13],[236,13],[235,8],[236,8],[235,9],[236,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],239],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[240,3]],[[241,3]],[238,[[6,[238]]]],[[239,239],239],[[239,239]],[[239,239],239],[[239,239]],[239,9],[[239,239],239],[[239,239]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[242,242],[239,239],[243,243],[238,238],[[]],[[]],[[]],[[]],[[239,239],68],[238],[239,239],[[239,239],13],[238],[[239,239],239],[238],[[],239],[238],[[242,242],13],[[239,239],13],[[243,243],13],[[238,238],13],[[],13],[[],13],[[239,69]],[[242,14],15],[[239,14],15],[[239,14],15],[[239,14],15],[[239,14],15],[[239,14],15],[[243,14],15],[[240,14],15],[[241,14],15],[[238,14],15],[[]],[[]],[[]],[[]],[[]],[[[6,[238]]],238],[[]],[9,[[12,[239]]]],[9,239],[9,239],[69,239],[9,[[12,[242]]]],[9,[[12,[239]]]],[9,[[12,[243]]]],[16,[[17,[240]]]],[16,[[17,[241]]]],[[18,9,19],[[17,[240]]]],[[18,9,19],[[17,[241]]]],[[239,70]],[[239,239]],[[239,239],239],[[239,239],13],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[240,9],16],[[241,9],16],[239,13],[240,13],[241,13],[239,13],[239,239],[240,8],[241,8],[[239,239],[[12,[68]]]],[[239,239]],[[239,239,13]],[[238,239,243]],[[238,57,57,57,57]],[[238,34,57,57]],[[238,242]],[240,9],[241,9],[[239,239],239],[[239,239]],[[239,239],239],[[]],[[]],[[]],[[]],[242,9],[239,9],[243,9],[[239,239]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[239,239],239],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[244,3]],[[245,3]],[246,[[6,[246]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[246,246],[[]],[246],[[246,246],13],[[],13],[[244,14],15],[[245,14],15],[[246,14],15],[[]],[[]],[[[6,[246]]],246],[[]],[16,[[17,[244]]]],[16,[[17,[245]]]],[[18,9,19],[[17,[244]]]],[[18,9,19],[[17,[245]]]],[[246,247],[[29,[248]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[244,9],16],[[245,9],16],[244,13],[245,13],[244,8],[245,8],[244,9],[245,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[249,3]],[[250,3]],[248,[[6,[248]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[251,251],[252,252],[248,248],[[]],[[]],[[]],[248],[[251,251],13],[[252,252],13],[[248,248],13],[[],13],[[251,14],15],[[252,14],15],[[249,14],15],[[250,14],15],[[248,14],15],[[]],[[]],[[]],[[]],[[[6,[248]]],248],[[]],[9,[[12,[251]]]],[9,[[12,[252]]]],[16,[[17,[249]]]],[16,[[17,[250]]]],[[18,9,19],[[17,[249]]]],[[18,9,19],[[17,[250]]]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[249,9],16],[[250,9],16],[249,13],[250,13],[249,8],[250,8],[[248,252]],[249,9],[250,9],[[]],[[]],[[]],[251,9],[252,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[248],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[253,3]],[[254,3]],[255,[[6,[255]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[255,255],[[]],[255],[[255,255],13],[[],13],[[253,14],15],[[254,14],15],[[255,14],15],[[]],[[]],[[[6,[255]]],255],[[]],[16,[[17,[253]]]],[16,[[17,[254]]]],[[18,9,19],[[17,[253]]]],[[18,9,19],[[17,[254]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[253,9],16],[[254,9],16],[253,13],[254,13],[253,8],[254,8],[253,9],[254,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[256,3]],[[257,3]],[258,[[6,[258]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[258,258],[[]],[258],[[258,258],13],[[],13],[[258,46],[[29,[255]]]],[[256,14],15],[[257,14],15],[[258,14],15],[[]],[[]],[[]],[[[6,[258]]],258],[16,[[17,[256]]]],[16,[[17,[257]]]],[[18,9,19],[[17,[256]]]],[[18,9,19],[[17,[257]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[256,9],16],[[257,9],16],[256,13],[257,13],[256,8],[257,8],[256,9],[257,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[259,3]],[[260,3]],[261,[[6,[261]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[261,261],[[]],[261],[[261,261],13],[[],13],[[259,14],15],[[260,14],15],[[261,14],15],[[]],[[]],[[[6,[261]]],261],[[]],[16,[[17,[259]]]],[16,[[17,[260]]]],[[18,9,19],[[17,[259]]]],[[18,9,19],[[17,[260]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[259,9],16],[[260,9],16],[259,13],[260,13],[259,8],[260,8],[[261,46]],[259,9],[260,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[262,3]],[[263,3]],[264,[[6,[264]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[264,264],[[]],[264],[[264,264],13],[[],13],[[262,14],15],[[263,14],15],[[264,14],15],[[]],[[]],[[[6,[264]]],264],[[]],[16,[[17,[262]]]],[16,[[17,[263]]]],[[18,9,19],[[17,[262]]]],[[18,9,19],[[17,[263]]]],[[264,34],[[29,[261]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[262,9],16],[[263,9],16],[262,13],[263,13],[262,8],[263,8],[262,9],[263,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[265,3]],[[266,3]],[267,[[6,[267]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[267,267],[[]],[267],[[267,267],13],[[],13],[[265,14],15],[[266,14],15],[[267,14],15],[[]],[[]],[[]],[[[6,[267]]],267],[16,[[17,[265]]]],[16,[[17,[266]]]],[[18,9,19],[[17,[265]]]],[[18,9,19],[[17,[266]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[265,9],16],[[266,9],16],[265,13],[266,13],[265,8],[266,8],[265,9],[266,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[268,3]],[[269,3]],[270,[[6,[270]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[271,271],[270,270],[[]],[[]],[270],[[271,271],13],[[270,270],13],[[],13],[[270,46],[[29,[267]]]],[[271,14],15],[[268,14],15],[[269,14],15],[[270,14],15],[[]],[[]],[[]],[[[6,[270]]],270],[[]],[9,[[12,[271]]]],[16,[[17,[268]]]],[16,[[17,[269]]]],[[18,9,19],[[17,[268]]]],[[18,9,19],[[17,[269]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[268,9],16],[[269,9],16],[268,13],[269,13],[268,8],[269,8],[268,9],[269,9],[[]],[[]],[271,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[272,3]],[[273,3]],[274,[[6,[274]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[275,275],[274,274],[[]],[[]],[274],[[275,275],13],[[274,274],13],[[],13],[[275,14],15],[[272,14],15],[[273,14],15],[[274,14],15],[[]],[[]],[[]],[[]],[[[6,[274]]],274],[9,[[12,[275]]]],[16,[[17,[272]]]],[16,[[17,[273]]]],[[18,9,19],[[17,[272]]]],[[18,9,19],[[17,[273]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[272,9],16],[[273,9],16],[272,13],[273,13],[272,8],[273,8],[[274,46]],[272,9],[273,9],[[]],[[]],[275,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[276,3]],[[277,3]],[278,[[6,[278]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[278,278],[[]],[278],[[278,278],13],[[],13],[[276,14],15],[[277,14],15],[[278,14],15],[[]],[[]],[[[6,[278]]],278],[[]],[16,[[17,[276]]]],[16,[[17,[277]]]],[[18,9,19],[[17,[276]]]],[[18,9,19],[[17,[277]]]],[[278,34],[[29,[274]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[276,9],16],[[277,9],16],[276,13],[277,13],[276,8],[277,8],[276,9],[277,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[279,3]],[[280,3]],[281,[[6,[281]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[281,281],[[]],[281],[[281,281],13],[[],13],[[279,14],15],[[280,14],15],[[281,14],15],[[]],[[]],[[]],[[[6,[281]]],281],[16,[[17,[279]]]],[16,[[17,[280]]]],[[18,9,19],[[17,[279]]]],[[18,9,19],[[17,[280]]]],[[281,80],[[29,[282]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[279,9],16],[[280,9],16],[279,13],[280,13],[279,8],[280,8],[279,9],[280,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[283,3]],[[284,3]],[282,[[6,[282]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[282,282],[[]],[282],[[282,282],13],[[],13],[[283,14],15],[[284,14],15],[[282,14],15],[[]],[[]],[[]],[[[6,[282]]],282],[16,[[17,[283]]]],[16,[[17,[284]]]],[[18,9,19],[[17,[283]]]],[[18,9,19],[[17,[284]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[283,9],16],[[284,9],16],[283,13],[284,13],[283,8],[284,8],[283,9],[284,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[285,3]],[[286,3]],[287,[[6,[287]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[287,287],[[]],[287],[[287,287],13],[[],13],[[285,14],15],[[286,14],15],[[287,14],15],[[]],[[]],[[[6,[287]]],287],[[]],[16,[[17,[285]]]],[16,[[17,[286]]]],[[18,9,19],[[17,[285]]]],[[18,9,19],[[17,[286]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[285,9],16],[[286,9],16],[285,13],[286,13],[285,8],[286,8],[285,9],[286,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[288,3]],[[289,3]],[290,[[6,[290]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[291,291],[292,292],[290,290],[[]],[[]],[[]],[290],[[291,291],13],[[292,292],13],[[290,290],13],[[],13],[[291,14],15],[[292,14],15],[[288,14],15],[[289,14],15],[[290,14],15],[[]],[[]],[[]],[[]],[[[6,[290]]],290],[[]],[9,[[12,[291]]]],[9,[[12,[292]]]],[16,[[17,[288]]]],[16,[[17,[289]]]],[[18,9,19],[[17,[288]]]],[[18,9,19],[[17,[289]]]],[[290,46,46,30,9,57,57],[[29,[287]]]],[[290,46],[[29,[293]]]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[288,9],16],[[289,9],16],[288,13],[289,13],[288,8],[289,8],[[290,9]],[288,9],[289,9],[[]],[[]],[[]],[291,9],[292,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[290,57]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[293,30,9]],[[293,9]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[294,3]],[[295,3]],[293,[[6,[293]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[296,296],[297,297],[293,293],[[]],[[]],[[]],[293],[[296,296],13],[[297,297],13],[[293,293],13],[[],13],[[296,14],15],[[297,14],15],[[294,14],15],[[295,14],15],[[293,14],15],[[]],[[]],[[]],[[]],[[]],[[[6,[293]]],293],[9,[[12,[296]]]],[9,[[12,[297]]]],[16,[[17,[294]]]],[16,[[17,[295]]]],[[18,9,19],[[17,[294]]]],[[18,9,19],[[17,[295]]]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[294,9],16],[[295,9],16],[294,13],[295,13],[294,8],[295,8],[[293,30,9,9]],[[293,34]],[[293,[12,[80]]]],[293],[293],[[293,[12,[293]]]],[[293,34]],[[293,57,57,57,57]],[[293,30,9,57,57]],[294,9],[295,9],[[]],[[]],[[]],[296,9],[297,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[293],[293],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[298,3]],[[299,3]],[300,[[6,[300]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[301,301],[300,300],[[]],[[]],[300],[[301,301],13],[[300,300],13],[[],13],[[301,14],15],[[298,14],15],[[299,14],15],[[300,14],15],[[]],[[]],[[]],[[]],[[[6,[300]]],300],[9,[[12,[301]]]],[16,[[17,[298]]]],[16,[[17,[299]]]],[[18,9,19],[[17,[298]]]],[[18,9,19],[[17,[299]]]],[[300,30,9]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[298,9],16],[[299,9],16],[298,13],[299,13],[298,8],[299,8],[298,9],[299,9],[[]],[[]],[301,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],302],[[],303],[[],304],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[305,3]],[[306,3]],[307,[[6,[307]]]],[[302,302],302],[[303,303],303],[[304,304],304],[[302,302]],[[303,303]],[[304,304]],[[302,302],302],[[303,303],303],[[304,304],304],[[302,302]],[[303,303]],[[304,304]],[302,9],[303,9],[304,9],[[302,302],302],[[303,303],303],[[304,304],304],[[302,302]],[[303,303]],[[304,304]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[308,308],[302,302],[303,303],[304,304],[307,307],[[]],[[]],[[]],[[]],[[]],[[302,302],68],[[303,303],68],[[304,304],68],[302,302],[303,303],[304,304],[[302,302],13],[[303,303],13],[[304,304],13],[307],[[302,302],302],[[303,303],303],[[304,304],304],[[],302],[[],303],[[],304],[[308,308],13],[[302,302],13],[[303,303],13],[[304,304],13],[[307,307],13],[[],13],[[],13],[[],13],[[],13],[[302,69]],[[303,69]],[[304,69]],[[308,14],15],[[302,14],15],[[302,14],15],[[302,14],15],[[302,14],15],[[302,14],15],[[303,14],15],[[303,14],15],[[303,14],15],[[303,14],15],[[303,14],15],[[304,14],15],[[304,14],15],[[304,14],15],[[304,14],15],[[304,14],15],[[305,14],15],[[306,14],15],[[307,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[307]]],307],[9,[[12,[302]]]],[9,[[12,[303]]]],[9,[[12,[304]]]],[9,302],[9,303],[9,304],[9,302],[9,303],[9,304],[69,302],[69,303],[69,304],[9,[[12,[308]]]],[9,[[12,[302]]]],[9,[[12,[303]]]],[9,[[12,[304]]]],[16,[[17,[305]]]],[16,[[17,[306]]]],[[18,9,19],[[17,[305]]]],[[18,9,19],[[17,[306]]]],[[302,70]],[[303,70]],[[304,70]],[[302,302]],[[303,303]],[[304,304]],[[302,302],302],[[303,303],303],[[304,304],304],[[302,302],13],[[303,303],13],[[304,304],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[305,9],16],[[306,9],16],[302,13],[303,13],[304,13],[305,13],[306,13],[302,13],[303,13],[304,13],[302,302],[303,303],[304,304],[305,8],[306,8],[[302,302],[[12,[68]]]],[[303,303],[[12,[68]]]],[[304,304],[[12,[68]]]],[[302,302]],[[303,303]],[[304,304]],[[302,302,13]],[[303,303,13]],[[304,304,13]],[[307,302]],[[307,57,57,57,57]],[[307,9]],[[307,303]],[[307,57,57]],[[307,57,57]],[305,9],[306,9],[[302,302],302],[[303,303],303],[[304,304],304],[[302,302]],[[303,303]],[[304,304]],[[302,302],302],[[303,303],303],[[304,304],304],[[]],[[]],[[]],[[]],[[]],[308,9],[302,9],[303,9],[304,9],[[302,302]],[[303,303]],[[304,304]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[302,302],302],[[303,303],303],[[304,304],304],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[309,3]],[[310,3]],[311,[[6,[311]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[312,312],[311,311],[[]],[[]],[311,[[29,[307]]]],[311],[[312,312],13],[[311,311],13],[[],13],[[312,14],15],[[309,14],15],[[310,14],15],[[311,14],15],[[]],[[]],[[]],[[]],[[[6,[311]]],311],[9,[[12,[312]]]],[16,[[17,[309]]]],[16,[[17,[310]]]],[[18,9,19],[[17,[309]]]],[[18,9,19],[[17,[310]]]],[[311,46],[[29,[313]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[309,9],16],[[310,9],16],[309,13],[310,13],[309,8],[310,8],[[311,9]],[309,9],[310,9],[[]],[[]],[312,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[313,9]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[314,3]],[[315,3]],[313,[[6,[313]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[316,316],[313,313],[[]],[[]],[313],[[316,316],13],[[313,313],13],[[],13],[[316,14],15],[[314,14],15],[[315,14],15],[[313,14],15],[[]],[[]],[[]],[[]],[[[6,[313]]],313],[9,[[12,[316]]]],[16,[[17,[314]]]],[16,[[17,[315]]]],[[18,9,19],[[17,[314]]]],[[18,9,19],[[17,[315]]]],[[313,313,307],[[29,[300]]]],[313,[[29,[317]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[314,9],16],[[315,9],16],[314,13],[315,13],[314,8],[315,8],[[313,57,57,57,57]],[314,9],[315,9],[[]],[[]],[316,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[317,30,9]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[318,3]],[[319,3]],[317,[[6,[317]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[320,320],[321,321],[317,317],[[]],[[]],[[]],[317],[[320,320],13],[[321,321],13],[[317,317],13],[[],13],[[320,14],15],[[321,14],15],[[318,14],15],[[319,14],15],[[317,14],15],[[]],[[]],[[]],[[]],[[]],[[[6,[317]]],317],[9,[[12,[320]]]],[9,[[12,[321]]]],[16,[[17,[318]]]],[16,[[17,[319]]]],[[18,9,19],[[17,[318]]]],[[18,9,19],[[17,[319]]]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[318,9],16],[[319,9],16],[318,13],[319,13],[318,8],[319,8],[[317,30,9,9]],[[317,34]],[[317,[12,[80]]]],[[317,57,57]],[317],[[317,57,57]],[317],[[317,[12,[317]]]],[[317,34]],[[317,30,9,57,57]],[318,9],[319,9],[[]],[[]],[[]],[320,9],[321,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[317],[317],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[322,3]],[[323,3]],[324,[[6,[324]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[324,324],[[]],[324],[[324,324],13],[[],13],[[322,14],15],[[323,14],15],[[324,14],15],[[]],[[]],[[]],[[[6,[324]]],324],[16,[[17,[322]]]],[16,[[17,[323]]]],[[18,9,19],[[17,[322]]]],[[18,9,19],[[17,[323]]]],[[324,46,30],[[29,[325]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[322,9],16],[[323,9],16],[322,13],[323,13],[322,8],[323,8],[322,9],[323,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[326,3]],[[327,3]],[325,[[6,[325]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[325,325],[[]],[325],[[325,325],13],[[],13],[[326,14],15],[[327,14],15],[[325,14],15],[[]],[[]],[[]],[[[6,[325]]],325],[16,[[17,[326]]]],[16,[[17,[327]]]],[[18,9,19],[[17,[326]]]],[[18,9,19],[[17,[327]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[326,9],16],[[327,9],16],[326,13],[327,13],[326,8],[327,8],[326,9],[327,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[328,3]],[[329,3]],[330,[[6,[330]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[331,331],[330,330],[[]],[[]],[330],[[331,331],13],[[330,330],13],[[],13],[[331,14],15],[[328,14],15],[[329,14],15],[[330,14],15],[[]],[[]],[[]],[[]],[[[6,[330]]],330],[9,[[12,[331]]]],[16,[[17,[328]]]],[16,[[17,[329]]]],[[18,9,19],[[17,[328]]]],[[18,9,19],[[17,[329]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[328,9],16],[[329,9],16],[328,13],[329,13],[328,8],[329,8],[[330,57,57]],[[330,145,145,145,145]],[328,9],[329,9],[[]],[[]],[331,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[332,3]],[[333,3]],[334,[[6,[334]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[335,335],[334,334],[[]],[[]],[334],[[335,335],13],[[334,334],13],[[],13],[[335,14],15],[[332,14],15],[[333,14],15],[[334,14],15],[[]],[[]],[[]],[[[6,[334]]],334],[[]],[9,[[12,[335]]]],[16,[[17,[332]]]],[16,[[17,[333]]]],[[18,9,19],[[17,[332]]]],[[18,9,19],[[17,[333]]]],[[334,46],[[29,[330]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[332,9],16],[[333,9],16],[332,13],[333,13],[332,8],[333,8],[332,9],[333,9],[[]],[[]],[335,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[336,3]],[[337,3]],[338,[[6,[338]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[339,339],[338,338],[[]],[[]],[338],[[339,339],13],[[338,338],13],[[],13],[[339,14],15],[[336,14],15],[[337,14],15],[[338,14],15],[[]],[[]],[[]],[[[6,[338]]],338],[[]],[9,[[12,[339]]]],[16,[[17,[336]]]],[16,[[17,[337]]]],[[18,9,19],[[17,[336]]]],[[18,9,19],[[17,[337]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[336,9],16],[[337,9],16],[336,13],[337,13],[336,8],[337,8],[[338,[12,[340]]]],[[338,[12,[340]]]],[336,9],[337,9],[[]],[[]],[339,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[341,3]],[[342,3]],[343,[[6,[343]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[343,343],[[]],[343,[[29,[340]]]],[343],[[343,343],13],[[],13],[[341,14],15],[[342,14],15],[[343,14],15],[[]],[[]],[[[6,[343]]],343],[[]],[16,[[17,[341]]]],[16,[[17,[342]]]],[[18,9,19],[[17,[341]]]],[[18,9,19],[[17,[342]]]],[[343,30],[[29,[338]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[341,9],16],[[342,9],16],[341,13],[342,13],[341,8],[342,8],[341,9],[342,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[344,3]],[[345,3]],[346,[[6,[346]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[346,346],[[]],[346],[[346,346],13],[[],13],[[344,14],15],[[345,14],15],[[346,14],15],[[]],[[]],[[[6,[346]]],346],[[]],[16,[[17,[344]]]],[16,[[17,[345]]]],[[18,9,19],[[17,[344]]]],[[18,9,19],[[17,[345]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[344,9],16],[[345,9],16],[344,13],[345,13],[344,8],[345,8],[[346,34,35]],[344,9],[345,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[347,3]],[[348,3]],[340,[[6,[340]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[349,349],[340,340],[[]],[[]],[340],[[349,349],13],[[340,340],13],[[],13],[[349,14],15],[[347,14],15],[[348,14],15],[[340,14],15],[[]],[[]],[[]],[[[6,[340]]],340],[[]],[9,[[12,[349]]]],[16,[[17,[347]]]],[16,[[17,[348]]]],[[18,9,19],[[17,[347]]]],[[18,9,19],[[17,[348]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[347,9],16],[[348,9],16],[347,13],[348,13],[[340,34]],[347,8],[348,8],[347,9],[348,9],[[]],[[]],[349,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[350,3]],[[351,3]],[352,[[6,[352]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[353,353],[354,354],[352,352],[[]],[[]],[[]],[352],[[353,353],13],[[354,354],13],[[352,352],13],[[],13],[[353,14],15],[[354,14],15],[[350,14],15],[[351,14],15],[[352,14],15],[[]],[[]],[[]],[[]],[[]],[[[6,[352]]],352],[9,[[12,[353]]]],[9,[[12,[354]]]],[16,[[17,[350]]]],[16,[[17,[351]]]],[[18,9,19],[[17,[350]]]],[[18,9,19],[[17,[351]]]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[350,9],16],[[351,9],16],[350,13],[351,13],[350,8],[351,8],[350,9],[351,9],[[]],[[]],[[]],[353,9],[354,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[355,3]],[[356,3]],[357,[[6,[357]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[357,57,80],[[29,[352]]]],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[357,357],[[]],[357],[[357,357],13],[[],13],[[355,14],15],[[356,14],15],[[357,14],15],[[]],[[]],[[]],[[[6,[357]]],357],[16,[[17,[355]]]],[16,[[17,[356]]]],[[18,9,19],[[17,[355]]]],[[18,9,19],[[17,[356]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[355,9],16],[[356,9],16],[355,13],[356,13],[355,8],[356,8],[355,9],[356,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[358,30]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[359,3]],[[360,3]],[358,[[6,[358]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[361,361],[362,362],[358,358],[[]],[[]],[[]],[358],[358],[[361,361],13],[[362,362],13],[[358,358],13],[[],13],[[361,14],15],[[362,14],15],[[359,14],15],[[360,14],15],[[358,14],15],[[]],[[]],[[]],[[]],[[]],[[[6,[358]]],358],[9,[[12,[361]]]],[9,[[12,[362]]]],[16,[[17,[359]]]],[16,[[17,[360]]]],[[18,9,19],[[17,[359]]]],[[18,9,19],[[17,[360]]]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[359,9],16],[[360,9],16],[359,13],[360,13],[359,8],[360,8],[[358,[12,[80]]]],[358],[358],[[358,46,57,57,57,57]],[359,9],[360,9],[[]],[[]],[[]],[361,9],[362,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[358],[358],[358],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[363,3]],[[364,3]],[365,[[6,[365]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[365,365],[[]],[[365,365],13],[[],13],[[363,14],15],[[364,14],15],[[365,14],15],[[]],[[]],[[[6,[365]]],365],[[]],[16,[[17,[363]]]],[16,[[17,[364]]]],[[18,9,19],[[17,[363]]]],[[18,9,19],[[17,[364]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[363,9],16],[[364,9],16],[363,13],[364,13],[363,8],[364,8],[363,9],[364,9],[365],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[366,3]],[[367,3]],[368,[[6,[368]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[368,368],[[]],[368],[[368,368],13],[[],13],[[366,14],15],[[367,14],15],[[368,14],15],[[]],[[]],[[]],[[[6,[368]]],368],[16,[[17,[366]]]],[16,[[17,[367]]]],[[18,9,19],[[17,[366]]]],[[18,9,19],[[17,[367]]]],[[368,80],[[29,[369]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[366,9],16],[[367,9],16],[366,13],[367,13],[366,8],[367,8],[366,9],[367,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[370,3]],[[371,3]],[369,[[6,[369]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[372,372],[369,369],[[]],[[]],[369],[[372,372],13],[[369,369],13],[[],13],[[372,14],15],[[370,14],15],[[371,14],15],[[369,14],15],[[]],[[]],[[]],[[[6,[369]]],369],[[]],[9,[[12,[372]]]],[16,[[17,[370]]]],[16,[[17,[371]]]],[[18,9,19],[[17,[370]]]],[[18,9,19],[[17,[371]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[370,9],16],[[371,9],16],[370,13],[371,13],[370,8],[371,8],[[369,35]],[370,9],[371,9],[[]],[[]],[372,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[373,3]],[[374,3]],[375,[[6,[375]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[376,376],[375,375],[[]],[[]],[[376,376],13],[[375,375],13],[[],13],[[376,14],15],[[373,14],15],[[374,14],15],[[375,14],15],[[]],[[]],[[]],[[[6,[375]]],375],[[]],[9,[[12,[376]]]],[16,[[17,[373]]]],[16,[[17,[374]]]],[[18,9,19],[[17,[373]]]],[[18,9,19],[[17,[374]]]],[375,[[29,[377]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[373,9],16],[[374,9],16],[373,13],[374,13],[373,8],[374,8],[373,9],[374,9],[[]],[[]],[376,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[378,3]],[[379,3]],[377,[[6,[377]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[377,377],[[]],[377],[[377,377],13],[[],13],[[378,14],15],[[379,14],15],[[377,14],15],[[]],[[]],[[[6,[377]]],377],[[]],[16,[[17,[378]]]],[16,[[17,[379]]]],[[18,9,19],[[17,[378]]]],[[18,9,19],[[17,[379]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[378,9],16],[[379,9],16],[378,13],[379,13],[378,8],[379,8],[378,9],[379,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[380,3]],[[381,3]],[382,[[6,[382]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[383,383],[384,384],[382,382],[[]],[[]],[[]],[382],[[383,383],13],[[384,384],13],[[382,382],13],[[],13],[[383,14],15],[[384,14],15],[[380,14],15],[[381,14],15],[[382,14],15],[[]],[[]],[[]],[[]],[[]],[[[6,[382]]],382],[9,[[12,[383]]]],[9,[[12,[384]]]],[16,[[17,[380]]]],[16,[[17,[381]]]],[[18,9,19],[[17,[380]]]],[[18,9,19],[[17,[381]]]],[[382,46,[12,[80]],384,34],[[29,[385]]]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[380,9],16],[[381,9],16],[380,13],[381,13],[380,8],[381,8],[380,9],[381,9],[[]],[[]],[[]],[383,9],[384,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[385,9]],[[],386],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[387,3]],[[388,3]],[385,[[6,[385]]]],[[386,386],386],[[386,386]],[[386,386],386],[[386,386]],[386,9],[[386,386],386],[[386,386]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[389,389],[390,390],[386,386],[385,385],[[]],[[]],[[]],[[]],[[386,386],68],[386,386],[[386,386],13],[385],[[386,386],386],[[],386],[[389,389],13],[[390,390],13],[[386,386],13],[[385,385],13],[[],13],[[],13],[[386,69]],[[389,14],15],[[390,14],15],[[386,14],15],[[386,14],15],[[386,14],15],[[386,14],15],[[386,14],15],[[387,14],15],[[388,14],15],[[385,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[385]]],385],[9,[[12,[386]]]],[9,386],[9,386],[69,386],[9,[[12,[389]]]],[9,[[12,[390]]]],[9,[[12,[386]]]],[16,[[17,[387]]]],[16,[[17,[388]]]],[[18,9,19],[[17,[387]]]],[[18,9,19],[[17,[388]]]],[[385,391]],[[386,70]],[[386,386]],[[386,386],386],[[386,386],13],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[387,9],16],[[388,9],16],[386,13],[387,13],[388,13],[386,13],[386,386],[387,8],[388,8],[[386,386],[[12,[68]]]],[[386,386]],[[386,386,13]],[[385,386]],[[385,57]],[[385,389]],[[385,384]],[[385,57,57,57,57]],[[385,9,9]],[387,9],[388,9],[[386,386],386],[[386,386]],[[386,386],386],[[]],[[]],[[]],[[]],[389,9],[390,9],[386,9],[[386,386]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[386,386],386],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[392,3]],[[393,3]],[394,[[6,[394]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[395,395],[394,394],[[]],[[]],[[395,395],13],[[394,394],13],[[],13],[[395,14],15],[[392,14],15],[[393,14],15],[[394,14],15],[[]],[[]],[[]],[[]],[[[6,[394]]],394],[9,[[12,[395]]]],[16,[[17,[392]]]],[16,[[17,[393]]]],[[18,9,19],[[17,[392]]]],[[18,9,19],[[17,[393]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[392,9],16],[[393,9],16],[392,13],[393,13],[392,8],[393,8],[[394,57,57,57]],[[394,396]],[[394,57,57]],[[394,145]],[[394,397]],[392,9],[393,9],[[]],[[]],[395,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[398],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[399,3]],[[400,3]],[398,[[6,[398]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[401,401],[398,398],[[]],[[]],[398],[[398,402]],[[398,402],[[29,[394]]]],[[401,401],13],[[398,398],13],[[],13],[[401,14],15],[[399,14],15],[[400,14],15],[[398,14],15],[[]],[[]],[[]],[[]],[[[6,[398]]],398],[9,[[12,[401]]]],[16,[[17,[399]]]],[16,[[17,[400]]]],[[18,9,19],[[17,[399]]]],[[18,9,19],[[17,[400]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[399,9],16],[[400,9],16],[399,13],[400,13],[399,8],[400,8],[399,9],[400,9],[398],[[]],[[]],[401,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[403,3]],[[404,3]],[402,[[6,[402]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[402,402],[[]],[[402,402],13],[[],13],[[403,14],15],[[404,14],15],[[402,14],15],[[]],[[]],[[[6,[402]]],402],[[]],[16,[[17,[403]]]],[16,[[17,[404]]]],[[18,9,19],[[17,[403]]]],[[18,9,19],[[17,[404]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[403,9],16],[[404,9],16],[403,13],[404,13],[403,8],[404,8],[403,9],[404,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[405,3]],[[406,3]],[407,[[6,[407]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[407,407],[[]],[[407,9],[[29,[398]]]],[[407,407],13],[[],13],[[405,14],15],[[406,14],15],[[407,14],15],[[]],[[]],[[[6,[407]]],407],[[]],[16,[[17,[405]]]],[16,[[17,[406]]]],[[18,9,19],[[17,[405]]]],[[18,9,19],[[17,[406]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[405,9],16],[[406,9],16],[405,13],[406,13],[405,8],[406,8],[405,9],[406,9],[407],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[408,3]],[[409,3]],[396,[[6,[396]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[396,396],[[]],[[396,396],13],[[],13],[[408,14],15],[[409,14],15],[[396,14],15],[[]],[[]],[[[6,[396]]],396],[[]],[16,[[17,[408]]]],[16,[[17,[409]]]],[[18,9,19],[[17,[408]]]],[[18,9,19],[[17,[409]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[408,9],16],[[409,9],16],[408,13],[409,13],[408,8],[409,8],[408,9],[409,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[410,3]],[[411,3]],[412,[[6,[412]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[412,412],[[]],[412],[[412,412],13],[[],13],[[410,14],15],[[411,14],15],[[412,14],15],[[]],[[]],[[]],[[[6,[412]]],412],[16,[[17,[410]]]],[16,[[17,[411]]]],[[18,9,19],[[17,[410]]]],[[18,9,19],[[17,[411]]]],[[412,80],[[29,[413]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[410,9],16],[[411,9],16],[410,13],[411,13],[410,8],[411,8],[410,9],[411,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[414,3]],[[415,3]],[413,[[6,[413]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[416,416],[417,417],[413,413],[[]],[[]],[[]],[413],[[416,416],13],[[417,417],13],[[413,413],13],[[],13],[[416,14],15],[[417,14],15],[[414,14],15],[[415,14],15],[[413,14],15],[[]],[[]],[[]],[[]],[[[6,[413]]],413],[[]],[9,[[12,[416]]]],[9,[[12,[417]]]],[16,[[17,[414]]]],[16,[[17,[415]]]],[[18,9,19],[[17,[414]]]],[[18,9,19],[[17,[415]]]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[414,9],16],[[415,9],16],[414,13],[415,13],[414,8],[415,8],[[413,416]],[414,9],[415,9],[[]],[[]],[[]],[416,9],[417,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],418],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[419,3]],[[420,3]],[421,[[6,[421]]]],[[418,418],418],[[418,418]],[[418,418],418],[[418,418]],[418,9],[[418,418],418],[[418,418]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[422,422],[418,418],[421,421],[[]],[[]],[[]],[[418,418],68],[418,418],[[418,418],13],[[421,123]],[[421,123]],[421],[[418,418],418],[[],418],[[422,422],13],[[418,418],13],[[421,421],13],[[],13],[[],13],[[418,69]],[[422,14],15],[[418,14],15],[[418,14],15],[[418,14],15],[[418,14],15],[[418,14],15],[[419,14],15],[[420,14],15],[[421,14],15],[[]],[[]],[[]],[[]],[[[6,[421]]],421],[[]],[9,[[12,[418]]]],[9,418],[9,418],[69,418],[9,[[12,[422]]]],[9,[[12,[418]]]],[16,[[17,[419]]]],[16,[[17,[420]]]],[[18,9,19],[[17,[419]]]],[[18,9,19],[[17,[420]]]],[[418,70]],[[418,418]],[[418,418],418],[[418,418],13],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[419,9],16],[[420,9],16],[418,13],[419,13],[420,13],[418,13],[418,418],[419,8],[420,8],[[418,418],[[12,[68]]]],[[418,418]],[[418,418,13]],[419,9],[420,9],[[418,418],418],[[418,418]],[[418,418],418],[[]],[[]],[[]],[422,9],[418,9],[[418,418]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[418,418],418],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[423,3]],[[424,3]],[425,[[6,[425]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[425,57,80],[[29,[421]]]],[[425,57,80,57,57,57,57],[[29,[421]]]],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[425,425],[[]],[425],[[425,425],13],[[],13],[[423,14],15],[[424,14],15],[[425,14],15],[[]],[[]],[[]],[[[6,[425]]],425],[16,[[17,[423]]]],[16,[[17,[424]]]],[[18,9,19],[[17,[423]]]],[[18,9,19],[[17,[424]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[423,9],16],[[424,9],16],[423,13],[424,13],[423,8],[424,8],[423,9],[424,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[426,3]],[[427,3]],[428,[[6,[428]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[428,428],[[]],[[428,[12,[30]]],[[29,[429]]]],[[428,[12,[30]],[12,[80]]],[[29,[429]]]],[428],[[428,428],13],[[],13],[[426,14],15],[[427,14],15],[[428,14],15],[[]],[[]],[[]],[[[6,[428]]],428],[16,[[17,[426]]]],[16,[[17,[427]]]],[[18,9,19],[[17,[426]]]],[[18,9,19],[[17,[427]]]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[426,9],16],[[427,9],16],[426,13],[427,13],[426,8],[427,8],[426,9],[427,9],[[]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[430,3]],[[431,3]],[429,[[6,[429]]]],[[429,9,432,145]],[[429,9,432,145,57]],[[429,433]],[[429,9,432]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[429,9,9,434]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[435,435],[429,429],[[]],[[]],[429],[[435,435],13],[[429,429],13],[[],13],[[435,14],15],[[430,14],15],[[431,14],15],[[429,14],15],[429],[[]],[[]],[[]],[[[6,[429]]],429],[[]],[9,[[12,[435]]]],[16,[[17,[430]]]],[16,[[17,[431]]]],[[18,9,19],[[17,[430]]]],[[18,9,19],[[17,[431]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[430,9],16],[[431,9],16],[430,13],[431,13],[[429,9,145,145]],[[429,9,9,9,9,9]],[430,8],[431,8],[430,9],[431,9],[[]],[[]],[435,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[436,3]],[[437,3]],[391,[[6,[391]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[438,438],[391,391],[[]],[[]],[391],[[438,438],13],[[391,391],13],[[],13],[[438,14],15],[[436,14],15],[[437,14],15],[[391,14],15],[[]],[[]],[[]],[[]],[[[6,[391]]],391],[9,[[12,[438]]]],[16,[[17,[436]]]],[16,[[17,[437]]]],[[18,9,19],[[17,[436]]]],[[18,9,19],[[17,[437]]]],[[391,30,9]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[436,9],16],[[437,9],16],[436,13],[437,13],[436,8],[437,8],[[391,439,9]],[436,9],[437,9],[[]],[[]],[438,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],440],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[441,3]],[[442,3]],[439,[[6,[439]]]],[[440,440],440],[[440,440]],[[440,440],440],[[440,440]],[440,9],[[440,440],440],[[440,440]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[443,443],[444,444],[445,445],[440,440],[439,439],[[]],[[]],[[]],[[]],[[]],[[440,440],68],[440,440],[[440,440],13],[439],[[440,440],440],[[],440],[[443,443],13],[[444,444],13],[[445,445],13],[[440,440],13],[[439,439],13],[[],13],[[],13],[[440,69]],[[443,14],15],[[444,14],15],[[445,14],15],[[440,14],15],[[440,14],15],[[440,14],15],[[440,14],15],[[440,14],15],[[441,14],15],[[442,14],15],[[439,14],15],[[]],[[]],[[]],[[]],[[]],[[]],[[[6,[439]]],439],[[]],[9,[[12,[440]]]],[9,440],[9,440],[69,440],[9,[[12,[443]]]],[9,[[12,[444]]]],[9,[[12,[445]]]],[9,[[12,[440]]]],[16,[[17,[441]]]],[16,[[17,[442]]]],[[18,9,19],[[17,[441]]]],[[18,9,19],[[17,[442]]]],[[440,70]],[[440,440]],[[440,440],440],[[440,440],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[441,9],16],[[442,9],16],[440,13],[441,13],[442,13],[440,13],[440,440],[441,8],[442,8],[[440,440],[[12,[68]]]],[[440,440]],[[440,440,13]],[[439,444]],[[439,57,57,57,57]],[[439,9]],[[439,445]],[[439,57,57]],[[439,9]],[[439,57,57]],[439],[[439,57,57]],[441,9],[442,9],[[440,440],440],[[440,440]],[[440,440],440],[[]],[[]],[[]],[[]],[[]],[443,9],[444,9],[445,9],[440,9],[[440,440]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],[[440,440],440],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[446,9]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[447,3]],[[448,3]],[446,[[6,[446]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[449,449],[446,446],[[]],[[]],[446],[[449,449],13],[[446,446],13],[[],13],[[449,14],15],[[447,14],15],[[448,14],15],[[446,14],15],[[]],[[]],[[]],[[[6,[446]]],446],[[]],[9,[[12,[449]]]],[16,[[17,[447]]]],[16,[[17,[448]]]],[[18,9,19],[[17,[447]]]],[[18,9,19],[[17,[448]]]],[[446,[12,[446]],439],[[29,[391]]]],[446,[[29,[247]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[447,9],16],[[448,9],16],[447,13],[448,13],[447,8],[448,8],[[446,57,57,57,57]],[447,9],[448,9],[[]],[[]],[449,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[247,30,9]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[450,3]],[[451,3]],[247,[[6,[247]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[452,452],[453,453],[247,247],[[]],[[]],[[]],[247],[[452,452],13],[[453,453],13],[[247,247],13],[[],13],[[452,14],15],[[453,14],15],[[450,14],15],[[451,14],15],[[247,14],15],[[]],[[]],[[]],[[]],[[]],[[[6,[247]]],247],[9,[[12,[452]]]],[9,[[12,[453]]]],[16,[[17,[450]]]],[16,[[17,[451]]]],[[18,9,19],[[17,[450]]]],[[18,9,19],[[17,[451]]]],[[]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[450,9],16],[[451,9],16],[450,13],[451,13],[450,8],[451,8],[[247,30,9,452]],[[247,34]],[[247,[12,[80]]]],[[247,57,57]],[247],[[247,57,57]],[247],[[247,[12,[247]]]],[[247,34]],[[247,30,9,57,57]],[450,9],[451,9],[[]],[[]],[[]],[452,9],[453,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],[[],25],[247],[247],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[454,3]],[[455,3]],[456,[[6,[456]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],7],[[8,9,10],[[12,[[11,[10]]]]]],[[8,9,10],[[12,[[11,[10]]]]]],[457,457],[456,456],[[]],[[]],[456,[[29,[439]]]],[456],[[457,457],13],[[456,456],13],[[],13],[[457,14],15],[[454,14],15],[[455,14],15],[[456,14],15],[[]],[[]],[[]],[[]],[[[6,[456]]],456],[9,[[12,[457]]]],[16,[[17,[454]]]],[16,[[17,[455]]]],[[18,9,19],[[17,[454]]]],[[18,9,19],[[17,[455]]]],[[456,46],[[29,[446]]]],[[]],[[]],[[]],[[]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[21,[20]]],[[21,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[22,[20]]],[[22,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[[23,[20]]],[[23,[1,20]]]],[[454,9],16],[[455,9],16],[454,13],[455,13],[454,8],[455,8],[[456,9]],[454,9],[455,9],[[]],[[]],[457,9],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[],25],[[],25],[[],25],[[],25],0,0,0,0,0,0],"c":[],"p":[[8,"Any"],[4,"Request"],[8,"FnOnce"],[4,"Event"],[3,"GtkPrimarySelectionDevice"],[3,"Proxy"],[3,"wl_interface"],[15,"u16"],[15,"u32"],[8,"ObjectMetadata"],[3,"Object"],[4,"Option"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Message"],[4,"Result"],[6,"c_void"],[19,"wl_argument"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[3,"GtkPrimarySelectionSource"],[3,"TypeId"],[4,"Request"],[4,"Event"],[3,"GtkPrimarySelectionDeviceManager"],[3,"Main"],[3,"WlSeat"],[4,"Request"],[4,"Event"],[3,"GtkPrimarySelectionOffer"],[3,"String"],[6,"RawFd"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"OrgKdeKwinServerDecoration"],[4,"Mode"],[4,"Request"],[4,"Event"],[3,"OrgKdeKwinServerDecorationManager"],[4,"Mode"],[3,"WlSurface"],[4,"Request"],[4,"Event"],[3,"ZwpInputMethodKeyboardGrabV2"],[4,"Request"],[4,"Event"],[3,"ZwpInputMethodManagerV2"],[3,"ZwpInputMethodV2"],[4,"Request"],[4,"Event"],[3,"ZwpInputPopupSurfaceV2"],[15,"i32"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"WpPresentation"],[4,"Error"],[3,"WpPresentationFeedback"],[3,"Kind"],[4,"Request"],[4,"Event"],[4,"Ordering"],[8,"IntoIterator"],[8,"Hasher"],[4,"Request"],[4,"Event"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[4,"Event"],[3,"ZwpFullscreenShellV1"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[3,"WlOutput"],[4,"Request"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[3,"ZwpIdleInhibitorV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpInputMethodContextV1"],[3,"WlKeyboard"],[15,"u8"],[3,"Vec"],[4,"Request"],[4,"Event"],[3,"ZwpInputMethodV1"],[4,"Request"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[4,"Position"],[4,"Request"],[4,"Event"],[3,"ZwpInputPanelV1"],[4,"Request"],[4,"Event"],[3,"ZwpInputTimestampsManagerV1"],[3,"ZwpInputTimestampsV1"],[3,"WlPointer"],[3,"WlTouch"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[4,"Error"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxBufferParamsV1"],[3,"Flags"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"WlBuffer"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxDmabufV1"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxBufferReleaseV1"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxExplicitSynchronizationV1"],[4,"Error"],[3,"ZwpLinuxSurfaceSynchronizationV1"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwpConfinedPointerV1"],[3,"WlRegion"],[4,"Request"],[4,"Event"],[3,"ZwpLockedPointerV1"],[15,"f64"],[4,"Request"],[4,"Event"],[3,"ZwpPointerConstraintsV1"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[4,"Event"],[3,"ZwpPointerGesturePinchV1"],[4,"Request"],[4,"Event"],[3,"ZwpPointerGestureSwipeV1"],[4,"Request"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[4,"Request"],[4,"Event"],[3,"ZwpPrimarySelectionDeviceManagerV1"],[3,"ZwpPrimarySelectionSourceV1"],[3,"ZwpPrimarySelectionDeviceV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpPrimarySelectionOfferV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpTabletToolV1"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwpTabletV1"],[4,"Request"],[4,"Event"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[4,"Request"],[4,"Event"],[3,"ZwpTabletPadGroupV2"],[4,"Request"],[4,"Event"],[3,"ZwpTabletPadRingV2"],[4,"Source"],[4,"Request"],[4,"Event"],[3,"ZwpTabletPadStripV2"],[4,"Source"],[4,"Request"],[4,"Event"],[3,"ZwpTabletPadV2"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwpTabletToolV2"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwpTabletV2"],[4,"Request"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[3,"ZwpTextInputV1"],[3,"ContentHint"],[4,"Request"],[4,"Event"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[3,"ZwpTextInputManagerV3"],[3,"ZwpTextInputV3"],[3,"ContentHint"],[4,"Request"],[4,"Event"],[4,"ChangeCause"],[4,"ContentPurpose"],[4,"Request"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[3,"XdgToplevel"],[3,"ZxdgToplevelDecorationV1"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[3,"ZxdgExportedV1"],[4,"Request"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Request"],[4,"Event"],[3,"ZxdgImportedV1"],[4,"Request"],[4,"Event"],[3,"ZxdgImporterV1"],[4,"Request"],[4,"Event"],[3,"ZxdgExportedV2"],[4,"Request"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZxdgImportedV2"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZxdgImporterV2"],[4,"Request"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"XdgPopup"],[4,"Request"],[4,"Event"],[3,"XdgShell"],[4,"Version"],[4,"Error"],[3,"XdgSurface"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[3,"ZxdgPopupV6"],[4,"Error"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Request"],[4,"Event"],[3,"ZxdgPositionerV6"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZxdgShellV6"],[4,"Error"],[3,"ZxdgSurfaceV6"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"ZxdgToplevelV6"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"WpViewport"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WpViewporter"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrDataControlDeviceV1"],[4,"Error"],[3,"ZwlrDataControlSourceV1"],[4,"Request"],[4,"Event"],[3,"ZwlrDataControlManagerV1"],[4,"Request"],[4,"Event"],[3,"ZwlrDataControlOfferV1"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrExportDmabufFrameV1"],[4,"Flags"],[4,"CancelReason"],[4,"Request"],[4,"Event"],[3,"ZwlrExportDmabufManagerV1"],[3,"ZwlrForeignToplevelHandleV1"],[4,"Request"],[4,"Event"],[4,"State"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrForeignToplevelManagerV1"],[4,"Request"],[4,"Event"],[3,"ZwlrGammaControlManagerV1"],[3,"ZwlrGammaControlV1"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrInputInhibitManagerV1"],[4,"Error"],[3,"ZwlrInputInhibitorV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwlrLayerShellV1"],[4,"Error"],[4,"Layer"],[3,"ZwlrLayerSurfaceV1"],[3,"Anchor"],[4,"Request"],[4,"Event"],[4,"KeyboardInteractivity"],[4,"Error"],[3,"XdgPopup"],[4,"Request"],[4,"Event"],[3,"ZwlrOutputConfigurationHeadV1"],[4,"Error"],[3,"ZwlrOutputModeV1"],[4,"Transform"],[3,"ZwlrOutputConfigurationV1"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"ZwlrOutputHeadV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwlrOutputManagerV1"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"ZwlrOutputPowerManagerV1"],[3,"ZwlrOutputPowerV1"],[4,"Request"],[4,"Event"],[4,"Mode"],[4,"Error"],[3,"Flags"],[4,"Request"],[4,"Event"],[3,"ZwlrScreencopyFrameV1"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZwlrScreencopyManagerV1"],[4,"Request"],[4,"Event"],[3,"ZwlrVirtualPointerManagerV1"],[3,"ZwlrVirtualPointerV1"],[4,"Request"],[4,"Event"],[4,"Axis"],[4,"AxisSource"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[3,"XdgPositioner"],[3,"ConstraintAdjustment"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[3,"XdgSurface"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[3,"XdgWmBase"],[4,"Error"],[13,"Selection"],[13,"DataOffer"],[13,"SetSelection"],[13,"GetDevice"],[13,"Offer"],[13,"Receive"],[13,"Send"],[13,"Offer"],[13,"Mode"],[13,"RequestMode"],[13,"DefaultMode"],[13,"Create"],[13,"RepeatInfo"],[13,"Keymap"],[13,"Modifiers"],[13,"Key"],[13,"GetInputMethod"],[13,"SurroundingText"],[13,"TextChangeCause"],[13,"ContentType"],[13,"DeleteSurroundingText"],[13,"SetPreeditString"],[13,"Commit"],[13,"GetInputPopupSurface"],[13,"CommitString"],[13,"TextInputRectangle"],[13,"ClockId"],[13,"Feedback"],[13,"Presented"],[13,"SyncOutput"],[13,"Capability"],[13,"PresentSurfaceForMode"],[13,"PresentSurface"],[13,"CreateInhibitor"],[13,"SurroundingText"],[13,"InvokeAction"],[13,"ContentType"],[13,"PreferredLanguage"],[13,"CommitState"],[13,"CursorPosition"],[13,"PreeditString"],[13,"TextDirection"],[13,"Modifiers"],[13,"PreeditStyling"],[13,"PreeditCursor"],[13,"DeleteSurroundingText"],[13,"Key"],[13,"Language"],[13,"ModifiersMap"],[13,"Keysym"],[13,"CommitString"],[13,"Deactivate"],[13,"Activate"],[13,"SetToplevel"],[13,"GetInputPanelSurface"],[13,"GetKeyboardTimestamps"],[13,"GetPointerTimestamps"],[13,"GetTouchTimestamps"],[13,"Timestamp"],[13,"InhibitShortcuts"],[13,"Created"],[13,"Add"],[13,"Create"],[13,"CreateImmed"],[13,"Format"],[13,"Modifier"],[13,"FencedRelease"],[13,"GetSynchronization"],[13,"SetAcquireFence"],[13,"SetRegion"],[13,"SetRegion"],[13,"SetCursorPositionHint"],[13,"LockPointer"],[13,"ConfinePointer"],[13,"End"],[13,"Update"],[13,"Begin"],[13,"End"],[13,"Update"],[13,"Begin"],[13,"GetSwipeGesture"],[13,"GetPinchGesture"],[13,"GetDevice"],[13,"Selection"],[13,"DataOffer"],[13,"SetSelection"],[13,"Offer"],[13,"Receive"],[13,"Send"],[13,"Offer"],[13,"GetRelativePointer"],[13,"RelativeMotion"],[13,"GetTabletSeat"],[13,"TabletAdded"],[13,"ToolAdded"],[13,"Button"],[13,"Capability"],[13,"Wheel"],[13,"Rotation"],[13,"Distance"],[13,"HardwareIdWacom"],[13,"HardwareSerial"],[13,"Slider"],[13,"Pressure"],[13,"ProximityIn"],[13,"Down"],[13,"Tilt"],[13,"Frame"],[13,"Type"],[13,"Motion"],[13,"SetCursor"],[13,"Name"],[13,"Path"],[13,"Id"],[13,"GetTabletSeat"],[13,"Buttons"],[13,"ModeSwitch"],[13,"Modes"],[13,"Ring"],[13,"Strip"],[13,"Angle"],[13,"Source"],[13,"Frame"],[13,"SetFeedback"],[13,"Position"],[13,"Source"],[13,"Frame"],[13,"SetFeedback"],[13,"Button"],[13,"Buttons"],[13,"Group"],[13,"Path"],[13,"Enter"],[13,"Leave"],[13,"SetFeedback"],[13,"TabletAdded"],[13,"ToolAdded"],[13,"PadAdded"],[13,"Button"],[13,"Capability"],[13,"Wheel"],[13,"Rotation"],[13,"Distance"],[13,"HardwareIdWacom"],[13,"HardwareSerial"],[13,"Slider"],[13,"Pressure"],[13,"ProximityIn"],[13,"Down"],[13,"Tilt"],[13,"Frame"],[13,"Type"],[13,"Motion"],[13,"SetCursor"],[13,"Name"],[13,"Path"],[13,"Id"],[13,"CursorPosition"],[13,"PreeditString"],[13,"TextDirection"],[13,"PreeditStyling"],[13,"PreeditCursor"],[13,"DeleteSurroundingText"],[13,"Language"],[13,"ModifiersMap"],[13,"Keysym"],[13,"CommitString"],[13,"InputPanelState"],[13,"Enter"],[13,"SetSurroundingText"],[13,"InvokeAction"],[13,"SetCursorRectangle"],[13,"SetContentType"],[13,"SetPreferredLanguage"],[13,"Activate"],[13,"Deactivate"],[13,"CommitState"],[13,"GetTextInput"],[13,"DeleteSurroundingText"],[13,"PreeditString"],[13,"Done"],[13,"Enter"],[13,"Leave"],[13,"CommitString"],[13,"SetSurroundingText"],[13,"SetTextChangeCause"],[13,"SetCursorRectangle"],[13,"SetContentType"],[13,"GetToplevelDecoration"],[13,"Configure"],[13,"SetMode"],[13,"Handle"],[13,"Export"],[13,"SetParentOf"],[13,"Import"],[13,"Handle"],[13,"ExportToplevel"],[13,"SetParentOf"],[13,"ImportToplevel"],[13,"GetXdgOutput"],[13,"Description"],[13,"LogicalSize"],[13,"Name"],[13,"LogicalPosition"],[13,"Ping"],[13,"GetXdgPopup"],[13,"Pong"],[13,"GetXdgSurface"],[13,"UseUnstableVersion"],[13,"Configure"],[13,"SetAppId"],[13,"Resize"],[13,"SetWindowGeometry"],[13,"SetFullscreen"],[13,"SetParent"],[13,"ShowWindowMenu"],[13,"Move"],[13,"AckConfigure"],[13,"SetTitle"],[13,"Configure"],[13,"Grab"],[13,"SetAnchor"],[13,"SetConstraintAdjustment"],[13,"SetGravity"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetOffset"],[13,"Ping"],[13,"Pong"],[13,"GetXdgSurface"],[13,"Configure"],[13,"SetWindowGeometry"],[13,"GetPopup"],[13,"AckConfigure"],[13,"Configure"],[13,"SetAppId"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[13,"SetParent"],[13,"ShowWindowMenu"],[13,"Move"],[13,"SetTitle"],[13,"GrabKeyboard"],[13,"SetSource"],[13,"SetDestination"],[13,"GetViewport"],[13,"DataOffer"],[13,"Selection"],[13,"PrimarySelection"],[13,"SetSelection"],[13,"SetPrimarySelection"],[13,"GetDataDevice"],[13,"Offer"],[13,"Receive"],[13,"Send"],[13,"Offer"],[13,"Frame"],[13,"Object"],[13,"Cancel"],[13,"Ready"],[13,"CaptureOutput"],[13,"AppId"],[13,"OutputEnter"],[13,"OutputLeave"],[13,"Parent"],[13,"State"],[13,"Title"],[13,"SetRectangle"],[13,"SetFullscreen"],[13,"Activate"],[13,"Toplevel"],[13,"GetGammaControl"],[13,"GammaSize"],[13,"SetGamma"],[13,"GetLayerSurface"],[13,"Configure"],[13,"SetAnchor"],[13,"SetMargin"],[13,"SetSize"],[13,"SetKeyboardInteractivity"],[13,"SetLayer"],[13,"GetPopup"],[13,"AckConfigure"],[13,"SetExclusiveZone"],[13,"SetCustomMode"],[13,"SetMode"],[13,"SetScale"],[13,"SetTransform"],[13,"SetPosition"],[13,"EnableHead"],[13,"DisableHead"],[13,"Description"],[13,"Enabled"],[13,"PhysicalSize"],[13,"Make"],[13,"Mode"],[13,"CurrentMode"],[13,"Model"],[13,"Name"],[13,"Scale"],[13,"SerialNumber"],[13,"Transform"],[13,"Position"],[13,"Head"],[13,"Done"],[13,"CreateConfiguration"],[13,"Size"],[13,"Refresh"],[13,"GetOutputPower"],[13,"Mode"],[13,"SetMode"],[13,"Flags"],[13,"Buffer"],[13,"LinuxDmabuf"],[13,"Damage"],[13,"Ready"],[13,"Copy"],[13,"CopyWithDamage"],[13,"CaptureOutputRegion"],[13,"CaptureOutput"],[13,"CreateVirtualPointerWithOutput"],[13,"CreateVirtualPointer"],[13,"Axis"],[13,"AxisStop"],[13,"AxisDiscrete"],[13,"AxisSource"],[13,"Button"],[13,"Motion"],[13,"MotionAbsolute"],[13,"Configure"],[13,"Repositioned"],[13,"Reposition"],[13,"Grab"],[13,"SetAnchor"],[13,"SetConstraintAdjustment"],[13,"SetGravity"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetParentSize"],[13,"SetParentConfigure"],[13,"SetOffset"],[13,"Configure"],[13,"SetWindowGeometry"],[13,"GetPopup"],[13,"AckConfigure"],[13,"Configure"],[13,"SetAppId"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[13,"SetParent"],[13,"ShowWindowMenu"],[13,"Move"],[13,"SetTitle"],[13,"Ping"],[13,"Pong"],[13,"GetXdgSurface"]]},\
"wayland_sys":{"doc":"FFI bindings to the wayland system libraries.","t":"HAAOALLLLLLLLLLLLLLLLLLLLLEEEMMLLLLLLLLLLMMMMLLLLLMMLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLMMMTDGFFGFFDDGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLEEGEGGGGEEGDGEGED","n":["RUST_MANAGED","client","common","ffi_dispatch","server","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","from","from","from","into","into","into","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wl_display","wl_event_queue","wl_proxy","a","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","data","event_count","events","f","from","from","from","from","from","h","i","into","into","into","into","into","n","name","name","next","o","prev","request_count","requests","s","signature","size","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","types","u","version","wl_argument","wl_array","wl_dispatcher_func_t","wl_fixed_from_double","wl_fixed_from_int","wl_fixed_t","wl_fixed_to_double","wl_fixed_to_int","wl_interface","wl_list","wl_log_func_t","wl_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","link","listener_list","notify","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wl_client","wl_display","wl_display_global_filter_func_t","wl_event_loop","wl_event_loop_fd_func_t","wl_event_loop_idle_func_t","wl_event_loop_signal_func_t","wl_event_loop_timer_func_t","wl_event_source","wl_global","wl_global_bind_func_t","wl_listener","wl_notify_func_t","wl_resource","wl_resource_destroy_func_t","wl_shm_buffer","wl_signal"],"q":[[0,"wayland_sys"],[5,"wayland_sys::client"],[29,"wayland_sys::common"],[98,"wayland_sys::server"]],"d":["Magic static for wayland objects managed by wayland-client …","Bindings to the client library <code>libwayland-client.so</code>","Various types and functions that are used by both the …","","Bindings to the client library <code>libwayland-server.so</code>","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,0,0,0,9,10,11,12,13,10,9,11,12,13,10,9,10,12,12,9,11,12,13,10,9,9,9,11,12,13,10,9,9,11,12,13,9,13,12,12,9,11,10,11,12,13,10,9,11,12,13,10,9,11,12,13,10,9,11,9,12,0,0,0,0,0,0,0,0,0,0,0,0,14,15,16,17,18,19,20,21,22,14,15,16,17,18,19,20,21,22,14,15,16,17,18,19,20,21,22,14,15,16,17,18,19,20,21,22,21,22,21,14,15,16,17,18,19,20,21,22,14,15,16,17,18,19,20,21,22,14,15,16,17,18,19,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,[3,4],[5,4],0,[4,3],[4,5],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[4,"Result"],[3,"TypeId"],[15,"f64"],[6,"wl_fixed_t"],[15,"i32"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[19,"wl_argument"],[3,"wl_array"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[3,"wl_listener"],[3,"wl_signal"]]},\
"wl_clipboard_rs":{"doc":"A safe Rust crate for working with the Wayland clipboard.","t":"AAANNNNENEDENNNDNDNNNENEEENNNNNNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLFLFLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNEEENNNNNNNENNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMNNNENNNENNNNNNLLLLLLLLFLLLLLLLLLLLLLLFFLLLLLLLLLLMM","n":["copy","paste","utils","All","Autodetect","Both","Bytes","ClipboardType","DataCopy","Error","MimeSource","MimeType","MissingProtocol","NoSeats","Only","Options","Paste","PreparedCopy","Primary","PrimarySelectionUnsupported","Regular","Seat","SeatNotFound","ServeRequests","Source","SourceCreationError","Specific","Specific","StdIn","TempCopy","TempDirCreate","TempDirRemove","TempFileCreate","TempFileMetadata","TempFileOpen","TempFileRead","TempFileRemove","TempFileSeek","TempFileTruncate","TempFileWrite","Text","Unlimited","WaylandCommunication","WaylandConnection","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clipboard","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","copy","copy","copy_multi","copy_multi","default","default","default","default","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","foreground","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","mime_type","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","prepare_copy","prepare_copy","prepare_copy_multi","prepare_copy_multi","seat","serve","serve_requests","source","source","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","trim_newline","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","name","version","Any","ClipboardEmpty","ClipboardType","Error","MimeType","MissingProtocol","NoMimeType","NoSeats","PipeCreation","Primary","PrimarySelectionUnsupported","Regular","Seat","SeatNotFound","Specific","Specific","Text","TextWithPriority","Unspecified","WaylandCommunication","WaylandConnection","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","compare","compare","compare","default","default","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","get_contents","get_mime_types","hash","hash","hash","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","partial_cmp","partial_cmp","partial_cmp","source","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","name","version","ChildError","CloseSourceFd","CloseTargetFd","CopyDataError","Fork","MissingProtocol","NoSeats","PrimarySelectionCheckError","SetSourceFdFlags","SetTargetFdFlags","Wait","WaitUnexpected","WaylandCommunication","WaylandConnection","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","copy_data","fmt","fmt","fmt","fmt","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_primary_selection_supported","is_text","source","source","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","name","version"],"q":[[0,"wl_clipboard_rs"],[3,"wl_clipboard_rs::copy"],[277,"wl_clipboard_rs::copy::Error"],[279,"wl_clipboard_rs::paste"],[392,"wl_clipboard_rs::paste::Error"],[394,"wl_clipboard_rs::utils"],[443,"wl_clipboard_rs::utils::PrimarySelectionCheckError"]],"d":["Copying and clearing clipboard contents.","Getting the offered MIME types and the clipboard contents.","Helper functions.","Operate on all existing seats at once.","Detect the MIME type automatically from the data.","Operate on both clipboards at once.","Copy the given bytes.","The clipboard to operate on.","","Errors that can occur for copying and clearing the …","Source for copying, with a MIME type.","MIME type to offer the copied data under.","","","Serve only the given number of requests.","Options and flags that are used to customize the copying.","","A copy operation ready to start serving requests.","The “primary” clipboard.","","The regular clipboard.","Seat to operate on.","","Number of paste requests to serve.","Source for copying.","Errors that can occur for copying the source data to a …","Offer a specific MIME type.","Operate on a seat with the given name.","Copy contents of the standard input.","","","","","","","","","","","","Offer a number of common plain text MIME types.","Serve requests indefinitely.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Clears the clipboard for the given seat.","Sets the clipboard to work with.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Copies data to the clipboard.","Invokes the copy operation. See <code>copy()</code>.","Copies data to the clipboard, offering multiple data …","Invokes the copy_multi operation. See <code>copy_multi()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets the flag for not spawning a separate thread for …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a blank new set of options ready for configuration.","","","","","","","","Prepares a data copy to the clipboard.","Invokes the prepare_copy operation. See <code>prepare_copy()</code>.","Prepares a data copy to the clipboard, offering multiple …","Invokes the prepare_copy_multi operation. See …","Sets the seat to use for copying.","Starts serving copy requests.","Sets the number of requests to serve.","","","","","","","","","","","","","Sets the flag for trimming the trailing newline.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Request any available MIME type.","","The clipboard to operate on.","Errors that can occur for pasting and listing MIME types.","MIME types that can be requested from the clipboard.","","","","","The “primary” clipboard.","","The regular clipboard.","Seat to operate on.","","Request a specific MIME type.","Operate on a seat with the given name.","Request a plain text MIME type.","Request the given MIME type, and if it’s not available …","Operate on one of the existing seats depending on the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieves the clipboard contents.","Retrieves the offered MIME types.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Errors that can occur in <code>copy_data()</code>.","","","","Errors that can occur when checking whether the primary …","","","","","","","","","","","","","","","Copies data from one file to another.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Checks if the compositor supports the primary selection.","Checks if the given MIME type represents plain text.","","","","","","","","","","","",""],"i":[0,0,0,3,7,2,8,0,16,0,0,0,4,4,10,0,4,0,2,4,2,0,4,0,0,0,7,3,8,4,16,4,16,16,16,16,4,16,16,16,7,10,4,4,23,2,7,8,9,3,10,6,16,4,23,2,7,8,9,3,10,6,16,4,23,2,7,8,9,3,10,6,16,4,23,2,7,8,9,3,10,6,16,4,0,6,2,7,8,9,3,10,6,2,7,8,9,3,10,6,2,7,8,9,3,10,6,2,7,8,9,3,10,6,0,6,0,6,2,3,10,6,2,7,8,9,3,10,6,2,2,2,7,7,7,8,8,8,9,9,9,3,3,3,10,10,10,6,6,6,2,7,8,9,3,10,6,16,16,4,4,6,23,2,7,8,9,3,10,6,16,4,2,7,8,9,3,10,6,23,2,7,8,9,3,10,6,16,4,23,2,7,8,9,3,10,6,16,4,2,7,8,9,3,10,6,16,4,23,2,7,8,9,3,10,6,16,4,9,6,2,7,8,9,3,10,6,0,6,0,6,6,23,6,16,4,9,2,7,8,9,3,10,6,16,4,6,23,2,7,8,9,3,10,6,16,4,23,2,7,8,9,3,10,6,16,4,23,2,7,8,9,3,10,6,16,4,36,36,28,30,0,0,0,30,30,30,30,27,30,27,0,30,28,29,28,28,29,30,30,27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,27,28,29,27,28,29,27,28,29,27,29,27,28,29,27,27,27,28,28,28,29,29,29,27,28,29,30,30,27,28,29,30,0,0,27,28,29,27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30,27,28,29,30,37,37,33,33,33,0,33,34,34,0,33,33,33,33,34,34,33,34,33,34,33,34,33,34,0,33,33,34,34,33,34,33,34,33,34,33,34,33,34,0,0,33,34,33,34,33,34,33,34,33,34,38,38],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,3],[[5,[4]]]],[[6,2],6],[2,2],[7,7],[8,8],[9,9],[3,3],[10,10],[6,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,2],11],[[7,7],11],[[8,8],11],[[9,9],11],[[3,3],11],[[10,10],11],[[6,6],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[6,8,7],[[5,[4]]]],[[6,8,7],[[5,[4]]]],[[6,[12,[9]]],[[5,[4]]]],[[6,[12,[9]]],[[5,[4]]]],[[],2],[[],3],[[],10],[[],6],[[2,2],13],[[7,7],13],[[8,8],13],[[9,9],13],[[3,3],13],[[10,10],13],[[6,6],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[2,14],15],[[7,14],15],[[8,14],15],[[9,14],15],[[3,14],15],[[10,14],15],[[6,14],15],[[16,14],15],[[16,14],15],[[4,14],15],[[4,14],15],[[6,13],6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,17]],[[7,17]],[[8,17]],[[9,17]],[[3,17]],[[10,17]],[[6,17]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],0,[[],6],[[2,2],[[22,[11]]]],[[7,7],[[22,[11]]]],[[8,8],[[22,[11]]]],[[9,9],[[22,[11]]]],[[3,3],[[22,[11]]]],[[10,10],[[22,[11]]]],[[6,6],[[22,[11]]]],[[6,8,7],[[5,[23,4]]]],[[6,8,7],[[5,[23,4]]]],[[6,[12,[9]]],[[5,[23,4]]]],[[6,[12,[9]]],[[5,[23,4]]]],[[6,3],6],[23,[[5,[4]]]],[[6,10],6],[16,[[22,[24]]]],[4,[[22,[24]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],25],[[],25],[[6,13],6],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[27,27],[28,28],[29,29],[[]],[[]],[[]],[[27,27],11],[[28,28],11],[[29,29],11],[[],11],[[],11],[[],11],[[],27],[[],29],[[27,27],13],[[28,28],13],[[29,29],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[27,14],15],[[28,14],15],[[29,14],15],[[30,14],15],[[30,14],15],[[]],[[]],[[]],[[]],[[27,29,28],[[5,[30]]]],[[27,29],[[5,[[31,[25]],30]]]],[[27,17]],[[28,17]],[[29,17]],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[27,27],[[22,[11]]]],[[28,28],[[22,[11]]]],[[29,29],[[22,[11]]]],[30,[[22,[24]]]],[[]],[[]],[[]],[[],25],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],26],[[],26],[[],26],[[],26],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[[22,[32]],32,13],[[5,[33]]]],[[33,14],15],[[33,14],15],[[34,14],15],[[34,14],15],[[]],[[]],[[]],[[]],[[[19,[18]]],[[19,[1,18]]]],[[[19,[18]]],[[19,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[20,[18]]],[[20,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[[21,[18]]],[[21,[1,18]]]],[[],[[5,[13,34]]]],[35,13],[33,[[22,[24]]]],[34,[[22,[24]]]],[[],25],[[],25],[[],5],[[],5],[[],5],[[],5],[[],26],[[],26],0,0],"c":[],"p":[[8,"Any"],[4,"ClipboardType"],[4,"Seat"],[4,"Error"],[4,"Result"],[3,"Options"],[4,"MimeType"],[4,"Source"],[3,"MimeSource"],[4,"ServeRequests"],[4,"Ordering"],[3,"Vec"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"SourceCreationError"],[8,"Hasher"],[3,"Global"],[3,"Box"],[3,"Arc"],[3,"Rc"],[4,"Option"],[3,"PreparedCopy"],[8,"Error"],[3,"String"],[3,"TypeId"],[4,"ClipboardType"],[4,"MimeType"],[4,"Seat"],[4,"Error"],[3,"HashSet"],[6,"RawFd"],[4,"CopyDataError"],[4,"PrimarySelectionCheckError"],[15,"str"],[13,"MissingProtocol"],[13,"MissingProtocol"],[13,"MissingProtocol"]]},\
"x11_clipboard":{"doc":"","t":"GDDDRDGMLLLLLLLLLMLLLLLMLALLLLLLLLLLLMMLLLLLLLLLLLLLLMMMLLLMLLLMMLLLLLLLLLLLLLMLLLLMENNNNNNNNNLLLLLLLLLLLLLLLL","n":["Atom","Atoms","Clipboard","Context","INCR_CHUNK_SIZE","RustConnection","Window","atoms","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_for_raw_error","clipboard","clone","clone_into","connect","connect_to_stream","connect_to_stream_with_auth_info","connection","discard_reply","error","extension_information","flush","fmt","fmt","for_connected_stream","from","from","from","from","generate_id","get_atom","getter","incr","into","into","into","into","load","load_wait","maximum_request_bytes","new","new","parse_error","parse_event","poll_for_raw_event_with_sequence","prefetch_extension_information","prefetch_maximum_request_bytes","primary","property","screen","send_request_with_reply","send_request_with_reply_with_fds","send_request_without_reply","setter","setup","store","stream","string","targets","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","utf8_string","wait_for_raw_event_with_sequence","wait_for_reply","wait_for_reply_or_raw_error","wait_for_reply_with_fds_raw","window","Error","Lock","Owner","Set","Timeout","UnexpectedType","XcbConnect","XcbConnection","XcbReply","XcbReplyOrId","borrow","borrow_mut","fmt","fmt","from","from","from","from","from","from","into","source","to_string","try_from","try_into","type_id"],"q":[[0,"x11_clipboard"],[84,"x11_clipboard::error"]],"d":["","","X11 Clipboard","","","A connection to an X11 server implemented in pure rust","","","","","","","","","","","","","","","Establish a new connection.","Establish a new connection to the given streams.","Establish a new connection to the given streams.","","","","","","","","Establish a new connection for an already connected stream.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","load value.","wait for a new value and load it","","Create Clipboard.","","","","","","","","","","","","","","","store value.","Returns a reference to the contained stream.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,24,27,24,7,2,27,24,7,2,2,7,7,7,2,2,2,24,2,0,2,2,7,2,2,27,24,7,2,2,24,27,7,27,24,7,2,27,27,2,27,24,2,2,2,2,2,7,7,24,2,2,2,27,2,27,2,7,7,7,27,24,7,2,27,24,7,2,27,24,7,2,7,2,2,2,2,24,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],3],[[6,[4,5]]]],0,[7,7],[[]],[[[4,[8]]],[[6,[9]]]],[[1,10],[[6,[[2,[1]],9]]]],[[1,10,[13,[11,12]],[13,[11,12]]],[[6,[[2,[1]],9]]]],0,[[[2,[1]],3,14,15]],0,[[[2,[1]],8],[[6,[[4,[16]],5]]]],[[[2,[1]]],[[6,[5]]]],[[7,17],18],[[[2,[[0,[19,1]]]],17],[[6,[20]]]],[[1,21],[[6,[[2,[1]],9]]]],[[]],[[]],[[]],[[]],[[[2,[1]]],[[6,[22,23]]]],[[24,8],[[6,[25,26]]]],0,0,[[]],[[]],[[]],[[]],[[27,25,25,25,[29,[[4,[28]]]]],[[6,[[13,[11]],26]]]],[[27,25,25,25],[[6,[[13,[11]],26]]]],[[[2,[1]]],10],[[],[[6,[27,26]]]],[[[4,[8]]],[[6,[24,26]]]],[[[2,[1]],[30,[11]]],[[6,[31,32]]]],[[[2,[1]],[30,[11]]],[[6,[33,32]]]],[[[2,[1]]],[[6,[4,5]]]],[[[2,[1]],8],[[6,[5]]]],[[[2,[1]]]],0,0,0,[[[2,[1]],[30,[34]],[13,[35,12]]],[[6,[[37,[[2,[1]],36]],5]]]],[[[2,[1]],[30,[34]],[13,[35,12]]],[[6,[[39,[[2,[1]],38]],5]]]],[[[2,[1]],[30,[34]],[13,[35,12]]],[[6,[[40,[[2,[1]]]],5]]]],0,[[[2,[1]]],21],[[27,25,25,[29,[[13,[11]]]]],[[6,[26]]]],[[[2,[1]]],1],0,0,[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],41],[[],41],[[],41],[[],41],0,[[[2,[1]]],[[6,[5]]]],[[[2,[1]],3],[[6,[[4,[[13,[11,12]]]],5]]]],[[[2,[1]],3],[[6,[[42,[[13,[11,12]],[13,[11,12]]]],5]]]],[[[2,[1]],3],[[6,[42,5]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[26,17],18],[[26,17],18],[9,26],[23,26],[5,26],[43,26],[[[44,[25]]],26],[[]],[[]],[26,[[4,[45]]]],[[],46],[[],6],[[],6],[[],41]],"c":[],"p":[[8,"Stream"],[3,"RustConnection"],[15,"u64"],[4,"Option"],[4,"ConnectionError"],[4,"Result"],[3,"Atoms"],[15,"str"],[4,"ConnectError"],[15,"usize"],[15,"u8"],[3,"Global"],[3,"Vec"],[4,"RequestKind"],[4,"DiscardMode"],[3,"ExtensionInformation"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"Error"],[3,"Setup"],[15,"u32"],[4,"ReplyOrIdError"],[3,"Context"],[6,"Atom"],[4,"Error"],[3,"Clipboard"],[3,"Duration"],[8,"Into"],[15,"slice"],[3,"X11Error"],[4,"ParseError"],[4,"Event"],[3,"IoSlice"],[3,"RawFdContainer"],[8,"TryParse"],[3,"Cookie"],[8,"TryParseFd"],[3,"CookieWithFds"],[3,"VoidCookie"],[3,"TypeId"],[4,"ReplyOrError"],[4,"ReplyError"],[3,"SendError"],[8,"Error"],[3,"String"]]},\
"x11rb":{"doc":"X11 rust bindings.","t":"","n":["COPY_CLASS_FROM_PARENT","COPY_DEPTH_FROM_PARENT","COPY_FROM_PARENT","CURRENT_TIME","NONE","NO_SYMBOL","atom_manager","connect","connection","cookie","errors","event_loop_integration","extension_manager","properties","protocol","reexports","rust_connection","utils","wrapper","x11_utils","Buf","BufWithFds","Connection","DiscardMode","DiscardReply","DiscardReplyAndError","Error","EventAndSeqNumber","HasResponse","IsVoid","PiecewiseBuf","RawEventAndSeqNumber","Reply","ReplyOrError","RequestConnection","RequestKind","SequenceNumber","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_for_error","check_for_raw_error","clone","clone","clone_into","clone_into","compute_length_field","discard_reply","eq","eq","equivalent","equivalent","extension_information","flush","fmt","fmt","fmt","from","from","from","generate_id","into","into","into","maximum_request_bytes","parse_error","parse_event","poll_for_event","poll_for_event_with_sequence","poll_for_raw_event","poll_for_raw_event_with_sequence","prefetch_extension_information","prefetch_maximum_request_bytes","send_request_with_reply","send_request_with_reply_with_fds","send_request_without_reply","send_trait_request_with_reply","send_trait_request_with_reply_with_fds","send_trait_request_without_reply","setup","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_for_event","wait_for_event_with_sequence","wait_for_raw_event","wait_for_raw_event_with_sequence","wait_for_reply","wait_for_reply_or_error","wait_for_reply_or_raw_error","wait_for_reply_with_fds","wait_for_reply_with_fds_raw","Cookie","CookieWithFds","ListFontsWithInfoCookie","VoidCookie","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","discard_reply_and_errors","drop","fmt","fmt","fmt","fmt","from","from","from","from","ignore_error","into","into","into","into","into_iter","new","new","new","next","raw_reply","raw_reply","raw_reply_unchecked","reply","reply","reply_unchecked","sequence_number","sequence_number","sequence_number","sequence_number","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ConnectError","ConnectionError","ConnectionError","ConnectionError","ConversionFailed","DisplayParsingError","FdPassingFailed","IdsExhausted","IdsExhausted","Incomplete","InsufficientData","InsufficientMemory","InsufficientMemory","InvalidExpression","InvalidScreen","InvalidValue","IoError","IoError","MaximumRequestLengthExceeded","MissingFileDescriptors","ParseError","ParseError","ParseError","ReplyError","ReplyOrIdError","SetupAuthenticate","SetupFailed","UnknownError","UnknownError","UnsupportedExtension","X11Error","X11Error","ZeroIdMask","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","expected","received","ExtensionManager","borrow","borrow_mut","default","extension_information","fmt","from","get_from_error_code","get_from_event_code","get_from_major_opcode","into","prefetch_extension_information","try_from","try_into","type_id","AspectRatio","Iconic","Normal","ProgramSpecified","UserSpecified","WmClass","WmClassCookie","WmHints","WmHintsCookie","WmHintsState","WmSizeHints","WmSizeHintsCookie","WmSizeHintsSpecification","aspect","base_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","class","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","denominator","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_reply","from_reply","from_reply","get","get","get","get_normal_hints","icon_mask","icon_pixmap","icon_position","icon_window","initial_state","input","instance","into","into","into","into","into","into","into","into","into","max_size","min_size","new","new","new","new","new","new","numerator","position","reply","reply","reply","reply_unchecked","reply_unchecked","reply_unchecked","serialize","serialize","serialize","serialize_into","serialize_into","serialize_into","set","set","set_normal_hints","size","size_increment","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","urgent","win_gravity","window_group","Access","Alloc","AllocColor","AllocColor","AllocColorCells","AllocColorCells","AllocColorPlanes","AllocColorPlanes","AllocNamedColor","AllocNamedColor","AllowEvents","Atom","Bell","BigreqEnable","BigreqEnable","ButtonPress","ButtonRelease","ChangeActivePointerGrab","ChangeGC","ChangeHosts","ChangeKeyboardControl","ChangeKeyboardMapping","ChangePointerControl","ChangeProperty","ChangeSaveSet","ChangeWindowAttributes","CirculateNotify","CirculateRequest","CirculateWindow","ClearArea","ClientMessage","CloseFont","Colormap","ColormapNotify","ConfigureNotify","ConfigureRequest","ConfigureWindow","ConvertSelection","CopyArea","CopyColormapAndFree","CopyGC","CopyPlane","CreateColormap","CreateCursor","CreateGC","CreateGlyphCursor","CreateNotify","CreatePixmap","CreateWindow","Cursor","DeleteProperty","DestroyNotify","DestroySubwindows","DestroyWindow","Drawable","EnterNotify","Error","ErrorKind","Event","Expose","FillPoly","FocusIn","FocusOut","Font","ForceScreenSaver","FreeColormap","FreeColors","FreeCursor","FreeGC","FreePixmap","GContext","GeGeneric","GeQueryVersion","GeQueryVersion","GetAtomName","GetAtomName","GetFontPath","GetFontPath","GetGeometry","GetGeometry","GetImage","GetImage","GetInputFocus","GetInputFocus","GetKeyboardControl","GetKeyboardControl","GetKeyboardMapping","GetKeyboardMapping","GetModifierMapping","GetModifierMapping","GetMotionEvents","GetMotionEvents","GetPointerControl","GetPointerControl","GetPointerMapping","GetPointerMapping","GetProperty","GetProperty","GetScreenSaver","GetScreenSaver","GetSelectionOwner","GetSelectionOwner","GetWindowAttributes","GetWindowAttributes","GrabButton","GrabKey","GrabKeyboard","GrabKeyboard","GrabPointer","GrabPointer","GrabServer","GraphicsExposure","GravityNotify","IDChoice","ImageText16","ImageText8","Implementation","InstallColormap","InternAtom","InternAtom","KeyPress","KeyRelease","KeymapNotify","KillClient","LeaveNotify","Length","ListExtensions","ListExtensions","ListFonts","ListFonts","ListFontsWithInfo","ListFontsWithInfo","ListHosts","ListHosts","ListInstalledColormaps","ListInstalledColormaps","ListProperties","ListProperties","LookupColor","LookupColor","MapNotify","MapRequest","MapSubwindows","MapWindow","MappingNotify","Match","MotionNotify","Name","NoExposure","NoOperation","OpenFont","Pixmap","PolyArc","PolyFillArc","PolyFillRectangle","PolyLine","PolyPoint","PolyRectangle","PolySegment","PolyText16","PolyText8","PropertyNotify","PutImage","QueryBestSize","QueryBestSize","QueryColors","QueryColors","QueryExtension","QueryExtension","QueryFont","QueryFont","QueryKeymap","QueryKeymap","QueryPointer","QueryPointer","QueryTextExtents","QueryTextExtents","QueryTree","QueryTree","RecolorCursor","RenderAddGlyphs","RenderAddTraps","RenderChangePicture","RenderComposite","RenderCompositeGlyphs16","RenderCompositeGlyphs32","RenderCompositeGlyphs8","RenderCreateAnimCursor","RenderCreateConicalGradient","RenderCreateCursor","RenderCreateGlyphSet","RenderCreateLinearGradient","RenderCreatePicture","RenderCreateRadialGradient","RenderCreateSolidFill","RenderFillRectangles","RenderFreeGlyphSet","RenderFreeGlyphs","RenderFreePicture","RenderGlyph","RenderGlyphSet","RenderPictFormat","RenderPictOp","RenderPicture","RenderQueryFilters","RenderQueryFilters","RenderQueryPictFormats","RenderQueryPictFormats","RenderQueryPictIndexValues","RenderQueryPictIndexValues","RenderQueryVersion","RenderQueryVersion","RenderReferenceGlyphSet","RenderSetPictureClipRectangles","RenderSetPictureFilter","RenderSetPictureTransform","RenderTrapezoids","RenderTriFan","RenderTriStrip","RenderTriangles","ReparentNotify","ReparentWindow","Reply","Request","Request","ResizeRequest","RotateProperties","SelectionClear","SelectionNotify","SelectionRequest","SendEvent","SetAccessControl","SetClipRectangles","SetCloseDownMode","SetDashes","SetFontPath","SetInputFocus","SetModifierMapping","SetModifierMapping","SetPointerMapping","SetPointerMapping","SetScreenSaver","SetSelectionOwner","ShapeCombine","ShapeGetRectangles","ShapeGetRectangles","ShapeInputSelected","ShapeInputSelected","ShapeMask","ShapeNotify","ShapeOffset","ShapeQueryExtents","ShapeQueryExtents","ShapeQueryVersion","ShapeQueryVersion","ShapeRectangles","ShapeSelectInput","StoreColors","StoreNamedColor","TranslateCoordinates","TranslateCoordinates","UngrabButton","UngrabKey","UngrabKeyboard","UngrabPointer","UngrabServer","UninstallColormap","Unknown","Unknown","Unknown","UnmapNotify","UnmapSubwindows","UnmapWindow","Value","VisibilityNotify","Void","WarpPointer","Window","XcMiscGetVersion","XcMiscGetVersion","XcMiscGetXIDList","XcMiscGetXIDList","XcMiscGetXIDRange","XcMiscGetXIDRange","XfixesBadRegion","XfixesChangeCursor","XfixesChangeCursorByName","XfixesChangeSaveSet","XfixesCopyRegion","XfixesCreatePointerBarrier","XfixesCreateRegion","XfixesCreateRegionFromBitmap","XfixesCreateRegionFromGC","XfixesCreateRegionFromPicture","XfixesCreateRegionFromWindow","XfixesCursorNotify","XfixesDeletePointerBarrier","XfixesDestroyRegion","XfixesExpandRegion","XfixesFetchRegion","XfixesFetchRegion","XfixesGetCursorImage","XfixesGetCursorImage","XfixesGetCursorImageAndName","XfixesGetCursorImageAndName","XfixesGetCursorName","XfixesGetCursorName","XfixesHideCursor","XfixesIntersectRegion","XfixesInvertRegion","XfixesQueryVersion","XfixesQueryVersion","XfixesRegionExtents","XfixesSelectCursorInput","XfixesSelectSelectionInput","XfixesSelectionNotify","XfixesSetCursorName","XfixesSetGCClipRegion","XfixesSetPictureClipRegion","XfixesSetRegion","XfixesSetWindowShapeRegion","XfixesShowCursor","XfixesSubtractRegion","XfixesTranslateRegion","XfixesUnionRegion","bigreq","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_wire_error_code","ge","hash","into","into","into","into","into_owned","parse","parse","partial_cmp","raw_response_type","render","reply_parser","response_type","sent_event","server_generated","shape","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wire_sequence_number","xc_misc","xfixes","xproto","ConnectionExt","ENABLE_REQUEST","EnableReply","EnableRequest","X11_EXTENSION_NAME","X11_XML_VERSION","bigreq_enable","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","enable","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","hash","into","into","length","maximum_request_length","partial_cmp","partial_cmp","sequence","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_parse","try_parse_fd","try_parse_request","type_id","type_id","ConnectionExt","QUERY_VERSION_REQUEST","QueryVersionReply","QueryVersionRequest","X11_EXTENSION_NAME","X11_XML_VERSION","borrow","borrow","borrow_mut","borrow_mut","client_major_version","client_minor_version","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","ge_query_version","hash","hash","into","into","length","major_version","minor_version","partial_cmp","partial_cmp","query_version","sequence","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_parse","try_parse_fd","try_parse_request","type_id","type_id","ADD","ADD_GLYPHS_REQUEST","ADD_TRAPS_REQUEST","ALPHA_MAP","ALPHA_X_ORIGIN","ALPHA_Y_ORIGIN","ATOP","ATOP_REVERSE","AddGlyphsRequest","AddTrapsRequest","Animcursorelt","CHANGE_PICTURE_REQUEST","CLEAR","CLIP_MASK","CLIP_X_ORIGIN","CLIP_Y_ORIGIN","COLOR_BURN","COLOR_DODGE","COMPONENT_ALPHA","COMPOSITE_GLYPHS16_REQUEST","COMPOSITE_GLYPHS32_REQUEST","COMPOSITE_GLYPHS8_REQUEST","COMPOSITE_REQUEST","CONJOINT_ATOP","CONJOINT_ATOP_REVERSE","CONJOINT_CLEAR","CONJOINT_DST","CONJOINT_IN","CONJOINT_IN_REVERSE","CONJOINT_OUT","CONJOINT_OUT_REVERSE","CONJOINT_OVER","CONJOINT_OVER_REVERSE","CONJOINT_SRC","CONJOINT_XOR","CP","CREATE_ANIM_CURSOR_REQUEST","CREATE_CONICAL_GRADIENT_REQUEST","CREATE_CURSOR_REQUEST","CREATE_GLYPH_SET_REQUEST","CREATE_LINEAR_GRADIENT_REQUEST","CREATE_PICTURE_REQUEST","CREATE_RADIAL_GRADIENT_REQUEST","CREATE_SOLID_FILL_REQUEST","ChangePictureAux","ChangePictureRequest","Color","CompositeGlyphs16Request","CompositeGlyphs32Request","CompositeGlyphs8Request","CompositeRequest","ConnectionExt","CreateAnimCursorRequest","CreateConicalGradientRequest","CreateCursorRequest","CreateGlyphSetRequest","CreateLinearGradientRequest","CreatePictureAux","CreatePictureRequest","CreateRadialGradientRequest","CreateSolidFillRequest","DARKEN","DIFFERENCE","DIRECT","DISJOINT_ATOP","DISJOINT_ATOP_REVERSE","DISJOINT_CLEAR","DISJOINT_DST","DISJOINT_IN","DISJOINT_IN_REVERSE","DISJOINT_OUT","DISJOINT_OUT_REVERSE","DISJOINT_OVER","DISJOINT_OVER_REVERSE","DISJOINT_SRC","DISJOINT_XOR","DITHER","DST","Directformat","EXCLUSION","FILL_RECTANGLES_REQUEST","FREE_GLYPHS_REQUEST","FREE_GLYPH_SET_REQUEST","FREE_PICTURE_REQUEST","FillRectanglesRequest","Fixed","FreeGlyphSetRequest","FreeGlyphsRequest","FreePictureRequest","GLYPH_ERROR","GLYPH_SET_ERROR","GRAPHICS_EXPOSURE","Glyph","Glyphinfo","Glyphset","GlyphsetWrapper","HARD_LIGHT","HORIZONTAL_BGR","HORIZONTAL_RGB","HSL_COLOR","HSL_HUE","HSL_LUMINOSITY","HSL_SATURATION","IMPRECISE","IN","INDEXED","IN_REVERSE","Indexvalue","LIGHTEN","Linefix","MULTIPLY","NONE","NONE","NONE","NORMAL","OUT","OUT_REVERSE","OVER","OVERLAY","OVER_REVERSE","PAD","PICTURE_ERROR","PICT_FORMAT_ERROR","PICT_OP_ERROR","POLY_EDGE","POLY_MODE","PRECISE","PictOp","PictType","Pictdepth","Pictformat","Pictforminfo","Pictscreen","Picture","PictureEnum","PictureWrapper","Pictvisual","Pointfix","PolyEdge","PolyMode","QUERY_FILTERS_REQUEST","QUERY_PICT_FORMATS_REQUEST","QUERY_PICT_INDEX_VALUES_REQUEST","QUERY_VERSION_REQUEST","QueryFiltersReply","QueryFiltersRequest","QueryPictFormatsReply","QueryPictFormatsRequest","QueryPictIndexValuesReply","QueryPictIndexValuesRequest","QueryVersionReply","QueryVersionRequest","REFERENCE_GLYPH_SET_REQUEST","REFLECT","REPEAT","ReferenceGlyphSetRequest","Repeat","SATURATE","SCREEN","SET_PICTURE_CLIP_RECTANGLES_REQUEST","SET_PICTURE_FILTER_REQUEST","SET_PICTURE_TRANSFORM_REQUEST","SHARP","SMOOTH","SOFT_LIGHT","SRC","SUBWINDOW_MODE","SetPictureClipRectanglesRequest","SetPictureFilterRequest","SetPictureTransformRequest","Spanfix","SubPixel","TRAPEZOIDS_REQUEST","TRIANGLES_REQUEST","TRI_FAN_REQUEST","TRI_STRIP_REQUEST","Transform","Trap","Trapezoid","TrapezoidsRequest","TriFanRequest","TriStripRequest","Triangle","TrianglesRequest","UNKNOWN","VERTICAL_BGR","VERTICAL_RGB","X11_EXTENSION_NAME","X11_XML_VERSION","XOR","add_glyphs","add_traps","aliases","alpha","alpha","alpha_mask","alpha_shift","alphamap","alphamap","alphamap","alphamap","alphaxorigin","alphaxorigin","alphaxorigin","alphaxorigin","alphayorigin","alphayorigin","alphayorigin","alphayorigin","angle","bitor","bitor","bitor_assign","blue","blue","blue_mask","blue_shift","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bot","bottom","center","change_picture","cid","cid","client_major_version","client_minor_version","clip_x_origin","clip_y_origin","clipmask","clipmask","clipmask","clipmask","clipxorigin","clipxorigin","clipxorigin","clipxorigin","clipyorigin","clipyorigin","clipyorigin","clipyorigin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","color","colormap","colors","colors","colors","componentalpha","componentalpha","componentalpha","componentalpha","composite","composite_glyphs16","composite_glyphs32","composite_glyphs8","create_anim_cursor","create_conical_gradient","create_conical_gradient","create_conical_gradient_and_get_cookie","create_cursor","create_glyph_set","create_glyph_set","create_glyph_set_and_get_cookie","create_linear_gradient","create_linear_gradient","create_linear_gradient_and_get_cookie","create_picture","create_picture","create_picture_and_get_cookie","create_radial_gradient","create_radial_gradient","create_radial_gradient_and_get_cookie","create_solid_fill","create_solid_fill","create_solid_fill_and_get_cookie","cursor","cursors","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delay","depth","depth","depths","direct","dither","dither","dither","dither","drawable","drawable","drop","drop","dst","dst","dst","dst","dst","dst","dst","dst","dst","dst_x","dst_y","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","existing","fallback","fill_rectangles","filter","filters","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_glyphset","for_picture","format","format","format","format","formats","free_glyph_set","free_glyphs","free_picture","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyphcmds","glyphcmds","glyphcmds","glyphids","glyphs","glyphs","glyphset","glyphset","glyphset","glyphset","glyphset","glyphset","glyphset","graphicsexposure","graphicsexposure","graphicsexposure","graphicsexposure","green","green","green_mask","green_shift","gsid","gsid","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","id","inner","inner_radius","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_glyphset","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_picture","l","left","length","length","length","length","major_version","mask","mask_format","mask_format","mask_format","mask_format","mask_format","mask_format","mask_format","mask_x","mask_y","matrix11","matrix12","matrix13","matrix21","matrix22","matrix23","matrix31","matrix32","matrix33","minor_version","new","new","num_aliases","num_depths","num_depths","num_filters","num_formats","num_screens","num_subpixel","num_values","num_visuals","num_visuals","op","op","op","op","op","op","op","op","op","outer","outer_radius","p1","p1","p1","p2","p2","p2","p3","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","picture","picture","picture","picture","picture","picture","picture","picture","picture","picture","picture","pid","pixel","points","points","polyedge","polyedge","polyedge","polyedge","polymode","polymode","polymode","polymode","query_filters","query_pict_formats","query_pict_index_values","query_version","r","rectangles","rects","red","red","red_mask","red_shift","reference_glyph_set","render_add_glyphs","render_add_traps","render_change_picture","render_composite","render_composite_glyphs16","render_composite_glyphs32","render_composite_glyphs8","render_create_anim_cursor","render_create_conical_gradient","render_create_cursor","render_create_glyph_set","render_create_linear_gradient","render_create_picture","render_create_radial_gradient","render_create_solid_fill","render_fill_rectangles","render_free_glyph_set","render_free_glyphs","render_free_picture","render_query_filters","render_query_pict_formats","render_query_pict_index_values","render_query_version","render_reference_glyph_set","render_set_picture_clip_rectangles","render_set_picture_filter","render_set_picture_transform","render_trapezoids","render_tri_fan","render_tri_strip","render_triangles","repeat","repeat","repeat","repeat","right","screens","sequence","sequence","sequence","sequence","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","set_picture_clip_rectangles","set_picture_filter","set_picture_transform","source","src","src","src","src","src","src","src","src","src_x","src_x","src_x","src_x","src_x","src_x","src_x","src_x","src_y","src_y","src_y","src_y","src_y","src_y","src_y","src_y","stops","stops","stops","subpixels","subwindowmode","subwindowmode","subwindowmode","subwindowmode","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","top","transform","trapezoids","traps","traps","tri_fan","tri_strip","triangles","triangles","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_list","value_list","values","values","visual","visuals","width","width","x","x","x","x_off","x_off","y","y","y","y","y_off","y_off","BOUNDING","CLIP","COMBINE_REQUEST","CombineRequest","ConnectionExt","GET_RECTANGLES_REQUEST","GetRectanglesReply","GetRectanglesRequest","INPUT","INPUT_SELECTED_REQUEST","INTERSECT","INVERT","InputSelectedReply","InputSelectedRequest","Kind","MASK_REQUEST","MaskRequest","NOTIFY_EVENT","NotifyEvent","OFFSET_REQUEST","OffsetRequest","Op","QUERY_EXTENTS_REQUEST","QUERY_VERSION_REQUEST","QueryExtentsReply","QueryExtentsRequest","QueryVersionReply","QueryVersionRequest","RECTANGLES_REQUEST","RectanglesRequest","SELECT_INPUT_REQUEST","SET","SK","SO","SUBTRACT","SelectInputRequest","UNION","X11_EXTENSION_NAME","X11_XML_VERSION","affected_window","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_shape_extents_height","bounding_shape_extents_width","bounding_shape_extents_x","bounding_shape_extents_y","bounding_shaped","clip_shape_extents_height","clip_shape_extents_width","clip_shape_extents_x","clip_shape_extents_y","clip_shaped","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","combine","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","destination_kind","destination_kind","destination_kind","destination_kind","destination_window","destination_window","destination_window","destination_window","destination_window","destination_window","destination_window","enable","enabled","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extents_height","extents_width","extents_x","extents_y","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_rectangles","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","input_selected","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_owned","length","length","length","length","major_version","mask","minor_version","offset","operation","operation","operation","ordering","ordering","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","query_extents","query_version","rectangles","rectangles","rectangles","rectangles_len","response_type","select_input","sequence","sequence","sequence","sequence","sequence","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server_time","shape_combine","shape_get_rectangles","shape_input_selected","shape_kind","shape_mask","shape_offset","shape_query_extents","shape_query_version","shape_rectangles","shape_select_input","shaped","source_bitmap","source_kind","source_kind","source_window","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","window","x_offset","x_offset","x_offset","x_offset","y_offset","y_offset","y_offset","y_offset","ConnectionExt","GET_VERSION_REQUEST","GET_XID_LIST_REQUEST","GET_XID_RANGE_REQUEST","GetVersionReply","GetVersionRequest","GetXIDListReply","GetXIDListRequest","GetXIDRangeReply","GetXIDRangeRequest","X11_EXTENSION_NAME","X11_XML_VERSION","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_major_version","client_minor_version","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","count","count","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","get_version","get_xid_list","get_xid_range","hash","hash","hash","hash","hash","hash","ids","ids_len","into","into","into","into","into","into","length","length","length","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","sequence","sequence","sequence","serialize","serialize","serialize","serialize","serialize","serialize","server_major_version","server_minor_version","start_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_request","try_parse_request","try_parse_request","type_id","type_id","type_id","type_id","type_id","type_id","xc_misc_get_version","xc_misc_get_xid_list","xc_misc_get_xid_range","BAD_REGION_ERROR","Barrier","BarrierDirections","CHANGE_CURSOR_BY_NAME_REQUEST","CHANGE_CURSOR_REQUEST","CHANGE_SAVE_SET_REQUEST","COPY_REGION_REQUEST","CREATE_POINTER_BARRIER_REQUEST","CREATE_REGION_FROM_BITMAP_REQUEST","CREATE_REGION_FROM_GC_REQUEST","CREATE_REGION_FROM_PICTURE_REQUEST","CREATE_REGION_FROM_WINDOW_REQUEST","CREATE_REGION_REQUEST","CURSOR_NOTIFY_EVENT","ChangeCursorByNameRequest","ChangeCursorRequest","ChangeSaveSetRequest","ConnectionExt","CopyRegionRequest","CreatePointerBarrierRequest","CreateRegionFromBitmapRequest","CreateRegionFromGCRequest","CreateRegionFromPictureRequest","CreateRegionFromWindowRequest","CreateRegionRequest","CursorNotify","CursorNotifyEvent","CursorNotifyMask","DELETE","DELETE_POINTER_BARRIER_REQUEST","DESTROY_REGION_REQUEST","DISPLAY_CURSOR","DISPLAY_CURSOR","DeletePointerBarrierRequest","DestroyRegionRequest","EXPAND_REGION_REQUEST","ExpandRegionRequest","FETCH_REGION_REQUEST","FetchRegionReply","FetchRegionRequest","GET_CURSOR_IMAGE_AND_NAME_REQUEST","GET_CURSOR_IMAGE_REQUEST","GET_CURSOR_NAME_REQUEST","GetCursorImageAndNameReply","GetCursorImageAndNameRequest","GetCursorImageReply","GetCursorImageRequest","GetCursorNameReply","GetCursorNameRequest","HIDE_CURSOR_REQUEST","HideCursorRequest","INSERT","INTERSECT_REGION_REQUEST","INVERT_REGION_REQUEST","IntersectRegionRequest","InvertRegionRequest","MAP","NEAREST","NEGATIVE_X","NEGATIVE_Y","NONE","POSITIVE_X","POSITIVE_Y","QUERY_VERSION_REQUEST","QueryVersionReply","QueryVersionRequest","REGION_EXTENTS_REQUEST","ROOT","Region","RegionEnum","RegionExtentsRequest","RegionWrapper","SELECTION_CLIENT_CLOSE","SELECTION_CLIENT_CLOSE","SELECTION_NOTIFY_EVENT","SELECTION_WINDOW_DESTROY","SELECTION_WINDOW_DESTROY","SELECT_CURSOR_INPUT_REQUEST","SELECT_SELECTION_INPUT_REQUEST","SET_CURSOR_NAME_REQUEST","SET_GC_CLIP_REGION_REQUEST","SET_PICTURE_CLIP_REGION_REQUEST","SET_REGION_REQUEST","SET_SELECTION_OWNER","SET_SELECTION_OWNER","SET_WINDOW_SHAPE_REGION_REQUEST","SHOW_CURSOR_REQUEST","SUBTRACT_REGION_REQUEST","SaveSetMapping","SaveSetMode","SaveSetTarget","SelectCursorInputRequest","SelectSelectionInputRequest","SelectionEvent","SelectionEventMask","SelectionNotifyEvent","SetCursorNameRequest","SetGCClipRegionRequest","SetPictureClipRegionRequest","SetRegionRequest","SetWindowShapeRegionRequest","ShowCursorRequest","SubtractRegionRequest","TRANSLATE_REGION_REQUEST","TranslateRegionRequest","UNION_REGION_REQUEST","UNMAP","UnionRegionRequest","X11_EXTENSION_NAME","X11_XML_VERSION","atom","barrier","barrier","bitmap","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bounds","change_cursor","change_cursor_by_name","change_save_set","client_major_version","client_minor_version","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","copy_region","create_pointer_barrier","create_region","create_region","create_region_and_get_cookie","create_region_from_bitmap","create_region_from_bitmap","create_region_from_bitmap_and_get_cookie","create_region_from_gc","create_region_from_gc","create_region_from_gc_and_get_cookie","create_region_from_picture","create_region_from_picture","create_region_from_picture_and_get_cookie","create_region_from_window","create_region_from_window","create_region_from_window_and_get_cookie","cursor","cursor","cursor_atom","cursor_image","cursor_image","cursor_serial","cursor_serial","cursor_serial","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delete_pointer_barrier","dest","dest_kind","destination","destination","destination","destination","destination","destination","destination","destination","destroy_region","devices","directions","drop","dx","dy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_mask","event_mask","expand_region","extents","fetch_region","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_region","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gc","gc","get_cursor_image","get_cursor_image_and_name","get_cursor_name","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","hide_cursor","intersect_region","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_owned","into_owned","into_owned","into_owned","into_owned","into_region","invert_region","kind","left","length","length","length","length","length","major_version","map","minor_version","mode","name","name","name","name","name","nbytes","nbytes","owner","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","picture","picture","query_version","rectangles","rectangles","rectangles","region","region","region","region","region","region","region","region","region","region","region","region","region","region_extents","response_type","response_type","right","select_cursor_input","select_selection_input","selection","selection","selection_timestamp","sequence","sequence","sequence","sequence","sequence","sequence","sequence","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_cursor_name","set_gc_clip_region","set_picture_clip_region","set_region","set_window_shape_region","show_cursor","source","source","source","source","source","source1","source1","source1","source2","source2","source2","src","subtract_region","subtype","subtype","target","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","translate_region","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union_region","width","width","window","window","window","window","window","window","window","window","window","x","x","x1","x2","x_offset","x_origin","x_origin","xfixes_change_cursor","xfixes_change_cursor_by_name","xfixes_change_save_set","xfixes_copy_region","xfixes_create_pointer_barrier","xfixes_create_region","xfixes_create_region_from_bitmap","xfixes_create_region_from_gc","xfixes_create_region_from_picture","xfixes_create_region_from_window","xfixes_delete_pointer_barrier","xfixes_destroy_region","xfixes_expand_region","xfixes_fetch_region","xfixes_get_cursor_image","xfixes_get_cursor_image_and_name","xfixes_get_cursor_name","xfixes_hide_cursor","xfixes_intersect_region","xfixes_invert_region","xfixes_query_version","xfixes_region_extents","xfixes_select_cursor_input","xfixes_select_selection_input","xfixes_set_cursor_name","xfixes_set_gc_clip_region","xfixes_set_picture_clip_region","xfixes_set_region","xfixes_set_window_shape_region","xfixes_show_cursor","xfixes_subtract_region","xfixes_translate_region","xfixes_union_region","xhot","xhot","y","y","y1","y2","y_offset","y_origin","y_origin","yhot","yhot","ABOVE","ACCESS_ERROR","ACTIVE","ALL","ALLOC_COLOR_CELLS_REQUEST","ALLOC_COLOR_PLANES_REQUEST","ALLOC_COLOR_REQUEST","ALLOC_ERROR","ALLOC_NAMED_COLOR_REQUEST","ALLOWED","ALLOW_EVENTS_REQUEST","ALL_TEMPORARY","ALREADY_GRABBED","ALWAYS","ANCESTOR","AND","AND_INVERTED","AND_REVERSE","ANY","ANY","ANY","ANY","ANY","ANY","APPEND","ARC","ARC_MODE","ASYNC","ASYNC_BOTH","ASYNC_KEYBOARD","ASYNC_POINTER","ATOM","ATOM_ERROR","AUTO_REPEAT_MODE","AccessControl","AllocColorCellsReply","AllocColorCellsRequest","AllocColorPlanesReply","AllocColorPlanesRequest","AllocColorReply","AllocColorRequest","AllocNamedColorReply","AllocNamedColorRequest","Allow","AllowEventsRequest","Arc","ArcMode","Atom","AtomEnum","AutoRepeatMode","BACKGROUND","BACKING_PIXEL","BACKING_PLANES","BACKING_STORE","BACK_PIXEL","BACK_PIXMAP","BELL_DURATION","BELL_PERCENT","BELL_PITCH","BELL_REQUEST","BELOW","BEVEL","BITMAP","BIT_FORGET","BIT_GRAVITY","BLUE","BORDER_PIXEL","BORDER_PIXMAP","BORDER_WIDTH","BOTTOM_IF","BUSY","BUTT","BUTTON1","BUTTON1_MOTION","BUTTON2","BUTTON2_MOTION","BUTTON3","BUTTON3_MOTION","BUTTON4","BUTTON4_MOTION","BUTTON5","BUTTON5_MOTION","BUTTON_MOTION","BUTTON_PRESS","BUTTON_PRESS_EVENT","BUTTON_RELEASE","BUTTON_RELEASE_EVENT","BackPixmap","BackingStore","BellRequest","Blanking","Bool32","Button","ButtonIndex","ButtonMask","ButtonPressEvent","ButtonReleaseEvent","CAP_HEIGHT","CAP_STYLE","CARDINAL","CENTER","CHANGE_ACTIVE_POINTER_GRAB_REQUEST","CHANGE_GC_REQUEST","CHANGE_HOSTS_REQUEST","CHANGE_KEYBOARD_CONTROL_REQUEST","CHANGE_KEYBOARD_MAPPING_REQUEST","CHANGE_POINTER_CONTROL_REQUEST","CHANGE_PROPERTY_REQUEST","CHANGE_SAVE_SET_REQUEST","CHANGE_WINDOW_ATTRIBUTES_REQUEST","CHAOS","CHORD","CIRCULATE_NOTIFY_EVENT","CIRCULATE_REQUEST_EVENT","CIRCULATE_WINDOW_REQUEST","CLEAR","CLEAR_AREA_REQUEST","CLIENT_MESSAGE_EVENT","CLIP_BY_CHILDREN","CLIP_MASK","CLIP_ORIGIN_X","CLIP_ORIGIN_Y","CLOSE_FONT_REQUEST","COLORMAP","COLORMAP","COLORMAP_ERROR","COLORMAP_NOTIFY_EVENT","COLOR_MAP_CHANGE","COMPLEX","CONFIGURE_NOTIFY_EVENT","CONFIGURE_REQUEST_EVENT","CONFIGURE_WINDOW_REQUEST","CONTROL","CONTROL","CONTROL","CONVERT_SELECTION_REQUEST","CONVEX","COPY","COPYRIGHT","COPY_AREA_REQUEST","COPY_COLORMAP_AND_FREE_REQUEST","COPY_FROM_PARENT","COPY_GC_REQUEST","COPY_INVERTED","COPY_PLANE_REQUEST","CREATE_COLORMAP_REQUEST","CREATE_CURSOR_REQUEST","CREATE_GC_REQUEST","CREATE_GLYPH_CURSOR_REQUEST","CREATE_NOTIFY_EVENT","CREATE_PIXMAP_REQUEST","CREATE_WINDOW_REQUEST","CURRENT_TIME","CURSOR","CURSOR","CURSOR_ERROR","CUT_BUFFE_R0","CUT_BUFFE_R1","CUT_BUFFE_R2","CUT_BUFFE_R3","CUT_BUFFE_R4","CUT_BUFFE_R5","CUT_BUFFE_R6","CUT_BUFFE_R7","CW","CapStyle","ChangeActivePointerGrabRequest","ChangeGCAux","ChangeGCRequest","ChangeHostsRequest","ChangeKeyboardControlAux","ChangeKeyboardControlRequest","ChangeKeyboardMappingRequest","ChangePointerControlRequest","ChangePropertyRequest","ChangeSaveSetRequest","ChangeWindowAttributesAux","ChangeWindowAttributesRequest","Char2b","Charinfo","Circulate","CirculateNotifyEvent","CirculateRequestEvent","CirculateWindowRequest","ClearAreaRequest","ClientMessageData","ClientMessageEvent","ClipOrdering","CloseDown","CloseFontRequest","ColorFlag","Coloritem","Colormap","ColormapAlloc","ColormapEnum","ColormapNotifyEvent","ColormapState","ColormapWrapper","ConfigWindow","ConfigureNotifyEvent","ConfigureRequestEvent","ConfigureWindowAux","ConfigureWindowRequest","ConnectionExt","ConvertSelectionRequest","CoordMode","CopyAreaRequest","CopyColormapAndFreeRequest","CopyGCRequest","CopyPlaneRequest","CreateColormapRequest","CreateCursorRequest","CreateGCAux","CreateGCRequest","CreateGlyphCursorRequest","CreateNotifyEvent","CreatePixmapRequest","CreateWindowAux","CreateWindowRequest","Cursor","CursorEnum","CursorWrapper","DASH_LIST","DASH_OFFSET","DEC_NET","DEFAULT","DEFAULT","DEFAULT","DELETE","DELETE","DELETE","DELETE_PROPERTY_REQUEST","DESTROY_ALL","DESTROY_NOTIFY_EVENT","DESTROY_SUBWINDOWS_REQUEST","DESTROY_WINDOW_REQUEST","DIRECT_COLOR","DISABLE","DONT_PROPAGATE","DOUBLE_DASH","DRAWABLE","DRAWABLE_ERROR","DeletePropertyRequest","Depth","DestroyNotifyEvent","DestroySubwindowsRequest","DestroyWindowRequest","Drawable","EAST","ENABLE","END_SPACE","ENTER_NOTIFY_EVENT","ENTER_WINDOW","EQUIV","EVENT_MASK","EVEN_ODD","EXPOSE_EVENT","EXPOSURE","EnterNotifyEvent","EventMask","ExposeEvent","Exposures","FAILURE","FAMILY_NAME","FASTEST_STIPPLE","FASTEST_TILE","FILL_POLY_REQUEST","FILL_RULE","FILL_STYLE","FOCUS_CHANGE","FOCUS_IN_EVENT","FOCUS_OUT_EVENT","FOLLOW_KEYBOARD","FONT","FONT","FONT_ERROR","FONT_NAME","FORCE_SCREEN_SAVER_REQUEST","FOREGROUND","FREE_COLORMAP_REQUEST","FREE_COLORS_REQUEST","FREE_CURSOR_REQUEST","FREE_GC_REQUEST","FREE_PIXMAP_REQUEST","FROZEN","FULLY_OBSCURED","FULL_NAME","FUNCTION","Family","FillPolyRequest","FillRule","FillStyle","FocusInEvent","FocusOutEvent","Font","FontDraw","FontEnum","FontWrapper","Fontable","Fontprop","ForceScreenSaverRequest","Format","FreeColormapRequest","FreeColorsRequest","FreeCursorRequest","FreeGCRequest","FreePixmapRequest","GC","GET_ATOM_NAME_REQUEST","GET_FONT_PATH_REQUEST","GET_GEOMETRY_REQUEST","GET_IMAGE_REQUEST","GET_INPUT_FOCUS_REQUEST","GET_KEYBOARD_CONTROL_REQUEST","GET_KEYBOARD_MAPPING_REQUEST","GET_MODIFIER_MAPPING_REQUEST","GET_MOTION_EVENTS_REQUEST","GET_POINTER_CONTROL_REQUEST","GET_POINTER_MAPPING_REQUEST","GET_PROPERTY_REQUEST","GET_SCREEN_SAVER_REQUEST","GET_SELECTION_OWNER_REQUEST","GET_WINDOW_ATTRIBUTES_REQUEST","GE_GENERIC_EVENT","GRAB","GRAB_BUTTON_REQUEST","GRAB_KEYBOARD_REQUEST","GRAB_KEY_REQUEST","GRAB_POINTER_REQUEST","GRAB_SERVER_REQUEST","GRAPHICS_EXPOSURES","GRAPHICS_EXPOSURE_EVENT","GRAVITY_NOTIFY_EVENT","GRAY_SCALE","GREEN","GX","G_CONTEXT_ERROR","Gcontext","GcontextWrapper","GeGenericEvent","GetAtomNameReply","GetAtomNameRequest","GetFontPathReply","GetFontPathRequest","GetGeometryReply","GetGeometryRequest","GetImageReply","GetImageRequest","GetInputFocusReply","GetInputFocusRequest","GetKeyboardControlReply","GetKeyboardControlRequest","GetKeyboardMappingReply","GetKeyboardMappingRequest","GetModifierMappingReply","GetModifierMappingRequest","GetMotionEventsReply","GetMotionEventsRequest","GetPointerControlReply","GetPointerControlRequest","GetPointerMappingReply","GetPointerMappingRequest","GetPropertyReply","GetPropertyRequest","GetPropertyType","GetScreenSaverReply","GetScreenSaverRequest","GetSelectionOwnerReply","GetSelectionOwnerRequest","GetWindowAttributesReply","GetWindowAttributesRequest","Grab","GrabButtonRequest","GrabKeyRequest","GrabKeyboardReply","GrabKeyboardRequest","GrabMode","GrabPointerReply","GrabPointerRequest","GrabServerRequest","GrabStatus","GraphicsExposureEvent","Gravity","GravityNotifyEvent","HEIGHT","HINT","Host","HostMode","ID_CHOICE_ERROR","IMAGE_TEXT16_REQUEST","IMAGE_TEXT8_REQUEST","IMPLEMENTATION_ERROR","INCLUDE_INFERIORS","INFERIOR","INPUT_ONLY","INPUT_OUTPUT","INSERT","INSERT","INSTALLED","INSTALL_COLORMAP_REQUEST","INTEGER","INTERNET","INTERNET6","INTERN_ATOM_REQUEST","INVALID_TIME","INVERT","ITALIC_ANGLE","ITEM_FOCUS","ImageFormat","ImageOrder","ImageText16Request","ImageText8Request","InputFocus","InstallColormapRequest","InternAtomReply","InternAtomRequest","JOIN_STYLE","JoinStyle","KB","KEY","KEYBOARD","KEYMAP_NOTIFY_EVENT","KEYMAP_STATE","KEY_CLICK_PERCENT","KEY_PRESS","KEY_PRESS_EVENT","KEY_RELEASE","KEY_RELEASE_EVENT","KILL_CLIENT_REQUEST","KeyButMask","KeyPressEvent","KeyReleaseEvent","Keycode","Keycode32","KeymapNotifyEvent","Keysym","Kill","KillClientRequest","LARGEST_CURSOR","LEAVE_NOTIFY_EVENT","LEAVE_WINDOW","LED","LED_MODE","LEFT_TO_RIGHT","LENGTH_ERROR","LINE_STYLE","LINE_WIDTH","LIST_EXTENSIONS_REQUEST","LIST_FONTS_REQUEST","LIST_FONTS_WITH_INFO_REQUEST","LIST_HOSTS_REQUEST","LIST_INSTALLED_COLORMAPS_REQUEST","LIST_PROPERTIES_REQUEST","LOCK","LOCK","LOCK","LOOKUP_COLOR_REQUEST","LOWER_HIGHEST","LSB_FIRST","LeaveNotifyEvent","LedMode","LineStyle","ListExtensionsReply","ListExtensionsRequest","ListFontsReply","ListFontsRequest","ListFontsWithInfoReply","ListFontsWithInfoRequest","ListHostsReply","ListHostsRequest","ListInstalledColormapsReply","ListInstalledColormapsRequest","ListPropertiesReply","ListPropertiesRequest","LookupColorReply","LookupColorRequest","M1","M1","M1","M1","M2","M2","M2","M2","M3","M3","M3","M3","M4","M4","M4","M4","M5","M5","M5","M5","MAPPING_NOTIFY_EVENT","MAP_NOTIFY_EVENT","MAP_REQUEST_EVENT","MAP_SUBWINDOWS_REQUEST","MAP_WINDOW_REQUEST","MATCH_ERROR","MAX_SPACE","MIN_SPACE","MITER","MOD1","MOD2","MOD3","MOD4","MOD5","MODIFIER","MOTION_NOTIFY_EVENT","MSB_FIRST","MapIndex","MapNotifyEvent","MapRequestEvent","MapState","MapSubwindowsRequest","MapWindowRequest","Mapping","MappingNotifyEvent","MappingStatus","ModMask","Motion","MotionNotifyEvent","NAME_ERROR","NAND","NEW_VALUE","NONCONVEX","NONE","NONE","NONE","NONE","NONE","NONE","NONE","NONE","NONE","NONE","NONLINEAR","NONLINEAR_VIRTUAL","NOOP","NOR","NORMAL","NORMAL","NORM_SPACE","NORTH","NORTH_EAST","NORTH_WEST","NOTICE","NOT_ALLOWED","NOT_LAST","NOT_PREFERRED","NOT_USEFUL","NOT_VIEWABLE","NO_EVENT","NO_EXPOSURE_EVENT","NO_OPERATION_REQUEST","NoExposureEvent","NoOperationRequest","NotifyDetail","NotifyMode","OFF","OFF","ON","ON","ON_BOTTOM","ON_OFF_DASH","ON_TOP","OPAQUE_STIPPLED","OPEN_FONT_REQUEST","OPPOSITE","OR","ORIGIN","OR_INVERTED","OR_REVERSE","OVERRIDE_REDIRECT","OWNER_GRAB_BUTTON","OpenFontRequest","PARENT","PARENT_RELATIVE","PARTIALLY_OBSCURED","PIE_SLICE","PIXMAP","PIXMAP_ERROR","PLANE_MASK","POINT","POINTER","POINTER","POINTER_MOTION","POINTER_MOTION_HINT","POINTER_ROOT","POINTER_ROOT","POINTER_WINDOW","POINT_SIZE","POLY_ARC_REQUEST","POLY_FILL_ARC_REQUEST","POLY_FILL_RECTANGLE_REQUEST","POLY_LINE_REQUEST","POLY_POINT_REQUEST","POLY_RECTANGLE_REQUEST","POLY_SEGMENT_REQUEST","POLY_TEXT16_REQUEST","POLY_TEXT8_REQUEST","PREFERRED","PREPEND","PREVIOUS","PRIMARY","PROJECTING","PROPERTY_CHANGE","PROPERTY_NOTIFY_EVENT","PSEUDO_COLOR","PUT_IMAGE_REQUEST","Pixmap","PixmapEnum","PixmapWrapper","Place","Point","PolyArcRequest","PolyFillArcRequest","PolyFillRectangleRequest","PolyLineRequest","PolyPointRequest","PolyRectangleRequest","PolySegmentRequest","PolyShape","PolyText16Request","PolyText8Request","PropMode","Property","PropertyNotifyEvent","PutImageRequest","QUAD_WIDTH","QUERY_BEST_SIZE_REQUEST","QUERY_COLORS_REQUEST","QUERY_EXTENSION_REQUEST","QUERY_FONT_REQUEST","QUERY_KEYMAP_REQUEST","QUERY_POINTER_REQUEST","QUERY_TEXT_EXTENTS_REQUEST","QUERY_TREE_REQUEST","QueryBestSizeReply","QueryBestSizeRequest","QueryColorsReply","QueryColorsRequest","QueryExtensionReply","QueryExtensionRequest","QueryFontReply","QueryFontRequest","QueryKeymapReply","QueryKeymapRequest","QueryPointerReply","QueryPointerRequest","QueryShapeOf","QueryTextExtentsReply","QueryTextExtentsRequest","QueryTreeReply","QueryTreeRequest","RAISE_LOWEST","RECOLOR_CURSOR_REQUEST","RECTANGLE","RED","REPARENT_NOTIFY_EVENT","REPARENT_WINDOW_REQUEST","REPLACE","REPLAY_KEYBOARD","REPLAY_POINTER","REQUEST_ERROR","RESET","RESIZE_REDIRECT","RESIZE_REQUEST_EVENT","RESOLUTION","RESOURCE_MANAGER","RETAIN_PERMANENT","RETAIN_TEMPORARY","RGB_BEST_MAP","RGB_BLUE_MAP","RGB_COLOR_MAP","RGB_DEFAULT_MAP","RGB_GRAY_MAP","RGB_GREEN_MAP","RGB_RED_MAP","RIGHT_TO_LEFT","ROTATE_PROPERTIES_REQUEST","ROUND","ROUND","RecolorCursorRequest","Rectangle","ReparentNotifyEvent","ReparentWindowRequest","ResizeRequestEvent","Rgb","RotatePropertiesRequest","SAVE_UNDER","SECONDARY","SELECTION_CLEAR_EVENT","SELECTION_NOTIFY_EVENT","SELECTION_REQUEST_EVENT","SEND_EVENT_REQUEST","SERVER_INTERPRETED","SET","SET_ACCESS_CONTROL_REQUEST","SET_CLIP_RECTANGLES_REQUEST","SET_CLOSE_DOWN_MODE_REQUEST","SET_DASHES_REQUEST","SET_FONT_PATH_REQUEST","SET_INPUT_FOCUS_REQUEST","SET_MODIFIER_MAPPING_REQUEST","SET_POINTER_MAPPING_REQUEST","SET_SCREEN_SAVER_REQUEST","SET_SELECTION_OWNER_REQUEST","SHIFT","SHIFT","SHIFT","SIBLING","SOLID","SOLID","SOUTH","SOUTH_EAST","SOUTH_WEST","STACK_MODE","STATIC","STATIC_COLOR","STATIC_GRAY","STIPPLE","STIPPLED","STORE_COLORS_REQUEST","STORE_NAMED_COLOR_REQUEST","STRIKEOUT_ASCENT","STRIKEOUT_DESCENT","STRING","STRUCTURE_NOTIFY","SUBSCRIPT_X","SUBSCRIPT_Y","SUBSTRUCTURE_NOTIFY","SUBSTRUCTURE_REDIRECT","SUBWINDOW_MODE","SUCCESS","SUCCESS","SUPERSCRIPT_X","SUPERSCRIPT_Y","SYNC","SYNC_BOTH","SYNC_KEYBOARD","SYNC_POINTER","Screen","ScreenSaver","Segment","SelectionClearEvent","SelectionNotifyEvent","SelectionRequestEvent","SendEventDest","SendEventRequest","SetAccessControlRequest","SetClipRectanglesRequest","SetCloseDownModeRequest","SetDashesRequest","SetFontPathRequest","SetInputFocusRequest","SetMode","SetModifierMappingReply","SetModifierMappingRequest","SetPointerMappingReply","SetPointerMappingRequest","SetScreenSaverRequest","SetSelectionOwnerRequest","Setup","SetupAuthenticate","SetupFailed","SetupRequest","StackMode","StoreColorsRequest","StoreNamedColorRequest","Str","SubwindowMode","TILE","TILED","TILE_STIPPLE_ORIGIN_X","TILE_STIPPLE_ORIGIN_Y","TOP_IF","TRANSLATE_COORDINATES_REQUEST","TRUE_COLOR","Time","Timecoord","Timestamp","TranslateCoordinatesReply","TranslateCoordinatesRequest","UNDERLINE_POSITION","UNDERLINE_THICKNESS","UNGRAB","UNGRAB_BUTTON_REQUEST","UNGRAB_KEYBOARD_REQUEST","UNGRAB_KEY_REQUEST","UNGRAB_POINTER_REQUEST","UNGRAB_SERVER_REQUEST","UNINSTALLED","UNINSTALL_COLORMAP_REQUEST","UNMAPPED","UNMAP_NOTIFY_EVENT","UNMAP_SUBWINDOWS_REQUEST","UNMAP_WINDOW_REQUEST","UNOBSCURED","UNSORTED","UNVIEWABLE","UngrabButtonRequest","UngrabKeyRequest","UngrabKeyboardRequest","UngrabPointerRequest","UngrabServerRequest","UninstallColormapRequest","UnmapNotifyEvent","UnmapSubwindowsRequest","UnmapWindowRequest","VALUE_ERROR","VIEWABLE","VIRTUAL","VISIBILITY_CHANGE","VISIBILITY_NOTIFY_EVENT","VISUALID","Visibility","VisibilityNotifyEvent","VisualClass","Visualid","Visualtype","WARP_POINTER_REQUEST","WEIGHT","WEST","WHEN_MAPPED","WHILE_GRABBED","WIDTH","WINDING","WINDOW","WINDOW_ERROR","WIN_GRAVITY","WIN_UNMAP","WM_CLASS","WM_CLIENT_MACHINE","WM_COMMAND","WM_HINTS","WM_ICON_NAME","WM_ICON_SIZE","WM_NAME","WM_NORMAL_HINTS","WM_SIZE_HINTS","WM_TRANSIENT_FOR","WM_ZOOM_HINTS","WarpPointerRequest","Window","WindowClass","WindowEnum","WindowWrapper","X","XOR","XY_BITMAP","XY_PIXMAP","X_HEIGHT","Y","YX_BANDED","YX_SORTED","Y_SORTED","Z_PIXMAP","above_sibling","acceleration_denominator","acceleration_denominator","acceleration_numerator","acceleration_numerator","address","address","address_len","all_chars_exist","all_chars_exist","all_event_masks","alloc","alloc_color","alloc_color","alloc_color_cells","alloc_color_cells","alloc_color_planes","alloc_color_planes","alloc_named_color","alloc_named_color","allow_events","allow_events","allow_exposures","allow_exposures","allowed_depths","allowed_depths_len","angle1","angle2","arc_mode","arc_mode","arc_mode","arc_mode","arcs","arcs","as_data16","as_data32","as_data8","ascent","atom","atom","atom","atoms","atoms","atoms_len","attributes","authorization_protocol_data","authorization_protocol_data_len","authorization_protocol_name","authorization_protocol_name_len","auto_repeat_mode","auto_repeat_mode","auto_repeats","back_blue","back_blue","back_blue","back_green","back_green","back_green","back_red","back_red","back_red","background","background","background","background","background_pixel","background_pixel","background_pixel","background_pixel","background_pixmap","background_pixmap","background_pixmap","background_pixmap","backing_pixel","backing_pixel","backing_pixel","backing_pixel","backing_pixel","backing_planes","backing_planes","backing_planes","backing_planes","backing_planes","backing_store","backing_store","backing_store","backing_store","backing_store","backing_stores","bell","bell","bell_duration","bell_duration","bell_duration","bell_percent","bell_percent","bell_percent","bell_pitch","bell_pitch","bell_pitch","bit_gravity","bit_gravity","bit_gravity","bit_gravity","bit_gravity","bit_plane","bitmap_format_bit_order","bitmap_format_scanline_pad","bitmap_format_scanline_unit","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits_per_pixel","bits_per_rgb_value","black_pixel","blue","blue","blue","blue","blue_mask","blue_mask","blues","border_pixel","border_pixel","border_pixel","border_pixel","border_pixmap","border_pixmap","border_pixmap","border_pixmap","border_width","border_width","border_width","border_width","border_width","border_width","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","byte1","byte2","byte_order","bytes_after","cap_style","cap_style","cap_style","cap_style","change_active_pointer_grab","change_active_pointer_grab","change_gc","change_gc","change_hosts","change_hosts","change_keyboard_control","change_keyboard_control","change_keyboard_mapping","change_keyboard_mapping","change_pointer_control","change_pointer_control","change_property","change_property","change_save_set","change_save_set","change_window_attributes","change_window_attributes","char_infos","char_infos_len","character_width","child","child","child","child","child","child","children","children_len","cid","cid","cid","circulate_window","circulate_window","class","class","class","class","clear_area","clear_area","clip_mask","clip_mask","clip_mask","clip_mask","clip_x_origin","clip_x_origin","clip_x_origin","clip_x_origin","clip_x_origin","clip_y_origin","clip_y_origin","clip_y_origin","clip_y_origin","clip_y_origin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close_font","close_font","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmaps","cmaps_len","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","colormap","colormap","colormap","colormap","colormap","colormap","colormap","colormap_entries","colors","colors","colors","colors_len","configure_window","configure_window","confine_to","confine_to","contiguous","contiguous","convert_selection","convert_selection","coordinate_mode","coordinate_mode","coordinate_mode","copy_area","copy_area","copy_colormap_and_free","copy_colormap_and_free","copy_gc","copy_gc","copy_plane","copy_plane","count","count","count","count","create_colormap","create_colormap","create_colormap","create_colormap_and_get_cookie","create_cursor","create_cursor","create_cursor","create_cursor_and_get_cookie","create_gc","create_gc","create_gc","create_gc_and_get_cookie","create_glyph_cursor","create_glyph_cursor","create_glyph_cursor","create_glyph_cursor_and_get_cookie","create_pixmap","create_pixmap","create_pixmap","create_pixmap_and_get_cookie","create_window","create_window","create_window","create_window_and_get_cookie","current_input_masks","cursor","cursor","cursor","cursor","cursor","cursor","cursor","cursor","cursor","cursor","dash_offset","dash_offset","dash_offset","dash_offset","dash_offset","dashes","dashes","dashes","dashes","dashes","data","data","data","data","data_len","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_char","default_char","default_colormap","delete","delete_property","delete_property","delta","depth","depth","depth","depth","depth","depth","depth","descent","destination","destroy_subwindows","destroy_subwindows","destroy_window","destroy_window","detail","detail","detail","detail","detail","direction","do_acceleration","do_not_propagate_mask","do_not_propogate_mask","do_not_propogate_mask","do_not_propogate_mask","do_not_propogate_mask","do_threshold","draw_direction","draw_direction","draw_direction","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drop","drop","drop","drop","drop","drop","dst_drawable","dst_drawable","dst_gc","dst_window","dst_window","dst_x","dst_x","dst_x","dst_x","dst_x","dst_y","dst_y","dst_y","dst_y","dst_y","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event","event","event","event","event","event","event","event","event","event","event","event","event","event_mask","event_mask","event_mask","event_mask","event_mask","event_mask","event_mask","event_mask","event_type","event_x","event_x","event_x","event_x","event_y","event_y","event_y","event_y","events","events_len","exact_blue","exact_blue","exact_green","exact_green","exact_red","exact_red","exposures","extension","family","family","fid","fill_poly","fill_poly","fill_rule","fill_rule","fill_rule","fill_rule","fill_style","fill_style","fill_style","fill_style","first_error","first_event","first_keycode","first_keycode","first_keycode","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","font","font","font","font","font","font","font","font","font","font_ascent","font_ascent","font_ascent","font_descent","font_descent","font_descent","for_colormap","for_cursor","for_font","for_gcontext","for_pixmap","for_window","force_screen_saver","force_screen_saver","fore_blue","fore_blue","fore_blue","fore_green","fore_green","fore_green","fore_red","fore_red","fore_red","foreground","foreground","foreground","foreground","format","format","format","format","format","free_colormap","free_colormap","free_colors","free_colors","free_cursor","free_cursor","free_gc","free_gc","free_pixmap","free_pixmap","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_configure","from_configure_request","function","function","function","function","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gcontext","get_atom_name","get_atom_name","get_font_path","get_font_path","get_geometry","get_geometry","get_image","get_image","get_input_focus","get_input_focus","get_keyboard_control","get_keyboard_control","get_keyboard_mapping","get_keyboard_mapping","get_modifier_mapping","get_modifier_mapping","get_motion_events","get_motion_events","get_pointer_control","get_pointer_control","get_pointer_mapping","get_pointer_mapping","get_property","get_property","get_screen_saver","get_screen_saver","get_selection_owner","get_selection_owner","get_window_attributes","get_window_attributes","global_auto_repeat","grab_button","grab_button","grab_key","grab_key","grab_keyboard","grab_keyboard","grab_pointer","grab_pointer","grab_server","grab_server","grab_window","grab_window","grab_window","grab_window","grab_window","grab_window","graphics_exposures","graphics_exposures","graphics_exposures","graphics_exposures","green","green","green","green","green_mask","green_mask","greens","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height_in_millimeters","height_in_pixels","hosts","hosts_len","image_byte_order","image_text16","image_text16","image_text8","image_text8","install_colormap","install_colormap","intern_atom","intern_atom","interval","interval","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_colormap","into_cursor","into_font","into_gcontext","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_pixmap","into_window","items","items","items","join_style","join_style","join_style","join_style","key","key","key","key","key_click_percent","key_click_percent","key_click_percent","keyboard_mode","keyboard_mode","keyboard_mode","keyboard_mode","keycode_count","keycodes","keycodes","keycodes_per_modifier","keys","keys","keysyms","keysyms","keysyms_per_keycode","keysyms_per_keycode","kill_client","kill_client","led","led","led_mask","led_mode","led_mode","left_pad","left_side_bearing","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","line_style","line_style","line_style","line_style","line_width","line_width","line_width","line_width","list_extensions","list_extensions","list_fonts","list_fonts","list_fonts_with_info","list_fonts_with_info","list_hosts","list_hosts","list_installed_colormaps","list_installed_colormaps","list_properties","list_properties","long_length","long_offset","lookup_color","lookup_color","major_opcode","major_opcode","major_opcode","map","map","map_is_installed","map_len","map_state","map_subwindows","map_subwindows","map_window","map_window","mask","mask","mask_char","mask_font","masks","masks_len","max_bounds","max_bounds","max_byte1","max_byte1","max_char_or_byte2","max_char_or_byte2","max_installed_maps","max_keycode","max_names","max_names","maximum_request_length","mid","mid","min_bounds","min_bounds","min_byte1","min_byte1","min_char_or_byte2","min_char_or_byte2","min_installed_maps","min_keycode","minor_opcode","minor_opcode","mode","mode","mode","mode","mode","mode","mode","mode","mode","mode","modifiers","modifiers","modifiers","modifiers","motion_buffer_size","name","name","name","name","name","name","name","name","name","name","name_len","name_len","name_len","names","names","names_len","names_len","new","new","new","new","new","new","new","new","no_operation","no_operation","only_if_exists","open_font","open_font","open_font","open_font_and_get_cookie","ordering","overall_ascent","overall_descent","overall_left","overall_right","overall_width","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","owner","owner","owner","owner","owner_events","owner_events","owner_events","owner_events","parent","parent","parent","parent","parent","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path_len","pattern","pattern","percent","pid","pixel","pixel","pixel","pixel","pixels","pixels","pixels","pixels","pixels_len","pixels_len","pixmap","pixmap","pixmap_formats","pixmap_formats_len","place","plane_mask","plane_mask","plane_mask","plane_mask","plane_mask","plane_mask","planes","pointer_mode","pointer_mode","pointer_mode","pointer_mode","points","points","points","poly_arc","poly_arc","poly_fill_arc","poly_fill_arc","poly_fill_rectangle","poly_fill_rectangle","poly_line","poly_line","poly_point","poly_point","poly_rectangle","poly_rectangle","poly_segment","poly_segment","poly_text16","poly_text16","poly_text8","poly_text8","prefer_blanking","prefer_blanking","present","propagate","properties","properties","properties_len","properties_len","property","property","property","property","property","property","protocol_major_version","protocol_major_version","protocol_major_version","protocol_minor_version","protocol_minor_version","protocol_minor_version","put_image","put_image","query_best_size","query_best_size","query_colors","query_colors","query_extension","query_extension","query_font","query_font","query_keymap","query_keymap","query_pointer","query_pointer","query_text_extents","query_text_extents","query_tree","query_tree","reason","reason","reason_len","recolor_cursor","recolor_cursor","rectangles","rectangles","rectangles","red","red","red","red","red_mask","red_mask","reds","release_number","reparent_window","reparent_window","replies_hint","request","requestor","requestor","requestor","resource","resource_id_base","resource_id_mask","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","revert_to","revert_to","right_side_bearing","root","root","root","root","root","root","root","root","root_depth","root_visual","root_x","root_x","root_x","root_x","root_x","root_y","root_y","root_y","root_y","root_y","roots","roots_len","rotate_properties","rotate_properties","same_screen","same_screen","same_screen","same_screen","same_screen","same_screen_focus","save_under","save_under","save_under","save_under","save_under","save_unders","scanline_pad","segments","selection","selection","selection","selection","selection","selection","send_event","send_event","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","set_access_control","set_access_control","set_clip_rectangles","set_clip_rectangles","set_close_down_mode","set_close_down_mode","set_dashes","set_dashes","set_font_path","set_font_path","set_input_focus","set_input_focus","set_modifier_mapping","set_modifier_mapping","set_pointer_mapping","set_pointer_mapping","set_screen_saver","set_screen_saver","set_selection_owner","set_selection_owner","shape","sibling","sibling","sibling","source","source_char","source_font","src_cmap","src_drawable","src_drawable","src_gc","src_height","src_width","src_window","src_window","src_x","src_x","src_x","src_x","src_y","src_y","src_y","src_y","stack_mode","stack_mode","stack_mode","start","state","state","state","state","state","state","state","status","status","status","status","status","status","status","stipple","stipple","stipple","stipple","stop","store_colors","store_colors","store_named_color","store_named_color","string","string","string","subwindow_mode","subwindow_mode","subwindow_mode","subwindow_mode","target","target","target","threshold","threshold","tile","tile","tile","tile","tile_stipple_x_origin","tile_stipple_x_origin","tile_stipple_x_origin","tile_stipple_x_origin","tile_stipple_y_origin","tile_stipple_y_origin","tile_stipple_y_origin","tile_stipple_y_origin","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","timeout","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","translate_coordinates","translate_coordinates","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ungrab_button","ungrab_button","ungrab_key","ungrab_key","ungrab_keyboard","ungrab_keyboard","ungrab_pointer","ungrab_pointer","ungrab_server","ungrab_server","uninstall_colormap","uninstall_colormap","unmap_subwindows","unmap_subwindows","unmap_window","unmap_window","value","value","value16","value32","value8","value_len","value_list","value_list","value_list","value_list","value_list","value_list","value_mask","value_mask","vendor","vendor_len","visual","visual","visual","visual","visual_blue","visual_blue","visual_green","visual_green","visual_id","visual_red","visual_red","visuals","visuals_len","warp_pointer","warp_pointer","white_pixel","wid","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width_in_millimeters","width_in_pixels","win_gravity","win_gravity","win_gravity","win_gravity","win_gravity","win_x","win_y","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x1","x2","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y1","y2","your_event_mask","x11rb_protocol","BufWithFds","ConnectError","ConnectionError","ConversionFailed","DefaultStream","DisplayParsingError","Incomplete","InsufficientData","InsufficientMemory","InvalidExpression","InvalidScreen","InvalidValue","IoError","MissingFileDescriptors","ParseError","ParseError","PollMode","ReadAndWritable","Readable","ReplyError","ReplyOrIdError","RustConnection","SetupAuthenticate","SetupFailed","Stream","UnknownError","Writable","ZeroIdMask","as_raw_fd","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_for_raw_error","clone","clone","clone_into","clone_into","connect","connect","connect_to_stream","connect_to_stream_with_auth_info","discard_reply","eq","equivalent","extension_information","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_connected_stream","from","from","from","from","from","from","from","from_tcp_stream","from_unix_stream","generate_id","into","into","into","into","into","into_raw_fd","maximum_request_bytes","parse_error","parse_event","poll","poll","poll_for_raw_event_with_sequence","prefetch_extension_information","prefetch_maximum_request_bytes","read","read","read_exact","read_exact","readable","send_request_with_reply","send_request_with_reply_with_fds","send_request_without_reply","setup","stream","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wait_for_raw_event_with_sequence","wait_for_reply","wait_for_reply_or_raw_error","wait_for_reply_with_fds_raw","writable","write","write","write_vectored","write_vectored","write_vectored","expected","received","RawFdContainer","as_raw_fd","borrow","borrow_mut","close","drop","eq","equivalent","fmt","from","from","hash","into","into_raw_fd","new","try_clone","try_from","try_into","type_id","ConnectionExt","GrabServer","borrow","borrow_mut","change_property16","change_property32","change_property8","drop","fmt","from","grab","into","sync","try_from","try_into","type_id","BigRequests","Bytes","EXTENSION_NAME","Enabled","ExtInfoProvider","ExtensionInformation","NotEnabled","ReplyParsingFunction","Request","RequestHeader","Serialize","TryParse","TryParseFd","X11Error","bad_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","equivalent","equivalent","equivalent","error_code","error_kind","extension_name","first_error","first_event","fmt","fmt","fmt","fmt","from","from","from","from","get_from_error_code","get_from_event_code","get_from_major_opcode","into","into","into","into","major_opcode","major_opcode","major_opcode","minor_opcode","minor_opcode","parse_request_header","remaining_length","request_name","sequence","serialize","serialize","serialize_into","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse_fd","type_id","type_id","type_id","type_id"],"q":[[0,"x11rb"],[20,"x11rb::connection"],[103,"x11rb::cookie"],[158,"x11rb::errors"],[245,"x11rb::errors::ConnectError"],[247,"x11rb::extension_manager"],[262,"x11rb::properties"],[418,"x11rb::protocol"],[862,"x11rb::protocol::bigreq"],[912,"x11rb::protocol::ge"],[965,"x11rb::protocol::render"],[2765,"x11rb::protocol::shape"],[3198,"x11rb::protocol::xc_misc"],[3348,"x11rb::protocol::xfixes"],[4649,"x11rb::protocol::xproto"],[12562,"x11rb::reexports"],[12563,"x11rb::rust_connection"],[12687,"x11rb::rust_connection::ConnectError"],[12689,"x11rb::utils"],[12708,"x11rb::wrapper"],[12724,"x11rb::x11_utils"]],"d":["This constant can be used for the class parameter in …","This constant can be used for the depth parameter in …","This constant can be used for many parameters in …","This constant can be used in most request that take a …","The universal null resource or null atom parameter value …","This constant can be used to fill unused entries in <code>Keysym</code> …","A helper macro for managing atoms","Establish a new connection to an X11 server.","Generic connection-related types and definitions.","Cookies are handles to future replies or errors from the …","This module contains the current mess that is error …","Integrating x11rb with an Event Loop","Helper for implementing …","Utility functions for working with X11 properties","Bindings to the X11 protocol.","Reexports of dependencies","A pure-rust implementation of a connection to an X11 …","Utility functions that are not specific to X11.","Some wrappers around the generated code to simplify use.","Some utilities for working with X11.","Type used as buffer to store raw replies or events before …","A combination of a buffer and a list of file descriptors.","A connection to an X11 server.","Variants describing which responses to a request should be …","Only discard the actual reply. Errors go to the main loop.","Ignore any kind of response that this request generates.","An error caused by an X11 request.","An event and its sequence number.","The request has a response.","The request has no response, i.e. its type is “void”.","A buffer that is logically continuous, but presented in a …","The raw bytes of an event and its sequence number.","The reply to an X11 request.","Either a raw reply or a raw error response to an X11 …","A connection to an X11 server for sending requests.","Does a request have a response?","Number type used for referring to things that were sent to …","","","","","","","Check whether a request that does not have a reply caused …","Check whether a request that does not have a reply caused …","","","","","Check the request length and use BIG-REQUESTS if necessary.","A reply to an error should be discarded.","","","","","Get information about an extension.","Send all pending requests to the server.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Generate a new X11 identifier.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The maximum number of bytes that the X11 server accepts in …","Parse a generic error.","Parse a generic event.","Poll for a new event from the X11 server.","Poll for a new event from the X11 server.","Poll for a new raw/unparsed event from the X11 server.","Poll for a new unparsed/raw event from the X11 server.","Prefetches information about an extension.","Prefetches the maximum request length.","Send a request with a reply to the server.","Send a request with a reply containing file descriptors to …","Send a request without a reply to the server.","Send a request with a reply to the server.","Send a request with a reply containing file descriptors to …","Send a request without a reply to the server.","Get the setup information sent by the X11 server.","","","","","","","","","","","","Wait for a new event from the X11 server.","Wait for a new event from the X11 server.","Wait for a new raw/unparsed event from the X11 server.","Wait for a new raw/unparsed event from the X11 server.","Wait for the reply to a request.","Wait for the reply to a request.","Wait for the reply to a request.","Wait for the reply to a request that has FDs.","Wait for the reply to a request that has FDs.","A handle to a response from the X11 server.","A handle to a response containing <code>RawFd</code> from the X11 …","A handle to the replies to a <code>ListFontsWithInfo</code> request.","A handle to a possible error from the X11 server.","","","","","","","","","Check if the original request caused an X11 error.","Discard all responses to the request this cookie …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Ignore all errors to this request.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Construct a new cookie.","Construct a new cookie.","Construct a new cookie.","","Get the raw reply that the server sent.","Get the raw reply that the server sent.","Get the raw reply that the server sent, but have errors …","Get the reply that the server sent.","Get the reply that the server sent.","Get the reply that the server sent, but have errors …","Get the sequence number of the request that generated this …","Get the sequence number of the request that generated this …","Get the sequence number of the request that generated this …","Get the sequence number of the request that generated this …","","","","","","","","","","","","","An error that occurred while connecting to an X11 server","An error that occurred on an already established X11 …","Some error occurred on the X11 connection.","Some error occurred on the X11 connection.","A value did not fit.","Error during parsing of display string.","File descriptor passing failed.","The XID range has been exhausted.","All available IDs have been exhausted.","The client did not receive enough data from the server to …","Not enough data was provided.","Out of memory.","Out of memory.","The value of an expression could not be computed.","Server does not have a screen matching the display.","A value was outside of its valid range.","An I/O error occurred on the connection.","An I/O error occurred on the connection.","A request larger than the maximum request length was sent.","Some file descriptors were expected, but not enough were …","An error occurred while parsing some data","Error while parsing some data, see <code>ParseError</code>.","Error while parsing some data, see <code>ParseError</code>.","An error that occurred with some request.","An error caused by some request or by the exhaustion of …","The server rejected the connection with a <code>SetupAuthenticate</code>…","The server rejected the connection with a <code>SetupFailed</code> …","An unknown error occurred.","An unknown error occurred.","An X11 extension was not supported by the server.","The X11 server sent an error in response to a request.","The X11 server sent an error in response to a request.","Invalid ID mask provided by the server.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","The number of bytes that were expected.","The number of bytes that were received.","Helper for implementing …","","","","An implementation of …","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Prefetchs an extension sending a <code>QueryExtension</code> without …","","","","An aspect ratio <code>numerator</code> / <code>denominator</code>.","The window should be in Iconic state.","The window should be in Normal state.","The program specified the values.","The user specified the values.","The value of a window’s <code>WM_CLASS</code> property.","A cookie for getting a window’s <code>WM_CLASS</code> property.","A structure representing a <code>WM_HINTS</code> property.","A cookie for getting a window’s <code>WM_HINTS</code> property.","The possible values for a <code>WM_STATE</code>’s state field.","A structure representing a <code>WM_SIZE_HINTS</code> property.","A cookie for getting a window’s <code>WM_SIZE_HINTS</code> property.","Representation of whether some part of <code>WM_SIZE_HINTS</code> was …","The minimum and maximum aspect ratio.","The base size of the window.","","","","","","","","","","","","","","","","","","","Get the class contained in this <code>WM_CLASS</code> property","","","","","","","","","","","","","The denominator of the aspect ratio.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a new <code>WmClass</code> instance from a <code>GetPropertyReply</code>.","Construct a new <code>WmSizeHints</code> instance from a …","Construct a new <code>WmHints</code> instance from a <code>GetPropertyReply</code>.","Send a <code>GetProperty</code> request for the <code>WM_CLASS</code> property of …","Send a <code>GetProperty</code> request for the given property of the …","Send a <code>GetProperty</code> request for the <code>WM_HINTS</code> property of …","Send a <code>GetProperty</code> request for the <code>WM_NORMAL_HINTS</code> …","A mask for <code>icon_pixmap</code>.","A pixmap that represents the icon of this window.","The position where the icon should be shown.","A window that should be used as icon.","The state that the window should be when it leaves the …","Whether the window manager may set the input focus to this …","Get the instance contained in this <code>WM_CLASS</code> property","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The maximum size that the window may be assigned.","The minimum size that the window may be assigned.","Send a <code>GetProperty</code> request for the <code>WM_CLASS</code> property of …","Send a <code>GetProperty</code> request for the given property of the …","Create a new aspect ratio with the given values.","Get a new, empty <code>WmSizeHints</code> structure.","Send a <code>GetProperty</code> request for the <code>WM_CLASS</code> property of …","Get a new, empty <code>WmSizeHints</code> structure.","The numerator of the aspect ratio.","The position that the window should be assigned.","Get the reply that the server sent.","Get the reply that the server sent.","Get the reply that the server sent.","Get the reply that the server sent, but have errors …","Get the reply that the server sent, but have errors …","Get the reply that the server sent, but have errors …","","","","","","","Set these <code>WM_SIZE_HINTS</code> on some window as the given …","Set these <code>WM_HINTS</code> on some window.","Set these <code>WM_SIZE_HINTS</code> on some window as the …","The size that the window should be assigned.","The increment to be used for sizing the window together …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indication that the window contents are urgent.","The gravity that is used to make room for window …","A window that represents a group of windows.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumeration of all possible X11 error kinds.","Enumeration of all possible X11 events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumeration of all possible X11 replies.","Enumeration of all possible X11 requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bindings to the <code>BigRequests</code> X11 extension.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Bindings to the <code>GenericEvent</code> X11 extension.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this Request into an owned version with no borrows.","","Parse a generic X11 event into a concrete event type.","","Get the raw response type of this X11 event","Bindings to the <code>Render</code> X11 extension.","Get the matching reply parser (if any) for this request. …","Get the response type of this X11 event","Was this event generated by another X11 client?","Was this event generated by the X11 server?","Bindings to the <code>Shape</code> X11 extension.","","","","","","","","","","","","","","","Get the sequence number contained in this X11 event","Bindings to the <code>XCMisc</code> X11 extension.","Bindings to the <code>XFixes</code> X11 extension.","Bindings to the core X11 protocol.","Extension trait defining the requests of this extension.","Opcode for the Enable request","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Serialize this request into bytes for the provided …","","","","","","","","","Parse this request given its header, its body, and any fds …","","","Extension trait defining the requests of this extension.","Opcode for the QueryVersion request","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Serialize this request into bytes for the provided …","","","","","","","","","","Parse this request given its header, its body, and any fds …","","","","Opcode for the AddGlyphs request","Opcode for the AddTraps request","","","","","","","","","Opcode for the ChangePicture request","","","","","","","","Opcode for the CompositeGlyphs16 request","Opcode for the CompositeGlyphs32 request","Opcode for the CompositeGlyphs8 request","Opcode for the Composite request","","","","","","","","","","","","","","Opcode for the CreateAnimCursor request","Opcode for the CreateConicalGradient request","Opcode for the CreateCursor request","Opcode for the CreateGlyphSet request","Opcode for the CreateLinearGradient request","Opcode for the CreatePicture request","Opcode for the CreateRadialGradient request","Opcode for the CreateSolidFill request","Auxiliary and optional information for the <code>change_picture</code> …","","","","","","","Extension trait defining the requests of this extension.","","","","","","Auxiliary and optional information for the <code>create_picture</code> …","","","","","","","","","","","","","","","","","","","","","","","Opcode for the FillRectangles request","Opcode for the FreeGlyphs request","Opcode for the FreeGlyphSet request","Opcode for the FreePicture request","","","","","","Opcode for the Glyph error","Opcode for the GlyphSet error","","","","","A RAII-like wrapper around a Glyphset.","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the Picture error","Opcode for the PictFormat error","Opcode for the PictOp error","","","","","","","","","","","","A RAII-like wrapper around a Picture.","","","","","Opcode for the QueryFilters request","Opcode for the QueryPictFormats request","Opcode for the QueryPictIndexValues request","Opcode for the QueryVersion request","","","","","","","","","Opcode for the ReferenceGlyphSet request","","","","","","","Opcode for the SetPictureClipRectangles request","Opcode for the SetPictureFilter request","Opcode for the SetPictureTransform request","","","","","","","","","","","Opcode for the Trapezoids request","Opcode for the Triangles request","Opcode for the TriFan request","Opcode for the TriStrip request","","","","","","","","","","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …","","","","","","","","","Set the <code>alphamap</code> field of this structure.","Set the <code>alphamap</code> field of this structure.","","","Set the <code>alphaxorigin</code> field of this structure.","Set the <code>alphaxorigin</code> field of this structure.","","","Set the <code>alphayorigin</code> field of this structure.","Set the <code>alphayorigin</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>clipmask</code> field of this structure.","Set the <code>clipmask</code> field of this structure.","","","Set the <code>clipxorigin</code> field of this structure.","Set the <code>clipxorigin</code> field of this structure.","","","Set the <code>clipyorigin</code> field of this structure.","Set the <code>clipyorigin</code> field of this structureet the <code>componentalpha</code> field of this structure.","Set the <code>componentalpha</code> field of this structure.","","","","","","","","","Create a new Picture and return a Picture wrapper","Create a new Picture and return a Picture wrapper and a …","","","Create a new Glyphset and return a Glyphset wrapper","Create a new Glyphset and return a Glyphset wrapper and a …","","Create a new Picture and return a Picture wrapper","Create a new Picture and return a Picture wrapper and a …","","Create a new Picture and return a Picture wrapper","Create a new Picture and return a Picture wrapper and a …","","Create a new Picture and return a Picture wrapper","Create a new Picture and return a Picture wrapper and a …","","Create a new Picture and return a Picture wrapper","Create a new Picture and return a Picture wrapper and a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>dither</code> field of this structure.","Set the <code>dither</code> field of this structuressume ownership of the given resource and destroy it in …","Assume ownership of the given resource and destroy it in …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Get the XID of the wrapped resource","","","","","","","Set the <code>graphicsexposure</code> field of this structure.","Set the <code>graphicsexposure</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Assume ownership of the XID of the wrapped resource","Clone all borrowed data in this CreatePictureRequest.","Clone all borrowed data in this ChangePictureRequest.","Clone all borrowed data in this …","Clone all borrowed data in this TrapezoidsRequest.","Clone all borrowed data in this TrianglesRequest.","Clone all borrowed data in this TriStripRequest.","Clone all borrowed data in this TriFanRequest.","Clone all borrowed data in this AddGlyphsRequest.","Clone all borrowed data in this FreeGlyphsRequest.","Clone all borrowed data in this CompositeGlyphs8Request.","Clone all borrowed data in this CompositeGlyphs16Request.","Clone all borrowed data in this CompositeGlyphs32Request.","Clone all borrowed data in this FillRectanglesRequest.","Clone all borrowed data in this SetPictureFilterRequest.","Clone all borrowed data in this CreateAnimCursorRequest.","Clone all borrowed data in this AddTrapsRequest.","Clone all borrowed data in this …","Clone all borrowed data in this …","Clone all borrowed data in this …","Assume ownership of the XID of the wrapped resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","Get the value of the <code>num_aliases</code> field.","Get the value of the <code>num_depths</code> field.","","Get the value of the <code>num_filters</code> field.","Get the value of the <code>num_formats</code> field.","Get the value of the <code>num_screens</code> field.","Get the value of the <code>num_subpixel</code> field.","Get the value of the <code>num_values</code> field.","Get the value of the <code>num_visuals</code> field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the XID of the wrapped resource","","","","","","","","","","","","","","","Set the <code>polyedge</code> field of this structure.","Set the <code>polyedge</code> field of this structure.","","","Set the <code>polymode</code> field of this structure.","Set the <code>polymode</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>repeat</code> field of this structure.","Set the <code>repeat</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>subwindowmode</code> field of this structure.","Set the <code>subwindowmode</code> field of this structurearse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the Combine request","","Extension trait defining the requests of this extension.","Opcode for the GetRectangles request","","","","Opcode for the InputSelected request","","","","","","Opcode for the Mask request","","Opcode for the Notify event","","Opcode for the Offset request","","","Opcode for the QueryExtents request","Opcode for the QueryVersion request","","","","","Opcode for the Rectangles request","","Opcode for the SelectInput request","","","","","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …eturns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Clone all borrowed data in this RectanglesRequest.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>rectangles_len</code> field.","","","","","","","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","","","","","","","","","","","","","","","","","","","","","","","","","","Extension trait defining the requests of this extension.","Opcode for the GetVersion request","Opcode for the GetXIDList request","Opcode for the GetXIDRange request","","","","","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Get the value of the <code>ids_len</code> field.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","","","","","","","","","","Opcode for the BadRegion error","","","Opcode for the ChangeCursorByName request","Opcode for the ChangeCursor request","Opcode for the ChangeSaveSet request","Opcode for the CopyRegion request","Opcode for the CreatePointerBarrier request","Opcode for the CreateRegionFromBitmap request","Opcode for the CreateRegionFromGC request","Opcode for the CreateRegionFromPicture request","Opcode for the CreateRegionFromWindow request","Opcode for the CreateRegion request","Opcode for the CursorNotify event","","","","Extension trait defining the requests of this extension.","","","","","","","","","","","","Opcode for the DeletePointerBarrier request","Opcode for the DestroyRegion request","","","","","Opcode for the ExpandRegion request","","Opcode for the FetchRegion request","","","Opcode for the GetCursorImageAndName request","Opcode for the GetCursorImage request","Opcode for the GetCursorName request","","","","","","","Opcode for the HideCursor request","","","Opcode for the IntersectRegion request","Opcode for the InvertRegion request","","","","","","","","","","Opcode for the QueryVersion request","","","Opcode for the RegionExtents request","","","","","A RAII-like wrapper around a Region.","","","Opcode for the SelectionNotify event","","","Opcode for the SelectCursorInput request","Opcode for the SelectSelectionInput request","Opcode for the SetCursorName request","Opcode for the SetGCClipRegion request","Opcode for the SetPictureClipRegion request","Opcode for the SetRegion request","","","Opcode for the SetWindowShapeRegion request","Opcode for the ShowCursor request","Opcode for the SubtractRegion request","","","","","","","","","","","","","","","","Opcode for the TranslateRegion request","","Opcode for the UnionRegion request","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …reate a new Region and return a Region wrapper","Create a new Region and return a Region wrapper and a …","","Create a new Region and return a Region wrapper","Create a new Region and return a Region wrapper and a …","","Create a new Region and return a Region wrapper","Create a new Region and return a Region wrapper and a …","","Create a new Region and return a Region wrapper","Create a new Region and return a Region wrapper and a …","","Create a new Region and return a Region wrapper","Create a new Region and return a Region wrapper and a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Assume ownership of the given resource and destroy it in …","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Clone all borrowed data in this CreateRegionRequest.","Clone all borrowed data in this SetRegionRequest.","Clone all borrowed data in this SetCursorNameRequest.","Clone all borrowed data in this ChangeCursorByNameRequest.","Clone all borrowed data in this …","Assume ownership of the XID of the wrapped resource","","","","Get the value of the <code>length</code> field.","","","","","","","","","","","","","","Get the value of the <code>nbytes</code> field.","Get the value of the <code>nbytes</code> field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the XID of the wrapped resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …arse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the Access error","","","Opcode for the AllocColorCells request","Opcode for the AllocColorPlanes request","Opcode for the AllocColor request","Opcode for the Alloc error","Opcode for the AllocNamedColor request","","Opcode for the AllowEvents request","","","","","","","","","","","","","","","","","","","","","","Opcode for the Atom error","","","","","","","","Allocate a color.","","","Fields","release queued events.","","","","","","","","","","","","","","","Opcode for the Bell request","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the ButtonPress event","","Opcode for the ButtonRelease event","","","","","","","Fields","","a mouse button was pressed/released.","","","","","","Opcode for the ChangeActivePointerGrab request","Opcode for the ChangeGC request","Opcode for the ChangeHosts request","Opcode for the ChangeKeyboardControl request","Opcode for the ChangeKeyboardMapping request","Opcode for the ChangePointerControl request","Opcode for the ChangeProperty request","Opcode for the ChangeSaveSet request","Opcode for the ChangeWindowAttributes request","","","Opcode for the CirculateNotify event","Opcode for the CirculateRequest event","Opcode for the CirculateWindow request","","Opcode for the ClearArea request","Opcode for the ClientMessage event","","","","","Opcode for the CloseFont request","","","Opcode for the Colormap error","Opcode for the ColormapNotify event","","","Opcode for the ConfigureNotify event","Opcode for the ConfigureRequest event","Opcode for the ConfigureWindow request","","","","Opcode for the ConvertSelection request","","","","Opcode for the CopyArea request","Opcode for the CopyColormapAndFree request","","Opcode for the CopyGC request","","Opcode for the CopyPlane request","Opcode for the CreateColormap request","Opcode for the CreateCursor request","Opcode for the CreateGC request","Opcode for the CreateGlyphCursor request","Opcode for the CreateNotify event","Opcode for the CreatePixmap request","Opcode for the CreateWindow request","","","","Opcode for the Cursor error","","","","","","","","","Fields","","","Auxiliary and optional information for the <code>change_gc</code> …","change graphics context components.","","Auxiliary and optional information for the …","","","","Changes a window property.","Changes a client’s save set.","Auxiliary and optional information for the …","change window attributes.","","","","NOT YET DOCUMENTED.","","Change window stacking order.","","","NOT YET DOCUMENTED.","","","","","","","","","the colormap for some window changed.","Fields","A RAII-like wrapper around a Colormap.","","NOT YET DOCUMENTED.","","Auxiliary and optional information for the <code>configure_window</code>…","Configures window attributes.","Extension trait defining the requests of this extension.","","Fields","copy areas.","","","","","","Auxiliary and optional information for the <code>create_gc</code> …","Creates a graphics context.","create cursor.","","Creates a pixmap.","Auxiliary and optional information for the <code>create_window</code> …","Creates a window.","","","A RAII-like wrapper around a Cursor.","","","","","","","","","","Opcode for the DeleteProperty request","","Opcode for the DestroyNotify event","Opcode for the DestroySubwindows request","Opcode for the DestroyWindow request","","","","","","Opcode for the Drawable error","","","a window is destroyed.","","Destroys a window.","","","","","Opcode for the EnterNotify event","","","","","Opcode for the Expose event","","the pointer is in a different window.","","NOT YET DOCUMENTED.","","","","","","Opcode for the FillPoly request","","","","Opcode for the FocusIn event","Opcode for the FocusOut event","","","","Opcode for the Font error","","Opcode for the ForceScreenSaver request","","Opcode for the FreeColormap request","Opcode for the FreeColors request","Opcode for the FreeCursor request","Opcode for the FreeGC request","Opcode for the FreePixmap request","","","","","","","","","NOT YET DOCUMENTED.","","","","","A RAII-like wrapper around a Font.","","","","","","","Deletes a cursor.","Destroys a graphics context.","Destroys a pixmap.","Fields","Opcode for the GetAtomName request","Opcode for the GetFontPath request","Opcode for the GetGeometry request","Opcode for the GetImage request","Opcode for the GetInputFocus request","Opcode for the GetKeyboardControl request","Opcode for the GetKeyboardMapping request","Opcode for the GetModifierMapping request","Opcode for the GetMotionEvents request","Opcode for the GetPointerControl request","Opcode for the GetPointerMapping request","Opcode for the GetProperty request","Opcode for the GetScreenSaver request","Opcode for the GetSelectionOwner request","Opcode for the GetWindowAttributes request","Opcode for the GeGeneric event","","Opcode for the GrabButton request","Opcode for the GrabKeyboard request","Opcode for the GrabKey request","Opcode for the GrabPointer request","Opcode for the GrabServer request","","Opcode for the GraphicsExposure event","Opcode for the GravityNotify event","","","","Opcode for the GContext error","","A RAII-like wrapper around a Gcontext.","generic event (with length).","","","","","Fields","Get current window geometry.","","","","","","","","","","","","","","","","","Fields","Gets a window property.","","","","Fields","Gets the owner of a selection.","Fields","Gets window attributes.","","Grab pointer button(s).","Grab keyboard key(s).","","Grab the keyboard.","Fields","","Grab the pointer.","","","","","","","","","","Opcode for the IDChoice error","Opcode for the ImageText16 request","Opcode for the ImageText8 request","Opcode for the Implementation error","","","","","","","","Opcode for the InstallColormap request","","","","Opcode for the InternAtom request","","","","","","","Draws text.","Draws text.","Fields","","","Get atom identifier by name.","","","","","","Opcode for the KeymapNotify event","","","","Opcode for the KeyPress event","","Opcode for the KeyRelease event","Opcode for the KillClient request","","a key was pressed/released.","","","","","","","kills a client.","","Opcode for the LeaveNotify event","","","","","Opcode for the Length error","","","Opcode for the ListExtensions request","Opcode for the ListFonts request","Opcode for the ListFontsWithInfo request","Opcode for the ListHosts request","Opcode for the ListInstalledColormaps request","Opcode for the ListProperties request","","","","Opcode for the LookupColor request","","","","","","","","Fields","get matching font names.","Fields","get matching font names and information.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the MappingNotify event","Opcode for the MapNotify event","Opcode for the MapRequest event","Opcode for the MapSubwindows request","Opcode for the MapWindow request","Opcode for the Match error","","","","","","","","","","Opcode for the MotionNotify event","","","a window was mapped.","window wants to be mapped.","","","Makes a window visible.","","keyboard mapping changed.","","","","a key was pressed.","Opcode for the Name error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the NoExposure event","Opcode for the NoOperation request","","","","","","","","","","","","","Opcode for the OpenFont request","","","","","","","","opens a font.","","","","","","Opcode for the Pixmap error","","","","","","","","","","","Opcode for the PolyArc request","Opcode for the PolyFillArc request","Opcode for the PolyFillRectangle request","Opcode for the PolyLine request","Opcode for the PolyPoint request","Opcode for the PolyRectangle request","Opcode for the PolySegment request","Opcode for the PolyText16 request","Opcode for the PolyText8 request","","","","","","","Opcode for the PropertyNotify event","","Opcode for the PutImage request","","","A RAII-like wrapper around a Pixmap.","Fields","","","","Fills rectangles.","draw lines.","","","draw lines.","","","","Fields","","a window property changed.","","","Opcode for the QueryBestSize request","Opcode for the QueryColors request","Opcode for the QueryExtension request","Opcode for the QueryFont request","Opcode for the QueryKeymap request","Opcode for the QueryPointer request","Opcode for the QueryTextExtents request","Opcode for the QueryTree request","","","","","Fields","check if extension is present.","Fields","query font metrics.","","","Fields","get pointer coordinates.","","","get text extents.","Fields","query the window tree.","","Opcode for the RecolorCursor request","","","Opcode for the ReparentNotify event","Opcode for the ReparentWindow request","","","","Opcode for the Request error","","","Opcode for the ResizeRequest event","","","","","","","","","","","","","Opcode for the RotateProperties request","","","","","","Reparents a window.","","","","","","Opcode for the SelectionClear event","Opcode for the SelectionNotify event","Opcode for the SelectionRequest event","Opcode for the SendEvent request","","","Opcode for the SetAccessControl request","Opcode for the SetClipRectangles request","Opcode for the SetCloseDownMode request","Opcode for the SetDashes request","Opcode for the SetFontPath request","Opcode for the SetInputFocus request","Opcode for the SetModifierMapping request","Opcode for the SetPointerMapping request","Opcode for the SetScreenSaver request","Opcode for the SetSelectionOwner request","","","","","","","","","","","","","","","","Opcode for the StoreColors request","Opcode for the StoreNamedColor request","","","","","","","","","","","","","","","","","","","","","","","","","send an event.","","","","","","Sets input focus.","","","","","","","Sets the owner of a selection.","","","","","","","","","","","","","","","Opcode for the TranslateCoordinates request","","","","","","","","","","Opcode for the UngrabButton request","Opcode for the UngrabKeyboard request","Opcode for the UngrabKey request","Opcode for the UngrabPointer request","Opcode for the UngrabServer request","","Opcode for the UninstallColormap request","","Opcode for the UnmapNotify event","Opcode for the UnmapSubwindows request","Opcode for the UnmapWindow request","","","","","release a key combination.","","release the pointer.","","","a window is unmapped.","","Makes a window invisible.","Opcode for the Value error","","","","Opcode for the VisibilityNotify event","","","","","","","Opcode for the WarpPointer request","","","","","","","","Opcode for the Window error","","","","","","","","","","","","","","move mouse pointer.","","","","A RAII-like wrapper around a Window.","","","","","","","","","","","","","","","","","","Get the value of the <code>address_len</code> field.","","","","","Allocate a color.","Allocate a color.","","","","","","","release queued events.","release queued events.","","","","Get the value of the <code>allowed_depths_len</code> field.","","","Set the <code>arc_mode</code> field of this structure.","Set the <code>arc_mode</code> field of this structure.","","","","","","","","","","","","","","Get the value of the <code>atoms_len</code> field.","","","Get the value of the <code>authorization_protocol_data_len</code> field.","","Get the value of the <code>authorization_protocol_name_len</code> field.","Set the <code>auto_repeat_mode</code> field of this structure.","","","","","","","","","","","","Set the <code>background</code> field of this structure.","Set the <code>background</code> field of this structure.","","","Set the <code>background_pixel</code> field of this structure.","Set the <code>background_pixel</code> field of this structure.","","","Set the <code>background_pixmap</code> field of this structure.","Set the <code>background_pixmap</code> field of this structure.","","","Set the <code>backing_pixel</code> field of this structure.","Set the <code>backing_pixel</code> field of this structure.","","","","Set the <code>backing_planes</code> field of this structure.","Set the <code>backing_planes</code> field of this structure.","","","","Set the <code>backing_store</code> field of this structure.","Set the <code>backing_store</code> field of this structure.","","","","","","","Set the <code>bell_duration</code> field of this structure.","","","Set the <code>bell_percent</code> field of this structure.","","","Set the <code>bell_pitch</code> field of this structure.","","","Set the <code>bit_gravity</code> field of this structure.","Set the <code>bit_gravity</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>border_pixel</code> field of this structure.","Set the <code>border_pixel</code> field of this structure.","","","Set the <code>border_pixmap</code> field of this structure.","Set the <code>border_pixmap</code> field of this structure.","","","Set the <code>border_width</code> field of this structureet the <code>cap_style</code> field of this structure.","Set the <code>cap_style</code> field of this structure.","","","","","change graphics context components.","change graphics context components.","","","","","","","","","Changes a window property.","Changes a window property.","Changes a client’s save set.","Changes a client’s save set.","change window attributes.","change window attributes.","","Get the value of the <code>char_infos_len</code> field.","","","","","","","","","Get the value of the <code>children_len</code> field.","","","","Change window stacking order.","Change window stacking order.","","","","","","","Set the <code>clip_mask</code> field of this structure.","Set the <code>clip_mask</code> field of this structure.","","","Set the <code>clip_x_origin</code> field of this structure.","Set the <code>clip_x_origin</code> field of this structure.","","","","Set the <code>clip_y_origin</code> field of this structure.","Set the <code>clip_y_origin</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>cmaps_len</code> fieldet the XID of the wrapped resource","Set the <code>colormap</code> field of this structure.","Set the <code>colormap</code> field of this structure.","","","","","","","","","Get the value of the <code>colors_len</code> field.","Configures window attributes.","Configures window attributes.","","","","","","","","","","copy areas.","copy areas.","","","","","","","","","","","","","Create a new Colormap and return a Colormap wrapper","Create a new Colormap and return a Colormap wrapper and a …","","","Create a new Cursor and return a Cursor wrapper","Create a new Cursor and return a Cursor wrapper and a …","Creates a graphics context.","Creates a graphics context.","Create a new Gcontext and return a Gcontext wrapper","Create a new Gcontext and return a Gcontext wrapper and a …","create cursor.","create cursor.","Create a new Cursor and return a Cursor wrapper","Create a new Cursor and return a Cursor wrapper and a …","Creates a pixmap.","Creates a pixmap.","Create a new Pixmap and return a Pixmap wrapper","Create a new Pixmap and return a Pixmap wrapper and a …","Creates a window.","Creates a window.","Create a new Window and return a Window wrapper","Create a new Window and return a Window wrapper and a …","","Get the XID of the wrapped resource","Set the <code>cursor</code> field of this structure.","Set the <code>cursor</code> field of this structure.","","","","","","","","Set the <code>dash_offset</code> field of this structure.","Set the <code>dash_offset</code> field of this structure.","","","","Set the <code>dashes</code> field of this structure.","Set the <code>dashes</code> field of this structureestroys a window.","Destroys a window.","","","","","","","","","Set the <code>do_not_propogate_mask</code> field of this structure.","Set the <code>do_not_propogate_mask</code> field of this structureet the <code>event_mask</code> field of this structure.","Set the <code>event_mask</code> field of this structure.","","","","","","","","","","","","","","","","","Get the value of the <code>events_len</code> field.","","","","","","","","","","","","","","Set the <code>fill_rule</code> field of this structure.","Set the <code>fill_rule</code> field of this structure.","","","Set the <code>fill_style</code> field of this structure.","Set the <code>fill_style</code> field of this structureet the XID of the wrapped resource","Set the <code>font</code> field of this structure.","Set the <code>font</code> field of this structure.","","","","","","","","","","","","","Assume ownership of the given resource and destroy it in …","Assume ownership of the given resource and destroy it in …","Assume ownership of the given resource and destroy it in …","Assume ownership of the given resource and destroy it in …","Assume ownership of the given resource and destroy it in …","Assume ownership of the given resource and destroy it in …","","","","","","","","","","","","Set the <code>foreground</code> field of this structure.","Set the <code>foreground</code> field of this structure.","","","","","","","","","","","","Deletes a cursor.","Deletes a cursor.","Destroys a graphics context.","Destroys a graphics context.","Destroys a pixmap.","Destroys a pixmap.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Construct from a <code>ConfigureRequestEvent</code>.","Set the <code>function</code> field of this structure.","Set the <code>function</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","Get the XID of the wrapped resource","","","","","Get current window geometry.","Get current window geometry.","","","","","","","","","","","","","","","","","Gets a window property.","Gets a window property.","","","Gets the owner of a selection.","Gets the owner of a selection.","Gets window attributes.","Gets window attributes.","","Grab pointer button(s).","Grab pointer button(s).","Grab keyboard key(s).","Grab keyboard key(s).","Grab the keyboard.","Grab the keyboard.","Grab the pointer.","Grab the pointer.","","","","","","","","","Set the <code>graphics_exposures</code> field of this structure.","Set the <code>graphics_exposures</code> field of this structureet the <code>height</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>hosts_len</code> field.","","Draws text.","Draws text.","Draws text.","Draws text.","","","Get atom identifier by name.","Get atom identifier by name.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Assume ownership of the XID of the wrapped resource","Assume ownership of the XID of the wrapped resource","Assume ownership of the XID of the wrapped resource","Assume ownership of the XID of the wrapped resource","Clone all borrowed data in this CreateWindowRequest.","Clone all borrowed data in this …","Clone all borrowed data in this ConfigureWindowRequest.","Clone all borrowed data in this InternAtomRequest.","Clone all borrowed data in this ChangePropertyRequest.","Clone all borrowed data in this SendEventRequest.","Clone all borrowed data in this OpenFontRequest.","Clone all borrowed data in this QueryTextExtentsRequest.","Clone all borrowed data in this ListFontsRequest.","Clone all borrowed data in this ListFontsWithInfoRequest.","Clone all borrowed data in this SetFontPathRequest.","Clone all borrowed data in this CreateGCRequest.","Clone all borrowed data in this ChangeGCRequest.","Clone all borrowed data in this SetDashesRequest.","Clone all borrowed data in this SetClipRectanglesRequest.","Clone all borrowed data in this PolyPointRequest.","Clone all borrowed data in this PolyLineRequest.","Clone all borrowed data in this PolySegmentRequest.","Clone all borrowed data in this PolyRectangleRequest.","Clone all borrowed data in this PolyArcRequest.","Clone all borrowed data in this FillPolyRequest.","Clone all borrowed data in this PolyFillRectangleRequest.","Clone all borrowed data in this PolyFillArcRequest.","Clone all borrowed data in this PutImageRequest.","Clone all borrowed data in this PolyText8Request.","Clone all borrowed data in this PolyText16Request.","Clone all borrowed data in this ImageText8Request.","Clone all borrowed data in this ImageText16Request.","Clone all borrowed data in this AllocNamedColorRequest.","Clone all borrowed data in this FreeColorsRequest.","Clone all borrowed data in this StoreColorsRequest.","Clone all borrowed data in this StoreNamedColorRequest.","Clone all borrowed data in this QueryColorsRequest.","Clone all borrowed data in this LookupColorRequest.","Clone all borrowed data in this QueryExtensionRequest.","Clone all borrowed data in this …","Clone all borrowed data in this …","Clone all borrowed data in this ChangeHostsRequest.","Clone all borrowed data in this RotatePropertiesRequest.","Clone all borrowed data in this SetPointerMappingRequest.","Clone all borrowed data in this SetModifierMappingRequest.","Assume ownership of the XID of the wrapped resource","Assume ownership of the XID of the wrapped resource","","","","Set the <code>join_style</code> field of this structure.","Set the <code>join_style</code> field of this structure.","","","Set the <code>key</code> field of this structure.","","","","Set the <code>key_click_percent</code> field of this structure.","","","","","","","","","","Get the value of the <code>keycodes_per_modifier</code> field.","","","","","","","kills a client.","kills a client.","Set the <code>led</code> field of this structure.","","","Set the <code>led_mode</code> field of this structure.","","","","Get the value of the <code>length</code> field.","Get the value of the <code>length</code> field.","Get the value of the <code>length</code> field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>line_style</code> field of this structure.","Set the <code>line_style</code> field of this structure.","","","Set the <code>line_width</code> field of this structure.","Set the <code>line_width</code> field of this structure.","","","","","get matching font names.","get matching font names.","get matching font names and information.","get matching font names and information.","","","","","","","","","","","","","","","","","Get the value of the <code>map_len</code> field.","","","","Makes a window visible.","Makes a window visible.","","","","","","Get the value of the <code>masks_len</code> field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>name_len</code> field.","Get the value of the <code>name_len</code> field.","Get the value of the <code>name_len</code> field.","","","Get the value of the <code>names_len</code> field.","Get the value of the <code>names_len</code> field.","Create a new <code>ClientMessageEvent</code>.","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","","","","","opens a font.","opens a font.","Create a new Font and return a Font wrapper","Create a new Font and return a Font wrapper and a cookie.","","","","","","","Set the <code>override_redirect</code> field of this structure.","Set the <code>override_redirect</code> field of this structureet the value of the <code>path_len</code> field.","","","","","","","","","","","","","Get the value of the <code>pixels_len</code> field.","Get the value of the <code>pixels_len</code> field.","Get the XID of the wrapped resource","","","Get the value of the <code>pixmap_formats_len</code> field.","","Set the <code>plane_mask</code> field of this structure.","Set the <code>plane_mask</code> field of this structure.","","","","","","","","","","","","","","","","","Fills rectangles.","Fills rectangles.","draw lines.","draw lines.","","","","","draw lines.","draw lines.","","","","","","","","","","","Get the value of the <code>properties_len</code> field.","Get the value of the <code>properties_len</code> field.","","","","","","","","","","","","","","","","","","","check if extension is present.","check if extension is present.","query font metrics.","query font metrics.","","","get pointer coordinates.","get pointer coordinates.","get text extents.","get text extents.","query the window tree.","query the window tree.","","","Get the value of the <code>reason_len</code> field.","","","","","","","","","","","","","","Reparents a window.","Reparents a window.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>roots_len</code> field.","","","","","","","","","Set the <code>save_under</code> field of this structure.","Set the <code>save_under</code> field of this structure.","","","","","","","","","","","","","send an event.","send an event.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sets input focus.","Sets input focus.","","","","","","","Sets the owner of a selection.","Sets the owner of a selection.","","Set the <code>sibling</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","Set the <code>stack_mode</code> field of this structure.","","","","","","","","","","","","","","","","","","Set the <code>stipple</code> field of this structure.","Set the <code>stipple</code> field of this structure.","","","","","","","","","","","Set the <code>subwindow_mode</code> field of this structure.","Set the <code>subwindow_mode</code> field of this structure.","","","","","","","","Set the <code>tile</code> field of this structure.","Set the <code>tile</code> field of this structure.","","","Set the <code>tile_stipple_x_origin</code> field of this structure.","Set the <code>tile_stipple_x_origin</code> field of this structure.","","","Set the <code>tile_stipple_y_origin</code> field of this structure.","Set the <code>tile_stipple_y_origin</code> field of this structurearse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …release a key combination.","release a key combination.","","","release the pointer.","release the pointer.","","","","","","","Makes a window invisible.","Makes a window invisible.","","","Iterate over the contained value if its format is 16.","Iterate over the contained value if its format is 32.","Iterate over the contained value if its format is 8.","","","","","","","","","","","Get the value of the <code>vendor_len</code> field.","","","","","","","","","","","","","Get the value of the <code>visuals_len</code> field.","move mouse pointer.","move mouse pointer.","","","Set the <code>width</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","Set the <code>win_gravity</code> field of this structure.","Set the <code>win_gravity</code> field of this structure.","","","","","","Get the XID of the wrapped resource","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>x</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>y</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","A combination of a buffer and a list of file descriptors …","An error that occurred while connecting to an X11 server","","A value did not fit.","A wrapper around a <code>TcpStream</code> or <code>UnixStream</code>.","Error during parsing of display string.","The client did not receive enough data from the server to …","Not enough data was provided.","Out of memory.","The value of an expression could not be computed.","Server does not have a screen matching the display.","A value was outside of its valid range.","An I/O error occurred on the connection.","Some file descriptors were expected, but not enough were …","An error occurred while parsing some data","Error while parsing some data, see <code>ParseError</code>.","The kind of operation that one want to poll for.","Check for both readability and writability.","Check if the stream is readable, i.e. there is pending …","","","A connection to an X11 server implemented in pure rust","The server rejected the connection with a <code>SetupAuthenticate</code>…","The server rejected the connection with a <code>SetupFailed</code> …","A trait used to implement the raw communication with the …","An unknown error occurred.","Check if the stream is writable, i.e. some data could be …","Invalid ID mask provided by the server.","","","","","","","","","","","","","","","","","Try to connect to the X11 server described by the given …","Establish a new connection.","Establish a new connection to the given streams.","Establish a new connection to the given streams.","","","","","","","","","","","","","Establish a new connection for an already connected stream.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>Stream</code> from an already connected <code>TcpStream</code>.","Creates a new <code>Stream</code> from an already connected <code>UnixStream</code>.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Waits for level-triggered read and/or write events on the …","","","","","Read some bytes and FDs from this reader without blocking, …","","Read the exact number of bytes required to fill <code>buf</code> and …","Read the exact number of bytes required to fill <code>buf</code> and …","Does this poll mode include readability?","","","","","Returns a reference to the contained stream.","","","","","","","","","","","","","","","","","","","","","","","","Does this poll mode include writability?","Write a buffer and some FDs into this writer without …","","Like <code>write</code>, except that it writes from a slice of buffers. …","Like <code>write</code>, except that it writes from a slice of buffers. …","","The number of bytes that were expected.","The number of bytes that were received.","A simple wrapper around RawFd that closes the fd on drop.","","","","Consumes the <code>RawFdContainer</code> and closes the wrapped FD with …","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Get the <code>RawFd</code> out of this <code>RawFdContainer</code>.","Create a new <code>RawFdContainer</code> for the given <code>RawFd</code>.","Tries to clone the <code>RawFdContainer</code> creating a new FD with …","","","","Extension trait that simplifies API use","A RAII-like wrapper around …","","","Change a property on a window with format 16.","Change a property on a window with format 32.","Change a property on a window with format 8.","","","Returns the argument unchanged.","Grab the server by sending a …","Calls <code>U::from(self)</code>.","Synchronise with the X11 server.","","","","Has the BigRequests extension been enabled?","The value returned by <code>serialize</code>.","The protocol name of the extension that this request …","The BigRequests extension has been enabled.","Trait to provide information about extensions.","Information about a X11 extension.","The BigRequests extension has not been enabled.","A type alias for reply parsers (matches the signature of …","A type implementing this trait is an X11 request.","A representation of the header of a request.","A type implementing this trait can be serialized into X11 …","A type implementing this trait can be parsed from some raw …","A type implementing this trait can be parsed from some raw …","Representation of an X11 error packet that was sent by the …","The value in the request that caused the error.","","","","","","","","","","","","","","","","","","","","","","","The kind of error that occurred as it appears “on the …","The kind of error that occurred.","Name of the extension that caused this error, if known.","Lowest error number used by the extension.","Lowest event number used by the extension.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the information of the extension that whose error …","Returns the information of the extension that whose event …","Returns the information of the extension that whose opcode …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The major opcode of the request that caused this error.","Major opcode used in request","The major opcode of the request.","The minor opcode of the request that caused this error.","The minor opcode of the request (which, for some requests, …","Parse the given input for a RequestHeader and the …","The remaining length of the request, measured in 4 bytes …","Name of the request that caused this error, if known.","The sequence number of the request that caused this error.","Serialize this request into its X11 protocol wire …","Serialize this value into X11 raw bytes.","Serialize this value into X11 raw bytes, appending the …","","","","","","","","","","","","","Try to parse the given values into an instance of this …","Parse an X11 error.","Try to parse the given values into an instance of this …","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,9,9,18,0,8,8,0,0,18,0,0,0,0,18,8,9,18,8,9,10,10,8,9,8,9,0,10,8,9,8,9,10,194,18,8,9,18,8,9,194,18,8,9,10,10,10,194,194,194,194,10,10,10,10,10,10,10,10,194,8,9,18,8,9,18,8,9,18,8,9,194,194,194,194,10,10,10,10,10,0,0,0,0,36,33,35,44,36,33,35,44,36,33,36,36,33,35,44,36,33,35,44,36,36,33,35,44,44,36,33,35,44,33,35,33,33,35,33,36,33,35,44,36,33,35,44,36,33,35,44,36,33,35,44,0,0,6,23,26,3,7,0,23,3,26,7,3,26,3,26,7,3,7,26,0,7,3,0,0,3,3,7,3,7,6,23,3,7,6,23,45,7,6,23,45,45,45,7,7,6,6,23,23,45,45,7,7,7,6,6,6,6,6,23,23,23,23,23,23,45,7,6,23,45,45,7,6,23,45,7,6,23,45,7,6,23,45,7,6,23,45,539,539,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,53,53,50,50,0,0,0,0,0,0,0,0,52,52,55,49,50,56,51,52,57,53,54,55,49,50,56,51,52,57,53,54,49,50,51,52,53,54,50,51,52,53,54,52,54,51,55,49,50,56,51,52,57,53,54,55,49,50,56,51,52,57,53,54,49,52,54,49,52,54,52,54,54,54,54,54,54,49,55,49,50,56,51,52,57,53,54,52,52,55,56,51,52,57,54,51,52,55,56,57,55,56,57,51,52,54,51,52,54,52,54,52,52,52,50,51,52,53,54,55,49,50,56,51,52,57,53,54,55,49,50,56,51,52,57,53,54,51,52,54,51,52,54,55,49,50,56,51,52,57,53,54,54,52,54,64,64,66,67,66,67,66,67,66,67,66,64,66,66,67,27,27,66,66,66,66,66,66,66,66,66,27,27,66,66,27,66,64,27,27,27,66,66,66,66,66,66,66,66,66,66,27,66,66,64,66,27,66,66,64,27,27,0,0,27,66,27,27,64,66,66,66,66,66,66,64,27,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,66,66,67,66,67,66,27,27,64,66,66,64,66,66,67,27,27,27,66,27,64,66,67,66,67,66,67,66,67,66,67,66,67,66,67,27,27,66,66,27,64,27,64,27,66,66,64,66,66,66,66,66,66,66,66,66,27,66,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,67,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,64,64,64,64,64,66,67,66,67,66,67,66,67,66,66,66,66,66,66,66,66,27,66,0,0,64,27,66,27,27,27,66,66,66,66,66,66,66,66,67,66,67,66,66,66,66,67,66,67,66,27,66,66,67,66,67,66,66,66,66,66,67,66,66,66,66,66,66,66,64,27,27,66,66,64,27,67,66,64,66,67,66,67,66,67,64,66,66,66,66,66,66,66,66,66,66,27,66,66,66,66,67,66,67,66,67,66,67,66,66,66,66,67,66,66,66,27,66,66,66,66,66,66,66,66,66,0,66,67,64,27,66,67,64,27,64,27,64,27,64,64,64,66,67,64,27,66,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,64,27,64,0,64,66,67,64,27,66,66,27,64,27,0,66,27,27,27,0,64,27,66,67,64,27,66,67,64,27,66,67,64,27,27,0,0,0,0,0,0,0,0,0,540,129,89,129,89,129,89,129,89,129,89,129,89,0,129,89,129,89,129,89,129,89,129,89,129,89,89,89,129,89,89,129,129,129,89,129,89,129,89,89,89,129,129,89,0,0,0,0,0,0,130,114,130,114,130,130,130,114,130,114,130,114,130,114,130,114,130,114,130,114,130,114,541,130,114,130,114,114,114,114,130,114,0,114,130,130,130,114,130,114,130,114,114,114,130,130,114,141,0,0,138,138,138,141,141,0,0,0,0,141,138,138,138,141,141,138,0,0,0,0,141,141,141,141,141,141,141,141,141,141,141,141,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,141,141,139,141,141,141,141,141,141,141,141,141,141,141,141,138,141,0,141,0,0,0,0,0,0,0,0,0,0,0,138,0,0,0,0,141,144,144,141,141,141,141,143,141,139,141,0,141,0,141,140,144,145,145,141,141,141,141,141,145,0,0,0,138,138,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,145,138,0,0,141,141,0,0,0,142,142,141,141,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,144,144,0,0,141,0,0,120,151,152,146,146,136,137,136,137,136,137,136,137,136,137,136,137,190,138,138,138,151,152,146,146,195,196,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,195,196,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,135,156,190,0,178,184,157,157,162,162,136,137,136,137,136,137,136,137,136,137,136,137,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,177,187,147,188,189,190,136,137,136,137,0,0,0,0,0,0,195,195,0,0,196,196,0,195,195,0,195,195,0,195,195,0,195,195,183,184,172,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,183,147,149,150,147,136,137,136,137,160,181,195,196,164,165,166,167,168,174,175,176,177,164,164,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,170,150,0,182,120,195,196,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,196,195,148,159,160,169,72,0,0,0,195,196,131,133,139,139,140,140,141,141,142,142,142,142,143,143,143,143,138,138,138,144,144,144,144,145,145,145,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,174,175,176,172,172,173,196,171,172,173,174,175,176,136,137,136,137,151,152,146,146,169,170,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,132,164,147,189,189,195,196,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,196,160,161,162,165,166,167,168,172,173,174,175,176,177,182,184,186,188,189,190,195,185,156,105,72,102,120,105,164,165,166,167,168,174,175,176,164,164,179,179,179,179,179,179,179,179,179,105,136,137,120,150,72,120,72,72,72,102,149,72,164,165,166,167,168,174,175,176,177,189,189,154,155,188,154,155,188,155,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,195,161,162,163,180,182,186,187,188,189,190,160,151,167,168,136,137,136,137,136,137,136,137,0,0,0,0,185,162,177,151,152,146,146,0,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,542,136,137,136,137,156,72,105,72,102,120,146,147,148,149,150,151,152,153,154,155,156,132,157,157,158,158,159,159,160,160,161,161,162,162,163,163,164,164,165,165,166,166,167,167,168,168,169,169,170,170,171,171,172,172,173,173,174,174,175,175,176,176,177,177,178,178,179,180,180,181,181,182,182,183,184,184,185,135,186,186,187,187,188,188,189,189,190,190,146,147,148,149,150,151,152,153,154,155,156,132,179,183,185,135,0,0,0,178,164,165,166,167,168,174,175,176,164,165,166,167,168,174,175,176,164,165,166,167,168,174,175,176,188,189,190,72,136,137,136,137,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,156,135,180,0,165,186,0,0,0,166,195,196,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,195,196,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,146,147,148,149,150,151,152,153,154,155,156,132,105,72,102,179,120,183,185,135,146,147,148,149,150,151,152,153,154,155,156,132,105,72,102,179,120,183,185,135,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,180,181,182,184,186,187,188,189,190,147,195,196,139,140,141,142,143,138,144,145,146,147,148,149,150,151,152,153,154,155,156,132,157,105,158,72,159,102,136,160,137,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,120,182,183,184,185,135,186,187,188,189,190,160,161,102,182,148,149,132,164,153,132,178,132,186,153,132,178,185,132,186,203,203,0,0,0,0,0,0,203,0,202,202,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,202,0,0,202,0,202,0,0,204,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,85,85,85,85,85,85,85,85,85,85,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,0,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,206,207,208,209,206,207,208,209,210,211,212,211,88,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,204,204,204,204,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,202,202,203,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,0,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,0,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,206,104,85,88,76,104,0,104,0,206,207,208,206,76,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,0,0,0,206,76,76,204,0,204,104,85,88,76,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,204,543,543,543,204,543,543,543,543,543,543,204,207,208,213,208,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,204,104,85,88,76,204,104,85,88,76,205,206,207,208,209,210,211,212,213,202,203,204,205,104,206,207,208,209,210,85,211,212,88,213,76,213,206,207,208,209,206,207,208,209,0,0,0,0,0,0,0,0,0,0,0,0,216,117,217,69,218,115,216,117,217,69,218,115,216,216,216,117,217,69,218,115,216,117,217,69,218,115,216,117,217,69,218,115,69,218,216,117,217,69,218,115,216,117,217,69,218,115,216,117,217,69,218,115,216,117,217,69,218,115,216,117,217,69,218,115,0,0,0,216,117,217,69,218,115,115,115,216,117,217,69,218,115,117,69,115,216,117,217,69,218,115,117,69,115,216,216,217,217,218,218,117,117,69,216,117,217,69,218,115,216,117,217,69,218,115,216,117,217,69,218,115,117,69,115,117,69,115,216,217,218,216,117,217,69,218,115,544,544,544,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,0,0,230,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,0,0,0,0,224,223,221,221,234,221,221,0,0,0,0,223,0,0,0,0,227,219,0,227,219,0,0,0,0,0,0,227,219,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,0,0,0,86,261,262,236,219,219,220,220,221,221,219,220,221,265,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,265,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,258,246,0,0,0,225,225,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,0,0,0,265,265,0,265,265,0,265,265,0,265,265,0,265,265,253,254,93,96,93,231,96,93,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,0,251,251,242,243,244,245,246,248,256,258,0,261,261,265,247,247,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,229,232,0,124,0,265,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,265,265,263,225,78,222,222,223,223,224,224,226,227,227,219,219,228,229,230,230,220,220,231,232,233,96,234,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,221,261,262,238,250,0,0,0,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,96,93,0,0,265,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,235,241,253,257,261,265,0,237,258,124,78,96,86,93,78,226,78,226,231,253,86,93,257,86,93,228,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,239,252,0,235,241,124,265,235,236,237,238,239,240,241,247,249,250,251,252,0,228,231,258,0,0,228,229,228,78,228,231,96,124,86,93,225,225,226,226,229,229,232,232,233,233,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,244,244,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,254,254,255,255,256,256,257,257,258,258,259,259,260,260,261,261,262,262,0,0,0,0,0,0,242,246,248,256,258,243,244,245,243,244,245,257,0,228,231,226,228,231,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,258,0,265,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,265,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,78,228,231,96,124,86,93,78,228,231,96,124,86,93,225,226,229,232,233,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,265,225,78,222,223,224,226,227,219,228,229,230,220,231,232,233,96,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,124,250,251,252,253,254,86,255,93,256,257,258,259,260,221,261,262,0,96,93,226,228,229,231,232,237,259,260,261,96,93,261,261,251,250,252,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,545,96,93,96,93,261,261,251,250,252,96,93,367,0,505,456,0,0,0,0,0,493,0,502,385,281,317,424,424,424,285,287,343,376,389,395,299,343,290,384,269,269,269,343,0,292,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,290,288,288,288,288,288,292,292,292,0,367,426,343,283,288,291,288,288,289,367,507,294,286,284,286,284,286,284,286,284,286,284,284,284,0,284,0,0,0,0,0,0,0,0,0,0,0,343,290,343,283,0,0,0,0,0,0,0,0,0,296,273,0,0,0,424,0,0,201,290,290,290,0,343,288,0,0,284,445,0,0,0,285,286,510,0,445,424,343,0,0,353,0,424,0,0,0,0,0,0,0,0,342,343,288,0,343,343,343,343,343,343,343,343,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,290,290,296,278,492,493,339,300,295,0,500,0,0,0,306,498,288,425,343,0,0,0,0,0,0,0,283,498,343,0,284,424,288,428,0,284,0,0,0,0,507,343,480,480,0,290,290,284,0,0,406,343,290,0,343,0,290,0,0,0,0,0,385,325,343,290,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,318,0,0,0,0,0,290,0,0,306,291,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,289,315,0,0,0,0,0,0,201,317,353,353,300,295,346,0,343,296,296,0,385,424,343,382,0,0,0,0,0,0,0,0,290,0,0,292,350,0,284,292,284,0,284,0,0,0,0,0,0,0,0,0,0,0,480,0,284,292,292,412,0,290,290,0,0,0,0,0,0,285,286,510,0,301,311,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,285,287,389,510,285,287,389,510,285,287,389,510,285,287,389,510,285,287,389,510,0,0,0,0,0,0,343,343,426,286,286,286,286,286,350,0,311,0,0,0,0,0,0,0,0,0,0,0,0,0,424,339,445,312,317,343,347,354,386,406,456,474,476,317,317,424,424,315,318,343,283,283,283,343,493,294,492,281,385,284,0,0,0,0,0,0,486,278,486,278,337,425,337,427,0,367,424,438,424,424,288,284,0,406,354,325,273,343,0,290,343,317,350,284,284,317,406,382,343,0,0,0,0,0,0,0,0,0,492,299,438,343,294,284,0,306,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,343,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,301,0,343,291,0,0,299,269,269,0,505,284,0,343,343,500,500,343,343,343,343,343,343,343,412,0,294,426,0,0,0,0,0,0,0,288,343,0,0,0,0,296,424,0,0,0,0,0,0,0,0,0,0,285,286,510,289,425,427,283,283,283,289,283,306,306,290,427,0,0,343,343,343,284,343,343,284,284,290,385,507,343,343,384,269,269,269,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,290,427,290,290,367,0,306,0,0,0,0,0,343,343,318,0,0,0,0,0,346,0,357,0,0,0,325,215,357,0,0,0,0,0,0,0,0,0,0,357,317,284,0,343,0,0,0,0,0,0,343,283,281,318,289,428,343,0,288,283,343,343,343,343,343,343,343,343,343,343,343,0,0,0,0,0,289,424,449,449,343,289,215,215,215,449,333,490,92,490,92,496,267,267,98,84,73,457,0,536,0,536,0,536,0,536,0,536,494,99,271,271,304,304,272,274,272,274,444,448,275,275,275,414,340,118,373,81,504,81,414,276,276,276,276,277,277,106,475,477,479,475,477,479,475,477,479,272,274,272,274,279,280,279,280,279,280,279,280,279,280,279,280,73,279,280,279,280,73,279,280,279,280,73,271,0,536,277,277,106,277,277,106,277,277,106,279,280,279,280,73,437,40,40,40,284,284,285,285,286,286,287,287,288,288,289,289,290,290,291,291,292,292,284,285,286,287,288,289,290,291,292,305,307,271,463,80,468,471,307,107,466,279,280,279,280,279,280,279,280,293,327,333,334,355,293,100,519,520,521,518,515,517,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,275,349,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,519,520,521,518,515,517,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,275,349,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,390,391,302,302,276,58,272,274,272,274,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,98,98,414,313,314,316,319,94,119,75,75,429,475,477,0,536,307,355,73,481,0,536,272,274,272,274,272,274,272,274,433,272,274,272,274,433,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,275,349,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,275,349,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,0,536,458,460,461,463,464,465,466,467,469,470,472,473,90,90,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,515,279,280,348,279,280,73,307,465,466,91,91,0,536,387,390,465,466,0,536,439,440,446,0,536,0,536,0,536,0,536,322,323,351,485,0,536,515,515,0,536,517,517,0,536,518,518,0,536,517,517,0,536,519,519,0,536,520,520,271,517,279,280,279,280,387,390,392,478,479,272,274,272,274,432,272,274,272,274,432,349,374,450,122,374,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,98,84,271,377,0,536,504,305,308,355,100,422,450,122,414,383,0,536,0,536,313,314,316,319,320,369,490,73,279,280,279,280,490,98,83,84,323,324,370,422,429,439,440,442,443,444,446,447,448,450,451,452,453,454,455,481,519,520,521,518,515,517,436,437,431,404,405,119,405,436,437,450,119,405,436,437,450,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,313,314,316,319,320,328,329,330,332,333,335,338,383,279,280,279,280,383,387,390,392,352,313,314,316,319,313,314,316,319,121,121,103,79,103,79,103,79,435,352,496,267,410,0,536,272,274,272,274,272,274,272,274,123,123,351,484,485,468,470,519,520,521,518,515,517,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,275,349,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,407,82,521,272,274,411,415,416,420,272,274,98,83,84,98,83,84,515,517,521,518,519,520,0,536,475,477,479,475,477,479,475,477,479,272,274,272,274,349,374,58,450,451,0,536,0,536,0,536,0,536,0,536,59,214,192,514,266,268,519,520,521,518,515,517,302,303,198,304,305,306,306,307,308,284,284,284,284,281,281,281,281,271,276,309,310,311,311,40,285,285,285,286,286,286,312,312,313,287,287,287,314,315,315,316,317,317,318,318,319,320,321,322,323,324,325,325,326,327,328,329,330,331,332,333,334,335,336,337,337,338,339,339,340,341,342,342,343,343,344,345,346,346,347,347,348,275,275,275,275,349,350,350,351,352,353,353,353,288,288,288,354,354,283,283,283,283,279,355,280,356,357,357,358,73,359,360,300,300,361,362,363,364,365,366,289,289,367,367,367,367,293,368,301,301,369,370,100,371,75,372,118,373,87,299,299,374,375,376,376,377,58,378,81,379,380,97,381,382,382,383,384,384,385,385,386,386,387,70,388,389,389,390,391,392,393,110,394,395,395,396,397,269,269,398,399,400,401,94,402,403,121,404,119,405,406,406,407,408,82,409,116,410,411,412,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,290,290,290,424,424,424,424,425,425,425,425,294,294,294,294,426,426,426,426,427,427,427,427,428,428,428,428,201,201,201,201,273,273,273,273,272,429,274,430,431,432,215,215,433,434,435,436,437,438,438,439,440,441,442,443,444,445,445,446,447,448,449,449,450,451,122,452,453,454,455,456,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,291,468,469,470,471,472,91,473,79,474,474,475,476,476,477,478,479,480,480,481,74,482,123,483,111,484,485,68,292,292,486,486,486,486,278,278,278,278,277,487,488,106,489,490,491,92,492,492,493,493,494,495,99,295,295,296,296,496,267,497,101,498,498,499,500,500,501,502,502,503,504,505,505,506,507,507,508,113,509,112,510,510,511,109,512,77,513,329,293,272,274,272,274,430,432,433,434,436,437,439,440,442,443,444,446,447,448,450,452,453,454,455,518,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,106,0,536,0,536,0,536,0,536,0,536,387,390,391,393,396,397,272,274,272,274,463,80,468,471,307,107,466,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,293,198,304,322,323,327,333,334,336,355,293,100,422,435,436,437,450,451,481,74,271,271,101,101,40,0,536,0,536,0,536,0,536,494,99,519,520,521,518,515,517,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,275,349,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,515,517,521,518,355,356,368,372,374,383,410,416,418,419,420,429,430,432,433,439,440,442,443,444,446,447,448,450,452,453,454,455,464,467,469,470,472,473,482,484,487,496,504,508,511,519,520,452,453,469,272,274,272,274,277,396,397,277,277,277,106,387,390,393,396,484,511,77,77,321,116,484,68,484,68,0,536,277,277,106,277,277,450,414,310,122,68,309,40,352,73,100,75,118,87,58,81,97,70,110,94,121,119,82,116,98,83,71,84,95,90,80,103,108,107,91,79,74,123,111,106,92,99,101,113,112,109,77,272,274,272,274,272,274,272,274,0,536,0,536,0,536,0,536,0,536,0,536,377,377,0,536,323,324,123,508,112,73,112,73,0,536,0,536,94,475,477,477,108,108,98,84,98,84,98,84,271,40,418,419,40,457,459,98,84,98,84,98,84,271,40,323,324,319,320,361,374,398,496,101,499,501,506,390,391,396,397,40,372,87,410,413,417,84,464,470,473,482,87,417,84,71,111,71,111,349,279,280,293,272,274,277,348,0,536,372,0,536,521,521,433,83,83,83,83,83,279,280,327,330,332,333,279,280,73,341,344,379,97,387,390,393,396,327,331,332,334,355,362,75,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,95,95,418,419,489,422,80,103,468,470,108,107,467,472,108,107,519,423,40,40,338,272,274,272,274,451,467,465,387,390,393,396,439,440,446,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,494,99,123,383,98,84,98,84,344,345,374,375,377,381,276,309,40,276,309,40,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,309,310,309,0,536,433,443,447,463,80,468,471,307,107,466,40,0,536,84,351,344,345,381,503,40,40,313,314,316,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,338,340,341,344,345,348,349,351,352,407,82,414,271,313,314,316,319,100,75,94,271,271,313,314,316,319,94,313,314,316,319,94,40,40,0,536,313,314,316,94,119,319,279,280,279,280,73,271,305,442,341,344,345,379,380,381,0,536,313,314,316,319,320,322,323,324,326,327,328,329,330,331,332,333,334,335,336,338,340,341,344,345,348,349,351,352,73,100,75,118,87,58,81,97,70,110,94,121,119,82,116,98,83,71,84,95,122,90,80,103,108,107,91,79,74,123,111,68,106,92,99,101,113,112,109,77,302,303,198,304,305,307,308,271,276,309,310,40,275,355,355,356,356,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,368,368,369,369,370,370,371,371,372,372,373,373,374,374,375,375,377,377,378,378,379,379,380,380,381,381,383,383,387,387,388,388,390,390,391,391,392,392,393,393,394,394,396,396,397,397,398,398,399,399,400,400,401,401,402,403,403,404,404,405,405,407,407,408,408,409,409,410,410,411,411,413,414,415,415,416,416,417,418,418,419,419,420,420,421,421,422,422,423,423,429,429,430,430,431,431,432,432,433,433,434,434,435,435,436,436,437,437,439,439,440,440,441,442,442,443,443,444,444,446,446,447,447,448,448,450,450,451,451,452,452,453,453,454,454,455,455,457,457,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,466,467,467,468,469,469,470,470,471,472,472,473,473,475,475,477,477,478,478,479,479,481,481,482,482,483,483,484,484,485,485,487,487,488,488,489,489,490,490,491,491,494,494,495,495,496,496,267,497,497,499,499,501,501,503,503,504,504,506,506,508,508,509,509,511,511,512,512,513,513,302,303,198,304,305,307,308,271,276,309,310,40,275,402,413,414,417,441,468,471,267,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,446,293,334,293,475,477,477,459,436,437,431,405,405,404,405,404,405,436,437,404,405,436,437,293,334,293,403,313,314,316,319,326,340,348,309,310,40,70,110,113,109,272,274,272,274,403,0,536,0,536,416,454,455,272,274,272,274,344,345,381,490,92,272,274,272,274,272,274,272,274,272,274,272,274,313,314,316,319,340,341,344,345,379,381,387,388,392,393,394,398,402,407,494,99,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,275,349,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,0,536,519,520,521,518,515,517,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,275,349,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,519,520,521,518,515,517,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,275,349,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,302,303,198,304,305,307,308,271,276,309,310,40,313,314,316,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,338,340,341,344,345,348,275,349,351,352,73,100,75,118,87,58,81,97,70,110,94,402,121,119,82,116,413,414,98,83,417,71,84,95,441,122,90,80,103,108,107,468,471,91,79,74,123,111,68,106,92,99,267,101,113,112,109,77,302,303,198,304,305,307,308,271,276,309,310,40,313,314,316,319,320,321,322,323,324,326,327,328,329,330,331,332,333,334,335,336,338,340,341,344,345,348,275,349,351,352,73,100,75,118,87,58,81,97,70,110,94,402,121,119,82,116,413,414,98,83,417,71,84,95,441,122,90,80,103,108,107,468,471,91,79,74,123,111,68,106,92,99,267,101,113,112,109,77,355,356,358,359,360,361,362,363,364,365,366,368,369,370,371,372,373,374,375,377,378,379,380,381,383,387,388,390,391,392,393,394,396,397,398,399,400,401,403,404,405,407,408,409,410,411,415,416,418,419,420,421,422,423,429,430,431,432,433,434,435,436,437,439,440,442,443,444,446,447,448,450,451,452,453,454,455,457,458,459,460,461,462,463,464,465,466,467,469,470,472,473,475,477,478,479,481,482,483,484,485,487,488,489,490,491,494,495,496,497,499,501,503,504,506,508,509,511,512,513,349,374,377,58,519,520,521,518,515,517,302,303,198,304,305,306,307,308,284,281,271,276,309,310,311,40,285,286,312,313,287,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,275,349,350,351,352,353,288,354,283,279,355,280,356,357,358,73,359,360,300,361,362,363,364,365,366,289,367,293,368,301,369,370,100,371,75,372,118,373,87,299,374,375,376,377,58,378,81,379,380,97,381,382,383,384,385,386,387,70,388,389,390,391,392,393,110,394,395,396,397,269,398,399,400,401,94,402,403,121,404,119,405,406,407,408,82,409,116,410,411,412,413,414,415,98,416,83,417,418,71,419,84,420,421,95,422,423,290,424,425,294,426,427,428,201,273,272,429,274,430,431,432,215,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,122,452,453,454,455,456,457,458,459,460,461,462,90,463,80,464,103,465,108,466,107,467,291,468,469,470,471,472,91,473,79,474,475,476,477,478,479,480,481,74,482,123,483,111,484,485,68,292,486,278,277,487,488,106,489,490,491,92,492,493,494,495,99,295,296,496,267,497,101,498,499,500,501,502,503,504,505,506,507,508,113,509,112,510,511,109,512,77,513,0,536,0,536,0,536,0,536,0,536,0,536,0,536,0,536,58,413,58,58,58,58,355,356,368,429,430,487,334,431,40,40,355,73,122,457,103,79,103,79,307,103,79,308,308,0,536,271,355,293,198,304,322,323,327,333,334,336,355,293,100,422,435,436,437,450,451,481,74,271,271,279,280,279,280,73,94,94,520,322,326,327,328,329,330,331,332,333,334,335,336,338,340,348,349,356,358,359,360,361,362,363,364,365,366,368,369,371,374,375,377,378,401,403,435,457,462,504,293,303,198,304,322,323,327,332,333,334,335,355,362,293,100,402,435,451,452,453,454,455,475,441,441,293,303,198,304,322,323,327,332,333,334,335,355,362,293,100,402,435,451,452,453,454,455,475,441,441,73,0,0,0,0,26,0,3,3,26,3,26,3,26,3,26,0,3,0,529,529,0,0,0,3,3,0,3,529,3,525,26,3,529,525,528,26,3,529,525,528,528,26,529,26,529,525,528,528,528,528,26,26,528,528,26,26,3,3,529,525,528,528,26,3,3,3,529,525,528,525,525,528,26,3,529,525,528,525,528,528,528,527,525,528,528,528,527,525,527,527,529,528,528,528,528,528,26,529,26,3,26,3,529,525,528,26,3,529,525,528,26,3,529,525,528,528,528,528,528,529,527,525,527,527,525,539,539,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,0,0,537,537,546,546,546,537,537,537,537,537,546,537,537,537,0,547,548,538,0,0,538,0,0,0,0,0,0,0,25,25,14,127,538,25,14,127,538,25,14,127,538,25,14,127,538,25,14,538,25,14,538,25,25,25,14,14,25,14,127,538,25,14,127,538,125,125,125,25,14,127,538,25,14,127,25,127,0,127,25,25,548,547,547,25,14,127,538,25,14,127,538,25,14,127,538,32,25,34,25,14,127,538],"f":[0,0,0,0,0,0,0,[[[2,[1]]],[[4,[3]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[5,[[4,[6]]]],[5,[[4,[2,7]]]],[8,8],[9,9],[[]],[[]],[[10,[12,[11]]],[[4,[[12,[11]],7]]]],[[5,8,9]],[[8,8],13],[[9,9],13],[[],13],[[],13],[1,[[4,[[2,[14]],7]]]],[[],[[4,[7]]]],[[[18,[[0,[15,15]],[0,[[17,[[12,[16]]]],15,15]]]],19],20],[[8,19],20],[[9,19],[[4,[21]]]],[[]],[[]],[[]],[[],[[4,[22,23]]]],[[]],[[]],[[]],[[],24],[[[12,[16]]],[[4,[25,26]]]],[[[12,[16]]],[[4,[27,26]]]],[[],[[4,[[2,[27]],7]]]],[[],[[4,[[2,[28]],7]]]],[[],[[4,[2,7]]]],[[],[[4,[[2,[29]],7]]]],[1,[[4,[7]]]],[[]],[[[12,[11]],[31,[30]]],[[4,[[33,[32]],7]]]],[[[12,[11]],[31,[30]]],[[4,[[35,[34]],7]]]],[[[12,[11]],[31,[30]]],[[4,[36,7]]]],[37,[[4,[33,7]]]],[38,[[4,[35,7]]]],[39,[[4,[36,7]]]],[[],40],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],41],[[],41],[[],41],[[],[[4,[27,7]]]],[[],[[4,[28,7]]]],[[],[[4,[7]]]],[[],[[4,[29,7]]]],[5,[[4,[2,7]]]],[5,[[4,[6]]]],[5,[[4,[18,7]]]],[5,[[4,[42,6]]]],[5,[[4,[[18,[42]],7]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[36,[[0,[10,43]]]]],[[4,[6]]]],[[[33,[[0,[10,43]],32]]]],[[[36,[[0,[10,43]]]]]],[[[36,[[0,[10,43,15]]]],19],20],[[[33,[[0,[10,43,15]],15]],19],20],[[[35,[[0,[10,43,15]],15]],19],20],[[[44,[[0,[15,10,43]]]],19],20],[[]],[[]],[[]],[[]],[[[36,[[0,[10,43]]]]]],[[]],[[]],[[]],[[]],[[]],[[[0,[10,43]],5],[[36,[[0,[10,43]]]]]],[[[0,[10,43]],5],[[33,[[0,[10,43]],32]]]],[[[0,[10,43]],5],[[35,[[0,[10,43]],34]]]],[[[44,[[0,[10,43]]]]],2],[[[33,[[0,[10,43]],32]]],[[4,[6]]]],[[[35,[[0,[10,43]],34]]],[[4,[42,6]]]],[[[33,[[0,[10,43]],32]]],[[4,[2,7]]]],[[[33,[[0,[10,43]],32]]],[[4,[32,6]]]],[[[35,[[0,[10,43]],34]]],[[4,[34,6]]]],[[[33,[[0,[10,43]],32]]],[[4,[[2,[32]],7]]]],[[[36,[[0,[10,43]]]]],5],[[[33,[[0,[10,43]],32]]],5],[[[35,[[0,[10,43]],34]]],5],[[[44,[[0,[10,43]]]]],[[2,[5]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],41],[[],41],[[],41],[[],41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[[]],[[7,19],20],[[7,19],20],[[6,19],20],[[6,19],20],[[23,19],20],[[23,19],20],[[45,19],[[4,[21]]]],[[45,19],[[4,[21]]]],[46,7],[[]],[26,7],[46,6],[[]],[7,6],[25,6],[26,6],[6,23],[45,23],[25,23],[[]],[26,23],[7,23],[[]],[[]],[[]],[[]],[[]],[[]],[[],47],[[],47],[[],47],[[],47],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],41],[[],41],[[],41],[[],41],0,0,0,[[]],[[]],[[],48],[[48,10,1],[[4,[[2,[14]],7]]]],[[48,19],20],[[]],[[48,16],2],[[48,16],2],[[48,16],2],[[]],[[48,10,1],[[4,[7]]]],[[],4],[[],4],[[],41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[49,[[12,[16]]]],[50,50],[51,51],[52,52],[53,53],[54,54],[[]],[[]],[[]],[[]],[[]],[[],52],[[],54],0,[[[55,[[0,[15,10,43]]]],19],20],[[49,19],20],[[50,19],20],[[[56,[[0,[15,10,43]]]],19],20],[[51,19],20],[[52,19],20],[[[57,[[0,[15,10,43]]]],19],20],[[53,19],20],[[54,19],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[58,[[4,[49,26]]]],[58,[[4,[52,26]]]],[58,[[4,[54,26]]]],[[10,59],[[4,[[55,[10]],7]]]],[[10,59,[61,[60]]],[[4,[[56,[10]],7]]]],[[10,59],[[4,[[57,[10]],7]]]],[[10,59],[[4,[[56,[10]],7]]]],0,0,0,0,0,0,[49,[[12,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[0,[10,43]],59],[[4,[[55,[[0,[10,43]]]],7]]]],[[[0,[10,43]],59,[61,[60]]],[[4,[[56,[[0,[10,43]]]],7]]]],[[62,62],51],[[],52],[[[0,[10,43]],59],[[4,[[57,[[0,[10,43]]]],7]]]],[[],54],0,0,[[[55,[[0,[10,43]]]]],[[4,[49,6]]]],[[[56,[[0,[10,43]]]]],[[4,[52,6]]]],[[[57,[[0,[10,43]]]]],[[4,[54,6]]]],[[[55,[[0,[10,43]]]]],[[4,[[2,[49]],7]]]],[[[56,[[0,[10,43]]]]],[[4,[[2,[52]],7]]]],[[[57,[[0,[10,43]]]]],[[4,[[2,[54]],7]]]],[51],[52],[54],[[51,[31,[16]]]],[[52,[31,[16]]]],[[54,[31,[16]]]],[[52,[0,[10,43]],59,[61,[60]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[54,[0,[10,43]],59],[[4,[[36,[[0,[10,43]]]],7]]]],[[52,[0,[10,43]],59],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[64,64],[27,27],[[]],[[]],[[64,64],65],[[64,64],13],[[],13],[[66,19],[[4,[21]]]],[[67,19],[[4,[21]]]],[[64,19],[[4,[21]]]],[[27,19],[[4,[21]]]],[[]],[68,67],[69,67],[70,67],[71,67],[72,67],[73,67],[74,67],[75,67],[76,67],[77,67],[78,67],[79,67],[80,67],[81,67],[82,67],[83,67],[84,67],[85,67],[86,67],[58,67],[87,67],[88,67],[[],67],[89,67],[90,67],[91,67],[92,67],[93,67],[94,67],[95,67],[96,67],[97,67],[98,67],[99,67],[[]],[100,67],[101,67],[102,67],[103,67],[104,67],[105,67],[106,67],[107,67],[108,67],[109,67],[110,67],[111,67],[112,67],[113,67],[114,67],[115,67],[116,67],[117,67],[118,67],[119,67],[120,67],[121,67],[122,67],[123,67],[124,67],[[]],[[]],[[16,125],64],0,[[64,126]],[[]],[[]],[[]],[[]],[66,66],[[127,[12,[16]],[31,[30,63]],125],[[4,[66,26]]]],[[[12,[16]],125],[[4,[27,26]]]],[[64,64],[[2,[65]]]],[27,16],0,[66,2],[27,16],[27,13],[27,13],0,[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],41],[[],41],[[],41],[[],41],[27,[[2,[128]]]],0,0,0,0,0,0,0,0,0,[[],[[4,[[33,[89]],7]]]],[[]],[[]],[[]],[[]],[129,129],[89,89],[[]],[[]],[[129,129],65],[[89,89],65],[[],129],[[],89],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],89]],7]]]],[[129,129],13],[[89,89],13],[[],13],[[],13],[[129,19],[[4,[21]]]],[[89,19],[[4,[21]]]],[[]],[[]],[[129,126]],[[89,126]],[[]],[[]],0,0,[[129,129],[[2,[65]]]],[[89,89],[[2,[65]]]],0,[[129,16]],[[129,16]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[[12,[16]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[127,[12,[16]]],[[4,[129,26]]]],[[],41],[[],41],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[130,130],[114,114],[[]],[[]],[[130,130],65],[[114,114],65],[[],130],[[],114],[[130,130],13],[[114,114],13],[[],13],[[],13],[[130,19],[[4,[21]]]],[[114,19],[[4,[21]]]],[[]],[[]],[[128,128],[[4,[[33,[114]],7]]]],[[130,126]],[[114,126]],[[]],[[]],0,0,0,[[130,130],[[2,[65]]]],[[114,114],[[2,[65]]]],[[[0,[10,43]],128,128],[[4,[[33,[[0,[10,43]],114]],7]]]],0,[[130,16]],[[130,16]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[[12,[16]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[127,[12,[16]]],[[4,[130,26]]]],[[],41],[[],41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[10,43]],131,[12,[22]],[12,[132]],[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],133,134,134,[12,[135]]],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,0,0,[[136,[61,[[2,[22]]]]],136],[[137,[61,[[2,[22]]]]],137],0,0,[[136,[61,[[2,[62]]]]],136],[[137,[61,[[2,[62]]]]],137],0,0,[[136,[61,[[2,[62]]]]],136],[[137,[61,[[2,[62]]]]],137],0,0,0,[[138,128]],[[138,138]],[[138,128]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[0,[10,43]],133,137],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,0,0,0,[[136,[61,[[2,[22]]]]],136],[[137,[61,[[2,[22]]]]],137],0,0,[[136,[61,[[2,[62]]]]],136],[[137,[61,[[2,[62]]]]],137],0,0,[[136,[61,[[2,[62]]]]],136],[[137,[61,[[2,[62]]]]],137],0,0,[139,139],[140,140],[141,141],[142,142],[143,143],[138,138],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[132,132],[157,157],[105,105],[158,158],[72,72],[159,159],[102,102],[136,136],[160,160],[137,137],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[120,120],[182,182],[183,183],[184,184],[185,185],[135,135],[186,186],[187,187],[188,188],[189,189],[190,190],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[139,139],65],[[140,140],65],[[141,141],65],[[142,142],65],[[143,143],65],[[138,138],65],[[144,144],65],[[145,145],65],[[146,146],65],[[147,147],65],[[148,148],65],[[149,149],65],[[150,150],65],[[151,151],65],[[152,152],65],[[153,153],65],[[154,154],65],[[155,155],65],[[156,156],65],[[132,132],65],[[157,157],65],[[105,105],65],[[158,158],65],[[72,72],65],[[159,159],65],[[102,102],65],[[136,136],65],[[160,160],65],[[137,137],65],[[161,161],65],[[162,162],65],[[163,163],65],[[164,164],65],[[165,165],65],[[166,166],65],[[167,167],65],[[168,168],65],[[169,169],65],[[170,170],65],[[171,171],65],[[172,172],65],[[173,173],65],[[174,174],65],[[175,175],65],[[176,176],65],[[177,177],65],[[178,178],65],[[179,179],65],[[180,180],65],[[181,181],65],[[120,120],65],[[182,182],65],[[183,183],65],[[184,184],65],[[185,185],65],[[135,135],65],[[186,186],65],[[187,187],65],[[188,188],65],[[189,189],65],[[190,190],65],0,0,0,0,0,0,[[136,[61,[[2,[22]]]]],136],[[137,[61,[[2,[22]]]]],137],0,0,[[[0,[10,43]],141,133,[61,[133]],133,134,134,134,134,134,134,128,128],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],141,133,133,191,131,134,134,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],141,133,133,191,131,134,134,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],141,133,133,191,131,134,134,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],192,[12,[183]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],133,153,193,[12,[193]],[12,[152]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,153,193,[12,[193]],[12,[152]]],[[4,[[195,[194]],23]]]],[[194,153,193,[12,[193]],[12,[152]]],[[4,[23]]]],[[[0,[10,43]],192,133,128,128],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],131,191],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,191],[[4,[[196,[194]],23]]]],[[194,191],[[4,[23]]]],[[[0,[10,43]],133,153,153,[12,[193]],[12,[152]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,153,153,[12,[193]],[12,[152]]],[[4,[[195,[194]],23]]]],[[194,153,153,[12,[193]],[12,[152]]],[[4,[23]]]],[[[0,[10,43]],133,197,191,136],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,197,191,136],[[4,[[195,[194]],23]]]],[[194,197,191,136],[[4,[23]]]],[[[0,[10,43]],133,153,153,193,193,[12,[193]],[12,[152]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,153,153,193,193,[12,[193]],[12,[152]]],[[4,[[195,[194]],23]]]],[[194,153,153,193,193,[12,[193]],[12,[152]]],[[4,[23]]]],[[[0,[10,43]],133,152],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,152],[[4,[[195,[194]],23]]]],[[194,152],[[4,[23]]]],0,0,0,[[],139],[[],140],[[],141],[[],142],[[],143],[[],138],[[],144],[[],145],[[],146],[[],147],[[],148],[[],149],[[],150],[[],151],[[],152],[[],153],[[],154],[[],155],[[],156],[[],132],[[],157],[[],105],[[],158],[[],72],[[],159],[[],102],[[],136],[[],160],[[],137],[[],161],[[],162],[[],163],[[],164],[[],165],[[],166],[[],167],[[],168],[[],169],[[],170],[[],171],[[],172],[[],173],[[],174],[[],175],[[],176],[[],177],[[],178],[[],179],[[],180],[[],181],[[],120],[[],182],[[],183],[[],184],[[],185],[[],135],[[],186],[[],187],[[],188],[[],189],[[],190],0,0,0,0,0,[[136,[61,[[2,[22]]]]],136],[[137,[61,[[2,[22]]]]],137],0,0,0,0,[[[195,[10]]]],[[[196,[10]]]],0,0,0,0,0,0,0,0,0,0,0,[[139,139],13],[[140,140],13],[[141,141],13],[[142,142],13],[[143,143],13],[[138,138],13],[[144,144],13],[[145,145],13],[[146,146],13],[[147,147],13],[[148,148],13],[[149,149],13],[[150,150],13],[[151,151],13],[[152,152],13],[[153,153],13],[[154,154],13],[[155,155],13],[[156,156],13],[[132,132],13],[[157,157],13],[[105,105],13],[[158,158],13],[[72,72],13],[[159,159],13],[[102,102],13],[[136,136],13],[[160,160],13],[[137,137],13],[[161,161],13],[[162,162],13],[[163,163],13],[[164,164],13],[[165,165],13],[[166,166],13],[[167,167],13],[[168,168],13],[[169,169],13],[[170,170],13],[[171,171],13],[[172,172],13],[[173,173],13],[[174,174],13],[[175,175],13],[[176,176],13],[[177,177],13],[[178,178],13],[[179,179],13],[[180,180],13],[[181,181],13],[[120,120],13],[[182,182],13],[[183,183],13],[[184,184],13],[[185,185],13],[[135,135],13],[[186,186],13],[[187,187],13],[[188,188],13],[[189,189],13],[[190,190],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[[[0,[10,43]],141,133,152,[12,[198]]],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,[[[195,[[0,[15,10]]]],19],20],[[[196,[[0,[15,10]]]],19],20],[[139,19],[[4,[21]]]],[[140,19],[[4,[21]]]],[[141,19],[[4,[21]]]],[[142,19],[[4,[21]]]],[[143,19],[[4,[21]]]],[[138,19],[[4,[21]]]],[[144,19],[[4,[21]]]],[[145,19],[[4,[21]]]],[[146,19],[[4,[21]]]],[[147,19],[[4,[21]]]],[[148,19],[[4,[21]]]],[[149,19],[[4,[21]]]],[[150,19],[[4,[21]]]],[[151,19],[[4,[21]]]],[[152,19],[[4,[21]]]],[[153,19],[[4,[21]]]],[[154,19],[[4,[21]]]],[[155,19],[[4,[21]]]],[[156,19],[[4,[21]]]],[[132,19],[[4,[21]]]],[[157,19],[[4,[21]]]],[[105,19],[[4,[21]]]],[[158,19],[[4,[21]]]],[[72,19],[[4,[21]]]],[[159,19],[[4,[21]]]],[[102,19],[[4,[21]]]],[[136,19],[[4,[21]]]],[[160,19],[[4,[21]]]],[[137,19],[[4,[21]]]],[[161,19],[[4,[21]]]],[[162,19],[[4,[21]]]],[[163,19],[[4,[21]]]],[[164,19],[[4,[21]]]],[[165,19],[[4,[21]]]],[[166,19],[[4,[21]]]],[[167,19],[[4,[21]]]],[[168,19],[[4,[21]]]],[[169,19],[[4,[21]]]],[[170,19],[[4,[21]]]],[[171,19],[[4,[21]]]],[[172,19],[[4,[21]]]],[[173,19],[[4,[21]]]],[[174,19],[[4,[21]]]],[[175,19],[[4,[21]]]],[[176,19],[[4,[21]]]],[[177,19],[[4,[21]]]],[[178,19],[[4,[21]]]],[[179,19],[[4,[21]]]],[[180,19],[[4,[21]]]],[[181,19],[[4,[21]]]],[[120,19],[[4,[21]]]],[[182,19],[[4,[21]]]],[[183,19],[[4,[21]]]],[[184,19],[[4,[21]]]],[[185,19],[[4,[21]]]],[[135,19],[[4,[21]]]],[[186,19],[[4,[21]]]],[[187,19],[[4,[21]]]],[[188,19],[[4,[21]]]],[[189,19],[[4,[21]]]],[[190,19],[[4,[21]]]],[[10,131],[[196,[10]]]],[[10,133],[[195,[10]]]],0,0,0,0,0,[[[0,[10,43]],131],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],131,[12,[199]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],133],[[4,[[36,[[0,[10,43]]]],7]]]],[[]],[[]],[[[196,[10]]],131],[[[195,[10]]],133],[[]],[16,139],[[]],[16,140],[[]],[16,141],[16,142],[22,142],[128,142],[[]],[[]],[22,143],[128,143],[16,143],[128,138],[16,138],[[]],[128,144],[22,144],[16,144],[[]],[[]],[22,145],[16,145],[128,145],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[[196,[10]]],131],0,0,0,0,0,0,[[136,[61,[[2,[22]]]]],136],[[137,[61,[[2,[22]]]]],137],0,0,0,0,0,0,0,0,[[139,126]],[[140,126]],[[141,126]],[[142,126]],[[143,126]],[[138,126]],[[144,126]],[[145,126]],[[146,126]],[[147,126]],[[148,126]],[[149,126]],[[150,126]],[[151,126]],[[152,126]],[[153,126]],[[154,126]],[[155,126]],[[156,126]],[[132,126]],[[157,126]],[[105,126]],[[158,126]],[[72,126]],[[159,126]],[[102,126]],[[136,126]],[[160,126]],[[137,126]],[[161,126]],[[162,126]],[[163,126]],[[164,126]],[[165,126]],[[166,126]],[[167,126]],[[168,126]],[[169,126]],[[170,126]],[[171,126]],[[172,126]],[[173,126]],[[174,126]],[[175,126]],[[176,126]],[[177,126]],[[178,126]],[[179,126]],[[180,126]],[[181,126]],[[120,126]],[[182,126]],[[183,126]],[[184,126]],[[185,126]],[[135,126]],[[186,126]],[[187,126]],[[188,126]],[[189,126]],[[190,126]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[196,[10]]],131],[160,160],[161,161],[162,162],[165,165],[166,166],[167,167],[168,168],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[182,182],[184,184],[186,186],[188,188],[189,189],[190,190],[[[195,[10]]],133],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],136],[[],137],[120,22],[150,22],0,[120,22],[72,22],[72,22],[72,22],[102,22],[149,128],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[139,139],[[2,[65]]]],[[140,140],[[2,[65]]]],[[141,141],[[2,[65]]]],[[142,142],[[2,[65]]]],[[143,143],[[2,[65]]]],[[138,138],[[2,[65]]]],[[144,144],[[2,[65]]]],[[145,145],[[2,[65]]]],[[146,146],[[2,[65]]]],[[147,147],[[2,[65]]]],[[148,148],[[2,[65]]]],[[149,149],[[2,[65]]]],[[150,150],[[2,[65]]]],[[151,151],[[2,[65]]]],[[152,152],[[2,[65]]]],[[153,153],[[2,[65]]]],[[154,154],[[2,[65]]]],[[155,155],[[2,[65]]]],[[156,156],[[2,[65]]]],[[132,132],[[2,[65]]]],[[157,157],[[2,[65]]]],[[105,105],[[2,[65]]]],[[158,158],[[2,[65]]]],[[72,72],[[2,[65]]]],[[159,159],[[2,[65]]]],[[102,102],[[2,[65]]]],[[136,136],[[2,[65]]]],[[160,160],[[2,[65]]]],[[137,137],[[2,[65]]]],[[161,161],[[2,[65]]]],[[162,162],[[2,[65]]]],[[163,163],[[2,[65]]]],[[164,164],[[2,[65]]]],[[165,165],[[2,[65]]]],[[166,166],[[2,[65]]]],[[167,167],[[2,[65]]]],[[168,168],[[2,[65]]]],[[169,169],[[2,[65]]]],[[170,170],[[2,[65]]]],[[171,171],[[2,[65]]]],[[172,172],[[2,[65]]]],[[173,173],[[2,[65]]]],[[174,174],[[2,[65]]]],[[175,175],[[2,[65]]]],[[176,176],[[2,[65]]]],[[177,177],[[2,[65]]]],[[178,178],[[2,[65]]]],[[179,179],[[2,[65]]]],[[180,180],[[2,[65]]]],[[181,181],[[2,[65]]]],[[120,120],[[2,[65]]]],[[182,182],[[2,[65]]]],[[183,183],[[2,[65]]]],[[184,184],[[2,[65]]]],[[185,185],[[2,[65]]]],[[135,135],[[2,[65]]]],[[186,186],[[2,[65]]]],[[187,187],[[2,[65]]]],[[188,188],[[2,[65]]]],[[189,189],[[2,[65]]]],[[190,190],[[2,[65]]]],[[[195,[10]]],133],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[136,[61,[[2,[142]]]]],136],[[137,[61,[[2,[142]]]]],137],0,0,[[136,[61,[[2,[143]]]]],136],[[137,[61,[[2,[143]]]]],137],0,0,[[[0,[10,43]],197],[[4,[[33,[[0,[10,43]],120]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],72]],7]]]],[[[0,[10,43]],191],[[4,[[33,[[0,[10,43]],102]],7]]]],[[[0,[10,43]],22,22],[[4,[[33,[[0,[10,43]],105]],7]]]],0,0,0,0,0,0,0,[[[0,[10,43]],131,131],[[4,[[36,[[0,[10,43]]]],7]]]],[[131,[12,[22]],[12,[132]],[12,[16]]],[[4,[36,7]]]],[[133,134,134,[12,[135]]],[[4,[36,7]]]],[[133,137],[[4,[36,7]]]],[[141,133,[61,[133]],133,134,134,134,134,134,134,128,128],[[4,[36,7]]]],[[141,133,133,191,131,134,134,[12,[16]]],[[4,[36,7]]]],[[141,133,133,191,131,134,134,[12,[16]]],[[4,[36,7]]]],[[141,133,133,191,131,134,134,[12,[16]]],[[4,[36,7]]]],[[192,[12,[183]]],[[4,[36,7]]]],[[133,153,193,[12,[193]],[12,[152]]],[[4,[36,7]]]],[[192,133,128,128],[[4,[36,7]]]],[[131,191],[[4,[36,7]]]],[[133,153,153,[12,[193]],[12,[152]]],[[4,[36,7]]]],[[133,197,191,136],[[4,[36,7]]]],[[133,153,153,193,193,[12,[193]],[12,[152]]],[[4,[36,7]]]],[[133,152],[[4,[36,7]]]],[[141,133,152,[12,[198]]],[[4,[36,7]]]],[131,[[4,[36,7]]]],[[131,[12,[199]]],[[4,[36,7]]]],[133,[[4,[36,7]]]],[197,[[4,[[33,[120]],7]]]],[[],[[4,[[33,[72]],7]]]],[191,[[4,[[33,[102]],7]]]],[[22,22],[[4,[[33,[105]],7]]]],[[131,131],[[4,[36,7]]]],[[133,134,134,[12,[198]]],[[4,[36,7]]]],[[133,[12,[16]],[12,[193]]],[[4,[36,7]]]],[[133,179],[[4,[36,7]]]],[[141,133,133,191,134,134,[12,[156]]],[[4,[36,7]]]],[[141,133,133,191,134,134,[12,[153]]],[[4,[36,7]]]],[[141,133,133,191,134,134,[12,[153]]],[[4,[36,7]]]],[[141,133,133,191,134,134,[12,[155]]],[[4,[36,7]]]],[[136,[61,[[2,[145]]]]],136],[[137,[61,[[2,[145]]]]],137],0,0,0,0,0,0,0,0,[146,[[200,[16]]]],[147,[[200,[16]]]],[148,[[200,[16]]]],[149,[[31,[16,63]]]],[150,[[31,[16,63]]]],[151,[[200,[16]]]],[152,[[200,[16]]]],[153,[[200,[16]]]],[154,[[200,[16]]]],[155,[[200,[16]]]],[156,[[200,[16]]]],[132,[[200,[16]]]],[[157,16]],[[157,16]],[[158,16]],[[158,16]],[[159,16]],[[159,16]],[[160,16]],[[160,16]],[[161,16]],[[161,16]],[[162,16]],[[162,16]],[[163,16]],[[163,16]],[[164,16]],[[164,16]],[[165,16]],[[165,16]],[[166,16]],[[166,16]],[[167,16]],[[167,16]],[[168,16]],[[168,16]],[[169,16]],[[169,16]],[[170,16]],[[170,16]],[[171,16]],[[171,16]],[[172,16]],[[172,16]],[[173,16]],[[173,16]],[[174,16]],[[174,16]],[[175,16]],[[175,16]],[[176,16]],[[176,16]],[[177,16]],[[177,16]],[[178,16]],[[178,16]],[179,[[200,[16]]]],[[180,16]],[[180,16]],[[181,16]],[[181,16]],[[182,16]],[[182,16]],[183,[[200,[16]]]],[[184,16]],[[184,16]],[185,[[200,[16]]]],[135,[[200,[16]]]],[[186,16]],[[186,16]],[[187,16]],[[187,16]],[[188,16]],[[188,16]],[[189,16]],[[189,16]],[[190,16]],[[190,16]],[[146,[31,[16,63]]]],[[147,[31,[16,63]]]],[[148,[31,[16,63]]]],[[149,[31,[16,63]]]],[[150,[31,[16,63]]]],[[151,[31,[16,63]]]],[[152,[31,[16,63]]]],[[153,[31,[16,63]]]],[[154,[31,[16,63]]]],[[155,[31,[16,63]]]],[[156,[31,[16,63]]]],[[132,[31,[16,63]]]],[[179,[31,[16,63]]]],[[183,[31,[16,63]]]],[[185,[31,[16,63]]]],[[135,[31,[16,63]]]],[[[0,[10,43]],133,134,134,[12,[198]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],133,[12,[16]],[12,[193]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],133,179],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[136,[61,[[2,[201]]]]],136],[[137,[61,[[2,[201]]]]],137],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[0,[10,43]],141,133,133,191,134,134,[12,[156]]],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,[[[0,[10,43]],141,133,133,191,134,134,[12,[153]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],141,133,133,191,134,134,[12,[153]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],141,133,133,191,134,134,[12,[155]]],[[4,[[36,[[0,[10,43]]]],7]]]],0,[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[127,[12,[16]]],[[4,[157,26]]]],[[127,[12,[16]]],[[4,[158,26]]]],[[127,[12,[16]]],[[4,[159,26]]]],[[127,[12,[16]]],[[4,[160,26]]]],[[127,[12,[16]]],[[4,[161,26]]]],[[127,[12,[16]]],[[4,[162,26]]]],[[127,[12,[16]]],[[4,[163,26]]]],[[127,[12,[16]]],[[4,[164,26]]]],[[127,[12,[16]]],[[4,[165,26]]]],[[127,[12,[16]]],[[4,[166,26]]]],[[127,[12,[16]]],[[4,[167,26]]]],[[127,[12,[16]]],[[4,[168,26]]]],[[127,[12,[16]]],[[4,[169,26]]]],[[127,[12,[16]]],[[4,[170,26]]]],[[127,[12,[16]]],[[4,[171,26]]]],[[127,[12,[16]]],[[4,[172,26]]]],[[127,[12,[16]]],[[4,[173,26]]]],[[127,[12,[16]]],[[4,[174,26]]]],[[127,[12,[16]]],[[4,[175,26]]]],[[127,[12,[16]]],[[4,[176,26]]]],[[127,[12,[16]]],[[4,[177,26]]]],[[127,[12,[16]]],[[4,[178,26]]]],[[127,[12,[16]]],[[4,[180,26]]]],[[127,[12,[16]]],[[4,[181,26]]]],[[127,[12,[16]]],[[4,[182,26]]]],[[127,[12,[16]]],[[4,[184,26]]]],[[127,[12,[16]]],[[4,[186,26]]]],[[127,[12,[16]]],[[4,[187,26]]]],[[127,[12,[16]]],[[4,[188,26]]]],[[127,[12,[16]]],[[4,[189,26]]]],[[127,[12,[16]]],[[4,[190,26]]]],0,[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[202,202],[203,203],[204,204],[205,205],[104,104],[206,206],[207,207],[208,208],[209,209],[210,210],[85,85],[211,211],[212,212],[88,88],[213,213],[76,76],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[202,202],65],[[203,203],65],[[204,204],65],[[205,205],65],[[104,104],65],[[206,206],65],[[207,207],65],[[208,208],65],[[209,209],65],[[210,210],65],[[85,85],65],[[211,211],65],[[212,212],65],[[88,88],65],[[213,213],65],[[76,76],65],[[[0,[10,43]],202,203,203,59,134,134,59],[[4,[[36,[[0,[10,43]]]],7]]]],[[],202],[[],203],[[],204],[[],205],[[],104],[[],206],[[],207],[[],208],[[],209],[[],210],[[],85],[[],211],[[],212],[[],88],[[],213],[[],76],0,0,0,0,0,0,0,0,0,0,0,0,0,[[202,202],13],[[203,203],13],[[204,204],13],[[205,205],13],[[104,104],13],[[206,206],13],[[207,207],13],[[208,208],13],[[209,209],13],[[210,210],13],[[85,85],13],[[211,211],13],[[212,212],13],[[88,88],13],[[213,213],13],[[76,76],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,[[202,19],[[4,[21]]]],[[203,19],[[4,[21]]]],[[204,19],[[4,[21]]]],[[205,19],[[4,[21]]]],[[104,19],[[4,[21]]]],[[206,19],[[4,[21]]]],[[207,19],[[4,[21]]]],[[208,19],[[4,[21]]]],[[209,19],[[4,[21]]]],[[210,19],[[4,[21]]]],[[85,19],[[4,[21]]]],[[211,19],[[4,[21]]]],[[212,19],[[4,[21]]]],[[88,19],[[4,[21]]]],[[213,19],[[4,[21]]]],[[76,19],[[4,[21]]]],[[]],[16,202],[[]],[16,203],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[10,43]],59,203],[[4,[[33,[[0,[10,43]],76]],7]]]],[[202,126]],[[203,126]],[[204,126]],[[205,126]],[[104,126]],[[206,126]],[[207,126]],[[208,126]],[[209,126]],[[210,126]],[[85,126]],[[211,126]],[[212,126]],[[88,126]],[[213,126]],[[76,126]],[[[0,[10,43]],59],[[4,[[33,[[0,[10,43]],88]],7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[206,206],0,0,0,0,0,[[[0,[10,43]],202,203,59,134,134,[61,[214]]],[[4,[[36,[[0,[10,43]]]],7]]]],0,[[[0,[10,43]],203,59,134,134],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,0,0,[[202,202],[[2,[65]]]],[[203,203],[[2,[65]]]],[[204,204],[[2,[65]]]],[[205,205],[[2,[65]]]],[[104,104],[[2,[65]]]],[[206,206],[[2,[65]]]],[[207,207],[[2,[65]]]],[[208,208],[[2,[65]]]],[[209,209],[[2,[65]]]],[[210,210],[[2,[65]]]],[[85,85],[[2,[65]]]],[[211,211],[[2,[65]]]],[[212,212],[[2,[65]]]],[[88,88],[[2,[65]]]],[[213,213],[[2,[65]]]],[[76,76],[[2,[65]]]],[[[0,[10,43]],59],[[4,[[33,[[0,[10,43]],85]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],104]],7]]]],[[[0,[10,43]],202,203,215,59,134,134,[12,[198]]],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,[76,22],0,[[[0,[10,43]],59,13],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,0,0,[[205,16]],[[205,16]],[[206,16]],[[206,16]],[[207,16]],[[207,16]],[[208,16]],[[208,16]],[[209,16]],[[209,16]],[[210,16]],[[210,16]],[[211,16]],[[211,16]],[[212,16]],[[212,16]],[[213,16]],[[213,16]],0,[[202,203,203,59,134,134,59],[[4,[36,7]]]],[[59,203],[[4,[[33,[76]],7]]]],[59,[[4,[[33,[88]],7]]]],0,[[202,203,59,134,134,[61,[214]]],[[4,[36,7]]]],[[203,59,134,134],[[4,[36,7]]]],[59,[[4,[[33,[85]],7]]]],[[],[[4,[[33,[104]],7]]]],[[202,203,215,59,134,134,[12,[198]]],[[4,[36,7]]]],[[59,13],[[4,[36,7]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[127,[12,[16]]],[[4,[205,26]]]],[[127,[12,[16]]],[[4,[206,26]]]],[[127,[12,[16]]],[[4,[207,26]]]],[[127,[12,[16]]],[[4,[208,26]]]],[[127,[12,[16]]],[[4,[209,26]]]],[[127,[12,[16]]],[[4,[210,26]]]],[[127,[12,[16]]],[[4,[211,26]]]],[[127,[12,[16]]],[[4,[212,26]]]],[[127,[12,[16]]],[[4,[213,26]]]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[216,216],[117,117],[217,217],[69,69],[218,218],[115,115],[[]],[[]],[[]],[[]],[[]],[[]],[[216,216],65],[[117,117],65],[[217,217],65],[[69,69],65],[[218,218],65],[[115,115],65],0,0,[[],216],[[],117],[[],217],[[],69],[[],218],[[],115],[[216,216],13],[[117,117],13],[[217,217],13],[[69,69],13],[[218,218],13],[[115,115],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[216,19],[[4,[21]]]],[[117,19],[[4,[21]]]],[[217,19],[[4,[21]]]],[[69,19],[[4,[21]]]],[[218,19],[[4,[21]]]],[[115,19],[[4,[21]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[10,43]],128,128],[[4,[[33,[[0,[10,43]],117]],7]]]],[[[0,[10,43]],22],[[4,[[33,[[0,[10,43]],115]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],69]],7]]]],[[216,126]],[[117,126]],[[217,126]],[[69,126]],[[218,126]],[[115,126]],0,[115,22],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[216,216],[[2,[65]]]],[[117,117],[[2,[65]]]],[[217,217],[[2,[65]]]],[[69,69],[[2,[65]]]],[[218,218],[[2,[65]]]],[[115,115],[[2,[65]]]],0,0,0,[[216,16]],[[216,16]],[[217,16]],[[217,16]],[[218,16]],[[218,16]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[127,[12,[16]]],[[4,[216,26]]]],[[127,[12,[16]]],[[4,[217,26]]]],[[127,[12,[16]]],[[4,[218,26]]]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[128,128],[[4,[[33,[117]],7]]]],[22,[[4,[[33,[115]],7]]]],[[],[[4,[[33,[69]],7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[219,16]],[[219,219]],[[220,16]],[[220,220]],[[221,16]],[[221,221]],[[219,16]],[[220,16]],[[221,16]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[0,[10,43]],192,192],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],192,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],222,223,224,59],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,[225,225],[78,78],[222,222],[223,223],[224,224],[226,226],[227,227],[219,219],[228,228],[229,229],[230,230],[220,220],[231,231],[232,232],[233,233],[96,96],[234,234],[235,235],[236,236],[237,237],[238,238],[239,239],[240,240],[241,241],[242,242],[243,243],[244,244],[245,245],[246,246],[247,247],[248,248],[249,249],[124,124],[250,250],[251,251],[252,252],[253,253],[254,254],[86,86],[255,255],[93,93],[256,256],[257,257],[258,258],[259,259],[260,260],[221,221],[261,261],[262,262],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[225,225],65],[[78,78],65],[[222,222],65],[[223,223],65],[[224,224],65],[[226,226],65],[[227,227],65],[[219,219],65],[[228,228],65],[[229,229],65],[[230,230],65],[[220,220],65],[[231,231],65],[[232,232],65],[[233,233],65],[[96,96],65],[[234,234],65],[[235,235],65],[[236,236],65],[[237,237],65],[[238,238],65],[[239,239],65],[[240,240],65],[[241,241],65],[[242,242],65],[[243,243],65],[[244,244],65],[[245,245],65],[[246,246],65],[[247,247],65],[[248,248],65],[[249,249],65],[[124,124],65],[[250,250],65],[[251,251],65],[[252,252],65],[[253,253],65],[[254,254],65],[[86,86],65],[[255,255],65],[[93,93],65],[[256,256],65],[[257,257],65],[[258,258],65],[[259,259],65],[[260,260],65],[[221,221],65],[[261,261],65],[[262,262],65],[[[0,[10,43]],263,263],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],264,59,128,128,128,128,[61,[22]],[12,[128]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],263,[12,[198]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,[12,[198]]],[[4,[[265,[194]],23]]]],[[194,[12,[198]]],[[4,[23]]]],[[[0,[10,43]],263,214],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,214],[[4,[[265,[194]],23]]]],[[194,214],[[4,[23]]]],[[[0,[10,43]],263,266],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,266],[[4,[[265,[194]],23]]]],[[194,266],[[4,[23]]]],[[[0,[10,43]],263,133],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,133],[[4,[[265,[194]],23]]]],[[194,133],[[4,[23]]]],[[[0,[10,43]],263,59,203],[[4,[[36,[[0,[10,43]]]],7]]]],[[194,59,203],[[4,[[265,[194]],23]]]],[[194,59,203],[[4,[23]]]],0,0,0,0,0,0,0,0,[[],225],[[],78],[[],222],[[],223],[[],224],[[],226],[[],227],[[],219],[[],228],[[],229],[[],230],[[],220],[[],231],[[],232],[[],233],[[],96],[[],234],[[],235],[[],236],[[],237],[[],238],[[],239],[[],240],[[],241],[[],242],[[],243],[[],244],[[],245],[[],246],[[],247],[[],248],[[],249],[[],124],[[],250],[[],251],[[],252],[[],253],[[],254],[[],86],[[],255],[[],93],[[],256],[[],257],[[],258],[[],259],[[],260],[[],221],[[],261],[[],262],[[[0,[10,43]],264],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,0,0,0,0,0,0,0,[[[0,[10,43]],263],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,[[[265,[10]]]],0,0,[[225,225],13],[[78,78],13],[[222,222],13],[[223,223],13],[[224,224],13],[[226,226],13],[[227,227],13],[[219,219],13],[[228,228],13],[[229,229],13],[[230,230],13],[[220,220],13],[[231,231],13],[[232,232],13],[[233,233],13],[[96,96],13],[[234,234],13],[[235,235],13],[[236,236],13],[[237,237],13],[[238,238],13],[[239,239],13],[[240,240],13],[[241,241],13],[[242,242],13],[[243,243],13],[[244,244],13],[[245,245],13],[[246,246],13],[[247,247],13],[[248,248],13],[[249,249],13],[[124,124],13],[[250,250],13],[[251,251],13],[[252,252],13],[[253,253],13],[[254,254],13],[[86,86],13],[[255,255],13],[[93,93],13],[[256,256],13],[[257,257],13],[[258,258],13],[[259,259],13],[[260,260],13],[[221,221],13],[[261,261],13],[[262,262],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,[[[0,[10,43]],263,263,128,128,128,128],[[4,[[36,[[0,[10,43]]]],7]]]],0,[[[0,[10,43]],263],[[4,[[33,[[0,[10,43]],124]],7]]]],[[[265,[[0,[15,10]]]],19],20],[[225,19],[[4,[21]]]],[[78,19],[[4,[21]]]],[[222,19],[[4,[21]]]],[[223,19],[[4,[21]]]],[[224,19],[[4,[21]]]],[[226,19],[[4,[21]]]],[[227,19],[[4,[21]]]],[[219,19],[[4,[21]]]],[[228,19],[[4,[21]]]],[[229,19],[[4,[21]]]],[[230,19],[[4,[21]]]],[[220,19],[[4,[21]]]],[[231,19],[[4,[21]]]],[[232,19],[[4,[21]]]],[[233,19],[[4,[21]]]],[[96,19],[[4,[21]]]],[[234,19],[[4,[21]]]],[[235,19],[[4,[21]]]],[[236,19],[[4,[21]]]],[[237,19],[[4,[21]]]],[[238,19],[[4,[21]]]],[[239,19],[[4,[21]]]],[[240,19],[[4,[21]]]],[[241,19],[[4,[21]]]],[[242,19],[[4,[21]]]],[[243,19],[[4,[21]]]],[[244,19],[[4,[21]]]],[[245,19],[[4,[21]]]],[[246,19],[[4,[21]]]],[[247,19],[[4,[21]]]],[[248,19],[[4,[21]]]],[[249,19],[[4,[21]]]],[[124,19],[[4,[21]]]],[[250,19],[[4,[21]]]],[[251,19],[[4,[21]]]],[[252,19],[[4,[21]]]],[[253,19],[[4,[21]]]],[[254,19],[[4,[21]]]],[[86,19],[[4,[21]]]],[[255,19],[[4,[21]]]],[[93,19],[[4,[21]]]],[[256,19],[[4,[21]]]],[[257,19],[[4,[21]]]],[[258,19],[[4,[21]]]],[[259,19],[[4,[21]]]],[[260,19],[[4,[21]]]],[[221,19],[[4,[21]]]],[[261,19],[[4,[21]]]],[[262,19],[[4,[21]]]],[[10,263],[[265,[10]]]],[[]],[[[265,[10]]],263],[[]],[[]],[[]],[16,222],[[]],[16,223],[[]],[16,224],[[]],[[]],[16,227],[16,219],[[]],[[]],[[]],[16,230],[[]],[16,220],[[]],[[]],[[]],[[]],[[]],[[]],[16,234],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,221],[[]],[[]],0,0,[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],96]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],93]],7]]]],[[[0,[10,43]],192],[[4,[[33,[[0,[10,43]],86]],7]]]],[[225,126]],[[78,126]],[[222,126]],[[223,126]],[[224,126]],[[226,126]],[[227,126]],[[219,126]],[[228,126]],[[229,126]],[[230,126]],[[220,126]],[[231,126]],[[232,126]],[[233,126]],[[96,126]],[[234,126]],[[235,126]],[[236,126]],[[237,126]],[[238,126]],[[239,126]],[[240,126]],[[241,126]],[[242,126]],[[243,126]],[[244,126]],[[245,126]],[[246,126]],[[247,126]],[[248,126]],[[249,126]],[[124,126]],[[250,126]],[[251,126]],[[252,126]],[[253,126]],[[254,126]],[[86,126]],[[255,126]],[[93,126]],[[256,126]],[[257,126]],[[258,126]],[[259,126]],[[260,126]],[[221,126]],[[261,126]],[[262,126]],0,0,[[[0,[10,43]],59],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],263,263,263],[[4,[[36,[[0,[10,43]]]],7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[235,235],[241,241],[253,253],[257,257],[261,261],[[[265,[10]]],263],[[[0,[10,43]],263,198,263],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,[124,22],0,0,0,0,0,0,0,0,0,0,0,0,0,[86,128],[93,128],0,[[225,225],[[2,[65]]]],[[78,78],[[2,[65]]]],[[222,222],[[2,[65]]]],[[223,223],[[2,[65]]]],[[224,224],[[2,[65]]]],[[226,226],[[2,[65]]]],[[227,227],[[2,[65]]]],[[219,219],[[2,[65]]]],[[228,228],[[2,[65]]]],[[229,229],[[2,[65]]]],[[230,230],[[2,[65]]]],[[220,220],[[2,[65]]]],[[231,231],[[2,[65]]]],[[232,232],[[2,[65]]]],[[233,233],[[2,[65]]]],[[96,96],[[2,[65]]]],[[234,234],[[2,[65]]]],[[235,235],[[2,[65]]]],[[236,236],[[2,[65]]]],[[237,237],[[2,[65]]]],[[238,238],[[2,[65]]]],[[239,239],[[2,[65]]]],[[240,240],[[2,[65]]]],[[241,241],[[2,[65]]]],[[242,242],[[2,[65]]]],[[243,243],[[2,[65]]]],[[244,244],[[2,[65]]]],[[245,245],[[2,[65]]]],[[246,246],[[2,[65]]]],[[247,247],[[2,[65]]]],[[248,248],[[2,[65]]]],[[249,249],[[2,[65]]]],[[124,124],[[2,[65]]]],[[250,250],[[2,[65]]]],[[251,251],[[2,[65]]]],[[252,252],[[2,[65]]]],[[253,253],[[2,[65]]]],[[254,254],[[2,[65]]]],[[86,86],[[2,[65]]]],[[255,255],[[2,[65]]]],[[93,93],[[2,[65]]]],[[256,256],[[2,[65]]]],[[257,257],[[2,[65]]]],[[258,258],[[2,[65]]]],[[259,259],[[2,[65]]]],[[260,260],[[2,[65]]]],[[221,221],[[2,[65]]]],[[261,261],[[2,[65]]]],[[262,262],[[2,[65]]]],0,0,[[[0,[10,43]],22,22],[[4,[[33,[[0,[10,43]],78]],7]]]],0,0,0,[[[265,[10]]],263],0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[10,43]],263,263],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,[[[0,[10,43]],59,[61,[22]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],59,60,[61,[22]]],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,0,0,0,0,0,0,0,[[225,16]],[[225,16]],[[226,16]],[[226,16]],[[229,16]],[[229,16]],[[232,16]],[[232,16]],[[233,16]],[[233,16]],[[235,16]],[[235,16]],[[236,16]],[[236,16]],[[237,16]],[[237,16]],[[238,16]],[[238,16]],[[239,16]],[[239,16]],[[240,16]],[[240,16]],[[241,16]],[[241,16]],[[242,16]],[[242,16]],[[243,16]],[[243,16]],[[244,16]],[[244,16]],[[245,16]],[[245,16]],[[246,16]],[[246,16]],[[247,16]],[[247,16]],[[248,16]],[[248,16]],[[249,16]],[[249,16]],[[250,16]],[[250,16]],[[251,16]],[[251,16]],[[252,16]],[[252,16]],[[253,16]],[[253,16]],[[254,16]],[[254,16]],[[255,16]],[[255,16]],[[256,16]],[[256,16]],[[257,16]],[[257,16]],[[258,16]],[[258,16]],[[259,16]],[[259,16]],[[260,16]],[[260,16]],[[261,16]],[[261,16]],[[262,16]],[[262,16]],[[[0,[10,43]],192,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],266,[61,[263]],134,134],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],133,[61,[263]],134,134],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],263,[12,[198]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],59,203,134,134,[61,[263]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[0,[10,43]],59],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[10,43]],263,263,263],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[0,[10,43]],263,134,134],[[4,[[36,[[0,[10,43]]]],7]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[127,[12,[16]]],[[4,[225,26]]]],[[127,[12,[16]]],[[4,[226,26]]]],[[127,[12,[16]]],[[4,[229,26]]]],[[127,[12,[16]]],[[4,[232,26]]]],[[127,[12,[16]]],[[4,[233,26]]]],[[127,[12,[16]]],[[4,[235,26]]]],[[127,[12,[16]]],[[4,[236,26]]]],[[127,[12,[16]]],[[4,[237,26]]]],[[127,[12,[16]]],[[4,[238,26]]]],[[127,[12,[16]]],[[4,[239,26]]]],[[127,[12,[16]]],[[4,[240,26]]]],[[127,[12,[16]]],[[4,[241,26]]]],[[127,[12,[16]]],[[4,[242,26]]]],[[127,[12,[16]]],[[4,[243,26]]]],[[127,[12,[16]]],[[4,[244,26]]]],[[127,[12,[16]]],[[4,[245,26]]]],[[127,[12,[16]]],[[4,[246,26]]]],[[127,[12,[16]]],[[4,[247,26]]]],[[127,[12,[16]]],[[4,[248,26]]]],[[127,[12,[16]]],[[4,[249,26]]]],[[127,[12,[16]]],[[4,[250,26]]]],[[127,[12,[16]]],[[4,[251,26]]]],[[127,[12,[16]]],[[4,[252,26]]]],[[127,[12,[16]]],[[4,[253,26]]]],[[127,[12,[16]]],[[4,[254,26]]]],[[127,[12,[16]]],[[4,[255,26]]]],[[127,[12,[16]]],[[4,[256,26]]]],[[127,[12,[16]]],[[4,[257,26]]]],[[127,[12,[16]]],[[4,[258,26]]]],[[127,[12,[16]]],[[4,[259,26]]]],[[127,[12,[16]]],[[4,[260,26]]]],[[127,[12,[16]]],[[4,[261,26]]]],[[127,[12,[16]]],[[4,[262,26]]]],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[[0,[10,43]],263,263,263],[[4,[[36,[[0,[10,43]]]],7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[192,192],[[4,[36,7]]]],[[192,[12,[16]]],[[4,[36,7]]]],[[222,223,224,59],[[4,[36,7]]]],[[263,263],[[4,[36,7]]]],[[264,59,128,128,128,128,[61,[22]],[12,[128]]],[[4,[36,7]]]],[[263,[12,[198]]],[[4,[36,7]]]],[[263,214],[[4,[36,7]]]],[[263,266],[[4,[36,7]]]],[[263,133],[[4,[36,7]]]],[[263,59,203],[[4,[36,7]]]],[264,[[4,[36,7]]]],[263,[[4,[36,7]]]],[[263,263,128,128,128,128],[[4,[36,7]]]],[263,[[4,[[33,[124]],7]]]],[[],[[4,[[33,[96]],7]]]],[[],[[4,[[33,[93]],7]]]],[192,[[4,[[33,[86]],7]]]],[59,[[4,[36,7]]]],[[263,263,263],[[4,[36,7]]]],[[263,198,263],[[4,[36,7]]]],[[22,22],[[4,[[33,[78]],7]]]],[[263,263],[[4,[36,7]]]],[[59,[61,[22]]],[[4,[36,7]]]],[[59,60,[61,[22]]],[[4,[36,7]]]],[[192,[12,[16]]],[[4,[36,7]]]],[[266,[61,[263]],134,134],[[4,[36,7]]]],[[133,[61,[263]],134,134],[[4,[36,7]]]],[[263,[12,[198]]],[[4,[36,7]]]],[[59,203,134,134,[61,[263]]],[[4,[36,7]]]],[59,[[4,[36,7]]]],[[263,263,263],[[4,[36,7]]]],[[263,134,134],[[4,[36,7]]]],[[263,263,263],[[4,[36,7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[267,128],0,0,0,0,[[[0,[10,43]],268,128,128,128],[[4,[[33,[[0,[10,43]],80]],7]]]],[[268,128,128,128],[[4,[[33,[80]],7]]]],[[[0,[10,43]],13,268,128,128],[[4,[[33,[[0,[10,43]],108]],7]]]],[[13,268,128,128],[[4,[[33,[108]],7]]]],[[[0,[10,43]],13,268,128,128,128,128],[[4,[[33,[[0,[10,43]],107]],7]]]],[[13,268,128,128,128,128],[[4,[[33,[107]],7]]]],[[[0,[10,43]],268,[12,[16]]],[[4,[[33,[[0,[10,43]],103]],7]]]],[[268,[12,[16]]],[[4,[[33,[103]],7]]]],[[[0,[10,43]],269,[61,[270]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[269,[61,[270]]],[[4,[36,7]]]],0,0,0,[271,16],0,0,[[272,[61,[[2,[273]]]]],272],[[274,[61,[[2,[273]]]]],274],0,0,0,0,[275,[[200,[128]]]],[275,[[200,[22]]]],[275,[[200,[16]]]],0,0,0,0,0,0,[81,128],0,0,[276,128],0,[276,128],[[277,[61,[[2,[278]]]]],277],0,0,0,0,0,0,0,0,0,0,0,[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,0,[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,0,[[279,[61,[[2,[281]]]]],279],[[280,[61,[[2,[281]]]]],280],0,0,0,0,[[[0,[10,43]],282],[[4,[[36,[[0,[10,43]]]],7]]]],[282,[[4,[36,7]]]],[[277,[61,[[2,[62]]]]],277],0,0,[[277,[61,[[2,[62]]]]],277],0,0,[[277,[61,[[2,[62]]]]],277],0,0,[[279,[61,[[2,[283]]]]],279],[[280,[61,[[2,[283]]]]],280],0,0,0,0,0,0,0,[[284,284]],[[284,22]],[[285,285]],[[285,128]],[[286,128]],[[286,286]],[[287,287]],[[287,128]],[[288,128]],[[288,288]],[[289,16]],[[289,289]],[[290,290]],[[290,22]],[[291,291]],[[291,16]],[[292,16]],[[292,292]],[[284,22]],[[285,128]],[[286,128]],[[287,128]],[[288,128]],[[289,16]],[[290,22]],[[291,16]],[[292,16]],0,0,0,0,0,0,0,0,0,0,[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,[[293,[61,[[2,[22]]]]],293],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[272,[61,[[2,[294]]]]],272],[[274,[61,[[2,[294]]]]],274],0,0,[[[0,[10,43]],[61,[192]],[61,[270]],[61,[128]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[61,[192]],[61,[270]],[61,[128]]],[[4,[36,7]]]],[[[0,[10,43]],266,274],[[4,[[36,[[0,[10,43]]]],7]]]],[[266,274],[[4,[36,7]]]],[[[0,[10,43]],295,296,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[295,296,[12,[16]]],[[4,[36,7]]]],[[[0,[10,43]],277],[[4,[[36,[[0,[10,43]]]],7]]]],[277,[[4,[36,7]]]],[[[0,[10,43]],16,297,16,[12,[298]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[16,297,16,[12,[298]]],[[4,[36,7]]]],[[[0,[10,43]],134,134,134,13,13],[[4,[[36,[[0,[10,43]]]],7]]]],[[134,134,134,13,13],[[4,[36,7]]]],[[[0,[10,43]],299,59,[61,[60]],[61,[60]],16,22,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[299,59,[61,[60]],[61,[60]],16,22,[12,[16]]],[[4,[36,7]]]],[[[0,[10,43]],300,59],[[4,[[36,[[0,[10,43]]]],7]]]],[[300,59],[[4,[36,7]]]],[[[0,[10,43]],59,280],[[4,[[36,[[0,[10,43]]]],7]]]],[[59,280],[[4,[36,7]]]],0,[98,22],0,0,0,0,0,0,0,0,[75,128],0,0,0,[[[0,[10,43]],301,59],[[4,[[36,[[0,[10,43]]]],7]]]],[[301,59],[[4,[36,7]]]],0,0,0,0,[[[0,[10,43]],13,59,134,134,128,128],[[4,[[36,[[0,[10,43]]]],7]]]],[[13,59,134,134,128,128],[[4,[36,7]]]],[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,[[272,[61,[[2,[62]]]]],272],[[274,[61,[[2,[62]]]]],274],0,0,0,[[272,[61,[[2,[62]]]]],272],[[274,[61,[[2,[62]]]]],274],0,0,0,[302,302],[303,303],[198,198],[304,304],[305,305],[306,306],[307,307],[308,308],[284,284],[281,281],[271,271],[276,276],[309,309],[310,310],[311,311],[40,40],[285,285],[286,286],[312,312],[313,313],[287,287],[314,314],[315,315],[316,316],[317,317],[318,318],[319,319],[320,320],[321,321],[322,322],[323,323],[324,324],[325,325],[326,326],[327,327],[328,328],[329,329],[330,330],[331,331],[332,332],[333,333],[334,334],[335,335],[336,336],[337,337],[338,338],[339,339],[340,340],[341,341],[342,342],[343,343],[344,344],[345,345],[346,346],[347,347],[348,348],[275,275],[349,349],[350,350],[351,351],[352,352],[353,353],[288,288],[354,354],[283,283],[279,279],[355,355],[280,280],[356,356],[357,357],[358,358],[73,73],[359,359],[360,360],[300,300],[361,361],[362,362],[363,363],[364,364],[365,365],[366,366],[289,289],[367,367],[293,293],[368,368],[301,301],[369,369],[370,370],[100,100],[371,371],[75,75],[372,372],[118,118],[373,373],[87,87],[299,299],[374,374],[375,375],[376,376],[377,377],[58,58],[378,378],[81,81],[379,379],[380,380],[97,97],[381,381],[382,382],[383,383],[384,384],[385,385],[386,386],[387,387],[70,70],[388,388],[389,389],[390,390],[391,391],[392,392],[393,393],[110,110],[394,394],[395,395],[396,396],[397,397],[269,269],[398,398],[399,399],[400,400],[401,401],[94,94],[402,402],[403,403],[121,121],[404,404],[119,119],[405,405],[406,406],[407,407],[408,408],[82,82],[409,409],[116,116],[410,410],[411,411],[412,412],[413,413],[414,414],[415,415],[98,98],[416,416],[83,83],[417,417],[418,418],[71,71],[419,419],[84,84],[420,420],[421,421],[95,95],[422,422],[423,423],[290,290],[424,424],[425,425],[294,294],[426,426],[427,427],[428,428],[201,201],[273,273],[272,272],[429,429],[274,274],[430,430],[431,431],[432,432],[215,215],[433,433],[434,434],[435,435],[436,436],[437,437],[438,438],[439,439],[440,440],[441,441],[442,442],[443,443],[444,444],[445,445],[446,446],[447,447],[448,448],[449,449],[450,450],[451,451],[122,122],[452,452],[453,453],[454,454],[455,455],[456,456],[457,457],[458,458],[459,459],[460,460],[461,461],[462,462],[90,90],[463,463],[80,80],[464,464],[103,103],[465,465],[108,108],[466,466],[107,107],[467,467],[291,291],[468,468],[469,469],[470,470],[471,471],[472,472],[91,91],[473,473],[79,79],[474,474],[475,475],[476,476],[477,477],[478,478],[479,479],[480,480],[481,481],[74,74],[482,482],[123,123],[483,483],[111,111],[484,484],[485,485],[68,68],[292,292],[486,486],[278,278],[277,277],[487,487],[488,488],[106,106],[489,489],[490,490],[491,491],[92,92],[492,492],[493,493],[494,494],[495,495],[99,99],[295,295],[296,296],[496,496],[267,267],[497,497],[101,101],[498,498],[499,499],[500,500],[501,501],[502,502],[503,503],[504,504],[505,505],[506,506],[507,507],[508,508],[113,113],[509,509],[112,112],[510,510],[511,511],[109,109],[512,512],[77,77],[513,513],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[10,43]],514],[[4,[[36,[[0,[10,43]]]],7]]]],[514,[[4,[36,7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[90,128],[[302,302],65],[[303,303],65],[[198,198],65],[[304,304],65],[[305,305],65],[[306,306],65],[[307,307],65],[[308,308],65],[[284,284],65],[[281,281],65],[[271,271],65],[[276,276],65],[[309,309],65],[[310,310],65],[[311,311],65],[[40,40],65],[[285,285],65],[[286,286],65],[[312,312],65],[[313,313],65],[[287,287],65],[[314,314],65],[[315,315],65],[[316,316],65],[[317,317],65],[[318,318],65],[[319,319],65],[[320,320],65],[[321,321],65],[[322,322],65],[[323,323],65],[[324,324],65],[[325,325],65],[[326,326],65],[[327,327],65],[[328,328],65],[[329,329],65],[[330,330],65],[[331,331],65],[[332,332],65],[[333,333],65],[[334,334],65],[[335,335],65],[[336,336],65],[[337,337],65],[[338,338],65],[[339,339],65],[[340,340],65],[[341,341],65],[[342,342],65],[[343,343],65],[[344,344],65],[[345,345],65],[[346,346],65],[[347,347],65],[[348,348],65],[[350,350],65],[[351,351],65],[[352,352],65],[[353,353],65],[[288,288],65],[[354,354],65],[[283,283],65],[[279,279],65],[[355,355],65],[[280,280],65],[[356,356],65],[[357,357],65],[[358,358],65],[[73,73],65],[[359,359],65],[[360,360],65],[[300,300],65],[[361,361],65],[[362,362],65],[[363,363],65],[[364,364],65],[[365,365],65],[[366,366],65],[[289,289],65],[[367,367],65],[[293,293],65],[[368,368],65],[[301,301],65],[[369,369],65],[[370,370],65],[[100,100],65],[[371,371],65],[[75,75],65],[[372,372],65],[[118,118],65],[[373,373],65],[[87,87],65],[[299,299],65],[[374,374],65],[[375,375],65],[[376,376],65],[[377,377],65],[[58,58],65],[[378,378],65],[[81,81],65],[[379,379],65],[[380,380],65],[[97,97],65],[[381,381],65],[[382,382],65],[[383,383],65],[[384,384],65],[[385,385],65],[[386,386],65],[[387,387],65],[[70,70],65],[[388,388],65],[[389,389],65],[[390,390],65],[[391,391],65],[[392,392],65],[[393,393],65],[[110,110],65],[[394,394],65],[[395,395],65],[[396,396],65],[[397,397],65],[[269,269],65],[[398,398],65],[[399,399],65],[[400,400],65],[[401,401],65],[[94,94],65],[[402,402],65],[[403,403],65],[[121,121],65],[[404,404],65],[[119,119],65],[[405,405],65],[[406,406],65],[[407,407],65],[[408,408],65],[[82,82],65],[[409,409],65],[[116,116],65],[[410,410],65],[[411,411],65],[[412,412],65],[[413,413],65],[[414,414],65],[[415,415],65],[[98,98],65],[[416,416],65],[[83,83],65],[[417,417],65],[[418,418],65],[[71,71],65],[[419,419],65],[[84,84],65],[[420,420],65],[[421,421],65],[[95,95],65],[[422,422],65],[[423,423],65],[[290,290],65],[[424,424],65],[[425,425],65],[[294,294],65],[[426,426],65],[[427,427],65],[[428,428],65],[[201,201],65],[[273,273],65],[[272,272],65],[[429,429],65],[[274,274],65],[[430,430],65],[[431,431],65],[[432,432],65],[[215,215],65],[[433,433],65],[[434,434],65],[[435,435],65],[[436,436],65],[[437,437],65],[[438,438],65],[[439,439],65],[[440,440],65],[[441,441],65],[[442,442],65],[[443,443],65],[[444,444],65],[[445,445],65],[[446,446],65],[[447,447],65],[[448,448],65],[[449,449],65],[[450,450],65],[[451,451],65],[[122,122],65],[[452,452],65],[[453,453],65],[[454,454],65],[[455,455],65],[[456,456],65],[[457,457],65],[[458,458],65],[[459,459],65],[[460,460],65],[[461,461],65],[[462,462],65],[[90,90],65],[[463,463],65],[[80,80],65],[[464,464],65],[[103,103],65],[[465,465],65],[[108,108],65],[[466,466],65],[[107,107],65],[[467,467],65],[[291,291],65],[[468,468],65],[[469,469],65],[[470,470],65],[[471,471],65],[[472,472],65],[[91,91],65],[[473,473],65],[[79,79],65],[[474,474],65],[[475,475],65],[[476,476],65],[[477,477],65],[[478,478],65],[[479,479],65],[[480,480],65],[[481,481],65],[[74,74],65],[[482,482],65],[[123,123],65],[[483,483],65],[[111,111],65],[[484,484],65],[[485,485],65],[[68,68],65],[[292,292],65],[[486,486],65],[[278,278],65],[[277,277],65],[[487,487],65],[[488,488],65],[[106,106],65],[[489,489],65],[[490,490],65],[[491,491],65],[[92,92],65],[[492,492],65],[[493,493],65],[[494,494],65],[[495,495],65],[[99,99],65],[[295,295],65],[[296,296],65],[[496,496],65],[[267,267],65],[[497,497],65],[[101,101],65],[[498,498],65],[[499,499],65],[[500,500],65],[[501,501],65],[[502,502],65],[[503,503],65],[[504,504],65],[[505,505],65],[[506,506],65],[[507,507],65],[[508,508],65],[[113,113],65],[[509,509],65],[[112,112],65],[[510,510],65],[[511,511],65],[[109,109],65],[[512,512],65],[[77,77],65],[[513,513],65],[[[515,[10]]],268],[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,0,0,0,0,0,0,[91,128],[[[0,[10,43]],59,293],[[4,[[36,[[0,[10,43]]]],7]]]],[[59,293],[[4,[36,7]]]],0,0,0,0,[[[0,[10,43]],59,60,60,[61,[60]],[61,[270]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[59,60,60,[61,[60]],[61,[270]]],[[4,[36,7]]]],0,0,0,[[[0,[10,43]],197,197,266,134,134,134,134,128,128],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,197,266,134,134,134,134,128,128],[[4,[36,7]]]],[[[0,[10,43]],268,268],[[4,[[36,[[0,[10,43]]]],7]]]],[[268,268],[[4,[36,7]]]],[[[0,[10,43]],266,266,[61,[22]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[266,266,[61,[22]]],[[4,[36,7]]]],[[[0,[10,43]],197,197,266,134,134,134,134,128,128,22],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,197,266,134,134,134,134,128,128,22],[[4,[36,7]]]],0,0,0,0,[[[0,[10,43]],456,268,59,516],[[4,[[36,[[0,[10,43]]]],7]]]],[[456,268,59,516],[[4,[36,7]]]],[[194,456,59,516],[[4,[[515,[194]],23]]]],[[194,456,59,516],[[4,[23]]]],[[[0,[10,43]],192,214,[61,[214]],128,128,128,128,128,128,128,128],[[4,[[36,[[0,[10,43]]]],7]]]],[[192,214,[61,[214]],128,128,128,128,128,128,128,128],[[4,[36,7]]]],[[194,214,[61,[214]],128,128,128,128,128,128,128,128],[[4,[[517,[194]],23]]]],[[194,214,[61,[214]],128,128,128,128,128,128,128,128],[[4,[23]]]],[[[0,[10,43]],266,197,272],[[4,[[36,[[0,[10,43]]]],7]]]],[[266,197,272],[[4,[36,7]]]],[[194,197,272],[[4,[[518,[194]],23]]]],[[194,197,272],[[4,[23]]]],[[[0,[10,43]],192,514,[61,[514]],128,128,128,128,128,128,128,128],[[4,[[36,[[0,[10,43]]]],7]]]],[[192,514,[61,[514]],128,128,128,128,128,128,128,128],[[4,[36,7]]]],[[194,514,[61,[514]],128,128,128,128,128,128,128,128],[[4,[[517,[194]],23]]]],[[194,514,[61,[514]],128,128,128,128,128,128,128,128],[[4,[23]]]],[[[0,[10,43]],16,214,197,128,128],[[4,[[36,[[0,[10,43]]]],7]]]],[[16,214,197,128,128],[[4,[36,7]]]],[[194,16,197,128,128],[[4,[[519,[194]],23]]]],[[194,16,197,128,128],[[4,[23]]]],[[[0,[10,43]],16,59,59,134,134,128,128,128,353,516,279],[[4,[[36,[[0,[10,43]]]],7]]]],[[16,59,59,134,134,128,128,128,353,516,279],[[4,[36,7]]]],[[194,16,59,134,134,128,128,128,353,516,279],[[4,[[520,[194]],23]]]],[[194,16,59,134,134,128,128,128,353,516,279],[[4,[23]]]],0,[[[517,[10]]],192],[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,0,0,0,0,0,[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,0,[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,0,0,0,0,0,0,[[],302],[[],303],[[],198],[[],304],[[],305],[[],306],[[],307],[[],308],[[],284],[[],281],[[],271],[[],276],[[],309],[[],310],[[],311],[[],40],[[],285],[[],286],[[],312],[[],313],[[],287],[[],314],[[],315],[[],316],[[],317],[[],318],[[],319],[[],320],[[],321],[[],322],[[],323],[[],324],[[],325],[[],326],[[],327],[[],328],[[],329],[[],330],[[],331],[[],332],[[],333],[[],334],[[],335],[[],336],[[],337],[[],338],[[],339],[[],340],[[],341],[[],342],[[],343],[[],344],[[],345],[[],346],[[],347],[[],348],[[],350],[[],351],[[],352],[[],353],[[],288],[[],354],[[],283],[[],279],[[],355],[[],280],[[],356],[[],357],[[],358],[[],73],[[],359],[[],360],[[],300],[[],361],[[],362],[[],363],[[],364],[[],365],[[],366],[[],289],[[],367],[[],293],[[],368],[[],301],[[],369],[[],370],[[],100],[[],371],[[],75],[[],372],[[],118],[[],373],[[],87],[[],299],[[],374],[[],375],[[],376],[[],377],[[],58],[[],378],[[],81],[[],379],[[],380],[[],97],[[],381],[[],382],[[],383],[[],384],[[],385],[[],386],[[],387],[[],70],[[],388],[[],389],[[],390],[[],391],[[],392],[[],393],[[],110],[[],394],[[],395],[[],396],[[],397],[[],269],[[],398],[[],399],[[],400],[[],401],[[],94],[[],402],[[],403],[[],121],[[],404],[[],119],[[],405],[[],406],[[],407],[[],408],[[],82],[[],409],[[],116],[[],410],[[],411],[[],412],[[],413],[[],414],[[],415],[[],98],[[],416],[[],83],[[],417],[[],418],[[],71],[[],419],[[],84],[[],420],[[],421],[[],95],[[],422],[[],423],[[],290],[[],424],[[],425],[[],294],[[],426],[[],427],[[],428],[[],201],[[],273],[[],272],[[],429],[[],274],[[],430],[[],431],[[],432],[[],215],[[],433],[[],434],[[],435],[[],436],[[],437],[[],438],[[],439],[[],440],[[],441],[[],442],[[],443],[[],444],[[],445],[[],446],[[],447],[[],448],[[],449],[[],450],[[],451],[[],122],[[],452],[[],453],[[],454],[[],455],[[],456],[[],457],[[],458],[[],459],[[],460],[[],461],[[],462],[[],90],[[],463],[[],80],[[],464],[[],103],[[],465],[[],108],[[],466],[[],107],[[],467],[[],291],[[],468],[[],469],[[],470],[[],471],[[],472],[[],91],[[],473],[[],79],[[],474],[[],475],[[],476],[[],477],[[],478],[[],479],[[],480],[[],481],[[],74],[[],482],[[],123],[[],483],[[],111],[[],484],[[],485],[[],68],[[],292],[[],486],[[],278],[[],277],[[],487],[[],488],[[],106],[[],489],[[],490],[[],491],[[],92],[[],492],[[],493],[[],494],[[],495],[[],99],[[],295],[[],296],[[],496],[[],267],[[],497],[[],101],[[],498],[[],499],[[],500],[[],501],[[],502],[[],503],[[],504],[[],505],[[],506],[[],507],[[],508],[[],113],[[],509],[[],112],[[],510],[[],511],[[],109],[[],512],[[],77],[[],513],0,0,0,0,[[[0,[10,43]],59,60],[[4,[[36,[[0,[10,43]]]],7]]]],[[59,60],[[4,[36,7]]]],0,0,0,0,0,0,0,0,0,0,[[[0,[10,43]],59],[[4,[[36,[[0,[10,43]]]],7]]]],[59,[[4,[36,7]]]],[[[0,[10,43]],59],[[4,[[36,[[0,[10,43]]]],7]]]],[59,[[4,[36,7]]]],0,0,0,0,0,0,0,0,[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[519,[10]]]],[[[520,[10]]]],[[[521,[10]]]],[[[518,[10]]]],[[[515,[10]]]],[[[517,[10]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[302,302],13],[[303,303],13],[[198,198],13],[[304,304],13],[[305,305],13],[[306,306],13],[[307,307],13],[[308,308],13],[[284,284],13],[[281,281],13],[[271,271],13],[[276,276],13],[[309,309],13],[[310,310],13],[[311,311],13],[[40,40],13],[[285,285],13],[[286,286],13],[[312,312],13],[[313,313],13],[[287,287],13],[[314,314],13],[[315,315],13],[[316,316],13],[[317,317],13],[[318,318],13],[[319,319],13],[[320,320],13],[[321,321],13],[[322,322],13],[[323,323],13],[[324,324],13],[[325,325],13],[[326,326],13],[[327,327],13],[[328,328],13],[[329,329],13],[[330,330],13],[[331,331],13],[[332,332],13],[[333,333],13],[[334,334],13],[[335,335],13],[[336,336],13],[[337,337],13],[[338,338],13],[[339,339],13],[[340,340],13],[[341,341],13],[[342,342],13],[[343,343],13],[[344,344],13],[[345,345],13],[[346,346],13],[[347,347],13],[[348,348],13],[[350,350],13],[[351,351],13],[[352,352],13],[[353,353],13],[[288,288],13],[[354,354],13],[[283,283],13],[[279,279],13],[[355,355],13],[[280,280],13],[[356,356],13],[[357,357],13],[[358,358],13],[[73,73],13],[[359,359],13],[[360,360],13],[[300,300],13],[[361,361],13],[[362,362],13],[[363,363],13],[[364,364],13],[[365,365],13],[[366,366],13],[[289,289],13],[[367,367],13],[[293,293],13],[[368,368],13],[[301,301],13],[[369,369],13],[[370,370],13],[[100,100],13],[[371,371],13],[[75,75],13],[[372,372],13],[[118,118],13],[[373,373],13],[[87,87],13],[[299,299],13],[[374,374],13],[[375,375],13],[[376,376],13],[[377,377],13],[[58,58],13],[[378,378],13],[[81,81],13],[[379,379],13],[[380,380],13],[[97,97],13],[[381,381],13],[[382,382],13],[[383,383],13],[[384,384],13],[[385,385],13],[[386,386],13],[[387,387],13],[[70,70],13],[[388,388],13],[[389,389],13],[[390,390],13],[[391,391],13],[[392,392],13],[[393,393],13],[[110,110],13],[[394,394],13],[[395,395],13],[[396,396],13],[[397,397],13],[[269,269],13],[[398,398],13],[[399,399],13],[[400,400],13],[[401,401],13],[[94,94],13],[[402,402],13],[[403,403],13],[[121,121],13],[[404,404],13],[[119,119],13],[[405,405],13],[[406,406],13],[[407,407],13],[[408,408],13],[[82,82],13],[[409,409],13],[[116,116],13],[[410,410],13],[[411,411],13],[[412,412],13],[[413,413],13],[[414,414],13],[[415,415],13],[[98,98],13],[[416,416],13],[[83,83],13],[[417,417],13],[[418,418],13],[[71,71],13],[[419,419],13],[[84,84],13],[[420,420],13],[[421,421],13],[[95,95],13],[[422,422],13],[[423,423],13],[[290,290],13],[[424,424],13],[[425,425],13],[[294,294],13],[[426,426],13],[[427,427],13],[[428,428],13],[[201,201],13],[[273,273],13],[[272,272],13],[[429,429],13],[[274,274],13],[[430,430],13],[[431,431],13],[[432,432],13],[[215,215],13],[[433,433],13],[[434,434],13],[[435,435],13],[[436,436],13],[[437,437],13],[[438,438],13],[[439,439],13],[[440,440],13],[[441,441],13],[[442,442],13],[[443,443],13],[[444,444],13],[[445,445],13],[[446,446],13],[[447,447],13],[[448,448],13],[[449,449],13],[[450,450],13],[[451,451],13],[[122,122],13],[[452,452],13],[[453,453],13],[[454,454],13],[[455,455],13],[[456,456],13],[[457,457],13],[[458,458],13],[[459,459],13],[[460,460],13],[[461,461],13],[[462,462],13],[[90,90],13],[[463,463],13],[[80,80],13],[[464,464],13],[[103,103],13],[[465,465],13],[[108,108],13],[[466,466],13],[[107,107],13],[[467,467],13],[[291,291],13],[[468,468],13],[[469,469],13],[[470,470],13],[[471,471],13],[[472,472],13],[[91,91],13],[[473,473],13],[[79,79],13],[[474,474],13],[[475,475],13],[[476,476],13],[[477,477],13],[[478,478],13],[[479,479],13],[[480,480],13],[[481,481],13],[[74,74],13],[[482,482],13],[[123,123],13],[[483,483],13],[[111,111],13],[[484,484],13],[[485,485],13],[[68,68],13],[[292,292],13],[[486,486],13],[[278,278],13],[[277,277],13],[[487,487],13],[[488,488],13],[[106,106],13],[[489,489],13],[[490,490],13],[[491,491],13],[[92,92],13],[[492,492],13],[[493,493],13],[[494,494],13],[[495,495],13],[[99,99],13],[[295,295],13],[[296,296],13],[[496,496],13],[[267,267],13],[[497,497],13],[[101,101],13],[[498,498],13],[[499,499],13],[[500,500],13],[[501,501],13],[[502,502],13],[[503,503],13],[[504,504],13],[[505,505],13],[[506,506],13],[[507,507],13],[[508,508],13],[[113,113],13],[[509,509],13],[[112,112],13],[[510,510],13],[[511,511],13],[[109,109],13],[[512,512],13],[[77,77],13],[[513,513],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],0,0,0,0,0,0,0,0,0,0,0,0,0,[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[121,22],0,0,0,0,0,0,0,0,0,0,0,[[[0,[10,43]],197,266,445,438,[12,[303]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,266,445,438,[12,[303]]],[[4,[36,7]]]],[[272,[61,[[2,[428]]]]],272],[[274,[61,[[2,[428]]]]],274],0,0,[[272,[61,[[2,[427]]]]],272],[[274,[61,[[2,[427]]]]],274],0,0,0,0,0,0,0,0,0,[[[519,[[0,[15,10]]]],19],20],[[[520,[[0,[15,10]]]],19],20],[[[521,[[0,[15,10]]]],19],20],[[[518,[[0,[15,10]]]],19],20],[[[515,[[0,[15,10]]]],19],20],[[[517,[[0,[15,10]]]],19],20],[[302,19],[[4,[21]]]],[[303,19],[[4,[21]]]],[[198,19],[[4,[21]]]],[[304,19],[[4,[21]]]],[[305,19],[[4,[21]]]],[[306,19],[[4,[21]]]],[[307,19],[[4,[21]]]],[[308,19],[[4,[21]]]],[[284,19],[[4,[21]]]],[[281,19],[[4,[21]]]],[[271,19],[[4,[21]]]],[[276,19],[[4,[21]]]],[[309,19],[[4,[21]]]],[[310,19],[[4,[21]]]],[[311,19],[[4,[21]]]],[[40,19],[[4,[21]]]],[[285,19],[[4,[21]]]],[[286,19],[[4,[21]]]],[[312,19],[[4,[21]]]],[[313,19],[[4,[21]]]],[[287,19],[[4,[21]]]],[[314,19],[[4,[21]]]],[[315,19],[[4,[21]]]],[[316,19],[[4,[21]]]],[[317,19],[[4,[21]]]],[[318,19],[[4,[21]]]],[[319,19],[[4,[21]]]],[[320,19],[[4,[21]]]],[[321,19],[[4,[21]]]],[[322,19],[[4,[21]]]],[[323,19],[[4,[21]]]],[[324,19],[[4,[21]]]],[[325,19],[[4,[21]]]],[[326,19],[[4,[21]]]],[[327,19],[[4,[21]]]],[[328,19],[[4,[21]]]],[[329,19],[[4,[21]]]],[[330,19],[[4,[21]]]],[[331,19],[[4,[21]]]],[[332,19],[[4,[21]]]],[[333,19],[[4,[21]]]],[[334,19],[[4,[21]]]],[[335,19],[[4,[21]]]],[[336,19],[[4,[21]]]],[[337,19],[[4,[21]]]],[[338,19],[[4,[21]]]],[[339,19],[[4,[21]]]],[[340,19],[[4,[21]]]],[[341,19],[[4,[21]]]],[[342,19],[[4,[21]]]],[[343,19],[[4,[21]]]],[[344,19],[[4,[21]]]],[[345,19],[[4,[21]]]],[[346,19],[[4,[21]]]],[[347,19],[[4,[21]]]],[[348,19],[[4,[21]]]],[[275,19],[[4,[21]]]],[[349,19],[[4,[21]]]],[[350,19],[[4,[21]]]],[[351,19],[[4,[21]]]],[[352,19],[[4,[21]]]],[[353,19],[[4,[21]]]],[[288,19],[[4,[21]]]],[[354,19],[[4,[21]]]],[[283,19],[[4,[21]]]],[[279,19],[[4,[21]]]],[[355,19],[[4,[21]]]],[[280,19],[[4,[21]]]],[[356,19],[[4,[21]]]],[[357,19],[[4,[21]]]],[[358,19],[[4,[21]]]],[[73,19],[[4,[21]]]],[[359,19],[[4,[21]]]],[[360,19],[[4,[21]]]],[[300,19],[[4,[21]]]],[[361,19],[[4,[21]]]],[[362,19],[[4,[21]]]],[[363,19],[[4,[21]]]],[[364,19],[[4,[21]]]],[[365,19],[[4,[21]]]],[[366,19],[[4,[21]]]],[[289,19],[[4,[21]]]],[[367,19],[[4,[21]]]],[[293,19],[[4,[21]]]],[[368,19],[[4,[21]]]],[[301,19],[[4,[21]]]],[[369,19],[[4,[21]]]],[[370,19],[[4,[21]]]],[[100,19],[[4,[21]]]],[[371,19],[[4,[21]]]],[[75,19],[[4,[21]]]],[[372,19],[[4,[21]]]],[[118,19],[[4,[21]]]],[[373,19],[[4,[21]]]],[[87,19],[[4,[21]]]],[[299,19],[[4,[21]]]],[[374,19],[[4,[21]]]],[[375,19],[[4,[21]]]],[[376,19],[[4,[21]]]],[[377,19],[[4,[21]]]],[[58,19],[[4,[21]]]],[[378,19],[[4,[21]]]],[[81,19],[[4,[21]]]],[[379,19],[[4,[21]]]],[[380,19],[[4,[21]]]],[[97,19],[[4,[21]]]],[[381,19],[[4,[21]]]],[[382,19],[[4,[21]]]],[[383,19],[[4,[21]]]],[[384,19],[[4,[21]]]],[[385,19],[[4,[21]]]],[[386,19],[[4,[21]]]],[[387,19],[[4,[21]]]],[[70,19],[[4,[21]]]],[[388,19],[[4,[21]]]],[[389,19],[[4,[21]]]],[[390,19],[[4,[21]]]],[[391,19],[[4,[21]]]],[[392,19],[[4,[21]]]],[[393,19],[[4,[21]]]],[[110,19],[[4,[21]]]],[[394,19],[[4,[21]]]],[[395,19],[[4,[21]]]],[[396,19],[[4,[21]]]],[[397,19],[[4,[21]]]],[[269,19],[[4,[21]]]],[[398,19],[[4,[21]]]],[[399,19],[[4,[21]]]],[[400,19],[[4,[21]]]],[[401,19],[[4,[21]]]],[[94,19],[[4,[21]]]],[[402,19],[[4,[21]]]],[[403,19],[[4,[21]]]],[[121,19],[[4,[21]]]],[[404,19],[[4,[21]]]],[[119,19],[[4,[21]]]],[[405,19],[[4,[21]]]],[[406,19],[[4,[21]]]],[[407,19],[[4,[21]]]],[[408,19],[[4,[21]]]],[[82,19],[[4,[21]]]],[[409,19],[[4,[21]]]],[[116,19],[[4,[21]]]],[[410,19],[[4,[21]]]],[[411,19],[[4,[21]]]],[[412,19],[[4,[21]]]],[[413,19],[[4,[21]]]],[[414,19],[[4,[21]]]],[[415,19],[[4,[21]]]],[[98,19],[[4,[21]]]],[[416,19],[[4,[21]]]],[[83,19],[[4,[21]]]],[[417,19],[[4,[21]]]],[[418,19],[[4,[21]]]],[[71,19],[[4,[21]]]],[[419,19],[[4,[21]]]],[[84,19],[[4,[21]]]],[[420,19],[[4,[21]]]],[[421,19],[[4,[21]]]],[[95,19],[[4,[21]]]],[[422,19],[[4,[21]]]],[[423,19],[[4,[21]]]],[[290,19],[[4,[21]]]],[[424,19],[[4,[21]]]],[[425,19],[[4,[21]]]],[[294,19],[[4,[21]]]],[[426,19],[[4,[21]]]],[[427,19],[[4,[21]]]],[[428,19],[[4,[21]]]],[[201,19],[[4,[21]]]],[[273,19],[[4,[21]]]],[[272,19],[[4,[21]]]],[[429,19],[[4,[21]]]],[[274,19],[[4,[21]]]],[[430,19],[[4,[21]]]],[[431,19],[[4,[21]]]],[[432,19],[[4,[21]]]],[[215,19],[[4,[21]]]],[[433,19],[[4,[21]]]],[[434,19],[[4,[21]]]],[[435,19],[[4,[21]]]],[[436,19],[[4,[21]]]],[[437,19],[[4,[21]]]],[[438,19],[[4,[21]]]],[[439,19],[[4,[21]]]],[[440,19],[[4,[21]]]],[[441,19],[[4,[21]]]],[[442,19],[[4,[21]]]],[[443,19],[[4,[21]]]],[[444,19],[[4,[21]]]],[[445,19],[[4,[21]]]],[[446,19],[[4,[21]]]],[[447,19],[[4,[21]]]],[[448,19],[[4,[21]]]],[[449,19],[[4,[21]]]],[[450,19],[[4,[21]]]],[[451,19],[[4,[21]]]],[[122,19],[[4,[21]]]],[[452,19],[[4,[21]]]],[[453,19],[[4,[21]]]],[[454,19],[[4,[21]]]],[[455,19],[[4,[21]]]],[[456,19],[[4,[21]]]],[[457,19],[[4,[21]]]],[[458,19],[[4,[21]]]],[[459,19],[[4,[21]]]],[[460,19],[[4,[21]]]],[[461,19],[[4,[21]]]],[[462,19],[[4,[21]]]],[[90,19],[[4,[21]]]],[[463,19],[[4,[21]]]],[[80,19],[[4,[21]]]],[[464,19],[[4,[21]]]],[[103,19],[[4,[21]]]],[[465,19],[[4,[21]]]],[[108,19],[[4,[21]]]],[[466,19],[[4,[21]]]],[[107,19],[[4,[21]]]],[[467,19],[[4,[21]]]],[[291,19],[[4,[21]]]],[[468,19],[[4,[21]]]],[[469,19],[[4,[21]]]],[[470,19],[[4,[21]]]],[[471,19],[[4,[21]]]],[[472,19],[[4,[21]]]],[[91,19],[[4,[21]]]],[[473,19],[[4,[21]]]],[[79,19],[[4,[21]]]],[[474,19],[[4,[21]]]],[[475,19],[[4,[21]]]],[[476,19],[[4,[21]]]],[[477,19],[[4,[21]]]],[[478,19],[[4,[21]]]],[[479,19],[[4,[21]]]],[[480,19],[[4,[21]]]],[[481,19],[[4,[21]]]],[[74,19],[[4,[21]]]],[[482,19],[[4,[21]]]],[[123,19],[[4,[21]]]],[[483,19],[[4,[21]]]],[[111,19],[[4,[21]]]],[[484,19],[[4,[21]]]],[[485,19],[[4,[21]]]],[[68,19],[[4,[21]]]],[[292,19],[[4,[21]]]],[[486,19],[[4,[21]]]],[[278,19],[[4,[21]]]],[[277,19],[[4,[21]]]],[[487,19],[[4,[21]]]],[[488,19],[[4,[21]]]],[[106,19],[[4,[21]]]],[[489,19],[[4,[21]]]],[[490,19],[[4,[21]]]],[[491,19],[[4,[21]]]],[[92,19],[[4,[21]]]],[[492,19],[[4,[21]]]],[[493,19],[[4,[21]]]],[[494,19],[[4,[21]]]],[[495,19],[[4,[21]]]],[[99,19],[[4,[21]]]],[[295,19],[[4,[21]]]],[[296,19],[[4,[21]]]],[[496,19],[[4,[21]]]],[[267,19],[[4,[21]]]],[[497,19],[[4,[21]]]],[[101,19],[[4,[21]]]],[[498,19],[[4,[21]]]],[[499,19],[[4,[21]]]],[[500,19],[[4,[21]]]],[[501,19],[[4,[21]]]],[[502,19],[[4,[21]]]],[[503,19],[[4,[21]]]],[[504,19],[[4,[21]]]],[[505,19],[[4,[21]]]],[[506,19],[[4,[21]]]],[[507,19],[[4,[21]]]],[[508,19],[[4,[21]]]],[[113,19],[[4,[21]]]],[[509,19],[[4,[21]]]],[[112,19],[[4,[21]]]],[[510,19],[[4,[21]]]],[[511,19],[[4,[21]]]],[[109,19],[[4,[21]]]],[[512,19],[[4,[21]]]],[[77,19],[[4,[21]]]],[[513,19],[[4,[21]]]],0,0,[[[521,[10]]],514],[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,0,0,0,0,0,0,0,0,0,0,[[10,268],[[515,[10]]]],[[10,192],[[517,[10]]]],[[10,514],[[521,[10]]]],[[10,266],[[518,[10]]]],[[10,214],[[519,[10]]]],[[10,59],[[520,[10]]]],[[[0,[10,43]],505],[[4,[[36,[[0,[10,43]]]],7]]]],[505,[[4,[36,7]]]],0,0,0,0,0,0,0,0,0,[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,0,0,0,0,0,[[[0,[10,43]],268],[[4,[[36,[[0,[10,43]]]],7]]]],[268,[[4,[36,7]]]],[[[0,[10,43]],268,22,[12,[22]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[268,22,[12,[22]]],[[4,[36,7]]]],[[[0,[10,43]],192],[[4,[[36,[[0,[10,43]]]],7]]]],[192,[[4,[36,7]]]],[[[0,[10,43]],266],[[4,[[36,[[0,[10,43]]]],7]]]],[266,[[4,[36,7]]]],[[[0,[10,43]],214],[[4,[[36,[[0,[10,43]]]],7]]]],[214,[[4,[36,7]]]],[[[520,[10]]],59],[[[519,[10]]],214],[[[517,[10]]],192],[[[521,[10]]],514],[[[518,[10]]],266],[[[515,[10]]],268],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,306],[[]],[[]],[22,284],[128,284],[[]],[16,284],[16,281],[[]],[128,281],[22,281],[[]],[[]],[[]],[[]],[16,311],[[]],[[]],[[]],[16,285],[128,285],[[]],[128,286],[16,286],[16,312],[[]],[[]],[128,287],[16,287],[[]],[[]],[[]],[16,315],[[]],[16,317],[[]],[16,318],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,325],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,337],[[]],[[]],[16,339],[[]],[[]],[[]],[16,342],[[]],[[]],[16,343],[[]],[[]],[16,346],[[]],[[]],[16,347],[[]],[[[200,[128]]],275],[[]],[[[200,[22]]],275],[[[200,[16]]],275],[[]],[[]],[16,350],[[]],[[]],[[]],[16,353],[128,353],[128,288],[[]],[16,288],[[]],[13,354],[16,283],[[]],[128,283],[22,283],[[]],[[]],[[]],[[]],[[]],[16,357],[[]],[[]],[[]],[[]],[[]],[16,300],[[]],[[]],[[]],[[]],[[]],[[]],[16,289],[[]],[128,367],[16,367],[22,367],[[]],[[]],[[]],[[]],[16,301],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,299],[[]],[[]],[[]],[16,376],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,382],[[]],[[]],[[]],[16,384],[16,385],[[]],[16,386],[[]],[[]],[[]],[[]],[16,389],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,395],[[]],[[]],[[]],[[]],[16,269],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,406],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,412],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,290],[22,290],[128,290],[22,424],[[]],[16,424],[128,424],[[]],[16,425],[22,425],[128,425],[22,294],[16,294],[[]],[128,294],[128,426],[16,426],[[]],[22,426],[16,427],[22,427],[[]],[128,427],[16,428],[22,428],[[]],[128,428],[128,201],[16,201],[22,201],[[]],[22,273],[128,273],[16,273],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,215],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,438],[[]],[[]],[[]],[[]],[[]],[[]],[16,445],[[]],[[]],[[]],[[]],[[]],[16,449],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,456],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,291],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,474],[[]],[[]],[[]],[16,476],[[]],[[]],[[]],[[]],[16,480],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,292],[128,486],[[]],[22,486],[16,486],[[]],[22,278],[128,278],[16,278],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,492],[[]],[16,493],[[]],[[]],[[]],[[]],[16,295],[[]],[16,296],[[]],[[]],[[]],[[]],[[]],[[]],[16,498],[[]],[[]],[16,500],[[]],[[]],[16,502],[[]],[[]],[16,505],[[]],[[]],[16,507],[[]],[[]],[[]],[[]],[[]],[16,510],[[]],[[]],[[]],[[]],[[]],[[]],0,[334,293],[[272,[61,[[2,[424]]]]],272],[[274,[61,[[2,[424]]]]],274],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[518,[10]]],266],[[[0,[10,43]],60],[[4,[[33,[[0,[10,43]],87]],7]]]],[60,[[4,[[33,[87]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],95]],7]]]],[[],[[4,[[33,[95]],7]]]],[[[0,[10,43]],197],[[4,[[33,[[0,[10,43]],100]],7]]]],[197,[[4,[[33,[100]],7]]]],[[[0,[10,43]],449,197,134,134,128,128,22],[[4,[[33,[[0,[10,43]],122]],7]]]],[[449,197,134,134,128,128,22],[[4,[[33,[122]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],82]],7]]]],[[],[[4,[[33,[82]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],106]],7]]]],[[],[[4,[[33,[106]],7]]]],[[[0,[10,43]],297,16],[[4,[[33,[[0,[10,43]],68]],7]]]],[[297,16],[[4,[[33,[68]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],77]],7]]]],[[],[[4,[[33,[77]],7]]]],[[[0,[10,43]],59,[61,[270]],[61,[270]]],[[4,[[33,[[0,[10,43]],121]],7]]]],[[59,[61,[270]],[61,[270]]],[[4,[[33,[121]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],92]],7]]]],[[],[[4,[[33,[92]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],112]],7]]]],[[],[[4,[[33,[112]],7]]]],[[[0,[10,43]],13,59,[61,[60]],[61,[60]],22,22],[[4,[[33,[[0,[10,43]],58]],7]]]],[[13,59,[61,[60]],[61,[60]],22,22],[[4,[[33,[58]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],99]],7]]]],[[],[[4,[[33,[99]],7]]]],[[[0,[10,43]],60],[[4,[[33,[[0,[10,43]],97]],7]]]],[60,[[4,[[33,[97]],7]]]],[[[0,[10,43]],59],[[4,[[33,[[0,[10,43]],73]],7]]]],[59,[[4,[[33,[73]],7]]]],0,[[[0,[10,43]],13,59,[61,[128]],384,384,[61,[59]],[61,[192]],389,[61,[128]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[13,59,[61,[128]],384,384,[61,[59]],[61,[192]],389,[61,[128]]],[[4,[36,7]]]],[[[0,[10,43]],13,59,[61,[128]],[61,[297]],384,384],[[4,[[36,[[0,[10,43]]]],7]]]],[[13,59,[61,[128]],[61,[297]],384,384],[[4,[36,7]]]],[[[0,[10,43]],13,59,[61,[270]],384,384],[[4,[[33,[[0,[10,43]],110]],7]]]],[[13,59,[61,[270]],384,384],[[4,[[33,[110]],7]]]],[[[0,[10,43]],13,59,[61,[128]],384,384,[61,[59]],[61,[192]],[61,[270]]],[[4,[[33,[[0,[10,43]],70]],7]]]],[[13,59,[61,[128]],384,384,[61,[59]],[61,[192]],[61,[270]]],[[4,[[33,[70]],7]]]],[[[0,[10,43]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[],[[4,[36,7]]]],0,0,0,0,0,0,[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,0,0,0,0,0,0,0,[[302,126]],[[303,126]],[[198,126]],[[304,126]],[[305,126]],[[306,126]],[[307,126]],[[308,126]],[[284,126]],[[281,126]],[[271,126]],[[276,126]],[[309,126]],[[310,126]],[[311,126]],[[40,126]],[[285,126]],[[286,126]],[[312,126]],[[313,126]],[[287,126]],[[314,126]],[[315,126]],[[316,126]],[[317,126]],[[318,126]],[[319,126]],[[320,126]],[[321,126]],[[322,126]],[[323,126]],[[324,126]],[[325,126]],[[326,126]],[[327,126]],[[328,126]],[[329,126]],[[330,126]],[[331,126]],[[332,126]],[[333,126]],[[334,126]],[[335,126]],[[336,126]],[[337,126]],[[338,126]],[[339,126]],[[340,126]],[[341,126]],[[342,126]],[[343,126]],[[344,126]],[[345,126]],[[346,126]],[[347,126]],[[348,126]],[[350,126]],[[351,126]],[[352,126]],[[353,126]],[[288,126]],[[354,126]],[[283,126]],[[279,126]],[[355,126]],[[280,126]],[[356,126]],[[357,126]],[[358,126]],[[73,126]],[[359,126]],[[360,126]],[[300,126]],[[361,126]],[[362,126]],[[363,126]],[[364,126]],[[365,126]],[[366,126]],[[289,126]],[[367,126]],[[293,126]],[[368,126]],[[301,126]],[[369,126]],[[370,126]],[[100,126]],[[371,126]],[[75,126]],[[372,126]],[[118,126]],[[373,126]],[[87,126]],[[299,126]],[[374,126]],[[375,126]],[[376,126]],[[377,126]],[[58,126]],[[378,126]],[[81,126]],[[379,126]],[[380,126]],[[97,126]],[[381,126]],[[382,126]],[[383,126]],[[384,126]],[[385,126]],[[386,126]],[[387,126]],[[70,126]],[[388,126]],[[389,126]],[[390,126]],[[391,126]],[[392,126]],[[393,126]],[[110,126]],[[394,126]],[[395,126]],[[396,126]],[[397,126]],[[269,126]],[[398,126]],[[399,126]],[[400,126]],[[401,126]],[[94,126]],[[402,126]],[[403,126]],[[121,126]],[[404,126]],[[119,126]],[[405,126]],[[406,126]],[[407,126]],[[408,126]],[[82,126]],[[409,126]],[[116,126]],[[410,126]],[[411,126]],[[412,126]],[[413,126]],[[414,126]],[[415,126]],[[98,126]],[[416,126]],[[83,126]],[[417,126]],[[418,126]],[[71,126]],[[419,126]],[[84,126]],[[420,126]],[[421,126]],[[95,126]],[[422,126]],[[423,126]],[[290,126]],[[424,126]],[[425,126]],[[294,126]],[[426,126]],[[427,126]],[[428,126]],[[201,126]],[[273,126]],[[272,126]],[[429,126]],[[274,126]],[[430,126]],[[431,126]],[[432,126]],[[215,126]],[[433,126]],[[434,126]],[[435,126]],[[436,126]],[[437,126]],[[438,126]],[[439,126]],[[440,126]],[[441,126]],[[442,126]],[[443,126]],[[444,126]],[[445,126]],[[446,126]],[[447,126]],[[448,126]],[[449,126]],[[450,126]],[[451,126]],[[122,126]],[[452,126]],[[453,126]],[[454,126]],[[455,126]],[[456,126]],[[457,126]],[[458,126]],[[459,126]],[[460,126]],[[461,126]],[[462,126]],[[90,126]],[[463,126]],[[80,126]],[[464,126]],[[103,126]],[[465,126]],[[108,126]],[[466,126]],[[107,126]],[[467,126]],[[291,126]],[[468,126]],[[469,126]],[[470,126]],[[471,126]],[[472,126]],[[91,126]],[[473,126]],[[79,126]],[[474,126]],[[475,126]],[[476,126]],[[477,126]],[[478,126]],[[479,126]],[[480,126]],[[481,126]],[[74,126]],[[482,126]],[[123,126]],[[483,126]],[[111,126]],[[484,126]],[[485,126]],[[68,126]],[[292,126]],[[486,126]],[[278,126]],[[277,126]],[[487,126]],[[488,126]],[[106,126]],[[489,126]],[[490,126]],[[491,126]],[[92,126]],[[492,126]],[[493,126]],[[494,126]],[[495,126]],[[99,126]],[[295,126]],[[296,126]],[[496,126]],[[267,126]],[[497,126]],[[101,126]],[[498,126]],[[499,126]],[[500,126]],[[501,126]],[[502,126]],[[503,126]],[[504,126]],[[505,126]],[[506,126]],[[507,126]],[[508,126]],[[113,126]],[[509,126]],[[112,126]],[[510,126]],[[511,126]],[[109,126]],[[512,126]],[[77,126]],[[513,126]],[[293,[61,[[2,[22]]]]],293],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[101,128],0,[[[0,[10,43]],197,266,134,134,[12,[302]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,266,134,134,[12,[302]]],[[4,[36,7]]]],[[[0,[10,43]],197,266,134,134,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,266,134,134,[12,[16]]],[[4,[36,7]]]],[[[0,[10,43]],268],[[4,[[36,[[0,[10,43]]]],7]]]],[268,[[4,[36,7]]]],[[[0,[10,43]],13,[12,[16]]],[[4,[[33,[[0,[10,43]],118]],7]]]],[[13,[12,[16]]],[[4,[[33,[118]],7]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[515,[10]]],268],[[[517,[10]]],192],[[[521,[10]]],514],[[[518,[10]]],266],[355,355],[356,356],[368,368],[372,372],[374,374],[383,383],[410,410],[416,416],[418,418],[419,419],[420,420],[429,429],[430,430],[432,432],[433,433],[439,439],[440,440],[442,442],[443,443],[444,444],[446,446],[447,447],[448,448],[450,450],[452,452],[453,453],[454,454],[455,455],[464,464],[467,467],[469,469],[470,470],[472,472],[473,473],[482,482],[484,484],[487,487],[496,496],[504,504],[508,508],[511,511],[[[519,[10]]],214],[[[520,[10]]],59],0,0,0,[[272,[61,[[2,[426]]]]],272],[[274,[61,[[2,[426]]]]],274],0,0,[[277,[61,[[2,[22]]]]],277],0,0,0,[[277,[61,[[2,[62]]]]],277],0,0,0,0,0,0,0,0,0,[77,16],0,0,0,0,0,0,[[[0,[10,43]],[61,[22]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[61,[22]]],[[4,[36,7]]]],[[277,[61,[[2,[22]]]]],277],0,0,[[277,[61,[[2,[486]]]]],277],0,0,0,[310,128],[122,22],[68,22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[272,[61,[[2,[425]]]]],272],[[274,[61,[[2,[425]]]]],274],0,0,[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],111]],7]]]],[[],[[4,[[33,[111]],7]]]],[[[0,[10,43]],128,[12,[16]]],[[4,[[33,[[0,[10,43]],71]],7]]]],[[128,[12,[16]]],[[4,[[33,[71]],7]]]],[[[0,[10,43]],128,[12,[16]]],[[4,[[44,[[0,[10,43]]]],7]]]],[[128,[12,[16]]],[[4,[44,7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],101]],7]]]],[[],[[4,[[33,[101]],7]]]],[[[0,[10,43]],59],[[4,[[33,[[0,[10,43]],90]],7]]]],[59,[[4,[[33,[90]],7]]]],[[[0,[10,43]],59],[[4,[[33,[[0,[10,43]],81]],7]]]],[59,[[4,[[33,[81]],7]]]],0,0,[[[0,[10,43]],268,[12,[16]]],[[4,[[33,[[0,[10,43]],79]],7]]]],[[268,[12,[16]]],[[4,[[33,[79]],7]]]],0,0,0,0,0,0,[112,16],0,[[[0,[10,43]],59],[[4,[[36,[[0,[10,43]]]],7]]]],[59,[[4,[36,7]]]],[[[0,[10,43]],59],[[4,[[36,[[0,[10,43]]]],7]]]],[59,[[4,[36,7]]]],0,0,0,0,0,[108,128],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[87,128],[417,16],[84,16],0,0,[71,128],[111,16],[[16,22,[61,[22]],[61,[275]]],349],[[],279],[[],280],[[],293],[[],272],[[],274],[[],277],0,[[[0,[10,43]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[],[[4,[36,7]]]],0,[[[0,[10,43]],514,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[514,[12,[16]]],[[4,[36,7]]]],[[194,[12,[16]]],[[4,[[521,[194]],23]]]],[[194,[12,[16]]],[[4,[23]]]],0,0,0,0,0,0,[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[302,302],[[2,[65]]]],[[303,303],[[2,[65]]]],[[198,198],[[2,[65]]]],[[304,304],[[2,[65]]]],[[305,305],[[2,[65]]]],[[306,306],[[2,[65]]]],[[307,307],[[2,[65]]]],[[308,308],[[2,[65]]]],[[284,284],[[2,[65]]]],[[281,281],[[2,[65]]]],[[271,271],[[2,[65]]]],[[276,276],[[2,[65]]]],[[309,309],[[2,[65]]]],[[310,310],[[2,[65]]]],[[311,311],[[2,[65]]]],[[40,40],[[2,[65]]]],[[285,285],[[2,[65]]]],[[286,286],[[2,[65]]]],[[312,312],[[2,[65]]]],[[313,313],[[2,[65]]]],[[287,287],[[2,[65]]]],[[314,314],[[2,[65]]]],[[315,315],[[2,[65]]]],[[316,316],[[2,[65]]]],[[317,317],[[2,[65]]]],[[318,318],[[2,[65]]]],[[319,319],[[2,[65]]]],[[320,320],[[2,[65]]]],[[321,321],[[2,[65]]]],[[322,322],[[2,[65]]]],[[323,323],[[2,[65]]]],[[324,324],[[2,[65]]]],[[325,325],[[2,[65]]]],[[326,326],[[2,[65]]]],[[327,327],[[2,[65]]]],[[328,328],[[2,[65]]]],[[329,329],[[2,[65]]]],[[330,330],[[2,[65]]]],[[331,331],[[2,[65]]]],[[332,332],[[2,[65]]]],[[333,333],[[2,[65]]]],[[334,334],[[2,[65]]]],[[335,335],[[2,[65]]]],[[336,336],[[2,[65]]]],[[337,337],[[2,[65]]]],[[338,338],[[2,[65]]]],[[339,339],[[2,[65]]]],[[340,340],[[2,[65]]]],[[341,341],[[2,[65]]]],[[342,342],[[2,[65]]]],[[343,343],[[2,[65]]]],[[344,344],[[2,[65]]]],[[345,345],[[2,[65]]]],[[346,346],[[2,[65]]]],[[347,347],[[2,[65]]]],[[348,348],[[2,[65]]]],[[350,350],[[2,[65]]]],[[351,351],[[2,[65]]]],[[352,352],[[2,[65]]]],[[353,353],[[2,[65]]]],[[288,288],[[2,[65]]]],[[354,354],[[2,[65]]]],[[283,283],[[2,[65]]]],[[279,279],[[2,[65]]]],[[355,355],[[2,[65]]]],[[280,280],[[2,[65]]]],[[356,356],[[2,[65]]]],[[357,357],[[2,[65]]]],[[358,358],[[2,[65]]]],[[73,73],[[2,[65]]]],[[359,359],[[2,[65]]]],[[360,360],[[2,[65]]]],[[300,300],[[2,[65]]]],[[361,361],[[2,[65]]]],[[362,362],[[2,[65]]]],[[363,363],[[2,[65]]]],[[364,364],[[2,[65]]]],[[365,365],[[2,[65]]]],[[366,366],[[2,[65]]]],[[289,289],[[2,[65]]]],[[367,367],[[2,[65]]]],[[293,293],[[2,[65]]]],[[368,368],[[2,[65]]]],[[301,301],[[2,[65]]]],[[369,369],[[2,[65]]]],[[370,370],[[2,[65]]]],[[100,100],[[2,[65]]]],[[371,371],[[2,[65]]]],[[75,75],[[2,[65]]]],[[372,372],[[2,[65]]]],[[118,118],[[2,[65]]]],[[373,373],[[2,[65]]]],[[87,87],[[2,[65]]]],[[299,299],[[2,[65]]]],[[374,374],[[2,[65]]]],[[375,375],[[2,[65]]]],[[376,376],[[2,[65]]]],[[377,377],[[2,[65]]]],[[58,58],[[2,[65]]]],[[378,378],[[2,[65]]]],[[81,81],[[2,[65]]]],[[379,379],[[2,[65]]]],[[380,380],[[2,[65]]]],[[97,97],[[2,[65]]]],[[381,381],[[2,[65]]]],[[382,382],[[2,[65]]]],[[383,383],[[2,[65]]]],[[384,384],[[2,[65]]]],[[385,385],[[2,[65]]]],[[386,386],[[2,[65]]]],[[387,387],[[2,[65]]]],[[70,70],[[2,[65]]]],[[388,388],[[2,[65]]]],[[389,389],[[2,[65]]]],[[390,390],[[2,[65]]]],[[391,391],[[2,[65]]]],[[392,392],[[2,[65]]]],[[393,393],[[2,[65]]]],[[110,110],[[2,[65]]]],[[394,394],[[2,[65]]]],[[395,395],[[2,[65]]]],[[396,396],[[2,[65]]]],[[397,397],[[2,[65]]]],[[269,269],[[2,[65]]]],[[398,398],[[2,[65]]]],[[399,399],[[2,[65]]]],[[400,400],[[2,[65]]]],[[401,401],[[2,[65]]]],[[94,94],[[2,[65]]]],[[402,402],[[2,[65]]]],[[403,403],[[2,[65]]]],[[121,121],[[2,[65]]]],[[404,404],[[2,[65]]]],[[119,119],[[2,[65]]]],[[405,405],[[2,[65]]]],[[406,406],[[2,[65]]]],[[407,407],[[2,[65]]]],[[408,408],[[2,[65]]]],[[82,82],[[2,[65]]]],[[409,409],[[2,[65]]]],[[116,116],[[2,[65]]]],[[410,410],[[2,[65]]]],[[411,411],[[2,[65]]]],[[412,412],[[2,[65]]]],[[413,413],[[2,[65]]]],[[414,414],[[2,[65]]]],[[415,415],[[2,[65]]]],[[98,98],[[2,[65]]]],[[416,416],[[2,[65]]]],[[83,83],[[2,[65]]]],[[417,417],[[2,[65]]]],[[418,418],[[2,[65]]]],[[71,71],[[2,[65]]]],[[419,419],[[2,[65]]]],[[84,84],[[2,[65]]]],[[420,420],[[2,[65]]]],[[421,421],[[2,[65]]]],[[95,95],[[2,[65]]]],[[422,422],[[2,[65]]]],[[423,423],[[2,[65]]]],[[290,290],[[2,[65]]]],[[424,424],[[2,[65]]]],[[425,425],[[2,[65]]]],[[294,294],[[2,[65]]]],[[426,426],[[2,[65]]]],[[427,427],[[2,[65]]]],[[428,428],[[2,[65]]]],[[201,201],[[2,[65]]]],[[273,273],[[2,[65]]]],[[272,272],[[2,[65]]]],[[429,429],[[2,[65]]]],[[274,274],[[2,[65]]]],[[430,430],[[2,[65]]]],[[431,431],[[2,[65]]]],[[432,432],[[2,[65]]]],[[215,215],[[2,[65]]]],[[433,433],[[2,[65]]]],[[434,434],[[2,[65]]]],[[435,435],[[2,[65]]]],[[436,436],[[2,[65]]]],[[437,437],[[2,[65]]]],[[438,438],[[2,[65]]]],[[439,439],[[2,[65]]]],[[440,440],[[2,[65]]]],[[441,441],[[2,[65]]]],[[442,442],[[2,[65]]]],[[443,443],[[2,[65]]]],[[444,444],[[2,[65]]]],[[445,445],[[2,[65]]]],[[446,446],[[2,[65]]]],[[447,447],[[2,[65]]]],[[448,448],[[2,[65]]]],[[449,449],[[2,[65]]]],[[450,450],[[2,[65]]]],[[451,451],[[2,[65]]]],[[122,122],[[2,[65]]]],[[452,452],[[2,[65]]]],[[453,453],[[2,[65]]]],[[454,454],[[2,[65]]]],[[455,455],[[2,[65]]]],[[456,456],[[2,[65]]]],[[457,457],[[2,[65]]]],[[458,458],[[2,[65]]]],[[459,459],[[2,[65]]]],[[460,460],[[2,[65]]]],[[461,461],[[2,[65]]]],[[462,462],[[2,[65]]]],[[90,90],[[2,[65]]]],[[463,463],[[2,[65]]]],[[80,80],[[2,[65]]]],[[464,464],[[2,[65]]]],[[103,103],[[2,[65]]]],[[465,465],[[2,[65]]]],[[108,108],[[2,[65]]]],[[466,466],[[2,[65]]]],[[107,107],[[2,[65]]]],[[467,467],[[2,[65]]]],[[291,291],[[2,[65]]]],[[468,468],[[2,[65]]]],[[469,469],[[2,[65]]]],[[470,470],[[2,[65]]]],[[471,471],[[2,[65]]]],[[472,472],[[2,[65]]]],[[91,91],[[2,[65]]]],[[473,473],[[2,[65]]]],[[79,79],[[2,[65]]]],[[474,474],[[2,[65]]]],[[475,475],[[2,[65]]]],[[476,476],[[2,[65]]]],[[477,477],[[2,[65]]]],[[478,478],[[2,[65]]]],[[479,479],[[2,[65]]]],[[480,480],[[2,[65]]]],[[481,481],[[2,[65]]]],[[74,74],[[2,[65]]]],[[482,482],[[2,[65]]]],[[123,123],[[2,[65]]]],[[483,483],[[2,[65]]]],[[111,111],[[2,[65]]]],[[484,484],[[2,[65]]]],[[485,485],[[2,[65]]]],[[68,68],[[2,[65]]]],[[292,292],[[2,[65]]]],[[486,486],[[2,[65]]]],[[278,278],[[2,[65]]]],[[277,277],[[2,[65]]]],[[487,487],[[2,[65]]]],[[488,488],[[2,[65]]]],[[106,106],[[2,[65]]]],[[489,489],[[2,[65]]]],[[490,490],[[2,[65]]]],[[491,491],[[2,[65]]]],[[92,92],[[2,[65]]]],[[492,492],[[2,[65]]]],[[493,493],[[2,[65]]]],[[494,494],[[2,[65]]]],[[495,495],[[2,[65]]]],[[99,99],[[2,[65]]]],[[295,295],[[2,[65]]]],[[296,296],[[2,[65]]]],[[496,496],[[2,[65]]]],[[267,267],[[2,[65]]]],[[497,497],[[2,[65]]]],[[101,101],[[2,[65]]]],[[498,498],[[2,[65]]]],[[499,499],[[2,[65]]]],[[500,500],[[2,[65]]]],[[501,501],[[2,[65]]]],[[502,502],[[2,[65]]]],[[503,503],[[2,[65]]]],[[504,504],[[2,[65]]]],[[505,505],[[2,[65]]]],[[506,506],[[2,[65]]]],[[507,507],[[2,[65]]]],[[508,508],[[2,[65]]]],[[113,113],[[2,[65]]]],[[509,509],[[2,[65]]]],[[112,112],[[2,[65]]]],[[510,510],[[2,[65]]]],[[511,511],[[2,[65]]]],[[109,109],[[2,[65]]]],[[512,512],[[2,[65]]]],[[77,77],[[2,[65]]]],[[513,513],[[2,[65]]]],0,[95,128],0,0,0,0,0,0,0,0,0,0,0,0,[108,128],[107,128],[[[519,[10]]],214],0,0,[40,16],0,[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[10,43]],197,266,[12,[304]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,266,[12,[304]]],[[4,[36,7]]]],[[[0,[10,43]],197,266,[12,[304]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,266,[12,[304]]],[[4,[36,7]]]],[[[0,[10,43]],197,266,[12,[198]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,266,[12,[198]]],[[4,[36,7]]]],[[[0,[10,43]],438,197,266,[12,[303]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[438,197,266,[12,[303]]],[[4,[36,7]]]],[[[0,[10,43]],438,197,266,[12,[303]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[438,197,266,[12,[303]]],[[4,[36,7]]]],[[[0,[10,43]],197,266,[12,[198]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,266,[12,[198]]],[[4,[36,7]]]],[[[0,[10,43]],197,266,[12,[441]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,266,[12,[441]]],[[4,[36,7]]]],[[[0,[10,43]],197,266,134,134,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,266,134,134,[12,[16]]],[[4,[36,7]]]],[[[0,[10,43]],197,266,134,134,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[197,266,134,134,[12,[16]]],[[4,[36,7]]]],0,0,0,0,0,0,[98,128],[84,128],0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[10,43]],449,197,266,128,128,134,134,16,16,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[449,197,266,128,128,134,134,16,16,[12,[16]]],[[4,[36,7]]]],[[[0,[10,43]],480,197,128,128],[[4,[[33,[[0,[10,43]],74]],7]]]],[[480,197,128,128],[[4,[[33,[74]],7]]]],[[[0,[10,43]],268,[12,[22]]],[[4,[[33,[[0,[10,43]],91]],7]]]],[[268,[12,[22]]],[[4,[[33,[91]],7]]]],[[[0,[10,43]],[12,[16]]],[[4,[[33,[[0,[10,43]],123]],7]]]],[[[12,[16]]],[[4,[[33,[123]],7]]]],[[[0,[10,43]],522],[[4,[[33,[[0,[10,43]],98]],7]]]],[522,[[4,[[33,[98]],7]]]],[[[0,[10,43]]],[[4,[[33,[[0,[10,43]],116]],7]]]],[[],[[4,[[33,[116]],7]]]],[[[0,[10,43]],59],[[4,[[33,[[0,[10,43]],94]],7]]]],[59,[[4,[[33,[94]],7]]]],[[[0,[10,43]],522,[12,[302]]],[[4,[[33,[[0,[10,43]],83]],7]]]],[[522,[12,[302]]],[[4,[[33,[83]],7]]]],[[[0,[10,43]],59],[[4,[[33,[[0,[10,43]],75]],7]]]],[59,[[4,[[33,[75]],7]]]],0,0,[309,16],[[[0,[10,43]],192,128,128,128,128,128,128],[[4,[[36,[[0,[10,43]]]],7]]]],[[192,128,128,128,128,128,128],[[4,[36,7]]]],0,0,0,0,0,0,0,0,0,0,0,[[[0,[10,43]],59,59,134,134],[[4,[[36,[[0,[10,43]]]],7]]]],[[59,59,134,134],[[4,[36,7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[40,16],[[[0,[10,43]],59,134,[12,[60]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[59,134,[12,[60]]],[[4,[36,7]]]],0,0,0,0,0,0,[[279,[61,[[2,[22]]]]],279],[[280,[61,[[2,[22]]]]],280],0,0,0,0,0,0,0,0,0,0,0,0,[[[0,[10,43]],13,[61,[59]],[61,[22]],[61,[[200,[16]]]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[13,[61,[59]],[61,[22]],[61,[[200,[16]]]]],[[4,[36,7]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[302,[[200,[16]]]],[303,[[200,[16]]]],[198,[[200,[16]]]],[304,[[200,[16]]]],[305,[[200,[16]]]],[307,[[200,[16]]]],[308,[[31,[16,63]]]],[271,[[31,[16,63]]]],[276,[[31,[16,63]]]],[309,[[31,[16,63]]]],[310,[[31,[16,63]]]],[40,[[31,[16,63]]]],[275,[[200,[16]]]],[[355,16]],[355],[[356,16]],[356],[[358,16]],[358],[[359,16]],[359],[[360,16]],[360],[361],[[361,16]],[362],[[362,16]],[[363,16]],[363],[[364,16]],[364],[365],[[365,16]],[[366,16]],[366],[[368,16]],[368],[[369,16]],[369],[370],[[370,16]],[[371,16]],[371],[372],[[372,16]],[[373,16]],[373],[[374,16]],[374],[[375,16]],[375],[[377,16]],[377],[378],[[378,16]],[[379,16]],[379],[380],[[380,16]],[[381,16]],[381],[[383,16]],[383],[[387,16]],[387],[[388,16]],[388],[[390,16]],[390],[[391,16]],[391],[[392,16]],[392],[[393,16]],[393],[[394,16]],[394],[396],[[396,16]],[[397,16]],[397],[398],[[398,16]],[[399,16]],[399],[[400,16]],[400],[401],[[401,16]],[402,[[200,[16]]]],[[403,16]],[403],[404],[[404,16]],[[405,16]],[405],[[407,16]],[407],[[408,16]],[408],[[409,16]],[409],[[410,16]],[410],[411],[[411,16]],[413,[[200,[16]]]],[414,[[200,[16]]]],[415],[[415,16]],[416],[[416,16]],[417,[[31,[16,63]]]],[[418,16]],[418],[[419,16]],[419],[420],[[420,16]],[[421,16]],[421],[[422,16]],[422],[[423,16]],[423],[[429,16]],[429],[430],[[430,16]],[431],[[431,16]],[[432,16]],[432],[433],[[433,16]],[434],[[434,16]],[435],[[435,16]],[[436,16]],[436],[437],[[437,16]],[439],[[439,16]],[440],[[440,16]],[441,[[200,[16]]]],[442],[[442,16]],[443],[[443,16]],[[444,16]],[444],[[446,16]],[446],[447],[[447,16]],[[448,16]],[448],[[450,16]],[450],[[451,16]],[451],[452],[[452,16]],[[453,16]],[453],[454],[[454,16]],[455],[[455,16]],[[457,16]],[457],[458],[[458,16]],[[459,16]],[459],[[460,16]],[460],[461],[[461,16]],[[462,16]],[462],[463],[[463,16]],[[464,16]],[464],[[465,16]],[465],[[466,16]],[466],[467],[[467,16]],[468,[[200,[16]]]],[[469,16]],[469],[470],[[470,16]],[471,[[200,[16]]]],[472],[[472,16]],[[473,16]],[473],[[475,16]],[475],[[477,16]],[477],[478],[[478,16]],[479],[[479,16]],[[481,16]],[481],[482],[[482,16]],[483],[[483,16]],[[484,16]],[484],[[485,16]],[485],[[487,16]],[487],[[488,16]],[488],[[489,16]],[489],[490],[[490,16]],[491],[[491,16]],[[494,16]],[494],[495],[[495,16]],[496],[[496,16]],[267,[[31,[16,63]]]],[497],[[497,16]],[[499,16]],[499],[[501,16]],[501],[[503,16]],[503],[[504,16]],[504],[506],[[506,16]],[[508,16]],[508],[509],[[509,16]],[[511,16]],[511],[[512,16]],[512],[[513,16]],[513],[[302,[31,[16,63]]]],[[303,[31,[16,63]]]],[[198,[31,[16,63]]]],[[304,[31,[16,63]]]],[[305,[31,[16,63]]]],[[307,[31,[16,63]]]],[[308,[31,[16,63]]]],[[271,[31,[16,63]]]],[[276,[31,[16,63]]]],[[309,[31,[16,63]]]],[[310,[31,[16,63]]]],[[40,[31,[16,63]]]],[[275,[31,[16,63]]]],[[402,[31,[16,63]]]],[[413,[31,[16,63]]]],[[414,[31,[16,63]]]],[[417,[31,[16,63]]]],[[441,[31,[16,63]]]],[[468,[31,[16,63]]]],[[471,[31,[16,63]]]],[[267,[31,[16,63]]]],[[[0,[10,43]],498],[[4,[[36,[[0,[10,43]]]],7]]]],[498,[[4,[36,7]]]],[[[0,[10,43]],215,266,134,134,[12,[198]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[215,266,134,134,[12,[198]]],[[4,[36,7]]]],[[[0,[10,43]],500],[[4,[[36,[[0,[10,43]]]],7]]]],[500,[[4,[36,7]]]],[[[0,[10,43]],266,128,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[266,128,[12,[16]]],[[4,[36,7]]]],[[[0,[10,43]],[12,[417]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[12,[417]]],[[4,[36,7]]]],[[[0,[10,43]],406,[61,[59]],[61,[270]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[406,[61,[59]],[61,[270]]],[[4,[36,7]]]],[[[0,[10,43]],[12,[297]]],[[4,[[33,[[0,[10,43]],109]],7]]]],[[[12,[297]]],[[4,[[33,[109]],7]]]],[[[0,[10,43]],[12,[16]]],[[4,[[33,[[0,[10,43]],113]],7]]]],[[[12,[16]]],[[4,[[33,[113]],7]]]],[[[0,[10,43]],134,134,492,493],[[4,[[36,[[0,[10,43]]]],7]]]],[[134,134,492,493],[[4,[36,7]]]],[[[0,[10,43]],[61,[59]],60,[61,[270]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[61,[59]],60,[61,[270]]],[[4,[36,7]]]],0,[[293,[61,[[2,[22]]]]],293],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[293,[61,[[2,[367]]]]],293],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,0,[[[0,[10,43]],268,[12,[468]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[268,[12,[468]]],[[4,[36,7]]]],[[[0,[10,43]],[61,[16]],268,22,[12,[16]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[61,[16]],268,22,[12,[16]]],[[4,[36,7]]]],0,0,0,[[272,[61,[[2,[201]]]]],272],[[274,[61,[[2,[201]]]]],274],0,0,0,0,0,0,0,[[272,[61,[[2,[22]]]]],272],[[274,[61,[[2,[22]]]]],274],0,0,[[272,[61,[[2,[62]]]]],272],[[274,[61,[[2,[62]]]]],274],0,0,[[272,[61,[[2,[62]]]]],272],[[274,[61,[[2,[62]]]]],274],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[10,43]],59,59,134,134],[[4,[[33,[[0,[10,43]],119]],7]]]],[[59,59,134,134],[[4,[[33,[119]],7]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[523,[[4,[40]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[127,[12,[16]]],[[4,[355,26]]]],[[127,[12,[16]]],[[4,[356,26]]]],[[127,[12,[16]]],[[4,[358,26]]]],[[127,[12,[16]]],[[4,[359,26]]]],[[127,[12,[16]]],[[4,[360,26]]]],[[127,[12,[16]]],[[4,[361,26]]]],[[127,[12,[16]]],[[4,[362,26]]]],[[127,[12,[16]]],[[4,[363,26]]]],[[127,[12,[16]]],[[4,[364,26]]]],[[127,[12,[16]]],[[4,[365,26]]]],[[127,[12,[16]]],[[4,[366,26]]]],[[127,[12,[16]]],[[4,[368,26]]]],[[127,[12,[16]]],[[4,[369,26]]]],[[127,[12,[16]]],[[4,[370,26]]]],[[127,[12,[16]]],[[4,[371,26]]]],[[127,[12,[16]]],[[4,[372,26]]]],[[127,[12,[16]]],[[4,[373,26]]]],[[127,[12,[16]]],[[4,[374,26]]]],[[127,[12,[16]]],[[4,[375,26]]]],[[127,[12,[16]]],[[4,[377,26]]]],[[127,[12,[16]]],[[4,[378,26]]]],[[127,[12,[16]]],[[4,[379,26]]]],[[127,[12,[16]]],[[4,[380,26]]]],[[127,[12,[16]]],[[4,[381,26]]]],[[127,[12,[16]]],[[4,[383,26]]]],[[127,[12,[16]]],[[4,[387,26]]]],[[127,[12,[16]]],[[4,[388,26]]]],[[127,[12,[16]]],[[4,[390,26]]]],[[127,[12,[16]]],[[4,[391,26]]]],[[127,[12,[16]]],[[4,[392,26]]]],[[127,[12,[16]]],[[4,[393,26]]]],[[127,[12,[16]]],[[4,[394,26]]]],[[127,[12,[16]]],[[4,[396,26]]]],[[127,[12,[16]]],[[4,[397,26]]]],[[127,[12,[16]]],[[4,[398,26]]]],[[127,[12,[16]]],[[4,[399,26]]]],[[127,[12,[16]]],[[4,[400,26]]]],[[127,[12,[16]]],[[4,[401,26]]]],[[127,[12,[16]]],[[4,[403,26]]]],[[127,[12,[16]]],[[4,[404,26]]]],[[127,[12,[16]]],[[4,[405,26]]]],[[127,[12,[16]]],[[4,[407,26]]]],[[127,[12,[16]]],[[4,[408,26]]]],[[127,[12,[16]]],[[4,[409,26]]]],[[127,[12,[16]]],[[4,[410,26]]]],[[127,[12,[16]]],[[4,[411,26]]]],[[127,[12,[16]]],[[4,[415,26]]]],[[127,[12,[16]]],[[4,[416,26]]]],[[127,[12,[16]]],[[4,[418,26]]]],[[127,[12,[16]]],[[4,[419,26]]]],[[127,[12,[16]]],[[4,[420,26]]]],[[127,[12,[16]]],[[4,[421,26]]]],[[127,[12,[16]]],[[4,[422,26]]]],[[127,[12,[16]]],[[4,[423,26]]]],[[127,[12,[16]]],[[4,[429,26]]]],[[127,[12,[16]]],[[4,[430,26]]]],[[127,[12,[16]]],[[4,[431,26]]]],[[127,[12,[16]]],[[4,[432,26]]]],[[127,[12,[16]]],[[4,[433,26]]]],[[127,[12,[16]]],[[4,[434,26]]]],[[127,[12,[16]]],[[4,[435,26]]]],[[127,[12,[16]]],[[4,[436,26]]]],[[127,[12,[16]]],[[4,[437,26]]]],[[127,[12,[16]]],[[4,[439,26]]]],[[127,[12,[16]]],[[4,[440,26]]]],[[127,[12,[16]]],[[4,[442,26]]]],[[127,[12,[16]]],[[4,[443,26]]]],[[127,[12,[16]]],[[4,[444,26]]]],[[127,[12,[16]]],[[4,[446,26]]]],[[127,[12,[16]]],[[4,[447,26]]]],[[127,[12,[16]]],[[4,[448,26]]]],[[127,[12,[16]]],[[4,[450,26]]]],[[127,[12,[16]]],[[4,[451,26]]]],[[127,[12,[16]]],[[4,[452,26]]]],[[127,[12,[16]]],[[4,[453,26]]]],[[127,[12,[16]]],[[4,[454,26]]]],[[127,[12,[16]]],[[4,[455,26]]]],[[127,[12,[16]]],[[4,[457,26]]]],[[127,[12,[16]]],[[4,[458,26]]]],[[127,[12,[16]]],[[4,[459,26]]]],[[127,[12,[16]]],[[4,[460,26]]]],[[127,[12,[16]]],[[4,[461,26]]]],[[127,[12,[16]]],[[4,[462,26]]]],[[127,[12,[16]]],[[4,[463,26]]]],[[127,[12,[16]]],[[4,[464,26]]]],[[127,[12,[16]]],[[4,[465,26]]]],[[127,[12,[16]]],[[4,[466,26]]]],[[127,[12,[16]]],[[4,[467,26]]]],[[127,[12,[16]]],[[4,[469,26]]]],[[127,[12,[16]]],[[4,[470,26]]]],[[127,[12,[16]]],[[4,[472,26]]]],[[127,[12,[16]]],[[4,[473,26]]]],[[127,[12,[16]]],[[4,[475,26]]]],[[127,[12,[16]]],[[4,[477,26]]]],[[127,[12,[16]]],[[4,[478,26]]]],[[127,[12,[16]]],[[4,[479,26]]]],[[127,[12,[16]]],[[4,[481,26]]]],[[127,[12,[16]]],[[4,[482,26]]]],[[127,[12,[16]]],[[4,[483,26]]]],[[127,[12,[16]]],[[4,[484,26]]]],[[127,[12,[16]]],[[4,[485,26]]]],[[127,[12,[16]]],[[4,[487,26]]]],[[127,[12,[16]]],[[4,[488,26]]]],[[127,[12,[16]]],[[4,[489,26]]]],[[127,[12,[16]]],[[4,[490,26]]]],[[127,[12,[16]]],[[4,[491,26]]]],[[127,[12,[16]]],[[4,[494,26]]]],[[127,[12,[16]]],[[4,[495,26]]]],[[127,[12,[16]]],[[4,[496,26]]]],[[127,[12,[16]]],[[4,[497,26]]]],[[127,[12,[16]]],[[4,[499,26]]]],[[127,[12,[16]]],[[4,[501,26]]]],[[127,[12,[16]]],[[4,[503,26]]]],[[127,[12,[16]]],[[4,[504,26]]]],[[127,[12,[16]]],[[4,[506,26]]]],[[127,[12,[16]]],[[4,[508,26]]]],[[127,[12,[16]]],[[4,[509,26]]]],[[127,[12,[16]]],[[4,[511,26]]]],[[127,[12,[16]]],[[4,[512,26]]]],[[127,[12,[16]]],[[4,[513,26]]]],0,0,0,0,[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[[0,[10,43]],389,59,[61,[128]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[389,59,[61,[128]]],[[4,[36,7]]]],[[[0,[10,43]],[61,[297]],59,[61,[128]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[61,[297]],59,[61,[128]]],[[4,[36,7]]]],[[[0,[10,43]],[61,[270]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[61,[270]]],[[4,[36,7]]]],[[[0,[10,43]],[61,[270]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[[61,[270]]],[[4,[36,7]]]],[[[0,[10,43]]],[[4,[[36,[[0,[10,43]]]],7]]]],[[],[[4,[36,7]]]],[[[0,[10,43]],268],[[4,[[36,[[0,[10,43]]]],7]]]],[268,[[4,[36,7]]]],[[[0,[10,43]],59],[[4,[[36,[[0,[10,43]]]],7]]]],[59,[[4,[36,7]]]],[[[0,[10,43]],59],[[4,[[36,[[0,[10,43]]]],7]]]],[59,[[4,[36,7]]]],0,0,[58,[[2,[524]]]],[58,[[2,[524]]]],[58,[[2,[524]]]],0,0,0,0,0,0,0,0,0,0,[40,128],0,0,0,0,0,0,0,0,0,0,0,0,[308,128],[[[0,[10,43]],[61,[59]],[61,[59]],134,134,128,128,134,134],[[4,[[36,[[0,[10,43]]]],7]]]],[[[61,[59]],[61,[59]],134,134,128,128,134,134],[[4,[36,7]]]],0,0,[[293,[61,[[2,[22]]]]],293],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[279,[61,[[2,[283]]]]],279],[[280,[61,[[2,[283]]]]],280],0,0,0,0,0,[[[520,[10]]],59],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[293,[61,[[2,[62]]]]],293],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[293,[61,[[2,[62]]]]],293],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[525,526],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[528,[527]],5],[[4,[2,7]]]],[26,26],[529,529],[[]],[[]],[530,[[531,[525]]]],[[[2,[1]]],[[4,[3]]]],[[527,24],[[4,[[528,[527]],3]]]],[[527,24,[31,[16]],[31,[16]]],[[4,[[528,[527]],3]]]],[[[528,[527]],5,8,9]],[[26,26],13],[[],13],[[[528,[527]],1],[[4,[[2,[14]],7]]]],[[[528,[527]]],[[4,[7]]]],[[26,19],[[4,[21]]]],[[26,19],[[4,[21]]]],[[3,19],[[4,[21]]]],[[3,19],[[4,[21]]]],[[529,19],20],[[525,19],20],[[[528,[[0,[15,527]]]],19],20],[[527,40],[[4,[[528,[527]],3]]]],[[]],[46,3],[[]],[26,3],[[]],[[]],[[]],[532,[[531,[525]]]],[533,[[531,[525]]]],[[[528,[527]]],[[4,[22,23]]]],[[]],[[]],[[]],[[]],[[]],[525,526],[[[528,[527]]],24],[[[528,[527]],[12,[16]]],[[4,[25,26]]]],[[[528,[527]],[12,[16]]],[[4,[27,26]]]],[529,531],[[525,529],531],[[[528,[527]]],[[4,[[2,[[29,[[31,[16]]]]]],7]]]],[[[528,[527]],1],[[4,[7]]]],[[[528,[527]]]],[[[12,[16]],[31,[30]]],[[531,[24]]]],[[525,[12,[16]],[31,[30]]],[[531,[24]]]],[[[12,[16]],[31,[30]]],531],[[[12,[16]],[31,[30]]],531],[529,13],[[[528,[527]],[12,[11]],[31,[30]]],[[4,[[33,[[528,[527]],32]],7]]]],[[[528,[527]],[12,[11]],[31,[30]]],[[4,[[35,[[528,[527]],34]],7]]]],[[[528,[527]],[12,[11]],[31,[30]]],[[4,[[36,[[528,[527]]]],7]]]],[[[528,[527]]],40],[[[528,[527]]],527],[[]],[[]],[[],47],[[],47],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],41],[[],41],[[],41],[[],41],[[],41],[[[528,[527]]],[[4,[[29,[[31,[16]]]],7]]]],[[[528,[527]],5],[[4,[[2,[[31,[16]]]],7]]]],[[[528,[527]],5],[[4,[[18,[[31,[16]]]],7]]]],[[[528,[527]],5],[[4,[[18,[534]],7]]]],[529,13],[[[12,[16]],[31,[30]]],[[531,[24]]]],[[525,[12,[16]],[31,[30]]],[[531,[24]]]],[[[12,[11]],[31,[30]]],[[531,[24]]]],[[[12,[11]],[31,[30]]],[[531,[24]]]],[[525,[12,[11]],[31,[30]]],[[531,[24]]]],0,0,0,[30,62],[[]],[[]],[30,[[4,[46]]]],[30],[[30,30],13],[[],13],[[30,19],[[4,[21]]]],[[]],[535,30],[[30,126]],[[]],[30,62],[62,30],[30,[[4,[30,46]]]],[[],4],[[],4],[[],41],0,0,[[]],[[]],[[299,59,[61,[60]],[61,[60]],[12,[128]]],[[4,[36,7]]]],[[299,59,[61,[60]],[61,[60]],[12,[22]]],[[4,[36,7]]]],[[299,59,[61,[60]],[61,[60]],[12,[16]]],[[4,[36,7]]]],[[[537,[536]]]],[[[537,[[0,[15,536]]]],19],20],[[]],[536,[[4,[[537,[536]],7]]]],[[]],[[],[[4,[6]]]],[[],4],[[],4],[[],41],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[25,25],[14,14],[127,127],[538,538],[[]],[[]],[[]],[[]],[[25,25],13],[[14,14],13],[[538,538],13],[[],13],[[],13],[[],13],0,0,0,0,0,[[25,19],[[4,[21]]]],[[14,19],[[4,[21]]]],[[127,19],[[4,[21]]]],[[538,19],[[4,[21]]]],[[]],[[]],[[]],[[]],[16,2],[16,2],[16,2],[[]],[[]],[[]],[[]],0,0,0,0,0,[[[12,[16]],538],[[4,[26]]]],0,0,0,[16],[[]],[[[31,[16,63]]]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[[12,[16]]],[[4,[26]]]],[[[12,[16]],125],[[4,[25,26]]]],[[[12,[16]],[31,[30,63]]],[[4,[26]]]],[[],41],[[],41],[[],41],[[],41]],"c":[],"p":[[15,"str"],[4,"Option"],[4,"ConnectError"],[4,"Result"],[6,"SequenceNumber"],[4,"ReplyError"],[4,"ConnectionError"],[4,"RequestKind"],[4,"DiscardMode"],[8,"RequestConnection"],[3,"IoSlice"],[15,"slice"],[15,"bool"],[3,"ExtensionInformation"],[8,"Debug"],[15,"u8"],[8,"AsRef"],[4,"ReplyOrError"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u32"],[4,"ReplyOrIdError"],[15,"usize"],[3,"X11Error"],[4,"ParseError"],[4,"Event"],[6,"EventAndSeqNumber"],[6,"RawEventAndSeqNumber"],[3,"RawFdContainer"],[3,"Vec"],[8,"TryParse"],[3,"Cookie"],[8,"TryParseFd"],[3,"CookieWithFds"],[3,"VoidCookie"],[8,"ReplyRequest"],[8,"ReplyFDsRequest"],[8,"VoidRequest"],[3,"Setup"],[3,"TypeId"],[6,"BufWithFds"],[8,"Sized"],[3,"ListFontsWithInfoCookie"],[3,"IdsExhausted"],[3,"Error"],[3,"String"],[3,"ExtensionManager"],[3,"WmClass"],[4,"WmSizeHintsSpecification"],[3,"AspectRatio"],[3,"WmSizeHints"],[4,"WmHintsState"],[3,"WmHints"],[3,"WmClassCookie"],[3,"WmSizeHintsCookie"],[3,"WmHintsCookie"],[3,"GetPropertyReply"],[6,"Window"],[6,"Atom"],[8,"Into"],[15,"i32"],[3,"Global"],[4,"ErrorKind"],[4,"Ordering"],[4,"Request"],[4,"Reply"],[3,"GetKeyboardMappingReply"],[3,"GetXIDRangeReply"],[3,"GrabPointerReply"],[3,"ListFontsReply"],[3,"QueryPictFormatsReply"],[3,"GetWindowAttributesReply"],[3,"QueryBestSizeReply"],[3,"QueryTreeReply"],[3,"GetRectanglesReply"],[3,"GetModifierMappingReply"],[3,"QueryVersionReply"],[3,"LookupColorReply"],[3,"AllocColorReply"],[3,"ListPropertiesReply"],[3,"GetInputFocusReply"],[3,"QueryTextExtentsReply"],[3,"ListFontsWithInfoReply"],[3,"QueryExtentsReply"],[3,"GetCursorNameReply"],[3,"GetAtomNameReply"],[3,"InputSelectedReply"],[3,"EnableReply"],[3,"ListInstalledColormapsReply"],[3,"QueryColorsReply"],[3,"GetPointerControlReply"],[3,"GetCursorImageAndNameReply"],[3,"QueryPointerReply"],[3,"GetFontPathReply"],[3,"GetCursorImageReply"],[3,"GetSelectionOwnerReply"],[3,"QueryFontReply"],[3,"GetScreenSaverReply"],[3,"GetGeometryReply"],[3,"ListHostsReply"],[3,"QueryPictIndexValuesReply"],[3,"AllocNamedColorReply"],[3,"QueryVersionReply"],[3,"QueryVersionReply"],[3,"GetKeyboardControlReply"],[3,"AllocColorPlanesReply"],[3,"AllocColorCellsReply"],[3,"SetModifierMappingReply"],[3,"GrabKeyboardReply"],[3,"ListExtensionsReply"],[3,"GetPointerMappingReply"],[3,"SetPointerMappingReply"],[3,"QueryVersionReply"],[3,"GetXIDListReply"],[3,"QueryKeymapReply"],[3,"GetVersionReply"],[3,"InternAtomReply"],[3,"TranslateCoordinatesReply"],[3,"QueryFiltersReply"],[3,"GetMotionEventsReply"],[3,"GetImageReply"],[3,"QueryExtensionReply"],[3,"FetchRegionReply"],[8,"ExtInfoProvider"],[8,"Hasher"],[3,"RequestHeader"],[15,"u16"],[3,"EnableRequest"],[3,"QueryVersionRequest"],[6,"Glyphset"],[3,"Glyphinfo"],[6,"Picture"],[15,"i16"],[3,"Trap"],[3,"CreatePictureAux"],[3,"ChangePictureAux"],[3,"CP"],[3,"PictType"],[3,"PictureEnum"],[3,"PictOp"],[3,"PolyEdge"],[3,"PolyMode"],[3,"SubPixel"],[3,"Repeat"],[3,"Directformat"],[3,"Pictforminfo"],[3,"Pictvisual"],[3,"Pictdepth"],[3,"Pictscreen"],[3,"Indexvalue"],[3,"Color"],[3,"Pointfix"],[3,"Linefix"],[3,"Triangle"],[3,"Trapezoid"],[3,"QueryVersionRequest"],[3,"QueryPictFormatsRequest"],[3,"QueryPictIndexValuesRequest"],[3,"CreatePictureRequest"],[3,"ChangePictureRequest"],[3,"SetPictureClipRectanglesRequest"],[3,"FreePictureRequest"],[3,"CompositeRequest"],[3,"TrapezoidsRequest"],[3,"TrianglesRequest"],[3,"TriStripRequest"],[3,"TriFanRequest"],[3,"CreateGlyphSetRequest"],[3,"ReferenceGlyphSetRequest"],[3,"FreeGlyphSetRequest"],[3,"AddGlyphsRequest"],[3,"FreeGlyphsRequest"],[3,"CompositeGlyphs8Request"],[3,"CompositeGlyphs16Request"],[3,"CompositeGlyphs32Request"],[3,"FillRectanglesRequest"],[3,"CreateCursorRequest"],[3,"Transform"],[3,"SetPictureTransformRequest"],[3,"QueryFiltersRequest"],[3,"SetPictureFilterRequest"],[3,"Animcursorelt"],[3,"CreateAnimCursorRequest"],[3,"Spanfix"],[3,"AddTrapsRequest"],[3,"CreateSolidFillRequest"],[3,"CreateLinearGradientRequest"],[3,"CreateRadialGradientRequest"],[3,"CreateConicalGradientRequest"],[6,"Pictformat"],[6,"Cursor"],[6,"Fixed"],[8,"Connection"],[3,"PictureWrapper"],[3,"GlyphsetWrapper"],[6,"Drawable"],[3,"Rectangle"],[6,"Glyph"],[15,"array"],[3,"SubwindowMode"],[3,"SO"],[3,"SK"],[3,"NotifyEvent"],[3,"QueryVersionRequest"],[3,"RectanglesRequest"],[3,"MaskRequest"],[3,"CombineRequest"],[3,"OffsetRequest"],[3,"QueryExtentsRequest"],[3,"SelectInputRequest"],[3,"InputSelectedRequest"],[3,"GetRectanglesRequest"],[6,"Pixmap"],[3,"ClipOrdering"],[3,"GetVersionRequest"],[3,"GetXIDRangeRequest"],[3,"GetXIDListRequest"],[3,"SelectionEventMask"],[3,"CursorNotifyMask"],[3,"BarrierDirections"],[3,"SaveSetMode"],[3,"SaveSetTarget"],[3,"SaveSetMapping"],[3,"QueryVersionRequest"],[3,"ChangeSaveSetRequest"],[3,"SelectionEvent"],[3,"SelectionNotifyEvent"],[3,"SelectSelectionInputRequest"],[3,"CursorNotify"],[3,"CursorNotifyEvent"],[3,"SelectCursorInputRequest"],[3,"GetCursorImageRequest"],[3,"RegionEnum"],[3,"CreateRegionRequest"],[3,"CreateRegionFromBitmapRequest"],[3,"CreateRegionFromWindowRequest"],[3,"CreateRegionFromGCRequest"],[3,"CreateRegionFromPictureRequest"],[3,"DestroyRegionRequest"],[3,"SetRegionRequest"],[3,"CopyRegionRequest"],[3,"UnionRegionRequest"],[3,"IntersectRegionRequest"],[3,"SubtractRegionRequest"],[3,"InvertRegionRequest"],[3,"TranslateRegionRequest"],[3,"RegionExtentsRequest"],[3,"FetchRegionRequest"],[3,"SetGCClipRegionRequest"],[3,"SetWindowShapeRegionRequest"],[3,"SetPictureClipRegionRequest"],[3,"SetCursorNameRequest"],[3,"GetCursorNameRequest"],[3,"GetCursorImageAndNameRequest"],[3,"ChangeCursorRequest"],[3,"ChangeCursorByNameRequest"],[3,"ExpandRegionRequest"],[3,"HideCursorRequest"],[3,"ShowCursorRequest"],[3,"CreatePointerBarrierRequest"],[3,"DeletePointerBarrierRequest"],[6,"Region"],[6,"Barrier"],[3,"RegionWrapper"],[6,"Gcontext"],[3,"Host"],[6,"Colormap"],[3,"Allow"],[6,"Timestamp"],[3,"Screen"],[3,"CreateGCAux"],[3,"ArcMode"],[3,"ChangeGCAux"],[3,"ClientMessageData"],[3,"SetupRequest"],[3,"ChangeKeyboardControlAux"],[3,"AutoRepeatMode"],[3,"CreateWindowAux"],[3,"ChangeWindowAttributesAux"],[3,"BackingStore"],[15,"i8"],[3,"Gravity"],[3,"EventMask"],[3,"ModMask"],[3,"KeyButMask"],[3,"ButtonMask"],[3,"CW"],[3,"ConfigWindow"],[3,"GC"],[3,"ColorFlag"],[3,"KB"],[3,"ConfigureWindowAux"],[3,"CapStyle"],[3,"HostMode"],[3,"Family"],[6,"Keycode"],[6,"Keysym"],[3,"PropMode"],[3,"SetMode"],[3,"Circulate"],[3,"Char2b"],[3,"Point"],[3,"Arc"],[3,"Format"],[3,"VisualClass"],[3,"Visualtype"],[3,"Depth"],[3,"SetupFailed"],[3,"SetupAuthenticate"],[3,"ImageOrder"],[3,"WindowEnum"],[3,"KeyPressEvent"],[3,"ButtonPressEvent"],[3,"Motion"],[3,"MotionNotifyEvent"],[3,"NotifyDetail"],[3,"NotifyMode"],[3,"EnterNotifyEvent"],[3,"FocusInEvent"],[3,"KeymapNotifyEvent"],[3,"ExposeEvent"],[3,"GraphicsExposureEvent"],[3,"NoExposureEvent"],[3,"Visibility"],[3,"VisibilityNotifyEvent"],[3,"CreateNotifyEvent"],[3,"DestroyNotifyEvent"],[3,"UnmapNotifyEvent"],[3,"MapNotifyEvent"],[3,"MapRequestEvent"],[3,"ReparentNotifyEvent"],[3,"ConfigureNotifyEvent"],[3,"ConfigureRequestEvent"],[3,"GravityNotifyEvent"],[3,"ResizeRequestEvent"],[3,"Place"],[3,"CirculateNotifyEvent"],[3,"Property"],[3,"PropertyNotifyEvent"],[3,"SelectionClearEvent"],[3,"Time"],[3,"AtomEnum"],[3,"SelectionRequestEvent"],[3,"SelectionNotifyEvent"],[3,"ColormapState"],[3,"ColormapEnum"],[3,"ColormapNotifyEvent"],[3,"ClientMessageEvent"],[3,"Mapping"],[3,"MappingNotifyEvent"],[3,"GeGenericEvent"],[3,"WindowClass"],[3,"BackPixmap"],[3,"CreateWindowRequest"],[3,"ChangeWindowAttributesRequest"],[3,"MapState"],[3,"GetWindowAttributesRequest"],[3,"DestroyWindowRequest"],[3,"DestroySubwindowsRequest"],[3,"ChangeSaveSetRequest"],[3,"ReparentWindowRequest"],[3,"MapWindowRequest"],[3,"MapSubwindowsRequest"],[3,"UnmapWindowRequest"],[3,"UnmapSubwindowsRequest"],[3,"StackMode"],[3,"ConfigureWindowRequest"],[3,"CirculateWindowRequest"],[3,"GetGeometryRequest"],[3,"QueryTreeRequest"],[3,"InternAtomRequest"],[3,"GetAtomNameRequest"],[3,"ChangePropertyRequest"],[3,"DeletePropertyRequest"],[3,"GetPropertyType"],[3,"GetPropertyRequest"],[3,"ListPropertiesRequest"],[3,"SetSelectionOwnerRequest"],[3,"GetSelectionOwnerRequest"],[3,"ConvertSelectionRequest"],[3,"SendEventDest"],[3,"SendEventRequest"],[3,"GrabMode"],[3,"GrabStatus"],[3,"CursorEnum"],[3,"GrabPointerRequest"],[3,"UngrabPointerRequest"],[3,"ButtonIndex"],[3,"GrabButtonRequest"],[3,"UngrabButtonRequest"],[3,"ChangeActivePointerGrabRequest"],[3,"GrabKeyboardRequest"],[3,"UngrabKeyboardRequest"],[3,"Grab"],[3,"GrabKeyRequest"],[3,"UngrabKeyRequest"],[3,"AllowEventsRequest"],[3,"GrabServerRequest"],[3,"UngrabServerRequest"],[3,"QueryPointerRequest"],[3,"Timecoord"],[3,"GetMotionEventsRequest"],[3,"TranslateCoordinatesRequest"],[3,"WarpPointerRequest"],[3,"InputFocus"],[3,"SetInputFocusRequest"],[3,"GetInputFocusRequest"],[3,"QueryKeymapRequest"],[3,"OpenFontRequest"],[3,"CloseFontRequest"],[3,"FontDraw"],[3,"Fontprop"],[3,"Charinfo"],[3,"QueryFontRequest"],[3,"QueryTextExtentsRequest"],[3,"Str"],[3,"ListFontsRequest"],[3,"ListFontsWithInfoRequest"],[3,"SetFontPathRequest"],[3,"GetFontPathRequest"],[3,"CreatePixmapRequest"],[3,"FreePixmapRequest"],[3,"GX"],[3,"LineStyle"],[3,"JoinStyle"],[3,"FillStyle"],[3,"FillRule"],[3,"CreateGCRequest"],[3,"ChangeGCRequest"],[3,"CopyGCRequest"],[3,"SetDashesRequest"],[3,"SetClipRectanglesRequest"],[3,"FreeGCRequest"],[3,"ClearAreaRequest"],[3,"CopyAreaRequest"],[3,"CopyPlaneRequest"],[3,"CoordMode"],[3,"PolyPointRequest"],[3,"PolyLineRequest"],[3,"Segment"],[3,"PolySegmentRequest"],[3,"PolyRectangleRequest"],[3,"PolyArcRequest"],[3,"PolyShape"],[3,"FillPolyRequest"],[3,"PolyFillRectangleRequest"],[3,"PolyFillArcRequest"],[3,"ImageFormat"],[3,"PutImageRequest"],[3,"GetImageRequest"],[3,"PolyText8Request"],[3,"PolyText16Request"],[3,"ImageText8Request"],[3,"ImageText16Request"],[3,"ColormapAlloc"],[3,"CreateColormapRequest"],[3,"FreeColormapRequest"],[3,"CopyColormapAndFreeRequest"],[3,"InstallColormapRequest"],[3,"UninstallColormapRequest"],[3,"ListInstalledColormapsRequest"],[3,"AllocColorRequest"],[3,"AllocNamedColorRequest"],[3,"AllocColorCellsRequest"],[3,"AllocColorPlanesRequest"],[3,"FreeColorsRequest"],[3,"Coloritem"],[3,"StoreColorsRequest"],[3,"StoreNamedColorRequest"],[3,"Rgb"],[3,"QueryColorsRequest"],[3,"LookupColorRequest"],[3,"PixmapEnum"],[3,"CreateCursorRequest"],[3,"FontEnum"],[3,"CreateGlyphCursorRequest"],[3,"FreeCursorRequest"],[3,"RecolorCursorRequest"],[3,"QueryShapeOf"],[3,"QueryBestSizeRequest"],[3,"QueryExtensionRequest"],[3,"ListExtensionsRequest"],[3,"ChangeKeyboardMappingRequest"],[3,"GetKeyboardMappingRequest"],[3,"LedMode"],[3,"ChangeKeyboardControlRequest"],[3,"GetKeyboardControlRequest"],[3,"BellRequest"],[3,"ChangePointerControlRequest"],[3,"GetPointerControlRequest"],[3,"Blanking"],[3,"Exposures"],[3,"SetScreenSaverRequest"],[3,"GetScreenSaverRequest"],[3,"ChangeHostsRequest"],[3,"ListHostsRequest"],[3,"AccessControl"],[3,"SetAccessControlRequest"],[3,"CloseDown"],[3,"SetCloseDownModeRequest"],[3,"Kill"],[3,"KillClientRequest"],[3,"RotatePropertiesRequest"],[3,"ScreenSaver"],[3,"ForceScreenSaverRequest"],[3,"MappingStatus"],[3,"SetPointerMappingRequest"],[3,"GetPointerMappingRequest"],[3,"MapIndex"],[3,"SetModifierMappingRequest"],[3,"GetModifierMappingRequest"],[3,"NoOperationRequest"],[6,"Font"],[3,"ColormapWrapper"],[6,"Visualid"],[3,"CursorWrapper"],[3,"GcontextWrapper"],[3,"PixmapWrapper"],[3,"WindowWrapper"],[3,"FontWrapper"],[6,"Fontable"],[3,"Connect"],[8,"Iterator"],[3,"DefaultStream"],[6,"RawFd"],[8,"Stream"],[3,"RustConnection"],[4,"PollMode"],[4,"ConnectAddress"],[6,"Result"],[3,"TcpStream"],[3,"UnixStream"],[6,"BufWithFds"],[8,"IntoRawFd"],[8,"ConnectionExt"],[3,"GrabServer"],[4,"BigRequests"],[13,"Incomplete"],[8,"ConnectionExt"],[8,"ConnectionExt"],[8,"ConnectionExt"],[8,"ConnectionExt"],[8,"ConnectionExt"],[8,"ConnectionExt"],[8,"ConnectionExt"],[8,"Serialize"],[8,"Request"]]},\
"x11rb_protocol":{"doc":"X11 rust bindings.","t":"GENNGGDGLLLLLLLLAALLLLLALLLLLLALLLLAAALLLLLLLLAAADLLLLLLLLLLLLLGDNNEGNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLENNCNNNNNNNNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLENDNLLLLLLLLLMLLLLLLLLMLLFMMLLLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLALLLLALLLLLLLLLLLLLLLAAARDDRRLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLLLLLLLLLRDDRRLLLLMMLLLLLLLLLLLLLLLLLLLLMMMLLMLLLLLLLLLLLLLSRRSSSSSDDDRSSSSSSSRRRRSSSSSSSSSSSSDRRRRRRRRDDDDDDDDDDDDDDDDSSSSSSSSSSSSSSSSSDSRRRRDGDDDRRSGDGSSSSSSSSSSSDSDSSSSSSSSSSSRRRSSSDDDGDDGDDDDDRRRRDDDDDDDDRSSDDSSRRRSSSSSDDDDDRRRRDDDDDDDDSSSRRSMMMMMLLMMLLMMLLMMMLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMLLMMLLMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLMLLLLLLMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLMMLLMMMMMMMMMLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMSSRDRDDSRSSDDGRDRDRDGRRDDDDRDRSDDSDSRRMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLMMLMMMMMMLLLLLLLLLLLLLLLLLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMRRRDDDDDDRRLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLMMMLLLLLLMMMLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLRGDRRRRRRRRRRRDDDDDDDDDDDDDSRRSSDDRDRDDRRRDDDDDDRDSRRDDSSSSSSSRDDRSGDDSSRSSRRRRRRSSRRRDDDDDDDDDDDDDDDRDRSDRRMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMMMMMMMMMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMSRSSRRRRRSRSSSSSSSSSSSSSSSSSSSSSRSDDDDDDDDDDDDDGDDSSSSSSSSSRSSSSSSSSSSSSSSSSSSSSSSSSRSRDDDDGGDDDGSSSSRRRRRRRRRSSRRRSRRSSSSRSSRRSSRRRSSSRSSSRRSRSRRRRRRRRSSSRSSSSSSSSDDDDDDDDDDDDDDDDDDGDDDDDDDDDGDDDDDDDDDDDDDDDDDDDDDDDDGDSSSSSSSSSRSRRRSSSSSRDDDDDGSSSRSSSSRSDDDDSSSSRSSSRRSSSRSRSRRRRRSSSSDDDDDGGDDGDDDDDDDDDRRRRRRRRRRRRRRRRSRRRRRSRRSSDRGDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDSSDDRRRRSSSSSSSRSSSRSSSSDDDDDDDDSDDSSRSSSRSRRDDGGGDGDDSRSSSSRSSRRRRRRSSSRSSGDDDDDDDDDDDDDDDDSSSSSSSSSSSSSSSSSSSSRRRRRRSSSSSSSSSRSDDDDDDDDDDDDRSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSRRDDDDSSSSSSSSRSSSSSSSDSSSSSRSSSSSSSSSSRRRRRRRRRSSSSSSRSRGDDDDDDDDDDDDDDDDDSRRRRRRRRDDDDDDDDDDDDDDDDDSRSSRRSSSRSSRSSSSSSSSSSSSRSSDDDDDDDSSRRRRSSRRRRRRRRRRSSSSSSSSSSSSSSSRRSSSSSSSSSSSSSSSSSDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDSSSSSRSDDGDDSSSRRRRRSRSRRRSSSDDDDDDDDDRSSSRSDDDGDRSSSSSSSRSSSSSSSSSSSSSDGDDSSSSSSSSSSMMMMMMMLMMMMMMMLMMLLMMMMLLLMMMMMMLMMLMLLMMMMMMMMMMMLLMMLLMMLLMMLLMMMLLMMMLLMMMMLMMLMMLMMLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLMMLLMMLMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLMMMLMMMMMMMMLMMMMMMMLLMMLLMMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMLMMMMMMMMMMMMLLMMMMMMMLLMMMLLMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMLLMMMMMMMMMMMMMMMMLMMMMMMMMMMMLLMMLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLMMLMMMLMMMMMMMMMLMMMMMMLMMLMMMLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLMMLLMMMMMMMMMMLMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLMMLLLLLLLLLMMMMMMMMLLMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMMMMMLLMMLMLLMMMMMMMMMMMMMMMMMMLLMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMLLMMMMMMLLMMMMMMMLLMMLLMMLLMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLMMMMMMMMMMLMMMMMMMMMMMMLMMLMMMMMMMMMMMMMMMMMMMMMLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMLMMMMMMMMMMMMMMMMMMMMMMMMMDLLLLLLLLLLLLLLEQSNIDNQQIGIIDIIIIDMLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLKKKLLLLMMMMMFMMMKKKLLLLLLLLLLLLKLKLLLLSSDSSSSSSSSLLLLLLLLLLFLLLLL","n":["BufWithFds","DiscardMode","DiscardReply","DiscardReplyAndError","PiecewiseBuf","RawEventAndSeqNumber","RawFdContainer","SequenceNumber","as_raw_fd","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","close","connect","connection","drop","eq","eq","equivalent","equivalent","errors","fmt","fmt","from","from","from","hash","id_allocator","into","into","into_raw_fd","new","packet_reader","parse_display","protocol","to_owned","try_clone","try_from","try_from","try_into","try_into","type_id","type_id","wrapper","x11_utils","xauth","Connect","advance","borrow","borrow_mut","buffer","fmt","from","into","into_setup","new","try_from","try_into","type_id","with_authorization","BufWithFds","Connection","NoReply","NoReply","PollReply","RawEventAndSeqNumber","Reply","ReplyFdKind","ReplyWithFDs","ReplyWithoutFDs","TryAgain","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","discard_reply","enqueue_fds","enqueue_packet","eq","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","new","poll_check_for_reply_or_error","poll_for_event_with_sequence","poll_for_reply","poll_for_reply_or_error","prepare_check_for_reply_or_error","send_request","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ConnectError","ConversionFailed","DisplayParsingError","IdsExhausted","Incomplete","InsufficientData","InsufficientMemory","InvalidExpression","InvalidScreen","InvalidValue","IoError","MissingFileDescriptors","ParseError","ParseError","SetupAuthenticate","SetupFailed","UnknownError","ZeroIdMask","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","into","into","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","expected","received","IdAllocator","IdsExhausted","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","from","from","generate_id","into","into","new","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update_xid_range","PacketReader","advance","borrow","borrow_mut","buffer","default","fmt","from","into","new","remaining_capacity","try_from","try_into","type_id","ConnectAddress","Hostname","ParsedDisplay","Socket","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connect_instruction","display","eq","eq","equivalent","equivalent","fmt","fmt","from","from","host","into","into","parse_display","protocol","screen","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Access","Alloc","AllocColor","AllocColor","AllocColorCells","AllocColorCells","AllocColorPlanes","AllocColorPlanes","AllocNamedColor","AllocNamedColor","AllowEvents","Atom","Bell","BigreqEnable","BigreqEnable","ButtonPress","ButtonRelease","ChangeActivePointerGrab","ChangeGC","ChangeHosts","ChangeKeyboardControl","ChangeKeyboardMapping","ChangePointerControl","ChangeProperty","ChangeSaveSet","ChangeWindowAttributes","CirculateNotify","CirculateRequest","CirculateWindow","ClearArea","ClientMessage","CloseFont","Colormap","ColormapNotify","ConfigureNotify","ConfigureRequest","ConfigureWindow","ConvertSelection","CopyArea","CopyColormapAndFree","CopyGC","CopyPlane","CreateColormap","CreateCursor","CreateGC","CreateGlyphCursor","CreateNotify","CreatePixmap","CreateWindow","Cursor","DeleteProperty","DestroyNotify","DestroySubwindows","DestroyWindow","Drawable","EnterNotify","Error","ErrorKind","Event","Expose","FillPoly","FocusIn","FocusOut","Font","ForceScreenSaver","FreeColormap","FreeColors","FreeCursor","FreeGC","FreePixmap","GContext","GeGeneric","GeQueryVersion","GeQueryVersion","GetAtomName","GetAtomName","GetFontPath","GetFontPath","GetGeometry","GetGeometry","GetImage","GetImage","GetInputFocus","GetInputFocus","GetKeyboardControl","GetKeyboardControl","GetKeyboardMapping","GetKeyboardMapping","GetModifierMapping","GetModifierMapping","GetMotionEvents","GetMotionEvents","GetPointerControl","GetPointerControl","GetPointerMapping","GetPointerMapping","GetProperty","GetProperty","GetScreenSaver","GetScreenSaver","GetSelectionOwner","GetSelectionOwner","GetWindowAttributes","GetWindowAttributes","GrabButton","GrabKey","GrabKeyboard","GrabKeyboard","GrabPointer","GrabPointer","GrabServer","GraphicsExposure","GravityNotify","IDChoice","ImageText16","ImageText8","Implementation","InstallColormap","InternAtom","InternAtom","KeyPress","KeyRelease","KeymapNotify","KillClient","LeaveNotify","Length","ListExtensions","ListExtensions","ListFonts","ListFonts","ListFontsWithInfo","ListFontsWithInfo","ListHosts","ListHosts","ListInstalledColormaps","ListInstalledColormaps","ListProperties","ListProperties","LookupColor","LookupColor","MapNotify","MapRequest","MapSubwindows","MapWindow","MappingNotify","Match","MotionNotify","Name","NoExposure","NoOperation","OpenFont","Pixmap","PolyArc","PolyFillArc","PolyFillRectangle","PolyLine","PolyPoint","PolyRectangle","PolySegment","PolyText16","PolyText8","PropertyNotify","PutImage","QueryBestSize","QueryBestSize","QueryColors","QueryColors","QueryExtension","QueryExtension","QueryFont","QueryFont","QueryKeymap","QueryKeymap","QueryPointer","QueryPointer","QueryTextExtents","QueryTextExtents","QueryTree","QueryTree","RecolorCursor","RenderAddGlyphs","RenderAddTraps","RenderChangePicture","RenderComposite","RenderCompositeGlyphs16","RenderCompositeGlyphs32","RenderCompositeGlyphs8","RenderCreateAnimCursor","RenderCreateConicalGradient","RenderCreateCursor","RenderCreateGlyphSet","RenderCreateLinearGradient","RenderCreatePicture","RenderCreateRadialGradient","RenderCreateSolidFill","RenderFillRectangles","RenderFreeGlyphSet","RenderFreeGlyphs","RenderFreePicture","RenderGlyph","RenderGlyphSet","RenderPictFormat","RenderPictOp","RenderPicture","RenderQueryFilters","RenderQueryFilters","RenderQueryPictFormats","RenderQueryPictFormats","RenderQueryPictIndexValues","RenderQueryPictIndexValues","RenderQueryVersion","RenderQueryVersion","RenderReferenceGlyphSet","RenderSetPictureClipRectangles","RenderSetPictureFilter","RenderSetPictureTransform","RenderTrapezoids","RenderTriFan","RenderTriStrip","RenderTriangles","ReparentNotify","ReparentWindow","Reply","Request","Request","ResizeRequest","RotateProperties","SelectionClear","SelectionNotify","SelectionRequest","SendEvent","SetAccessControl","SetClipRectangles","SetCloseDownMode","SetDashes","SetFontPath","SetInputFocus","SetModifierMapping","SetModifierMapping","SetPointerMapping","SetPointerMapping","SetScreenSaver","SetSelectionOwner","ShapeCombine","ShapeGetRectangles","ShapeGetRectangles","ShapeInputSelected","ShapeInputSelected","ShapeMask","ShapeNotify","ShapeOffset","ShapeQueryExtents","ShapeQueryExtents","ShapeQueryVersion","ShapeQueryVersion","ShapeRectangles","ShapeSelectInput","StoreColors","StoreNamedColor","TranslateCoordinates","TranslateCoordinates","UngrabButton","UngrabKey","UngrabKeyboard","UngrabPointer","UngrabServer","UninstallColormap","Unknown","Unknown","Unknown","UnmapNotify","UnmapSubwindows","UnmapWindow","Value","VisibilityNotify","Void","WarpPointer","Window","XcMiscGetVersion","XcMiscGetVersion","XcMiscGetXIDList","XcMiscGetXIDList","XcMiscGetXIDRange","XcMiscGetXIDRange","XfixesBadRegion","XfixesChangeCursor","XfixesChangeCursorByName","XfixesChangeSaveSet","XfixesCopyRegion","XfixesCreatePointerBarrier","XfixesCreateRegion","XfixesCreateRegionFromBitmap","XfixesCreateRegionFromGC","XfixesCreateRegionFromPicture","XfixesCreateRegionFromWindow","XfixesCursorNotify","XfixesDeletePointerBarrier","XfixesDestroyRegion","XfixesExpandRegion","XfixesFetchRegion","XfixesFetchRegion","XfixesGetCursorImage","XfixesGetCursorImage","XfixesGetCursorImageAndName","XfixesGetCursorImageAndName","XfixesGetCursorName","XfixesGetCursorName","XfixesHideCursor","XfixesIntersectRegion","XfixesInvertRegion","XfixesQueryVersion","XfixesQueryVersion","XfixesRegionExtents","XfixesSelectCursorInput","XfixesSelectSelectionInput","XfixesSelectionNotify","XfixesSetCursorName","XfixesSetGCClipRegion","XfixesSetPictureClipRegion","XfixesSetRegion","XfixesSetWindowShapeRegion","XfixesShowCursor","XfixesSubtractRegion","XfixesTranslateRegion","XfixesUnionRegion","bigreq","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_wire_error_code","ge","hash","into","into","into","into","into_owned","parse","parse","partial_cmp","raw_response_type","render","reply_parser","response_type","sent_event","server_generated","shape","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wire_sequence_number","xc_misc","xfixes","xproto","ENABLE_REQUEST","EnableReply","EnableRequest","X11_EXTENSION_NAME","X11_XML_VERSION","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","hash","into","into","length","maximum_request_length","partial_cmp","partial_cmp","sequence","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_parse","try_parse_fd","try_parse_request","type_id","type_id","QUERY_VERSION_REQUEST","QueryVersionReply","QueryVersionRequest","X11_EXTENSION_NAME","X11_XML_VERSION","borrow","borrow","borrow_mut","borrow_mut","client_major_version","client_minor_version","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","equivalent","equivalent","fmt","fmt","from","from","hash","hash","into","into","length","major_version","minor_version","partial_cmp","partial_cmp","sequence","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_parse","try_parse_fd","try_parse_request","type_id","type_id","ADD","ADD_GLYPHS_REQUEST","ADD_TRAPS_REQUEST","ALPHA_MAP","ALPHA_X_ORIGIN","ALPHA_Y_ORIGIN","ATOP","ATOP_REVERSE","AddGlyphsRequest","AddTrapsRequest","Animcursorelt","CHANGE_PICTURE_REQUEST","CLEAR","CLIP_MASK","CLIP_X_ORIGIN","CLIP_Y_ORIGIN","COLOR_BURN","COLOR_DODGE","COMPONENT_ALPHA","COMPOSITE_GLYPHS16_REQUEST","COMPOSITE_GLYPHS32_REQUEST","COMPOSITE_GLYPHS8_REQUEST","COMPOSITE_REQUEST","CONJOINT_ATOP","CONJOINT_ATOP_REVERSE","CONJOINT_CLEAR","CONJOINT_DST","CONJOINT_IN","CONJOINT_IN_REVERSE","CONJOINT_OUT","CONJOINT_OUT_REVERSE","CONJOINT_OVER","CONJOINT_OVER_REVERSE","CONJOINT_SRC","CONJOINT_XOR","CP","CREATE_ANIM_CURSOR_REQUEST","CREATE_CONICAL_GRADIENT_REQUEST","CREATE_CURSOR_REQUEST","CREATE_GLYPH_SET_REQUEST","CREATE_LINEAR_GRADIENT_REQUEST","CREATE_PICTURE_REQUEST","CREATE_RADIAL_GRADIENT_REQUEST","CREATE_SOLID_FILL_REQUEST","ChangePictureAux","ChangePictureRequest","Color","CompositeGlyphs16Request","CompositeGlyphs32Request","CompositeGlyphs8Request","CompositeRequest","CreateAnimCursorRequest","CreateConicalGradientRequest","CreateCursorRequest","CreateGlyphSetRequest","CreateLinearGradientRequest","CreatePictureAux","CreatePictureRequest","CreateRadialGradientRequest","CreateSolidFillRequest","DARKEN","DIFFERENCE","DIRECT","DISJOINT_ATOP","DISJOINT_ATOP_REVERSE","DISJOINT_CLEAR","DISJOINT_DST","DISJOINT_IN","DISJOINT_IN_REVERSE","DISJOINT_OUT","DISJOINT_OUT_REVERSE","DISJOINT_OVER","DISJOINT_OVER_REVERSE","DISJOINT_SRC","DISJOINT_XOR","DITHER","DST","Directformat","EXCLUSION","FILL_RECTANGLES_REQUEST","FREE_GLYPHS_REQUEST","FREE_GLYPH_SET_REQUEST","FREE_PICTURE_REQUEST","FillRectanglesRequest","Fixed","FreeGlyphSetRequest","FreeGlyphsRequest","FreePictureRequest","GLYPH_ERROR","GLYPH_SET_ERROR","GRAPHICS_EXPOSURE","Glyph","Glyphinfo","Glyphset","HARD_LIGHT","HORIZONTAL_BGR","HORIZONTAL_RGB","HSL_COLOR","HSL_HUE","HSL_LUMINOSITY","HSL_SATURATION","IMPRECISE","IN","INDEXED","IN_REVERSE","Indexvalue","LIGHTEN","Linefix","MULTIPLY","NONE","NONE","NONE","NORMAL","OUT","OUT_REVERSE","OVER","OVERLAY","OVER_REVERSE","PAD","PICTURE_ERROR","PICT_FORMAT_ERROR","PICT_OP_ERROR","POLY_EDGE","POLY_MODE","PRECISE","PictOp","PictType","Pictdepth","Pictformat","Pictforminfo","Pictscreen","Picture","PictureEnum","Pictvisual","Pointfix","PolyEdge","PolyMode","QUERY_FILTERS_REQUEST","QUERY_PICT_FORMATS_REQUEST","QUERY_PICT_INDEX_VALUES_REQUEST","QUERY_VERSION_REQUEST","QueryFiltersReply","QueryFiltersRequest","QueryPictFormatsReply","QueryPictFormatsRequest","QueryPictIndexValuesReply","QueryPictIndexValuesRequest","QueryVersionReply","QueryVersionRequest","REFERENCE_GLYPH_SET_REQUEST","REFLECT","REPEAT","ReferenceGlyphSetRequest","Repeat","SATURATE","SCREEN","SET_PICTURE_CLIP_RECTANGLES_REQUEST","SET_PICTURE_FILTER_REQUEST","SET_PICTURE_TRANSFORM_REQUEST","SHARP","SMOOTH","SOFT_LIGHT","SRC","SUBWINDOW_MODE","SetPictureClipRectanglesRequest","SetPictureFilterRequest","SetPictureTransformRequest","Spanfix","SubPixel","TRAPEZOIDS_REQUEST","TRIANGLES_REQUEST","TRI_FAN_REQUEST","TRI_STRIP_REQUEST","Transform","Trap","Trapezoid","TrapezoidsRequest","TriFanRequest","TriStripRequest","Triangle","TrianglesRequest","UNKNOWN","VERTICAL_BGR","VERTICAL_RGB","X11_EXTENSION_NAME","X11_XML_VERSION","XOR","aliases","alpha","alpha","alpha_mask","alpha_shift","alphamap","alphamap","alphamap","alphamap","alphaxorigin","alphaxorigin","alphaxorigin","alphaxorigin","alphayorigin","alphayorigin","alphayorigin","alphayorigin","angle","bitor","bitor","bitor_assign","blue","blue","blue_mask","blue_shift","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bot","bottom","center","cid","cid","client_major_version","client_minor_version","clip_x_origin","clip_y_origin","clipmask","clipmask","clipmask","clipmask","clipxorigin","clipxorigin","clipxorigin","clipxorigin","clipyorigin","clipyorigin","clipyorigin","clipyorigin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","color","colormap","colors","colors","colors","componentalpha","componentalpha","componentalpha","componentalpha","cursor","cursors","data","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delay","depth","depth","depths","direct","dither","dither","dither","dither","drawable","drawable","dst","dst","dst","dst","dst","dst","dst","dst","dst","dst_x","dst_y","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","existing","fallback","filter","filters","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format","format","format","formats","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","glyphcmds","glyphcmds","glyphcmds","glyphids","glyphs","glyphs","glyphset","glyphset","glyphset","glyphset","glyphset","glyphset","graphicsexposure","graphicsexposure","graphicsexposure","graphicsexposure","green","green","green_mask","green_shift","gsid","gsid","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","id","inner","inner_radius","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","l","left","length","length","length","length","major_version","mask","mask_format","mask_format","mask_format","mask_format","mask_format","mask_format","mask_format","mask_x","mask_y","matrix11","matrix12","matrix13","matrix21","matrix22","matrix23","matrix31","matrix32","matrix33","minor_version","new","new","num_aliases","num_depths","num_depths","num_filters","num_formats","num_screens","num_subpixel","num_values","num_visuals","num_visuals","op","op","op","op","op","op","op","op","op","outer","outer_radius","p1","p1","p1","p2","p2","p2","p3","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","picture","picture","picture","picture","picture","picture","picture","picture","picture","picture","pid","pixel","points","points","polyedge","polyedge","polyedge","polyedge","polymode","polymode","polymode","polymode","r","rectangles","rects","red","red","red_mask","red_shift","repeat","repeat","repeat","repeat","right","screens","sequence","sequence","sequence","sequence","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","source","src","src","src","src","src","src","src","src","src_x","src_x","src_x","src_x","src_x","src_x","src_x","src_x","src_y","src_y","src_y","src_y","src_y","src_y","src_y","src_y","stops","stops","stops","subpixels","subwindowmode","subwindowmode","subwindowmode","subwindowmode","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","top","transform","traps","traps","triangles","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_list","value_list","values","values","visual","visuals","width","width","x","x","x","x_off","x_off","y","y","y","y","y_off","y_off","BOUNDING","CLIP","COMBINE_REQUEST","CombineRequest","GET_RECTANGLES_REQUEST","GetRectanglesReply","GetRectanglesRequest","INPUT","INPUT_SELECTED_REQUEST","INTERSECT","INVERT","InputSelectedReply","InputSelectedRequest","Kind","MASK_REQUEST","MaskRequest","NOTIFY_EVENT","NotifyEvent","OFFSET_REQUEST","OffsetRequest","Op","QUERY_EXTENTS_REQUEST","QUERY_VERSION_REQUEST","QueryExtentsReply","QueryExtentsRequest","QueryVersionReply","QueryVersionRequest","RECTANGLES_REQUEST","RectanglesRequest","SELECT_INPUT_REQUEST","SET","SK","SO","SUBTRACT","SelectInputRequest","UNION","X11_EXTENSION_NAME","X11_XML_VERSION","affected_window","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounding_shape_extents_height","bounding_shape_extents_width","bounding_shape_extents_x","bounding_shape_extents_y","bounding_shaped","clip_shape_extents_height","clip_shape_extents_width","clip_shape_extents_x","clip_shape_extents_y","clip_shaped","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","destination_kind","destination_kind","destination_kind","destination_kind","destination_window","destination_window","destination_window","destination_window","destination_window","destination_window","destination_window","enable","enabled","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extents_height","extents_width","extents_x","extents_y","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_owned","length","length","length","length","major_version","minor_version","operation","operation","operation","ordering","ordering","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","rectangles","rectangles","rectangles_len","response_type","sequence","sequence","sequence","sequence","sequence","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","server_time","shape_kind","shaped","source_bitmap","source_kind","source_kind","source_window","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","window","x_offset","x_offset","x_offset","x_offset","y_offset","y_offset","y_offset","y_offset","GET_VERSION_REQUEST","GET_XID_LIST_REQUEST","GET_XID_RANGE_REQUEST","GetVersionReply","GetVersionRequest","GetXIDListReply","GetXIDListRequest","GetXIDRangeReply","GetXIDRangeRequest","X11_EXTENSION_NAME","X11_XML_VERSION","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_major_version","client_minor_version","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","count","count","default","default","default","default","default","default","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","ids","ids_len","into","into","into","into","into","into","length","length","length","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","sequence","sequence","sequence","serialize","serialize","serialize","serialize","serialize","serialize","server_major_version","server_minor_version","start_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_request","try_parse_request","try_parse_request","type_id","type_id","type_id","type_id","type_id","type_id","BAD_REGION_ERROR","Barrier","BarrierDirections","CHANGE_CURSOR_BY_NAME_REQUEST","CHANGE_CURSOR_REQUEST","CHANGE_SAVE_SET_REQUEST","COPY_REGION_REQUEST","CREATE_POINTER_BARRIER_REQUEST","CREATE_REGION_FROM_BITMAP_REQUEST","CREATE_REGION_FROM_GC_REQUEST","CREATE_REGION_FROM_PICTURE_REQUEST","CREATE_REGION_FROM_WINDOW_REQUEST","CREATE_REGION_REQUEST","CURSOR_NOTIFY_EVENT","ChangeCursorByNameRequest","ChangeCursorRequest","ChangeSaveSetRequest","CopyRegionRequest","CreatePointerBarrierRequest","CreateRegionFromBitmapRequest","CreateRegionFromGCRequest","CreateRegionFromPictureRequest","CreateRegionFromWindowRequest","CreateRegionRequest","CursorNotify","CursorNotifyEvent","CursorNotifyMask","DELETE","DELETE_POINTER_BARRIER_REQUEST","DESTROY_REGION_REQUEST","DISPLAY_CURSOR","DISPLAY_CURSOR","DeletePointerBarrierRequest","DestroyRegionRequest","EXPAND_REGION_REQUEST","ExpandRegionRequest","FETCH_REGION_REQUEST","FetchRegionReply","FetchRegionRequest","GET_CURSOR_IMAGE_AND_NAME_REQUEST","GET_CURSOR_IMAGE_REQUEST","GET_CURSOR_NAME_REQUEST","GetCursorImageAndNameReply","GetCursorImageAndNameRequest","GetCursorImageReply","GetCursorImageRequest","GetCursorNameReply","GetCursorNameRequest","HIDE_CURSOR_REQUEST","HideCursorRequest","INSERT","INTERSECT_REGION_REQUEST","INVERT_REGION_REQUEST","IntersectRegionRequest","InvertRegionRequest","MAP","NEAREST","NEGATIVE_X","NEGATIVE_Y","NONE","POSITIVE_X","POSITIVE_Y","QUERY_VERSION_REQUEST","QueryVersionReply","QueryVersionRequest","REGION_EXTENTS_REQUEST","ROOT","Region","RegionEnum","RegionExtentsRequest","SELECTION_CLIENT_CLOSE","SELECTION_CLIENT_CLOSE","SELECTION_NOTIFY_EVENT","SELECTION_WINDOW_DESTROY","SELECTION_WINDOW_DESTROY","SELECT_CURSOR_INPUT_REQUEST","SELECT_SELECTION_INPUT_REQUEST","SET_CURSOR_NAME_REQUEST","SET_GC_CLIP_REGION_REQUEST","SET_PICTURE_CLIP_REGION_REQUEST","SET_REGION_REQUEST","SET_SELECTION_OWNER","SET_SELECTION_OWNER","SET_WINDOW_SHAPE_REGION_REQUEST","SHOW_CURSOR_REQUEST","SUBTRACT_REGION_REQUEST","SaveSetMapping","SaveSetMode","SaveSetTarget","SelectCursorInputRequest","SelectSelectionInputRequest","SelectionEvent","SelectionEventMask","SelectionNotifyEvent","SetCursorNameRequest","SetGCClipRegionRequest","SetPictureClipRegionRequest","SetRegionRequest","SetWindowShapeRegionRequest","ShowCursorRequest","SubtractRegionRequest","TRANSLATE_REGION_REQUEST","TranslateRegionRequest","UNION_REGION_REQUEST","UNMAP","UnionRegionRequest","X11_EXTENSION_NAME","X11_XML_VERSION","atom","barrier","barrier","bitmap","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bounds","client_major_version","client_minor_version","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cursor","cursor","cursor_atom","cursor_image","cursor_image","cursor_serial","cursor_serial","cursor_serial","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dest","dest_kind","destination","destination","destination","destination","destination","destination","destination","destination","devices","directions","dx","dy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event_mask","event_mask","extents","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gc","gc","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_owned","into_owned","into_owned","into_owned","into_owned","kind","left","length","length","length","length","length","major_version","map","minor_version","mode","name","name","name","name","name","nbytes","nbytes","owner","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","picture","picture","rectangles","rectangles","rectangles","region","region","region","region","region","region","region","region","region","region","region","region","response_type","response_type","right","selection","selection","selection_timestamp","sequence","sequence","sequence","sequence","sequence","sequence","sequence","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","source","source","source","source","source1","source1","source1","source2","source2","source2","src","subtype","subtype","target","timestamp","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","width","width","window","window","window","window","window","window","window","window","window","x","x","x1","x2","x_offset","x_origin","x_origin","xhot","xhot","y","y","y1","y2","y_offset","y_origin","y_origin","yhot","yhot","ABOVE","ACCESS_ERROR","ACTIVE","ALL","ALLOC_COLOR_CELLS_REQUEST","ALLOC_COLOR_PLANES_REQUEST","ALLOC_COLOR_REQUEST","ALLOC_ERROR","ALLOC_NAMED_COLOR_REQUEST","ALLOWED","ALLOW_EVENTS_REQUEST","ALL_TEMPORARY","ALREADY_GRABBED","ALWAYS","ANCESTOR","AND","AND_INVERTED","AND_REVERSE","ANY","ANY","ANY","ANY","ANY","ANY","APPEND","ARC","ARC_MODE","ASYNC","ASYNC_BOTH","ASYNC_KEYBOARD","ASYNC_POINTER","ATOM","ATOM_ERROR","AUTO_REPEAT_MODE","AccessControl","AllocColorCellsReply","AllocColorCellsRequest","AllocColorPlanesReply","AllocColorPlanesRequest","AllocColorReply","AllocColorRequest","AllocNamedColorReply","AllocNamedColorRequest","Allow","AllowEventsRequest","Arc","ArcMode","Atom","AtomEnum","AutoRepeatMode","BACKGROUND","BACKING_PIXEL","BACKING_PLANES","BACKING_STORE","BACK_PIXEL","BACK_PIXMAP","BELL_DURATION","BELL_PERCENT","BELL_PITCH","BELL_REQUEST","BELOW","BEVEL","BITMAP","BIT_FORGET","BIT_GRAVITY","BLUE","BORDER_PIXEL","BORDER_PIXMAP","BORDER_WIDTH","BOTTOM_IF","BUSY","BUTT","BUTTON1","BUTTON1_MOTION","BUTTON2","BUTTON2_MOTION","BUTTON3","BUTTON3_MOTION","BUTTON4","BUTTON4_MOTION","BUTTON5","BUTTON5_MOTION","BUTTON_MOTION","BUTTON_PRESS","BUTTON_PRESS_EVENT","BUTTON_RELEASE","BUTTON_RELEASE_EVENT","BackPixmap","BackingStore","BellRequest","Blanking","Bool32","Button","ButtonIndex","ButtonMask","ButtonPressEvent","ButtonReleaseEvent","CAP_HEIGHT","CAP_STYLE","CARDINAL","CENTER","CHANGE_ACTIVE_POINTER_GRAB_REQUEST","CHANGE_GC_REQUEST","CHANGE_HOSTS_REQUEST","CHANGE_KEYBOARD_CONTROL_REQUEST","CHANGE_KEYBOARD_MAPPING_REQUEST","CHANGE_POINTER_CONTROL_REQUEST","CHANGE_PROPERTY_REQUEST","CHANGE_SAVE_SET_REQUEST","CHANGE_WINDOW_ATTRIBUTES_REQUEST","CHAOS","CHORD","CIRCULATE_NOTIFY_EVENT","CIRCULATE_REQUEST_EVENT","CIRCULATE_WINDOW_REQUEST","CLEAR","CLEAR_AREA_REQUEST","CLIENT_MESSAGE_EVENT","CLIP_BY_CHILDREN","CLIP_MASK","CLIP_ORIGIN_X","CLIP_ORIGIN_Y","CLOSE_FONT_REQUEST","COLORMAP","COLORMAP","COLORMAP_ERROR","COLORMAP_NOTIFY_EVENT","COLOR_MAP_CHANGE","COMPLEX","CONFIGURE_NOTIFY_EVENT","CONFIGURE_REQUEST_EVENT","CONFIGURE_WINDOW_REQUEST","CONTROL","CONTROL","CONTROL","CONVERT_SELECTION_REQUEST","CONVEX","COPY","COPYRIGHT","COPY_AREA_REQUEST","COPY_COLORMAP_AND_FREE_REQUEST","COPY_FROM_PARENT","COPY_GC_REQUEST","COPY_INVERTED","COPY_PLANE_REQUEST","CREATE_COLORMAP_REQUEST","CREATE_CURSOR_REQUEST","CREATE_GC_REQUEST","CREATE_GLYPH_CURSOR_REQUEST","CREATE_NOTIFY_EVENT","CREATE_PIXMAP_REQUEST","CREATE_WINDOW_REQUEST","CURRENT_TIME","CURSOR","CURSOR","CURSOR_ERROR","CUT_BUFFE_R0","CUT_BUFFE_R1","CUT_BUFFE_R2","CUT_BUFFE_R3","CUT_BUFFE_R4","CUT_BUFFE_R5","CUT_BUFFE_R6","CUT_BUFFE_R7","CW","CapStyle","ChangeActivePointerGrabRequest","ChangeGCAux","ChangeGCRequest","ChangeHostsRequest","ChangeKeyboardControlAux","ChangeKeyboardControlRequest","ChangeKeyboardMappingRequest","ChangePointerControlRequest","ChangePropertyRequest","ChangeSaveSetRequest","ChangeWindowAttributesAux","ChangeWindowAttributesRequest","Char2b","Charinfo","Circulate","CirculateNotifyEvent","CirculateRequestEvent","CirculateWindowRequest","ClearAreaRequest","ClientMessageData","ClientMessageEvent","ClipOrdering","CloseDown","CloseFontRequest","ColorFlag","Coloritem","Colormap","ColormapAlloc","ColormapEnum","ColormapNotifyEvent","ColormapState","ConfigWindow","ConfigureNotifyEvent","ConfigureRequestEvent","ConfigureWindowAux","ConfigureWindowRequest","ConvertSelectionRequest","CoordMode","CopyAreaRequest","CopyColormapAndFreeRequest","CopyGCRequest","CopyPlaneRequest","CreateColormapRequest","CreateCursorRequest","CreateGCAux","CreateGCRequest","CreateGlyphCursorRequest","CreateNotifyEvent","CreatePixmapRequest","CreateWindowAux","CreateWindowRequest","Cursor","CursorEnum","DASH_LIST","DASH_OFFSET","DEC_NET","DEFAULT","DEFAULT","DEFAULT","DELETE","DELETE","DELETE","DELETE_PROPERTY_REQUEST","DESTROY_ALL","DESTROY_NOTIFY_EVENT","DESTROY_SUBWINDOWS_REQUEST","DESTROY_WINDOW_REQUEST","DIRECT_COLOR","DISABLE","DONT_PROPAGATE","DOUBLE_DASH","DRAWABLE","DRAWABLE_ERROR","DeletePropertyRequest","Depth","DestroyNotifyEvent","DestroySubwindowsRequest","DestroyWindowRequest","Drawable","EAST","ENABLE","END_SPACE","ENTER_NOTIFY_EVENT","ENTER_WINDOW","EQUIV","EVENT_MASK","EVEN_ODD","EXPOSE_EVENT","EXPOSURE","EnterNotifyEvent","EventMask","ExposeEvent","Exposures","FAILURE","FAMILY_NAME","FASTEST_STIPPLE","FASTEST_TILE","FILL_POLY_REQUEST","FILL_RULE","FILL_STYLE","FOCUS_CHANGE","FOCUS_IN_EVENT","FOCUS_OUT_EVENT","FOLLOW_KEYBOARD","FONT","FONT","FONT_ERROR","FONT_NAME","FORCE_SCREEN_SAVER_REQUEST","FOREGROUND","FREE_COLORMAP_REQUEST","FREE_COLORS_REQUEST","FREE_CURSOR_REQUEST","FREE_GC_REQUEST","FREE_PIXMAP_REQUEST","FROZEN","FULLY_OBSCURED","FULL_NAME","FUNCTION","Family","FillPolyRequest","FillRule","FillStyle","FocusInEvent","FocusOutEvent","Font","FontDraw","FontEnum","Fontable","Fontprop","ForceScreenSaverRequest","Format","FreeColormapRequest","FreeColorsRequest","FreeCursorRequest","FreeGCRequest","FreePixmapRequest","GC","GET_ATOM_NAME_REQUEST","GET_FONT_PATH_REQUEST","GET_GEOMETRY_REQUEST","GET_IMAGE_REQUEST","GET_INPUT_FOCUS_REQUEST","GET_KEYBOARD_CONTROL_REQUEST","GET_KEYBOARD_MAPPING_REQUEST","GET_MODIFIER_MAPPING_REQUEST","GET_MOTION_EVENTS_REQUEST","GET_POINTER_CONTROL_REQUEST","GET_POINTER_MAPPING_REQUEST","GET_PROPERTY_REQUEST","GET_SCREEN_SAVER_REQUEST","GET_SELECTION_OWNER_REQUEST","GET_WINDOW_ATTRIBUTES_REQUEST","GE_GENERIC_EVENT","GRAB","GRAB_BUTTON_REQUEST","GRAB_KEYBOARD_REQUEST","GRAB_KEY_REQUEST","GRAB_POINTER_REQUEST","GRAB_SERVER_REQUEST","GRAPHICS_EXPOSURES","GRAPHICS_EXPOSURE_EVENT","GRAVITY_NOTIFY_EVENT","GRAY_SCALE","GREEN","GX","G_CONTEXT_ERROR","Gcontext","GeGenericEvent","GetAtomNameReply","GetAtomNameRequest","GetFontPathReply","GetFontPathRequest","GetGeometryReply","GetGeometryRequest","GetImageReply","GetImageRequest","GetInputFocusReply","GetInputFocusRequest","GetKeyboardControlReply","GetKeyboardControlRequest","GetKeyboardMappingReply","GetKeyboardMappingRequest","GetModifierMappingReply","GetModifierMappingRequest","GetMotionEventsReply","GetMotionEventsRequest","GetPointerControlReply","GetPointerControlRequest","GetPointerMappingReply","GetPointerMappingRequest","GetPropertyReply","GetPropertyRequest","GetPropertyType","GetScreenSaverReply","GetScreenSaverRequest","GetSelectionOwnerReply","GetSelectionOwnerRequest","GetWindowAttributesReply","GetWindowAttributesRequest","Grab","GrabButtonRequest","GrabKeyRequest","GrabKeyboardReply","GrabKeyboardRequest","GrabMode","GrabPointerReply","GrabPointerRequest","GrabServerRequest","GrabStatus","GraphicsExposureEvent","Gravity","GravityNotifyEvent","HEIGHT","HINT","Host","HostMode","ID_CHOICE_ERROR","IMAGE_TEXT16_REQUEST","IMAGE_TEXT8_REQUEST","IMPLEMENTATION_ERROR","INCLUDE_INFERIORS","INFERIOR","INPUT_ONLY","INPUT_OUTPUT","INSERT","INSERT","INSTALLED","INSTALL_COLORMAP_REQUEST","INTEGER","INTERNET","INTERNET6","INTERN_ATOM_REQUEST","INVALID_TIME","INVERT","ITALIC_ANGLE","ITEM_FOCUS","ImageFormat","ImageOrder","ImageText16Request","ImageText8Request","InputFocus","InstallColormapRequest","InternAtomReply","InternAtomRequest","JOIN_STYLE","JoinStyle","KB","KEY","KEYBOARD","KEYMAP_NOTIFY_EVENT","KEYMAP_STATE","KEY_CLICK_PERCENT","KEY_PRESS","KEY_PRESS_EVENT","KEY_RELEASE","KEY_RELEASE_EVENT","KILL_CLIENT_REQUEST","KeyButMask","KeyPressEvent","KeyReleaseEvent","Keycode","Keycode32","KeymapNotifyEvent","Keysym","Kill","KillClientRequest","LARGEST_CURSOR","LEAVE_NOTIFY_EVENT","LEAVE_WINDOW","LED","LED_MODE","LEFT_TO_RIGHT","LENGTH_ERROR","LINE_STYLE","LINE_WIDTH","LIST_EXTENSIONS_REQUEST","LIST_FONTS_REQUEST","LIST_FONTS_WITH_INFO_REQUEST","LIST_HOSTS_REQUEST","LIST_INSTALLED_COLORMAPS_REQUEST","LIST_PROPERTIES_REQUEST","LOCK","LOCK","LOCK","LOOKUP_COLOR_REQUEST","LOWER_HIGHEST","LSB_FIRST","LeaveNotifyEvent","LedMode","LineStyle","ListExtensionsReply","ListExtensionsRequest","ListFontsReply","ListFontsRequest","ListFontsWithInfoReply","ListFontsWithInfoRequest","ListHostsReply","ListHostsRequest","ListInstalledColormapsReply","ListInstalledColormapsRequest","ListPropertiesReply","ListPropertiesRequest","LookupColorReply","LookupColorRequest","M1","M1","M1","M1","M2","M2","M2","M2","M3","M3","M3","M3","M4","M4","M4","M4","M5","M5","M5","M5","MAPPING_NOTIFY_EVENT","MAP_NOTIFY_EVENT","MAP_REQUEST_EVENT","MAP_SUBWINDOWS_REQUEST","MAP_WINDOW_REQUEST","MATCH_ERROR","MAX_SPACE","MIN_SPACE","MITER","MOD1","MOD2","MOD3","MOD4","MOD5","MODIFIER","MOTION_NOTIFY_EVENT","MSB_FIRST","MapIndex","MapNotifyEvent","MapRequestEvent","MapState","MapSubwindowsRequest","MapWindowRequest","Mapping","MappingNotifyEvent","MappingStatus","ModMask","Motion","MotionNotifyEvent","NAME_ERROR","NAND","NEW_VALUE","NONCONVEX","NONE","NONE","NONE","NONE","NONE","NONE","NONE","NONE","NONE","NONE","NONLINEAR","NONLINEAR_VIRTUAL","NOOP","NOR","NORMAL","NORMAL","NORM_SPACE","NORTH","NORTH_EAST","NORTH_WEST","NOTICE","NOT_ALLOWED","NOT_LAST","NOT_PREFERRED","NOT_USEFUL","NOT_VIEWABLE","NO_EVENT","NO_EXPOSURE_EVENT","NO_OPERATION_REQUEST","NoExposureEvent","NoOperationRequest","NotifyDetail","NotifyMode","OFF","OFF","ON","ON","ON_BOTTOM","ON_OFF_DASH","ON_TOP","OPAQUE_STIPPLED","OPEN_FONT_REQUEST","OPPOSITE","OR","ORIGIN","OR_INVERTED","OR_REVERSE","OVERRIDE_REDIRECT","OWNER_GRAB_BUTTON","OpenFontRequest","PARENT","PARENT_RELATIVE","PARTIALLY_OBSCURED","PIE_SLICE","PIXMAP","PIXMAP_ERROR","PLANE_MASK","POINT","POINTER","POINTER","POINTER_MOTION","POINTER_MOTION_HINT","POINTER_ROOT","POINTER_ROOT","POINTER_WINDOW","POINT_SIZE","POLY_ARC_REQUEST","POLY_FILL_ARC_REQUEST","POLY_FILL_RECTANGLE_REQUEST","POLY_LINE_REQUEST","POLY_POINT_REQUEST","POLY_RECTANGLE_REQUEST","POLY_SEGMENT_REQUEST","POLY_TEXT16_REQUEST","POLY_TEXT8_REQUEST","PREFERRED","PREPEND","PREVIOUS","PRIMARY","PROJECTING","PROPERTY_CHANGE","PROPERTY_NOTIFY_EVENT","PSEUDO_COLOR","PUT_IMAGE_REQUEST","Pixmap","PixmapEnum","Place","Point","PolyArcRequest","PolyFillArcRequest","PolyFillRectangleRequest","PolyLineRequest","PolyPointRequest","PolyRectangleRequest","PolySegmentRequest","PolyShape","PolyText16Request","PolyText8Request","PropMode","Property","PropertyNotifyEvent","PutImageRequest","QUAD_WIDTH","QUERY_BEST_SIZE_REQUEST","QUERY_COLORS_REQUEST","QUERY_EXTENSION_REQUEST","QUERY_FONT_REQUEST","QUERY_KEYMAP_REQUEST","QUERY_POINTER_REQUEST","QUERY_TEXT_EXTENTS_REQUEST","QUERY_TREE_REQUEST","QueryBestSizeReply","QueryBestSizeRequest","QueryColorsReply","QueryColorsRequest","QueryExtensionReply","QueryExtensionRequest","QueryFontReply","QueryFontRequest","QueryKeymapReply","QueryKeymapRequest","QueryPointerReply","QueryPointerRequest","QueryShapeOf","QueryTextExtentsReply","QueryTextExtentsRequest","QueryTreeReply","QueryTreeRequest","RAISE_LOWEST","RECOLOR_CURSOR_REQUEST","RECTANGLE","RED","REPARENT_NOTIFY_EVENT","REPARENT_WINDOW_REQUEST","REPLACE","REPLAY_KEYBOARD","REPLAY_POINTER","REQUEST_ERROR","RESET","RESIZE_REDIRECT","RESIZE_REQUEST_EVENT","RESOLUTION","RESOURCE_MANAGER","RETAIN_PERMANENT","RETAIN_TEMPORARY","RGB_BEST_MAP","RGB_BLUE_MAP","RGB_COLOR_MAP","RGB_DEFAULT_MAP","RGB_GRAY_MAP","RGB_GREEN_MAP","RGB_RED_MAP","RIGHT_TO_LEFT","ROTATE_PROPERTIES_REQUEST","ROUND","ROUND","RecolorCursorRequest","Rectangle","ReparentNotifyEvent","ReparentWindowRequest","ResizeRequestEvent","Rgb","RotatePropertiesRequest","SAVE_UNDER","SECONDARY","SELECTION_CLEAR_EVENT","SELECTION_NOTIFY_EVENT","SELECTION_REQUEST_EVENT","SEND_EVENT_REQUEST","SERVER_INTERPRETED","SET","SET_ACCESS_CONTROL_REQUEST","SET_CLIP_RECTANGLES_REQUEST","SET_CLOSE_DOWN_MODE_REQUEST","SET_DASHES_REQUEST","SET_FONT_PATH_REQUEST","SET_INPUT_FOCUS_REQUEST","SET_MODIFIER_MAPPING_REQUEST","SET_POINTER_MAPPING_REQUEST","SET_SCREEN_SAVER_REQUEST","SET_SELECTION_OWNER_REQUEST","SHIFT","SHIFT","SHIFT","SIBLING","SOLID","SOLID","SOUTH","SOUTH_EAST","SOUTH_WEST","STACK_MODE","STATIC","STATIC_COLOR","STATIC_GRAY","STIPPLE","STIPPLED","STORE_COLORS_REQUEST","STORE_NAMED_COLOR_REQUEST","STRIKEOUT_ASCENT","STRIKEOUT_DESCENT","STRING","STRUCTURE_NOTIFY","SUBSCRIPT_X","SUBSCRIPT_Y","SUBSTRUCTURE_NOTIFY","SUBSTRUCTURE_REDIRECT","SUBWINDOW_MODE","SUCCESS","SUCCESS","SUPERSCRIPT_X","SUPERSCRIPT_Y","SYNC","SYNC_BOTH","SYNC_KEYBOARD","SYNC_POINTER","Screen","ScreenSaver","Segment","SelectionClearEvent","SelectionNotifyEvent","SelectionRequestEvent","SendEventDest","SendEventRequest","SetAccessControlRequest","SetClipRectanglesRequest","SetCloseDownModeRequest","SetDashesRequest","SetFontPathRequest","SetInputFocusRequest","SetMode","SetModifierMappingReply","SetModifierMappingRequest","SetPointerMappingReply","SetPointerMappingRequest","SetScreenSaverRequest","SetSelectionOwnerRequest","Setup","SetupAuthenticate","SetupFailed","SetupRequest","StackMode","StoreColorsRequest","StoreNamedColorRequest","Str","SubwindowMode","TILE","TILED","TILE_STIPPLE_ORIGIN_X","TILE_STIPPLE_ORIGIN_Y","TOP_IF","TRANSLATE_COORDINATES_REQUEST","TRUE_COLOR","Time","Timecoord","Timestamp","TranslateCoordinatesReply","TranslateCoordinatesRequest","UNDERLINE_POSITION","UNDERLINE_THICKNESS","UNGRAB","UNGRAB_BUTTON_REQUEST","UNGRAB_KEYBOARD_REQUEST","UNGRAB_KEY_REQUEST","UNGRAB_POINTER_REQUEST","UNGRAB_SERVER_REQUEST","UNINSTALLED","UNINSTALL_COLORMAP_REQUEST","UNMAPPED","UNMAP_NOTIFY_EVENT","UNMAP_SUBWINDOWS_REQUEST","UNMAP_WINDOW_REQUEST","UNOBSCURED","UNSORTED","UNVIEWABLE","UngrabButtonRequest","UngrabKeyRequest","UngrabKeyboardRequest","UngrabPointerRequest","UngrabServerRequest","UninstallColormapRequest","UnmapNotifyEvent","UnmapSubwindowsRequest","UnmapWindowRequest","VALUE_ERROR","VIEWABLE","VIRTUAL","VISIBILITY_CHANGE","VISIBILITY_NOTIFY_EVENT","VISUALID","Visibility","VisibilityNotifyEvent","VisualClass","Visualid","Visualtype","WARP_POINTER_REQUEST","WEIGHT","WEST","WHEN_MAPPED","WHILE_GRABBED","WIDTH","WINDING","WINDOW","WINDOW_ERROR","WIN_GRAVITY","WIN_UNMAP","WM_CLASS","WM_CLIENT_MACHINE","WM_COMMAND","WM_HINTS","WM_ICON_NAME","WM_ICON_SIZE","WM_NAME","WM_NORMAL_HINTS","WM_SIZE_HINTS","WM_TRANSIENT_FOR","WM_ZOOM_HINTS","WarpPointerRequest","Window","WindowClass","WindowEnum","X","XOR","XY_BITMAP","XY_PIXMAP","X_HEIGHT","Y","YX_BANDED","YX_SORTED","Y_SORTED","Z_PIXMAP","above_sibling","acceleration_denominator","acceleration_denominator","acceleration_numerator","acceleration_numerator","address","address","address_len","all_chars_exist","all_chars_exist","all_event_masks","alloc","allow_exposures","allow_exposures","allowed_depths","allowed_depths_len","angle1","angle2","arc_mode","arc_mode","arc_mode","arc_mode","arcs","arcs","as_data16","as_data32","as_data8","ascent","atom","atom","atom","atoms","atoms","atoms_len","attributes","authorization_protocol_data","authorization_protocol_data_len","authorization_protocol_name","authorization_protocol_name_len","auto_repeat_mode","auto_repeat_mode","auto_repeats","back_blue","back_blue","back_blue","back_green","back_green","back_green","back_red","back_red","back_red","background","background","background","background","background_pixel","background_pixel","background_pixel","background_pixel","background_pixmap","background_pixmap","background_pixmap","background_pixmap","backing_pixel","backing_pixel","backing_pixel","backing_pixel","backing_pixel","backing_planes","backing_planes","backing_planes","backing_planes","backing_planes","backing_store","backing_store","backing_store","backing_store","backing_store","backing_stores","bell_duration","bell_duration","bell_duration","bell_percent","bell_percent","bell_percent","bell_pitch","bell_pitch","bell_pitch","bit_gravity","bit_gravity","bit_gravity","bit_gravity","bit_gravity","bit_plane","bitmap_format_bit_order","bitmap_format_scanline_pad","bitmap_format_scanline_unit","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits_per_pixel","bits_per_rgb_value","black_pixel","blue","blue","blue","blue","blue_mask","blue_mask","blues","border_pixel","border_pixel","border_pixel","border_pixel","border_pixmap","border_pixmap","border_pixmap","border_pixmap","border_width","border_width","border_width","border_width","border_width","border_width","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","button","button","byte1","byte2","byte_order","bytes_after","cap_style","cap_style","cap_style","cap_style","char_infos","char_infos_len","character_width","child","child","child","child","child","child","children","children_len","cid","cid","cid","class","class","class","class","clip_mask","clip_mask","clip_mask","clip_mask","clip_x_origin","clip_x_origin","clip_x_origin","clip_x_origin","clip_x_origin","clip_y_origin","clip_y_origin","clip_y_origin","clip_y_origin","clip_y_origin","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmap","cmaps","cmaps_len","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","colormap","colormap","colormap","colormap","colormap","colormap","colormap_entries","colors","colors","colors","colors_len","confine_to","confine_to","contiguous","contiguous","coordinate_mode","coordinate_mode","coordinate_mode","count","count","count","count","current_input_masks","cursor","cursor","cursor","cursor","cursor","cursor","cursor","cursor","cursor","dash_offset","dash_offset","dash_offset","dash_offset","dash_offset","dashes","dashes","dashes","dashes","dashes","data","data","data","data","data_len","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_char","default_char","default_colormap","delete","delta","depth","depth","depth","depth","depth","depth","depth","descent","destination","detail","detail","detail","detail","detail","direction","do_acceleration","do_not_propagate_mask","do_not_propogate_mask","do_not_propogate_mask","do_not_propogate_mask","do_not_propogate_mask","do_threshold","draw_direction","draw_direction","draw_direction","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","drawable","dst_drawable","dst_drawable","dst_gc","dst_window","dst_window","dst_x","dst_x","dst_x","dst_x","dst_x","dst_y","dst_y","dst_y","dst_y","dst_y","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event","event","event","event","event","event","event","event","event","event","event","event","event","event_mask","event_mask","event_mask","event_mask","event_mask","event_mask","event_mask","event_mask","event_type","event_x","event_x","event_x","event_x","event_y","event_y","event_y","event_y","events","events_len","exact_blue","exact_blue","exact_green","exact_green","exact_red","exact_red","exposures","extension","family","family","fid","fill_rule","fill_rule","fill_rule","fill_rule","fill_style","fill_style","fill_style","fill_style","first_error","first_event","first_keycode","first_keycode","first_keycode","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","focus","focus","font","font","font","font","font","font","font","font","font_ascent","font_ascent","font_ascent","font_descent","font_descent","font_descent","fore_blue","fore_blue","fore_blue","fore_green","fore_green","fore_green","fore_red","fore_red","fore_red","foreground","foreground","foreground","foreground","format","format","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_configure","from_configure_request","function","function","function","function","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","gc","global_auto_repeat","grab_window","grab_window","grab_window","grab_window","grab_window","grab_window","graphics_exposures","graphics_exposures","graphics_exposures","graphics_exposures","green","green","green","green","green_mask","green_mask","greens","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height","height_in_millimeters","height_in_pixels","hosts","hosts_len","image_byte_order","interval","interval","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","items","items","items","join_style","join_style","join_style","join_style","key","key","key","key","key_click_percent","key_click_percent","key_click_percent","keyboard_mode","keyboard_mode","keyboard_mode","keyboard_mode","keycode_count","keycodes","keycodes","keycodes_per_modifier","keys","keys","keysyms","keysyms","keysyms_per_keycode","keysyms_per_keycode","led","led","led_mask","led_mode","led_mode","left_pad","left_side_bearing","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","length","line_style","line_style","line_style","line_style","line_width","line_width","line_width","line_width","long_length","long_offset","major_opcode","major_opcode","major_opcode","map","map","map_is_installed","map_len","map_state","mask","mask","mask_char","mask_font","masks","masks_len","max_bounds","max_bounds","max_byte1","max_byte1","max_char_or_byte2","max_char_or_byte2","max_installed_maps","max_keycode","max_names","max_names","maximum_request_length","mid","mid","min_bounds","min_bounds","min_byte1","min_byte1","min_char_or_byte2","min_char_or_byte2","min_installed_maps","min_keycode","minor_opcode","minor_opcode","mode","mode","mode","mode","mode","mode","mode","mode","mode","mode","modifiers","modifiers","modifiers","modifiers","motion_buffer_size","name","name","name","name","name","name","name","name","name","name","name_len","name_len","name_len","names","names","names_len","names_len","new","new","new","new","new","new","new","new","only_if_exists","ordering","overall_ascent","overall_descent","overall_left","overall_right","overall_width","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","override_redirect","owner","owner","owner","owner","owner_events","owner_events","owner_events","owner_events","parent","parent","parent","parent","parent","parent","parent","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path","path_len","pattern","pattern","percent","pid","pixel","pixel","pixel","pixel","pixels","pixels","pixels","pixels","pixels_len","pixels_len","pixmap","pixmap_formats","pixmap_formats_len","place","plane_mask","plane_mask","plane_mask","plane_mask","plane_mask","plane_mask","planes","pointer_mode","pointer_mode","pointer_mode","pointer_mode","points","points","points","prefer_blanking","prefer_blanking","present","propagate","properties","properties","properties_len","properties_len","property","property","property","property","property","property","protocol_major_version","protocol_major_version","protocol_major_version","protocol_minor_version","protocol_minor_version","protocol_minor_version","reason","reason","reason_len","rectangles","rectangles","rectangles","red","red","red","red","red_mask","red_mask","reds","release_number","replies_hint","request","requestor","requestor","requestor","resource","resource_id_base","resource_id_mask","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","response_type","revert_to","revert_to","right_side_bearing","root","root","root","root","root","root","root","root","root_depth","root_visual","root_x","root_x","root_x","root_x","root_x","root_y","root_y","root_y","root_y","root_y","roots","roots_len","same_screen","same_screen","same_screen","same_screen","same_screen","same_screen_focus","save_under","save_under","save_under","save_under","save_under","save_unders","scanline_pad","segments","selection","selection","selection","selection","selection","selection","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","sequence","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","serialize_into","shape","sibling","sibling","sibling","source","source_char","source_font","src_cmap","src_drawable","src_drawable","src_gc","src_height","src_width","src_window","src_window","src_x","src_x","src_x","src_x","src_y","src_y","src_y","src_y","stack_mode","stack_mode","stack_mode","start","state","state","state","state","state","state","state","status","status","status","status","status","status","status","stipple","stipple","stipple","stipple","stop","string","string","string","subwindow_mode","subwindow_mode","subwindow_mode","subwindow_mode","target","target","target","threshold","threshold","tile","tile","tile","tile","tile_stipple_x_origin","tile_stipple_x_origin","tile_stipple_x_origin","tile_stipple_x_origin","tile_stipple_y_origin","tile_stipple_y_origin","tile_stipple_y_origin","tile_stipple_y_origin","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","time","timeout","timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_fd","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","try_parse_request","type_","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","value","value16","value32","value8","value_len","value_list","value_list","value_list","value_list","value_list","value_list","value_mask","value_mask","vendor","vendor_len","visual","visual","visual","visual","visual_blue","visual_blue","visual_green","visual_green","visual_id","visual_red","visual_red","visuals","visuals_len","white_pixel","wid","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width","width_in_millimeters","width_in_pixels","win_gravity","win_gravity","win_gravity","win_gravity","win_gravity","win_x","win_y","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","window","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x1","x2","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y1","y2","your_event_mask","PropertyIterator","borrow","borrow_mut","clone","clone_into","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id","BigRequests","Bytes","EXTENSION_NAME","Enabled","ExtInfoProvider","ExtensionInformation","NotEnabled","Reply","Reply","ReplyFDsRequest","ReplyParsingFunction","ReplyRequest","Request","RequestHeader","Serialize","TryParse","TryParseFd","VoidRequest","X11Error","bad_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","equivalent","equivalent","equivalent","error_code","error_kind","extension_name","first_error","first_event","fmt","fmt","fmt","fmt","from","from","from","from","get_from_error_code","get_from_event_code","get_from_major_opcode","into","into","into","into","major_opcode","major_opcode","major_opcode","minor_opcode","minor_opcode","parse_request_header","remaining_length","request_name","sequence","serialize","serialize","serialize_into","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_parse","try_parse","try_parse_fd","type_id","type_id","type_id","type_id","CHAOS","DEC_NET","Family","INTERNET","INTERNET6","KRB5_PRINCIPAL","LOCAL","LOCAL_HOST","NETNAME","SERVER_INTERPRETED","WILD","borrow","borrow_mut","clone","clone_into","eq","equivalent","fmt","from","from","from","get_auth","into","to_owned","try_from","try_into","type_id"],"q":[[0,"x11rb_protocol"],[49,"x11rb_protocol::connect"],[63,"x11rb_protocol::connection"],[116,"x11rb_protocol::errors"],[161,"x11rb_protocol::errors::ConnectError"],[163,"x11rb_protocol::id_allocator"],[192,"x11rb_protocol::packet_reader"],[206,"x11rb_protocol::parse_display"],[242,"x11rb_protocol::protocol"],[686,"x11rb_protocol::protocol::bigreq"],[733,"x11rb_protocol::protocol::ge"],[783,"x11rb_protocol::protocol::render"],[2480,"x11rb_protocol::protocol::shape"],[2894,"x11rb_protocol::protocol::xc_misc"],[3037,"x11rb_protocol::protocol::xfixes"],[4247,"x11rb_protocol::protocol::xproto"],[11821,"x11rb_protocol::wrapper"],[11836,"x11rb_protocol::x11_utils"],[11929,"x11rb_protocol::xauth"]],"d":["A combination of a buffer and a list of file descriptors.","Variants describing which responses to a request should be …","Only discard the actual reply. Errors go to the main loop.","Ignore any kind of response that this request generates.","A buffer that is logically continuous, but presented in a …","The raw bytes of an event and its sequence number.","A simple wrapper around RawFd that closes the fd on drop.","Number type used for referring to things that were sent to …","","","","","","","","Consumes the <code>RawFdContainer</code> and closes the wrapped FD with …","Contains utilities for connection to the X11 server.","Helper types for implementing an X11 client.","","","","","","This module contains the current mess that is error …","","","Returns the argument unchanged.","","Returns the argument unchanged.","","A mechanism for allocating XIDs.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the <code>RawFd</code> out of this <code>RawFdContainer</code>.","Create a new <code>RawFdContainer</code> for the given <code>RawFd</code>.","Collects X11 data into “packets” to be parsed by a …","Utilities for parsing X11 display strings.","Bindings to the X11 protocol.","","Tries to clone the <code>RawFdContainer</code> creating a new FD with …","","","","","","","Helpers for the generated code","Utility functions for X11 things.","Helpers for working with <code>~/.Xauthority</code>.","The connection handshake used to connect to the X11 server.","Advance the internal buffer, given the number of bytes …","","","Returns the buffer that needs to be filled with incoming …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the setup provided by the server.","Create a new <code>Connect</code> from the information necessary to …","","","","Create a new <code>Connect</code> from the given authorization data.","A combination of a buffer and a list of file descriptors.","A pure-rust, sans-I/O implementation of the X11 protocol.","The request does not have a reply.","There will be no reply; polling is done.","Information about the result of polling for a reply packet.","The raw bytes of an X11 event and its sequence number.","Here is the result of the polling; polling is done.","Information about the reply to an X11 request.","The request has a reply and that reply <em>does</em> contain file …","The request has a reply and that reply does <em>not</em> contain …","It is not clear yet what the result will be; try again …","","","","","","","","","","","Ignore the reply for a request that was previously sent.","Add FDs that were received to the internal state.","An X11 packet was received from the connection and is now …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Connection</code>.","Check if the request with the given sequence number was …","Get a pending event.","Find the reply for the request with the given sequence …","Check if the server already sent an answer to the request …","Prepare for calling <code>poll_check_for_reply_or_error()</code>.","Send a request to the X11 server.","","","","","","","","","","","","An error that occurred while connecting to an X11 server","A value did not fit.","Error during parsing of display string.","","The client did not receive enough data from the server to …","Not enough data was provided.","Out of memory.","The value of an expression could not be computed.","Server does not have a screen matching the display.","A value was outside of its valid range.","An I/O error occurred on the connection.","Some file descriptors were expected, but not enough were …","An error occurred while parsing some data","Error while parsing some data, see <code>ParseError</code>.","The server rejected the connection with a <code>SetupAuthenticate</code>…","The server rejected the connection with a <code>SetupFailed</code> …","An unknown error occurred.","Invalid ID mask provided by the server.","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","The number of bytes that were expected.","The number of bytes that were received.","An allocator for X11 IDs.","The XID range has been exhausted.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Generate the next ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new instance of an ID allocator.","","","","","","","","","","Update the available range of IDs based on a …","A wrapper around a buffer used to read X11 packets.","Advance this buffer by the given amount.","","","Get the buffer that the reader should fill with data.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new, empty <code>PacketReader</code>.","The remaining capacity that needs to be filled.","","","","A possible address for an X11 server.","Connect to this hostname and port over TCP.","A parsed X11 display string.","Connect to this Unix socket.","","","","","","","","","Get an iterator over <code>ConnectAddress</code>es from this parsed …","The index of the display we are connecting to.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The hostname of the computer we nned to connect to.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Parse an X11 display string.","The protocol we are communicating over.","The index of the screen that we are using as the default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumeration of all possible X11 error kinds.","Enumeration of all possible X11 events.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enumeration of all possible X11 replies.","Enumeration of all possible X11 requests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Bindings to the <code>BigRequests</code> X11 extension.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Bindings to the <code>GenericEvent</code> X11 extension.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this Request into an owned version with no borrows.","","Parse a generic X11 event into a concrete event type.","","Get the raw response type of this X11 event","Bindings to the <code>Render</code> X11 extension.","Get the matching reply parser (if any) for this request. …","Get the response type of this X11 event","Was this event generated by another X11 client?","Was this event generated by the X11 server?","Bindings to the <code>Shape</code> X11 extension.","","","","","","","","","","","","","","","Get the sequence number contained in this X11 event","Bindings to the <code>XCMisc</code> X11 extension.","Bindings to the <code>XFixes</code> X11 extension.","Bindings to the core X11 protocol.","Opcode for the Enable request","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Serialize this request into bytes for the provided …","","","","","","","","","","Parse this request given its header, its body, and any fds …","","","Opcode for the QueryVersion request","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Serialize this request into bytes for the provided …","","","","","","","","","","Parse this request given its header, its body, and any fds …","","","","Opcode for the AddGlyphs request","Opcode for the AddTraps request","","","","","","","","","Opcode for the ChangePicture request","","","","","","","","Opcode for the CompositeGlyphs16 request","Opcode for the CompositeGlyphs32 request","Opcode for the CompositeGlyphs8 request","Opcode for the Composite request","","","","","","","","","","","","","","Opcode for the CreateAnimCursor request","Opcode for the CreateConicalGradient request","Opcode for the CreateCursor request","Opcode for the CreateGlyphSet request","Opcode for the CreateLinearGradient request","Opcode for the CreatePicture request","Opcode for the CreateRadialGradient request","Opcode for the CreateSolidFill request","Auxiliary and optional information for the <code>change_picture</code> …","","","","","","","","","","","","Auxiliary and optional information for the <code>create_picture</code> …","","","","","","","","","","","","","","","","","","","","","","","Opcode for the FillRectangles request","Opcode for the FreeGlyphs request","Opcode for the FreeGlyphSet request","Opcode for the FreePicture request","","","","","","Opcode for the Glyph error","Opcode for the GlyphSet error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the Picture error","Opcode for the PictFormat error","Opcode for the PictOp error","","","","","","","","","","","","","","","","Opcode for the QueryFilters request","Opcode for the QueryPictFormats request","Opcode for the QueryPictIndexValues request","Opcode for the QueryVersion request","","","","","","","","","Opcode for the ReferenceGlyphSet request","","","","","","","Opcode for the SetPictureClipRectangles request","Opcode for the SetPictureFilter request","Opcode for the SetPictureTransform request","","","","","","","","","","","Opcode for the Trapezoids request","Opcode for the Triangles request","Opcode for the TriFan request","Opcode for the TriStrip request","","","","","","","","","","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …","","","","","","","Set the <code>alphamap</code> field of this structure.","Set the <code>alphamap</code> field of this structure.","","","Set the <code>alphaxorigin</code> field of this structure.","Set the <code>alphaxorigin</code> field of this structure.","","","Set the <code>alphayorigin</code> field of this structure.","Set the <code>alphayorigin</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>clipmask</code> field of this structure.","Set the <code>clipmask</code> field of this structure.","","","Set the <code>clipxorigin</code> field of this structure.","Set the <code>clipxorigin</code> field of this structure.","","","Set the <code>clipyorigin</code> field of this structure.","Set the <code>clipyorigin</code> field of this structureet the <code>componentalpha</code> field of this structure.","Set the <code>componentalpha</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>dither</code> field of this structure.","Set the <code>dither</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Set the <code>graphicsexposure</code> field of this structure.","Set the <code>graphicsexposure</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Clone all borrowed data in this CreatePictureRequest.","Clone all borrowed data in this ChangePictureRequest.","Clone all borrowed data in this …","Clone all borrowed data in this TrapezoidsRequest.","Clone all borrowed data in this TrianglesRequest.","Clone all borrowed data in this TriStripRequest.","Clone all borrowed data in this TriFanRequest.","Clone all borrowed data in this AddGlyphsRequest.","Clone all borrowed data in this FreeGlyphsRequest.","Clone all borrowed data in this CompositeGlyphs8Request.","Clone all borrowed data in this CompositeGlyphs16Request.","Clone all borrowed data in this CompositeGlyphs32Request.","Clone all borrowed data in this FillRectanglesRequest.","Clone all borrowed data in this SetPictureFilterRequest.","Clone all borrowed data in this CreateAnimCursorRequest.","Clone all borrowed data in this AddTrapsRequest.","Clone all borrowed data in this …","Clone all borrowed data in this …","Clone all borrowed data in this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","Get the value of the <code>num_aliases</code> field.","Get the value of the <code>num_depths</code> field.","","Get the value of the <code>num_filters</code> field.","Get the value of the <code>num_formats</code> field.","Get the value of the <code>num_screens</code> field.","Get the value of the <code>num_subpixel</code> field.","Get the value of the <code>num_values</code> field.","Get the value of the <code>num_visuals</code> field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>polyedge</code> field of this structure.","Set the <code>polyedge</code> field of this structure.","","","Set the <code>polymode</code> field of this structure.","Set the <code>polymode</code> field of this structure.","","","","","","","","","","Set the <code>repeat</code> field of this structure.","Set the <code>repeat</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>subwindowmode</code> field of this structure.","Set the <code>subwindowmode</code> field of this structurearse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the Combine request","","Opcode for the GetRectangles request","","","","Opcode for the InputSelected request","","","","","","Opcode for the Mask request","","Opcode for the Notify event","","Opcode for the Offset request","","","Opcode for the QueryExtents request","Opcode for the QueryVersion request","","","","","Opcode for the Rectangles request","","Opcode for the SelectInput request","","","","","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …eturns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Clone all borrowed data in this RectanglesRequest.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>rectangles_len</code> field.","","","","","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the GetVersion request","Opcode for the GetXIDList request","Opcode for the GetXIDRange request","","","","","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Get the value of the <code>ids_len</code> field.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","","","","","","","Opcode for the BadRegion error","","","Opcode for the ChangeCursorByName request","Opcode for the ChangeCursor request","Opcode for the ChangeSaveSet request","Opcode for the CopyRegion request","Opcode for the CreatePointerBarrier request","Opcode for the CreateRegionFromBitmap request","Opcode for the CreateRegionFromGC request","Opcode for the CreateRegionFromPicture request","Opcode for the CreateRegionFromWindow request","Opcode for the CreateRegion request","Opcode for the CursorNotify event","","","","","","","","","","","","","","","Opcode for the DeletePointerBarrier request","Opcode for the DestroyRegion request","","","","","Opcode for the ExpandRegion request","","Opcode for the FetchRegion request","","","Opcode for the GetCursorImageAndName request","Opcode for the GetCursorImage request","Opcode for the GetCursorName request","","","","","","","Opcode for the HideCursor request","","","Opcode for the IntersectRegion request","Opcode for the InvertRegion request","","","","","","","","","","Opcode for the QueryVersion request","","","Opcode for the RegionExtents request","","","","","","","Opcode for the SelectionNotify event","","","Opcode for the SelectCursorInput request","Opcode for the SelectSelectionInput request","Opcode for the SetCursorName request","Opcode for the SetGCClipRegion request","Opcode for the SetPictureClipRegion request","Opcode for the SetRegion request","","","Opcode for the SetWindowShapeRegion request","Opcode for the ShowCursor request","Opcode for the SubtractRegion request","","","","","","","","","","","","","","","","Opcode for the TranslateRegion request","","Opcode for the UnionRegion request","","","The X11 name of the extension for QueryExtension","The version number of this extension that this client …eturns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Clone all borrowed data in this CreateRegionRequest.","Clone all borrowed data in this SetRegionRequest.","Clone all borrowed data in this SetCursorNameRequest.","Clone all borrowed data in this ChangeCursorByNameRequest.","Clone all borrowed data in this …","","","Get the value of the <code>length</code> field.","","","","","","","","","","","","","","Get the value of the <code>nbytes</code> field.","Get the value of the <code>nbytes</code> field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …arse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the Access error","","","Opcode for the AllocColorCells request","Opcode for the AllocColorPlanes request","Opcode for the AllocColor request","Opcode for the Alloc error","Opcode for the AllocNamedColor request","","Opcode for the AllowEvents request","","","","","","","","","","","","","","","","","","","","","","Opcode for the Atom error","","","","","","","","Allocate a color.","","","Fields","release queued events.","","","","","","","","","","","","","","","Opcode for the Bell request","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the ButtonPress event","","Opcode for the ButtonRelease event","","","","","","","Fields","","a mouse button was pressed/released.","","","","","","Opcode for the ChangeActivePointerGrab request","Opcode for the ChangeGC request","Opcode for the ChangeHosts request","Opcode for the ChangeKeyboardControl request","Opcode for the ChangeKeyboardMapping request","Opcode for the ChangePointerControl request","Opcode for the ChangeProperty request","Opcode for the ChangeSaveSet request","Opcode for the ChangeWindowAttributes request","","","Opcode for the CirculateNotify event","Opcode for the CirculateRequest event","Opcode for the CirculateWindow request","","Opcode for the ClearArea request","Opcode for the ClientMessage event","","","","","Opcode for the CloseFont request","","","Opcode for the Colormap error","Opcode for the ColormapNotify event","","","Opcode for the ConfigureNotify event","Opcode for the ConfigureRequest event","Opcode for the ConfigureWindow request","","","","Opcode for the ConvertSelection request","","","","Opcode for the CopyArea request","Opcode for the CopyColormapAndFree request","","Opcode for the CopyGC request","","Opcode for the CopyPlane request","Opcode for the CreateColormap request","Opcode for the CreateCursor request","Opcode for the CreateGC request","Opcode for the CreateGlyphCursor request","Opcode for the CreateNotify event","Opcode for the CreatePixmap request","Opcode for the CreateWindow request","","","","Opcode for the Cursor error","","","","","","","","","Fields","","","Auxiliary and optional information for the <code>change_gc</code> …","change graphics context components.","","Auxiliary and optional information for the …","","","","Changes a window property.","Changes a client’s save set.","Auxiliary and optional information for the …","change window attributes.","","","","NOT YET DOCUMENTED.","","Change window stacking order.","","","NOT YET DOCUMENTED.","","","","","","","","","the colormap for some window changed.","Fields","","NOT YET DOCUMENTED.","","Auxiliary and optional information for the <code>configure_window</code>…","Configures window attributes.","","Fields","copy areas.","","","","","","Auxiliary and optional information for the <code>create_gc</code> …","Creates a graphics context.","create cursor.","","Creates a pixmap.","Auxiliary and optional information for the <code>create_window</code> …","Creates a window.","","","","","","","","","","","","Opcode for the DeleteProperty request","","Opcode for the DestroyNotify event","Opcode for the DestroySubwindows request","Opcode for the DestroyWindow request","","","","","","Opcode for the Drawable error","","","a window is destroyed.","","Destroys a window.","","","","","Opcode for the EnterNotify event","","","","","Opcode for the Expose event","","the pointer is in a different window.","","NOT YET DOCUMENTED.","","","","","","Opcode for the FillPoly request","","","","Opcode for the FocusIn event","Opcode for the FocusOut event","","","","Opcode for the Font error","","Opcode for the ForceScreenSaver request","","Opcode for the FreeColormap request","Opcode for the FreeColors request","Opcode for the FreeCursor request","Opcode for the FreeGC request","Opcode for the FreePixmap request","","","","","","","","","NOT YET DOCUMENTED.","","","","","","","","","","","Deletes a cursor.","Destroys a graphics context.","Destroys a pixmap.","Fields","Opcode for the GetAtomName request","Opcode for the GetFontPath request","Opcode for the GetGeometry request","Opcode for the GetImage request","Opcode for the GetInputFocus request","Opcode for the GetKeyboardControl request","Opcode for the GetKeyboardMapping request","Opcode for the GetModifierMapping request","Opcode for the GetMotionEvents request","Opcode for the GetPointerControl request","Opcode for the GetPointerMapping request","Opcode for the GetProperty request","Opcode for the GetScreenSaver request","Opcode for the GetSelectionOwner request","Opcode for the GetWindowAttributes request","Opcode for the GeGeneric event","","Opcode for the GrabButton request","Opcode for the GrabKeyboard request","Opcode for the GrabKey request","Opcode for the GrabPointer request","Opcode for the GrabServer request","","Opcode for the GraphicsExposure event","Opcode for the GravityNotify event","","","","Opcode for the GContext error","","generic event (with length).","","","","","Fields","Get current window geometry.","","","","","","","","","","","","","","","","","Fields","Gets a window property.","","","","Fields","Gets the owner of a selection.","Fields","Gets window attributes.","","Grab pointer button(s).","Grab keyboard key(s).","","Grab the keyboard.","Fields","","Grab the pointer.","","","","","","","","","","Opcode for the IDChoice error","Opcode for the ImageText16 request","Opcode for the ImageText8 request","Opcode for the Implementation error","","","","","","","","Opcode for the InstallColormap request","","","","Opcode for the InternAtom request","","","","","","","Draws text.","Draws text.","Fields","","","Get atom identifier by name.","","","","","","Opcode for the KeymapNotify event","","","","Opcode for the KeyPress event","","Opcode for the KeyRelease event","Opcode for the KillClient request","","a key was pressed/released.","","","","","","","kills a client.","","Opcode for the LeaveNotify event","","","","","Opcode for the Length error","","","Opcode for the ListExtensions request","Opcode for the ListFonts request","Opcode for the ListFontsWithInfo request","Opcode for the ListHosts request","Opcode for the ListInstalledColormaps request","Opcode for the ListProperties request","","","","Opcode for the LookupColor request","","","","","","","","Fields","get matching font names.","Fields","get matching font names and information.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the MappingNotify event","Opcode for the MapNotify event","Opcode for the MapRequest event","Opcode for the MapSubwindows request","Opcode for the MapWindow request","Opcode for the Match error","","","","","","","","","","Opcode for the MotionNotify event","","","a window was mapped.","window wants to be mapped.","","","Makes a window visible.","","keyboard mapping changed.","","","","a key was pressed.","Opcode for the Name error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcode for the NoExposure event","Opcode for the NoOperation request","","","","","","","","","","","","","Opcode for the OpenFont request","","","","","","","","opens a font.","","","","","","Opcode for the Pixmap error","","","","","","","","","","","Opcode for the PolyArc request","Opcode for the PolyFillArc request","Opcode for the PolyFillRectangle request","Opcode for the PolyLine request","Opcode for the PolyPoint request","Opcode for the PolyRectangle request","Opcode for the PolySegment request","Opcode for the PolyText16 request","Opcode for the PolyText8 request","","","","","","","Opcode for the PropertyNotify event","","Opcode for the PutImage request","","","Fields","","","","Fills rectangles.","draw lines.","","","draw lines.","","","","Fields","","a window property changed.","","","Opcode for the QueryBestSize request","Opcode for the QueryColors request","Opcode for the QueryExtension request","Opcode for the QueryFont request","Opcode for the QueryKeymap request","Opcode for the QueryPointer request","Opcode for the QueryTextExtents request","Opcode for the QueryTree request","","","","","Fields","check if extension is present.","Fields","query font metrics.","","","Fields","get pointer coordinates.","","","get text extents.","Fields","query the window tree.","","Opcode for the RecolorCursor request","","","Opcode for the ReparentNotify event","Opcode for the ReparentWindow request","","","","Opcode for the Request error","","","Opcode for the ResizeRequest event","","","","","","","","","","","","","Opcode for the RotateProperties request","","","","","","Reparents a window.","","","","","","Opcode for the SelectionClear event","Opcode for the SelectionNotify event","Opcode for the SelectionRequest event","Opcode for the SendEvent request","","","Opcode for the SetAccessControl request","Opcode for the SetClipRectangles request","Opcode for the SetCloseDownMode request","Opcode for the SetDashes request","Opcode for the SetFontPath request","Opcode for the SetInputFocus request","Opcode for the SetModifierMapping request","Opcode for the SetPointerMapping request","Opcode for the SetScreenSaver request","Opcode for the SetSelectionOwner request","","","","","","","","","","","","","","","","Opcode for the StoreColors request","Opcode for the StoreNamedColor request","","","","","","","","","","","","","","","","","","","","","","","","","send an event.","","","","","","Sets input focus.","","","","","","","Sets the owner of a selection.","","","","","","","","","","","","","","","Opcode for the TranslateCoordinates request","","","","","","","","","","Opcode for the UngrabButton request","Opcode for the UngrabKeyboard request","Opcode for the UngrabKey request","Opcode for the UngrabPointer request","Opcode for the UngrabServer request","","Opcode for the UninstallColormap request","","Opcode for the UnmapNotify event","Opcode for the UnmapSubwindows request","Opcode for the UnmapWindow request","","","","","release a key combination.","","release the pointer.","","","a window is unmapped.","","Makes a window invisible.","Opcode for the Value error","","","","Opcode for the VisibilityNotify event","","","","","","","Opcode for the WarpPointer request","","","","","","","","Opcode for the Window error","","","","","","","","","","","","","","move mouse pointer.","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>address_len</code> field.","","","","","","","","Get the value of the <code>allowed_depths_len</code> field.","","","Set the <code>arc_mode</code> field of this structure.","Set the <code>arc_mode</code> field of this structure.","","","","","","","","","","","","","","Get the value of the <code>atoms_len</code> field.","","","Get the value of the <code>authorization_protocol_data_len</code> field.","","Get the value of the <code>authorization_protocol_name_len</code> field.","Set the <code>auto_repeat_mode</code> field of this structure.","","","","","","","","","","","","Set the <code>background</code> field of this structure.","Set the <code>background</code> field of this structure.","","","Set the <code>background_pixel</code> field of this structure.","Set the <code>background_pixel</code> field of this structure.","","","Set the <code>background_pixmap</code> field of this structure.","Set the <code>background_pixmap</code> field of this structure.","","","Set the <code>backing_pixel</code> field of this structure.","Set the <code>backing_pixel</code> field of this structure.","","","","Set the <code>backing_planes</code> field of this structure.","Set the <code>backing_planes</code> field of this structure.","","","","Set the <code>backing_store</code> field of this structure.","Set the <code>backing_store</code> field of this structure.","","","","","Set the <code>bell_duration</code> field of this structure.","","","Set the <code>bell_percent</code> field of this structure.","","","Set the <code>bell_pitch</code> field of this structure.","","","Set the <code>bit_gravity</code> field of this structure.","Set the <code>bit_gravity</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>border_pixel</code> field of this structure.","Set the <code>border_pixel</code> field of this structure.","","","Set the <code>border_pixmap</code> field of this structure.","Set the <code>border_pixmap</code> field of this structure.","","","Set the <code>border_width</code> field of this structureet the <code>cap_style</code> field of this structure.","Set the <code>cap_style</code> field of this structure.","","","","Get the value of the <code>char_infos_len</code> field.","","","","","","","","","Get the value of the <code>children_len</code> field.","","","","","","","","Set the <code>clip_mask</code> field of this structure.","Set the <code>clip_mask</code> field of this structure.","","","Set the <code>clip_x_origin</code> field of this structure.","Set the <code>clip_x_origin</code> field of this structure.","","","","Set the <code>clip_y_origin</code> field of this structure.","Set the <code>clip_y_origin</code> field of this structureet the value of the <code>cmaps_len</code> fieldet the <code>colormap</code> field of this structure.","Set the <code>colormap</code> field of this structure.","","","","","","","","","Get the value of the <code>colors_len</code> field.","","","","","","","","","","","","","Set the <code>cursor</code> field of this structure.","Set the <code>cursor</code> field of this structure.","","","","","","","","Set the <code>dash_offset</code> field of this structure.","Set the <code>dash_offset</code> field of this structure.","","","","Set the <code>dashes</code> field of this structure.","Set the <code>dashes</code> field of this structureet the <code>do_not_propogate_mask</code> field of this structure.","Set the <code>do_not_propogate_mask</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>event_mask</code> field of this structure.","Set the <code>event_mask</code> field of this structure.","","","","","","","","","","","","","","","","","Get the value of the <code>events_len</code> field.","","","","","","","","","","","","Set the <code>fill_rule</code> field of this structure.","Set the <code>fill_rule</code> field of this structure.","","","Set the <code>fill_style</code> field of this structure.","Set the <code>fill_style</code> field of this structureet the <code>font</code> field of this structure.","Set the <code>font</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","Set the <code>foreground</code> field of this structure.","Set the <code>foreground</code> field of this structure.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Construct from a <code>ConfigureRequestEvent</code>.","Set the <code>function</code> field of this structure.","Set the <code>function</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>graphics_exposures</code> field of this structure.","Set the <code>graphics_exposures</code> field of this structureet the <code>height</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>hosts_len</code> field.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Clone all borrowed data in this CreateWindowRequest.","Clone all borrowed data in this …","Clone all borrowed data in this ConfigureWindowRequest.","Clone all borrowed data in this InternAtomRequest.","Clone all borrowed data in this ChangePropertyRequest.","Clone all borrowed data in this SendEventRequest.","Clone all borrowed data in this OpenFontRequest.","Clone all borrowed data in this QueryTextExtentsRequest.","Clone all borrowed data in this ListFontsRequest.","Clone all borrowed data in this ListFontsWithInfoRequest.","Clone all borrowed data in this SetFontPathRequest.","Clone all borrowed data in this CreateGCRequest.","Clone all borrowed data in this ChangeGCRequest.","Clone all borrowed data in this SetDashesRequest.","Clone all borrowed data in this SetClipRectanglesRequest.","Clone all borrowed data in this PolyPointRequest.","Clone all borrowed data in this PolyLineRequest.","Clone all borrowed data in this PolySegmentRequest.","Clone all borrowed data in this PolyRectangleRequest.","Clone all borrowed data in this PolyArcRequest.","Clone all borrowed data in this FillPolyRequest.","Clone all borrowed data in this PolyFillRectangleRequest.","Clone all borrowed data in this PolyFillArcRequest.","Clone all borrowed data in this PutImageRequest.","Clone all borrowed data in this PolyText8Request.","Clone all borrowed data in this PolyText16Request.","Clone all borrowed data in this ImageText8Request.","Clone all borrowed data in this ImageText16Request.","Clone all borrowed data in this AllocNamedColorRequest.","Clone all borrowed data in this FreeColorsRequest.","Clone all borrowed data in this StoreColorsRequest.","Clone all borrowed data in this StoreNamedColorRequest.","Clone all borrowed data in this QueryColorsRequest.","Clone all borrowed data in this LookupColorRequest.","Clone all borrowed data in this QueryExtensionRequest.","Clone all borrowed data in this …","Clone all borrowed data in this …","Clone all borrowed data in this ChangeHostsRequest.","Clone all borrowed data in this RotatePropertiesRequest.","Clone all borrowed data in this SetPointerMappingRequest.","Clone all borrowed data in this SetModifierMappingRequest.","","","","Set the <code>join_style</code> field of this structure.","Set the <code>join_style</code> field of this structure.","","","Set the <code>key</code> field of this structure.","","","","Set the <code>key_click_percent</code> field of this structure.","","","","","","","","","","Get the value of the <code>keycodes_per_modifier</code> field.","","","","","","","Set the <code>led</code> field of this structure.","","","Set the <code>led_mode</code> field of this structure.","","","","Get the value of the <code>length</code> field.","Get the value of the <code>length</code> field.","Get the value of the <code>length</code> field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>line_style</code> field of this structure.","Set the <code>line_style</code> field of this structure.","","","Set the <code>line_width</code> field of this structure.","Set the <code>line_width</code> field of this structure.","","","","","","","","","","","Get the value of the <code>map_len</code> field.","","","","","","","Get the value of the <code>masks_len</code> field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>name_len</code> field.","Get the value of the <code>name_len</code> field.","Get the value of the <code>name_len</code> field.","","","Get the value of the <code>names_len</code> field.","Get the value of the <code>names_len</code> field.","Create a new <code>ClientMessageEvent</code>.","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","Create a new instance with all fields unset / not present.","","","","","","","","","Set the <code>override_redirect</code> field of this structure.","Set the <code>override_redirect</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>path_len</code> field.","","","","","","","","","","","","","Get the value of the <code>pixels_len</code> field.","Get the value of the <code>pixels_len</code> field.","","","Get the value of the <code>pixmap_formats_len</code> field.","","Set the <code>plane_mask</code> field of this structure.","Set the <code>plane_mask</code> field of this structure.","","","","","","","","","","","","","","","","","","","Get the value of the <code>properties_len</code> field.","Get the value of the <code>properties_len</code> field.","","","","","","","","","","","","","","","Get the value of the <code>reason_len</code> field.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the value of the <code>roots_len</code> field.","","","","","","","Set the <code>save_under</code> field of this structure.","Set the <code>save_under</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","","Serialize this request into bytes for the provided …","Serialize this request into bytes for the provided …","","","Serialize this request into bytes for the provided …","","","","","","","","","","","","","","","","","","","","","","","Set the <code>sibling</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","Set the <code>stack_mode</code> field of this structure.","","","","","","","","","","","","","","","","","","Set the <code>stipple</code> field of this structure.","Set the <code>stipple</code> field of this structure.","","","","","","","Set the <code>subwindow_mode</code> field of this structure.","Set the <code>subwindow_mode</code> field of this structure.","","","","","","","","Set the <code>tile</code> field of this structure.","Set the <code>tile</code> field of this structure.","","","Set the <code>tile_stipple_x_origin</code> field of this structure.","Set the <code>tile_stipple_x_origin</code> field of this structure.","","","Set the <code>tile_stipple_y_origin</code> field of this structure.","Set the <code>tile_stipple_y_origin</code> field of this structurearse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …","Parse this request given its header, its body, and any fds …terate over the contained value if its format is 16.","Iterate over the contained value if its format is 32.","Iterate over the contained value if its format is 8.","","","","","","","","","","","Get the value of the <code>vendor_len</code> field.","","","","","","","","","","","","","Get the value of the <code>visuals_len</code> field.","","","Set the <code>width</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","Set the <code>win_gravity</code> field of this structure.","Set the <code>win_gravity</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>x</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","Set the <code>y</code> field of this structure.","","","","","","","","","","","","","","","","","","","","","","","","","","Iterator implementation used by GetPropertyReply.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Has the BigRequests extension been enabled?","The value returned by <code>serialize</code>.","The protocol name of the extension that this request …","The BigRequests extension has been enabled.","Trait to provide information about extensions.","Information about a X11 extension.","The BigRequests extension has not been enabled.","The kind of reply that this request generates.","The kind of reply that this request generates.","A X11 request that has a reply with FDs","A type alias for reply parsers (matches the signature of …","A X11 request that has a reply without FDs","A type implementing this trait is an X11 request.","A representation of the header of a request.","A type implementing this trait can be serialized into X11 …","A type implementing this trait can be parsed from some raw …","A type implementing this trait can be parsed from some raw …","A X11 request that does not have a reply","Representation of an X11 error packet that was sent by the …","The value in the request that caused the error.","","","","","","","","","","","","","","","","","","","","","","","The kind of error that occurred as it appears “on the …","The kind of error that occurred.","Name of the extension that caused this error, if known.","Lowest error number used by the extension.","Lowest event number used by the extension.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the information of the extension that whose error …","Returns the information of the extension that whose event …","Returns the information of the extension that whose opcode …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The major opcode of the request that caused this error.","Major opcode used in request","The major opcode of the request.","The minor opcode of the request that caused this error.","The minor opcode of the request (which, for some requests, …","Parse the given input for a RequestHeader and the …","The remaining length of the request, measured in 4 bytes …","Name of the request that caused this error, if known.","The sequence number of the request that caused this error.","Serialize this request into its X11 protocol wire …","Serialize this value into X11 raw bytes.","Serialize this value into X11 raw bytes, appending the …","","","","","","","","","","","","","Try to parse the given values into an instance of this …","Parse an X11 error.","Try to parse the given values into an instance of this …","","","","","Chaosnet connection","DECnet","A family describes how to interpret some bytes as an …","IPv4 connection to the server","IPv6 connection to the server","Kerberos 5 principal name","For local non-net authentication","For local non-net authentication","TODO: No idea what this means exactly","Family without predefined meaning, but interpreted by the …","Wildcard matching any protocol family","","","","","","","","Returns the argument unchanged.","","","Get the authentication information necessary for …","Calls <code>U::from(self)</code>.","","","",""],"i":[0,0,3,3,0,0,0,0,1,1,3,1,3,3,3,1,0,0,1,1,3,1,3,0,1,3,1,1,3,1,0,1,3,1,1,0,0,0,3,1,1,3,1,3,1,3,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,21,22,0,0,22,0,21,21,22,21,22,23,21,22,23,21,22,21,22,23,23,23,21,21,21,22,23,21,22,23,21,22,23,23,23,23,23,23,23,23,21,22,21,22,23,21,22,23,21,22,23,0,28,17,0,17,28,17,28,17,28,17,28,0,17,17,17,17,17,28,17,28,17,28,28,28,28,28,28,17,17,28,17,17,17,28,17,28,28,17,28,17,28,17,28,17,489,489,0,0,30,31,30,31,30,31,30,31,30,31,31,30,31,30,30,31,30,30,31,31,30,31,30,31,30,31,30,0,34,34,34,34,34,34,34,34,34,34,34,34,34,0,35,0,35,35,36,35,36,35,36,35,36,36,36,35,36,35,36,35,36,35,36,36,35,36,0,36,36,35,36,35,36,35,36,35,36,39,39,42,43,42,43,42,43,42,43,42,39,42,42,43,40,40,42,42,42,42,42,42,42,42,42,40,40,42,42,40,42,39,40,40,40,42,42,42,42,42,42,42,42,42,42,40,42,42,39,42,40,42,42,39,40,40,0,0,40,42,40,40,39,42,42,42,42,42,42,39,40,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,42,42,43,42,43,42,40,40,39,42,42,39,42,42,43,40,40,40,42,40,39,42,43,42,43,42,43,42,43,42,43,42,43,42,43,40,40,42,42,40,39,40,39,40,42,42,39,42,42,42,42,42,42,42,42,42,40,42,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,43,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,39,39,39,39,39,42,43,42,43,42,43,42,43,42,42,42,42,42,42,42,42,40,42,0,0,39,40,42,40,40,40,42,42,42,42,42,42,42,42,43,42,43,42,42,42,42,43,42,43,42,40,42,42,43,42,43,42,42,42,42,42,43,42,42,42,42,42,42,42,39,40,40,42,42,39,40,43,42,39,42,43,42,43,42,43,39,42,42,42,42,42,42,42,42,42,42,40,42,42,42,42,43,42,43,42,43,42,43,42,42,42,42,43,42,42,42,40,42,42,42,42,42,42,42,42,42,0,42,43,39,40,42,43,39,40,39,40,39,40,39,39,39,42,43,39,40,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,39,40,39,0,39,42,43,39,40,42,42,40,39,40,0,42,40,40,40,0,39,40,42,43,39,40,42,43,39,40,42,43,39,40,40,0,0,0,0,0,0,0,0,104,95,104,95,104,95,104,95,104,95,104,95,104,95,104,95,104,95,104,95,104,95,104,95,95,95,104,95,95,104,104,104,95,104,95,104,95,95,95,104,104,95,0,0,0,0,0,108,55,108,55,108,108,108,55,108,55,108,55,108,55,108,55,108,55,108,55,108,55,108,55,108,55,55,55,55,108,55,55,108,108,108,55,108,55,108,55,55,55,108,108,55,118,0,0,114,114,114,118,118,0,0,0,0,118,114,114,114,118,118,114,0,0,0,0,118,118,118,118,118,118,118,118,118,118,118,118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,118,118,116,118,118,118,118,118,118,118,118,118,118,118,118,114,118,0,118,0,0,0,0,0,0,0,0,0,0,0,114,0,0,0,118,121,121,118,118,118,118,120,118,116,118,0,118,0,118,117,121,122,122,118,118,118,118,118,122,0,0,0,114,114,120,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,114,0,0,118,118,0,0,0,119,119,118,118,114,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,121,121,0,0,118,86,128,129,123,123,109,112,109,112,109,112,109,112,109,112,109,112,169,114,114,114,128,129,123,123,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,164,133,169,156,162,135,135,140,140,109,112,109,112,109,112,109,112,109,112,109,112,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,155,166,124,167,168,169,109,112,109,112,161,162,150,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,161,124,126,127,124,109,112,109,112,138,159,142,143,144,145,146,152,153,154,155,142,142,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,148,127,160,86,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,125,137,138,147,91,116,116,117,117,118,118,119,119,119,119,120,120,120,120,114,114,114,121,121,121,121,122,122,122,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,152,153,154,150,150,151,149,150,151,152,153,154,109,112,109,112,128,129,123,123,147,148,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,134,142,124,168,168,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,138,139,140,143,144,145,146,150,151,152,153,154,155,160,162,165,167,168,169,163,133,89,91,99,86,89,142,143,144,145,146,152,153,154,142,142,157,157,157,157,157,157,157,157,157,89,109,112,86,127,91,86,91,91,91,99,126,91,142,143,144,145,146,152,153,154,155,168,168,131,132,167,131,132,167,132,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,139,140,141,158,160,165,166,167,168,169,138,128,145,146,109,112,109,112,109,112,109,112,163,140,155,128,129,123,123,109,112,109,112,133,91,89,91,99,86,123,124,125,126,127,128,129,130,131,132,133,134,135,135,136,136,137,137,138,138,139,139,140,140,141,141,142,142,143,143,144,144,145,145,146,146,147,147,148,148,149,149,150,150,151,151,152,152,153,153,154,154,155,155,156,156,157,158,158,159,159,160,160,161,162,162,163,164,165,165,166,166,167,167,168,168,169,169,123,124,125,126,127,128,129,130,131,132,133,134,157,161,163,164,156,142,143,144,145,146,152,153,154,142,143,144,145,146,152,153,154,142,143,144,145,146,152,153,154,167,168,169,91,109,112,109,112,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,133,164,158,143,165,144,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,123,124,125,126,127,128,129,130,131,132,133,134,89,91,99,157,86,161,163,164,123,124,125,126,127,128,129,130,131,132,133,134,89,91,99,157,86,161,163,164,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,162,165,166,167,168,169,124,116,117,118,119,120,114,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,89,136,91,137,99,109,138,112,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,86,160,161,162,163,164,165,166,167,168,169,138,139,99,160,125,126,134,142,130,134,156,134,165,130,134,156,163,134,165,174,174,0,0,0,0,0,174,0,173,173,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,173,0,0,173,0,173,0,0,175,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,67,67,67,67,67,67,67,67,67,67,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,177,178,179,180,177,178,179,180,181,182,183,182,75,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,175,175,175,175,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,173,173,174,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,177,71,67,75,90,71,71,177,178,179,177,90,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,177,90,90,175,175,71,67,75,90,176,176,177,177,178,178,179,179,180,180,181,181,182,182,183,183,184,184,175,175,175,178,179,184,179,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,175,71,67,75,90,175,71,67,75,90,176,177,178,179,180,181,182,183,184,173,174,175,176,71,177,178,179,180,181,67,182,183,75,184,90,184,177,178,179,180,177,178,179,180,0,0,0,0,0,0,0,0,0,0,0,185,93,186,33,187,62,185,93,186,33,187,62,185,185,185,93,186,33,187,62,185,93,186,33,187,62,185,93,186,33,187,62,33,187,185,93,186,33,187,62,185,93,186,33,187,62,185,93,186,33,187,62,185,93,186,33,187,62,185,93,186,33,187,62,185,93,186,33,187,62,62,62,185,93,186,33,187,62,93,33,62,185,93,186,33,187,62,93,33,62,185,185,186,186,187,187,93,93,33,185,93,186,33,187,62,185,93,186,33,187,62,185,93,186,33,187,62,93,33,62,93,33,62,185,186,187,185,93,186,33,187,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,199,189,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,194,193,190,190,203,190,190,0,0,0,0,193,0,0,0,196,188,0,196,188,0,0,0,0,0,0,196,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,194,0,0,0,44,230,231,205,188,188,189,189,190,190,188,189,190,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,227,215,191,191,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,222,223,82,58,82,200,58,82,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,220,220,211,212,213,214,215,217,225,227,230,230,216,216,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,198,201,47,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,191,69,192,192,193,193,194,194,195,196,196,188,188,197,198,199,199,189,189,200,201,202,58,203,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,190,230,231,207,219,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,58,82,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,204,210,222,226,230,206,227,47,69,58,44,82,69,195,69,195,200,222,44,82,226,44,82,197,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,208,221,204,210,47,204,205,206,207,208,209,210,216,218,219,220,221,197,200,227,197,198,197,69,197,200,58,47,44,82,191,191,195,195,198,198,201,201,202,202,204,204,205,205,206,206,207,207,208,208,209,209,210,210,211,211,212,212,213,213,214,214,215,215,216,216,217,217,218,218,219,219,220,220,221,221,222,222,223,223,224,224,225,225,226,226,227,227,228,228,229,229,230,230,231,231,211,215,217,225,227,212,213,214,212,213,214,226,197,200,195,197,200,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,227,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,69,197,200,58,47,44,82,69,197,200,58,47,44,82,191,195,198,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,191,69,192,193,194,195,196,188,197,198,199,189,200,201,202,58,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,47,219,220,221,222,223,44,224,82,225,226,227,228,229,190,230,231,58,82,195,197,198,200,201,206,228,229,230,58,82,230,230,220,219,221,58,82,58,82,230,230,220,219,221,58,82,323,0,467,416,0,0,0,0,0,453,0,464,343,243,272,383,383,383,246,248,298,334,347,353,331,298,251,342,356,356,356,298,0,253,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,251,249,249,249,249,249,253,253,253,0,323,385,298,244,249,252,249,249,250,323,469,255,247,245,247,245,247,245,247,245,247,245,245,245,0,245,0,0,0,0,0,0,0,0,0,0,0,298,251,298,244,0,0,0,0,0,0,0,0,0,457,235,0,0,0,383,0,0,172,251,251,251,0,298,249,0,0,245,405,0,0,0,246,247,472,0,405,383,298,0,0,308,0,383,0,0,0,0,0,0,0,0,297,298,249,0,298,298,298,298,298,298,298,298,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,251,251,457,240,452,453,294,316,456,0,462,0,0,0,261,460,249,384,298,0,0,0,0,0,0,0,244,460,298,0,245,383,249,387,0,245,0,0,0,0,469,298,440,440,0,251,251,245,0,0,365,298,251,0,298,0,251,0,0,0,0,0,343,280,298,251,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,273,0,0,0,0,0,251,0,0,261,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,250,270,0,0,0,0,0,0,172,272,308,308,316,456,301,0,298,457,457,0,343,383,298,340,0,0,0,0,0,0,0,0,251,0,0,253,305,0,245,253,245,0,245,0,0,0,0,0,0,0,0,0,0,0,440,0,245,253,253,371,0,251,251,0,0,0,0,0,0,246,247,472,0,325,266,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,248,347,472,246,248,347,472,246,248,347,472,246,248,347,472,246,248,347,472,0,0,0,0,0,0,298,298,385,247,247,247,247,247,305,0,266,0,0,0,0,0,0,0,0,0,0,0,0,0,383,294,405,267,272,298,302,309,344,365,416,434,436,272,272,383,383,270,273,298,244,244,244,298,453,255,452,243,343,245,0,0,0,0,0,0,446,240,446,240,292,384,292,386,0,323,383,398,383,383,249,245,0,365,309,280,235,298,0,251,298,272,305,245,245,272,365,340,298,0,0,0,0,0,0,0,0,0,452,331,398,298,255,245,0,261,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,298,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,325,0,298,252,0,0,331,356,356,0,467,245,0,298,298,462,462,298,298,298,298,298,298,298,371,0,255,385,0,0,0,0,0,0,0,249,298,0,0,0,0,457,383,0,0,0,0,0,0,0,0,0,0,246,247,472,250,384,386,244,244,244,250,244,261,261,251,386,0,0,298,298,298,245,298,298,245,245,251,343,469,298,298,342,356,356,356,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,251,386,251,251,323,0,261,0,0,0,0,0,298,298,273,0,0,0,0,0,301,0,312,0,0,0,280,392,312,0,0,0,0,0,0,0,0,0,0,312,272,245,0,298,0,0,0,0,0,0,298,244,243,273,250,387,298,0,249,244,298,298,298,298,298,298,298,298,298,298,298,0,0,0,0,250,383,409,409,298,250,392,392,392,409,288,450,59,450,59,458,232,232,83,96,66,417,454,84,233,233,259,259,234,236,234,236,404,408,237,237,237,373,295,97,330,54,466,54,373,238,238,238,238,239,239,70,435,437,439,435,437,439,435,437,439,234,236,234,236,241,242,241,242,241,242,241,242,241,242,241,242,66,241,242,241,242,66,241,242,241,242,66,233,239,239,70,239,239,70,239,239,70,241,242,241,242,66,397,16,16,16,245,245,246,246,247,247,248,248,249,249,250,250,251,251,252,252,253,253,245,246,247,248,249,250,251,252,253,260,262,233,423,52,428,431,262,53,426,241,242,241,242,241,242,241,242,254,282,288,289,310,254,87,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,237,304,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,237,304,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,348,349,256,256,238,49,234,236,234,236,83,83,373,268,269,271,274,76,65,61,61,388,435,437,262,310,66,441,234,236,234,236,234,236,234,236,393,234,236,234,236,393,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,237,304,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,237,304,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,418,420,421,423,424,425,426,427,429,430,432,433,80,80,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,241,242,303,241,242,66,262,425,426,68,68,345,348,425,426,399,400,406,277,278,306,445,233,241,242,241,242,345,348,350,438,439,234,236,234,236,391,234,236,234,236,391,304,332,410,100,332,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,83,96,233,335,466,260,263,310,87,381,410,100,373,341,268,269,271,274,275,326,450,66,241,242,241,242,450,83,51,96,278,279,327,381,388,399,400,402,403,404,406,407,408,410,411,412,413,414,415,441,396,397,390,363,364,65,364,396,397,410,65,364,396,397,410,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,268,269,271,274,275,283,284,285,287,288,290,293,341,241,242,241,242,341,345,348,350,307,268,269,271,274,268,269,271,274,77,77,73,56,73,56,73,56,395,307,458,232,369,234,236,234,236,234,236,234,236,64,64,306,444,445,428,430,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,237,304,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,366,72,234,236,370,374,375,379,234,236,83,51,96,83,51,96,435,437,439,435,437,439,435,437,439,234,236,234,236,304,332,49,410,411,256,257,258,259,260,261,261,262,263,245,245,245,245,243,243,243,243,233,238,264,265,266,266,16,246,246,246,247,247,247,267,267,268,248,248,248,269,270,270,271,272,272,273,273,274,275,276,277,278,279,280,280,281,282,283,284,285,286,287,288,289,290,291,292,292,293,294,294,295,296,297,297,298,298,299,300,301,301,302,302,303,237,237,237,237,304,305,305,306,307,308,308,308,249,249,249,309,309,244,244,244,244,241,310,242,311,312,312,313,66,314,315,316,316,317,318,319,320,321,322,250,250,323,323,323,323,254,324,325,325,326,327,87,328,61,329,97,330,57,331,331,332,333,334,334,335,49,336,54,337,338,92,339,340,340,341,342,342,343,343,344,344,345,94,346,347,347,348,349,350,351,48,352,353,353,354,355,356,356,357,358,359,360,76,361,362,77,363,65,364,365,365,366,367,72,368,81,369,370,371,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,251,251,251,383,383,383,383,384,384,384,384,255,255,255,255,385,385,385,385,386,386,386,386,387,387,387,387,172,172,172,172,235,235,235,235,234,388,236,389,390,391,392,392,393,394,395,396,397,398,398,399,400,401,402,403,404,405,405,406,407,408,409,409,410,411,100,412,413,414,415,416,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,252,428,429,430,431,432,68,433,56,434,434,435,436,436,437,438,439,440,440,441,74,442,64,443,45,444,445,98,253,253,446,446,446,446,240,240,240,240,239,447,448,70,449,450,451,59,452,452,453,453,454,455,84,456,456,457,457,458,232,459,85,460,460,461,462,462,463,464,464,465,466,467,467,468,469,469,470,46,471,50,472,472,473,88,474,60,475,284,254,234,236,234,236,389,391,393,394,396,397,399,400,402,403,404,406,407,408,410,412,413,414,415,70,345,348,349,351,354,355,234,236,234,236,423,52,428,431,262,53,426,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,254,258,259,277,278,282,288,289,291,310,254,87,381,395,396,397,410,411,441,74,233,233,85,85,16,454,84,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,237,304,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,310,311,324,329,332,341,369,375,377,378,379,388,389,391,393,399,400,402,403,404,406,407,408,410,412,413,414,415,424,427,429,430,432,433,442,444,447,458,466,470,473,412,413,429,234,236,234,236,239,354,355,239,239,239,70,345,348,351,354,444,473,60,60,276,81,444,98,444,98,239,239,70,239,239,410,373,265,100,98,264,16,307,66,87,61,97,57,49,54,92,94,48,76,77,65,72,81,83,51,63,96,78,80,52,73,79,53,68,56,74,64,45,70,59,84,85,46,50,88,60,234,236,234,236,234,236,234,236,335,335,278,279,64,470,50,66,50,66,76,435,437,437,79,79,83,96,83,96,83,96,233,16,377,378,16,417,419,83,96,83,96,83,96,233,16,278,279,274,275,317,332,357,458,85,461,463,468,348,349,354,355,16,329,57,369,372,376,96,424,430,433,442,57,376,96,63,45,63,45,304,241,242,254,234,236,239,303,329,393,51,51,51,51,51,241,242,282,285,287,288,241,242,66,296,299,337,92,345,348,351,354,282,286,287,289,310,318,61,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,78,78,377,378,449,381,52,73,428,430,79,53,427,432,79,53,382,16,16,293,234,236,234,236,411,427,425,345,348,351,354,399,400,406,454,84,64,341,83,96,83,96,299,300,332,333,335,339,238,264,16,238,264,16,264,265,264,393,403,407,423,52,428,431,262,53,426,16,96,306,299,300,339,465,16,16,268,269,271,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,293,295,296,299,300,303,304,306,307,366,72,373,233,268,269,271,274,87,61,76,233,233,268,269,271,274,76,268,269,271,274,76,16,16,268,269,271,76,65,274,241,242,241,242,66,233,260,402,296,299,300,337,338,339,268,269,271,274,275,277,278,279,281,282,283,284,285,286,287,288,289,290,291,293,295,296,299,300,303,304,306,307,66,87,61,97,57,49,54,92,94,48,76,77,65,72,81,83,51,63,96,78,100,80,52,73,79,53,68,56,74,64,45,98,70,59,84,85,46,50,88,60,256,257,258,259,260,262,263,233,238,264,265,16,237,310,310,311,311,313,313,314,314,315,315,317,317,318,318,319,319,320,320,321,321,322,322,324,324,326,326,327,327,328,328,329,329,330,330,332,332,333,333,335,335,336,336,337,337,338,338,339,339,341,341,345,345,346,346,348,348,349,349,350,350,351,351,352,352,354,354,355,355,357,357,358,358,359,359,360,360,361,362,362,363,363,364,364,366,366,367,367,368,368,369,369,370,370,372,373,374,374,375,375,376,377,377,378,378,379,379,380,380,381,381,382,382,388,388,389,389,390,390,391,391,393,393,394,394,395,395,396,396,397,397,399,399,400,400,401,402,402,403,403,404,404,406,406,407,407,408,408,410,410,411,411,412,412,413,413,414,414,415,415,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,429,429,430,430,431,432,432,433,433,435,435,437,437,438,438,439,439,441,441,442,442,443,443,444,444,445,445,447,447,448,448,449,449,450,450,451,451,454,454,455,455,458,458,232,459,459,461,461,463,463,465,465,466,466,468,468,470,470,471,471,473,473,474,474,475,475,256,257,258,259,260,262,263,233,238,264,265,16,237,361,372,373,376,401,428,431,232,406,254,289,254,435,437,437,419,396,397,390,364,364,363,364,363,364,396,397,363,364,396,397,254,289,254,362,268,269,271,274,281,295,303,264,265,16,94,48,46,88,234,236,234,236,362,375,414,415,234,236,234,236,299,300,339,450,59,234,236,234,236,234,236,234,236,234,236,234,236,268,269,271,274,295,296,299,300,337,339,345,346,350,351,352,357,361,366,454,84,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,237,304,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,237,304,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,237,304,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,256,257,258,259,260,262,263,233,238,264,265,16,268,269,271,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,293,295,296,299,300,303,237,304,306,307,66,87,61,97,57,49,54,92,94,48,76,361,77,65,72,81,372,373,83,51,376,63,96,78,401,100,80,52,73,79,53,428,431,68,56,74,64,45,98,70,59,84,232,85,46,50,88,60,256,257,258,259,260,262,263,233,238,264,265,16,268,269,271,274,275,276,277,278,279,281,282,283,284,285,286,287,288,289,290,291,293,295,296,299,300,303,237,304,306,307,66,87,61,97,57,49,54,92,94,48,76,361,77,65,72,81,372,373,83,51,376,63,96,78,401,100,80,52,73,79,53,428,431,68,56,74,64,45,98,70,59,84,232,85,46,50,88,60,310,311,313,314,315,317,318,319,320,321,322,324,326,327,328,329,330,332,333,335,336,337,338,339,341,345,346,348,349,350,351,352,354,355,357,358,359,360,362,363,364,366,367,368,369,370,374,375,377,378,379,380,381,382,388,389,390,391,393,394,395,396,397,399,400,402,403,404,406,407,408,410,411,412,413,414,415,417,418,419,420,421,422,423,424,425,426,427,429,430,432,433,435,437,438,439,441,442,443,444,445,447,448,449,450,451,454,455,458,459,461,463,465,466,468,470,471,473,474,475,304,332,335,49,256,257,258,259,260,261,262,263,245,243,233,238,264,265,266,16,246,247,267,268,248,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,237,304,305,306,307,308,249,309,244,241,310,242,311,312,313,66,314,315,316,317,318,319,320,321,322,250,323,254,324,325,326,327,87,328,61,329,97,330,57,331,332,333,334,335,49,336,54,337,338,92,339,340,341,342,343,344,345,94,346,347,348,349,350,351,48,352,353,354,355,356,357,358,359,360,76,361,362,77,363,65,364,365,366,367,72,368,81,369,370,371,372,373,374,83,375,51,376,377,63,378,96,379,380,78,381,382,251,383,384,255,385,386,387,172,235,234,388,236,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,100,412,413,414,415,416,417,418,419,420,421,422,80,423,52,424,73,425,79,426,53,427,252,428,429,430,431,432,68,433,56,434,435,436,437,438,439,440,441,74,442,64,443,45,444,445,98,253,446,240,239,447,448,70,449,450,451,59,452,453,454,455,84,456,457,458,232,459,85,460,461,462,463,464,465,466,467,468,469,470,46,471,50,472,473,88,474,60,475,49,372,49,49,49,49,310,311,324,388,389,447,289,390,16,16,310,66,100,417,73,56,73,56,262,73,56,263,263,233,310,254,258,259,277,278,282,288,289,291,310,254,87,381,395,396,397,410,411,441,74,233,233,241,242,241,242,66,76,76,277,281,282,283,284,285,286,287,288,289,290,291,293,295,303,304,311,313,314,315,317,318,319,320,321,322,324,326,328,332,333,335,336,360,362,395,417,422,466,254,257,258,259,277,278,282,287,288,289,290,310,318,254,87,361,395,411,412,413,414,415,435,401,401,254,257,258,259,277,278,282,287,288,289,290,310,318,254,87,361,395,411,412,413,414,415,435,401,401,66,0,483,483,483,483,483,483,483,483,483,483,483,483,483,483,0,490,491,488,0,0,488,492,493,0,0,0,0,0,0,0,0,0,0,486,486,487,102,488,486,487,102,488,486,487,102,488,486,487,102,488,486,487,488,486,487,488,486,486,486,487,487,486,487,102,488,486,487,102,488,101,101,101,486,487,102,488,486,487,102,486,102,0,102,486,486,491,490,490,486,487,102,488,486,487,102,488,486,487,102,488,485,486,494,486,487,102,488,18,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,18,18,18,18,18],"f":[0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[3,3],[[]],[1,[[5,[4]]]],0,0,[1],[[1,1],6],[[3,3],6],[[],6],[[],6],0,[[1,7],8],[[3,7],8],[[]],[9,1],[[]],[[1,10]],0,[[]],[[]],[1,2],[2,1],0,0,0,[[]],[1,[[5,[1,4]]]],[[],5],[[],5],[[],5],[[],5],[[],11],[[],11],0,0,0,0,[[12,13],6],[[]],[[]],[12,[[15,[14]]]],[[12,7],8],[[]],[[]],[12,[[5,[16,17]]]],[[18,[15,[14]],19],[[5,[17]]]],[[],5],[[],5],[[],11],[[[20,[14]],[20,[14]]]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[21,21],[22,22],[[]],[[]],[[23,24,3]],[[23,[20,[1]]]],[[23,[20,[14]]]],[[21,21],6],[[],6],[[21,7],8],[[22,7],8],[[23,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[],23],[[23,24],22],[23,[[26,[25]]]],[[23,24],22],[[23,24],[[26,[27]]]],[[23,24],6],[[23,21],[[26,[24]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[28,28],[[]],[[28,28],6],[[],6],[[28,7],8],[[28,7],8],[[17,7],8],[[17,7],8],[[]],[28,17],[[]],[4,17],[[]],[[]],[[]],[[],29],[[],29],[[],5],[[],5],[[],5],[[],5],[[],11],[[],11],0,0,0,0,[[]],[[]],[[]],[[]],[30,30],[31,31],[[]],[[]],[[30,7],8],[[31,7],8],[[31,7],8],[[]],[[]],[30,[[26,[32]]]],[[]],[[]],[[32,32],[[5,[30,17]]]],[[]],[[]],[[],29],[[],5],[[],5],[[],5],[[],5],[[],11],[[],11],[[30,33],[[5,[31]]]],0,[[34,13],[[26,[[20,[14]]]]]],[[]],[[]],[34,[[15,[14]]]],[[],34],[[34,7],8],[[]],[[]],[[],34],[34,13],[[],5],[[],5],[[],11],0,0,0,0,[[]],[[]],[[]],[[]],[35,35],[36,36],[[]],[[]],[36,37],0,[[35,35],6],[[36,36],6],[[],6],[[],6],[[35,7],8],[[36,7],8],[[]],[[]],0,[[]],[[]],[[[26,[38]]],[[26,[36]]]],0,0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[39,39],[40,40],[[]],[[]],[[39,39],41],[[39,39],6],[[],6],[[42,7],8],[[43,7],8],[[39,7],8],[[40,7],8],[[]],[44,43],[45,43],[46,43],[47,43],[48,43],[49,43],[50,43],[51,43],[52,43],[53,43],[54,43],[55,43],[56,43],[57,43],[58,43],[59,43],[60,43],[61,43],[62,43],[63,43],[[],43],[64,43],[65,43],[66,43],[67,43],[68,43],[69,43],[70,43],[71,43],[72,43],[73,43],[74,43],[75,43],[76,43],[77,43],[78,43],[79,43],[80,43],[81,43],[82,43],[83,43],[84,43],[85,43],[86,43],[33,43],[87,43],[88,43],[89,43],[90,43],[[]],[91,43],[92,43],[93,43],[94,43],[95,43],[96,43],[97,43],[98,43],[99,43],[100,43],[[]],[[]],[[14,101],39],0,[[39,10]],[[]],[[]],[[]],[[]],[42,42],[[102,[15,[14]],[20,[1]],101],[[5,[42,28]]]],[[[15,[14]],101],[[5,[40,28]]]],[[39,39],[[26,[41]]]],[40,14],0,[42,[[26,[103]]]],[40,14],[40,6],[40,6],0,[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],11],[[],11],[[],11],[[],11],[40,[[26,[19]]]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[104,104],[95,95],[[]],[[]],[[104,104],41],[[95,95],41],[[],104],[[],95],[[104,104],6],[[95,95],6],[[],6],[[],6],[[104,7],8],[[95,7],8],[[]],[[]],[[104,10]],[[95,10]],[[]],[[]],0,0,[[104,104],[[26,[41]]]],[[95,95],[[26,[41]]]],0,[[104,14],[[106,[105]]]],[[104,14],[[106,[[20,[14]]]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[[15,[14]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[102,[15,[14]]],[[5,[104,28]]]],[[],11],[[],11],0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[108,108],[55,55],[[]],[[]],[[108,108],41],[[55,55],41],[[],108],[[],55],[[108,108],6],[[55,55],6],[[],6],[[],6],[[108,7],8],[[55,7],8],[[]],[[]],[[108,10]],[[55,10]],[[]],[[]],0,0,0,[[108,108],[[26,[41]]]],[[55,55],[[26,[41]]]],0,[[108,14],[[106,[105]]]],[[108,14],[[106,[[20,[14]]]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[[15,[14]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[102,[15,[14]]],[[5,[108,28]]]],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[109,[111,[[26,[110]]]]],109],[[112,[111,[[26,[110]]]]],112],0,0,[[109,[111,[[26,[113]]]]],109],[[112,[111,[[26,[113]]]]],112],0,0,[[109,[111,[[26,[113]]]]],109],[[112,[111,[[26,[113]]]]],112],0,0,0,[[114,19]],[[114,114]],[[114,19]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[109,[111,[[26,[115]]]]],109],[[112,[111,[[26,[115]]]]],112],0,0,[[109,[111,[[26,[113]]]]],109],[[112,[111,[[26,[113]]]]],112],0,0,[[109,[111,[[26,[113]]]]],109],[[112,[111,[[26,[113]]]]],112],0,0,[116,116],[117,117],[118,118],[119,119],[120,120],[114,114],[121,121],[122,122],[123,123],[124,124],[125,125],[126,126],[127,127],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[135,135],[89,89],[136,136],[91,91],[137,137],[99,99],[109,109],[138,138],[112,112],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[86,86],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[116,116],41],[[117,117],41],[[118,118],41],[[119,119],41],[[120,120],41],[[114,114],41],[[121,121],41],[[122,122],41],[[123,123],41],[[124,124],41],[[125,125],41],[[126,126],41],[[127,127],41],[[128,128],41],[[129,129],41],[[130,130],41],[[131,131],41],[[132,132],41],[[133,133],41],[[134,134],41],[[135,135],41],[[89,89],41],[[136,136],41],[[91,91],41],[[137,137],41],[[99,99],41],[[109,109],41],[[138,138],41],[[112,112],41],[[139,139],41],[[140,140],41],[[141,141],41],[[142,142],41],[[143,143],41],[[144,144],41],[[145,145],41],[[146,146],41],[[147,147],41],[[148,148],41],[[149,149],41],[[150,150],41],[[151,151],41],[[152,152],41],[[153,153],41],[[154,154],41],[[155,155],41],[[156,156],41],[[157,157],41],[[158,158],41],[[159,159],41],[[86,86],41],[[160,160],41],[[161,161],41],[[162,162],41],[[163,163],41],[[164,164],41],[[165,165],41],[[166,166],41],[[167,167],41],[[168,168],41],[[169,169],41],0,0,0,0,0,0,[[109,[111,[[26,[32]]]]],109],[[112,[111,[[26,[32]]]]],112],0,0,0,0,0,[[],116],[[],117],[[],118],[[],119],[[],120],[[],114],[[],121],[[],122],[[],123],[[],124],[[],125],[[],126],[[],127],[[],128],[[],129],[[],130],[[],131],[[],132],[[],133],[[],134],[[],135],[[],89],[[],136],[[],91],[[],137],[[],99],[[],109],[[],138],[[],112],[[],139],[[],140],[[],141],[[],142],[[],143],[[],144],[[],145],[[],146],[[],147],[[],148],[[],149],[[],150],[[],151],[[],152],[[],153],[[],154],[[],155],[[],156],[[],157],[[],158],[[],159],[[],86],[[],160],[[],161],[[],162],[[],163],[[],164],[[],165],[[],166],[[],167],[[],168],[[],169],0,0,0,0,0,[[109,[111,[[26,[170]]]]],109],[[112,[111,[[26,[170]]]]],112],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[116,116],6],[[117,117],6],[[118,118],6],[[119,119],6],[[120,120],6],[[114,114],6],[[121,121],6],[[122,122],6],[[123,123],6],[[124,124],6],[[125,125],6],[[126,126],6],[[127,127],6],[[128,128],6],[[129,129],6],[[130,130],6],[[131,131],6],[[132,132],6],[[133,133],6],[[134,134],6],[[135,135],6],[[89,89],6],[[136,136],6],[[91,91],6],[[137,137],6],[[99,99],6],[[109,109],6],[[138,138],6],[[112,112],6],[[139,139],6],[[140,140],6],[[141,141],6],[[142,142],6],[[143,143],6],[[144,144],6],[[145,145],6],[[146,146],6],[[147,147],6],[[148,148],6],[[149,149],6],[[150,150],6],[[151,151],6],[[152,152],6],[[153,153],6],[[154,154],6],[[155,155],6],[[156,156],6],[[157,157],6],[[158,158],6],[[159,159],6],[[86,86],6],[[160,160],6],[[161,161],6],[[162,162],6],[[163,163],6],[[164,164],6],[[165,165],6],[[166,166],6],[[167,167],6],[[168,168],6],[[169,169],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,0,[[116,7],8],[[117,7],8],[[118,7],8],[[119,7],8],[[120,7],8],[[114,7],8],[[121,7],8],[[122,7],8],[[123,7],8],[[124,7],8],[[125,7],8],[[126,7],8],[[127,7],8],[[128,7],8],[[129,7],8],[[130,7],8],[[131,7],8],[[132,7],8],[[133,7],8],[[134,7],8],[[135,7],8],[[89,7],8],[[136,7],8],[[91,7],8],[[137,7],8],[[99,7],8],[[109,7],8],[[138,7],8],[[112,7],8],[[139,7],8],[[140,7],8],[[141,7],8],[[142,7],8],[[143,7],8],[[144,7],8],[[145,7],8],[[146,7],8],[[147,7],8],[[148,7],8],[[149,7],8],[[150,7],8],[[151,7],8],[[152,7],8],[[153,7],8],[[154,7],8],[[155,7],8],[[156,7],8],[[157,7],8],[[158,7],8],[[159,7],8],[[86,7],8],[[160,7],8],[[161,7],8],[[162,7],8],[[163,7],8],[[164,7],8],[[165,7],8],[[166,7],8],[[167,7],8],[[168,7],8],[[169,7],8],0,0,0,0,0,[14,116],[[]],[14,117],[[]],[14,118],[[]],[19,119],[[]],[14,119],[32,119],[19,120],[[]],[32,120],[14,120],[14,114],[19,114],[[]],[14,121],[[]],[32,121],[19,121],[[]],[14,122],[19,122],[32,122],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[109,[111,[[26,[32]]]]],109],[[112,[111,[[26,[32]]]]],112],0,0,0,0,0,0,0,0,[[116,10]],[[117,10]],[[118,10]],[[119,10]],[[120,10]],[[114,10]],[[121,10]],[[122,10]],[[123,10]],[[124,10]],[[125,10]],[[126,10]],[[127,10]],[[128,10]],[[129,10]],[[130,10]],[[131,10]],[[132,10]],[[133,10]],[[134,10]],[[135,10]],[[89,10]],[[136,10]],[[91,10]],[[137,10]],[[99,10]],[[109,10]],[[138,10]],[[112,10]],[[139,10]],[[140,10]],[[141,10]],[[142,10]],[[143,10]],[[144,10]],[[145,10]],[[146,10]],[[147,10]],[[148,10]],[[149,10]],[[150,10]],[[151,10]],[[152,10]],[[153,10]],[[154,10]],[[155,10]],[[156,10]],[[157,10]],[[158,10]],[[159,10]],[[86,10]],[[160,10]],[[161,10]],[[162,10]],[[163,10]],[[164,10]],[[165,10]],[[166,10]],[[167,10]],[[168,10]],[[169,10]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138,138],[139,139],[140,140],[143,143],[144,144],[145,145],[146,146],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[160,160],[162,162],[165,165],[167,167],[168,168],[169,169],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],109],[[],112],[86,32],[127,32],0,[86,32],[91,32],[91,32],[91,32],[99,32],[126,19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[116,116],[[26,[41]]]],[[117,117],[[26,[41]]]],[[118,118],[[26,[41]]]],[[119,119],[[26,[41]]]],[[120,120],[[26,[41]]]],[[114,114],[[26,[41]]]],[[121,121],[[26,[41]]]],[[122,122],[[26,[41]]]],[[123,123],[[26,[41]]]],[[124,124],[[26,[41]]]],[[125,125],[[26,[41]]]],[[126,126],[[26,[41]]]],[[127,127],[[26,[41]]]],[[128,128],[[26,[41]]]],[[129,129],[[26,[41]]]],[[130,130],[[26,[41]]]],[[131,131],[[26,[41]]]],[[132,132],[[26,[41]]]],[[133,133],[[26,[41]]]],[[134,134],[[26,[41]]]],[[135,135],[[26,[41]]]],[[89,89],[[26,[41]]]],[[136,136],[[26,[41]]]],[[91,91],[[26,[41]]]],[[137,137],[[26,[41]]]],[[99,99],[[26,[41]]]],[[109,109],[[26,[41]]]],[[138,138],[[26,[41]]]],[[112,112],[[26,[41]]]],[[139,139],[[26,[41]]]],[[140,140],[[26,[41]]]],[[141,141],[[26,[41]]]],[[142,142],[[26,[41]]]],[[143,143],[[26,[41]]]],[[144,144],[[26,[41]]]],[[145,145],[[26,[41]]]],[[146,146],[[26,[41]]]],[[147,147],[[26,[41]]]],[[148,148],[[26,[41]]]],[[149,149],[[26,[41]]]],[[150,150],[[26,[41]]]],[[151,151],[[26,[41]]]],[[152,152],[[26,[41]]]],[[153,153],[[26,[41]]]],[[154,154],[[26,[41]]]],[[155,155],[[26,[41]]]],[[156,156],[[26,[41]]]],[[157,157],[[26,[41]]]],[[158,158],[[26,[41]]]],[[159,159],[[26,[41]]]],[[86,86],[[26,[41]]]],[[160,160],[[26,[41]]]],[[161,161],[[26,[41]]]],[[162,162],[[26,[41]]]],[[163,163],[[26,[41]]]],[[164,164],[[26,[41]]]],[[165,165],[[26,[41]]]],[[166,166],[[26,[41]]]],[[167,167],[[26,[41]]]],[[168,168],[[26,[41]]]],[[169,169],[[26,[41]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[109,[111,[[26,[119]]]]],109],[[112,[111,[[26,[119]]]]],112],0,0,[[109,[111,[[26,[120]]]]],109],[[112,[111,[[26,[120]]]]],112],0,0,0,0,0,0,0,0,0,[[109,[111,[[26,[122]]]]],109],[[112,[111,[[26,[122]]]]],112],0,0,0,0,0,0,0,0,[123,[[171,[14]]]],[124,[[171,[14]]]],[125,[[171,[14]]]],[126,[[20,[14]]]],[127,[[20,[14]]]],[128,[[171,[14]]]],[129,[[171,[14]]]],[130,[[171,[14]]]],[131,[[171,[14]]]],[132,[[171,[14]]]],[133,[[171,[14]]]],[134,[[171,[14]]]],[[135,14],[[106,[105]]]],[[135,14],[[106,[[20,[14]]]]]],[[136,14],[[106,[[20,[14]]]]]],[[136,14],[[106,[105]]]],[[137,14],[[106,[105]]]],[[137,14],[[106,[[20,[14]]]]]],[[138,14],[[106,[[20,[14]]]]]],[[138,14],[[106,[105]]]],[[139,14],[[106,[[20,[14]]]]]],[[139,14],[[106,[105]]]],[[140,14],[[106,[[20,[14]]]]]],[[140,14],[[106,[105]]]],[[141,14],[[106,[105]]]],[[141,14],[[106,[[20,[14]]]]]],[[142,14],[[106,[105]]]],[[142,14],[[106,[[20,[14]]]]]],[[143,14],[[106,[105]]]],[[143,14],[[106,[[20,[14]]]]]],[[144,14],[[106,[[20,[14]]]]]],[[144,14],[[106,[105]]]],[[145,14],[[106,[[20,[14]]]]]],[[145,14],[[106,[105]]]],[[146,14],[[106,[105]]]],[[146,14],[[106,[[20,[14]]]]]],[[147,14],[[106,[[20,[14]]]]]],[[147,14],[[106,[105]]]],[[148,14],[[106,[105]]]],[[148,14],[[106,[[20,[14]]]]]],[[149,14],[[106,[105]]]],[[149,14],[[106,[[20,[14]]]]]],[[150,14],[[106,[105]]]],[[150,14],[[106,[[20,[14]]]]]],[[151,14],[[106,[[20,[14]]]]]],[[151,14],[[106,[105]]]],[[152,14],[[106,[105]]]],[[152,14],[[106,[[20,[14]]]]]],[[153,14],[[106,[[20,[14]]]]]],[[153,14],[[106,[105]]]],[[154,14],[[106,[105]]]],[[154,14],[[106,[[20,[14]]]]]],[[155,14],[[106,[105]]]],[[155,14],[[106,[[20,[14]]]]]],[[156,14],[[106,[105]]]],[[156,14],[[106,[[20,[14]]]]]],[157,[[171,[14]]]],[[158,14],[[106,[[20,[14]]]]]],[[158,14],[[106,[105]]]],[[159,14],[[106,[[20,[14]]]]]],[[159,14],[[106,[105]]]],[[160,14],[[106,[[20,[14]]]]]],[[160,14],[[106,[105]]]],[161,[[171,[14]]]],[[162,14],[[106,[105]]]],[[162,14],[[106,[[20,[14]]]]]],[163,[[171,[14]]]],[164,[[171,[14]]]],[[165,14],[[106,[[20,[14]]]]]],[[165,14],[[106,[105]]]],[[166,14],[[106,[[20,[14]]]]]],[[166,14],[[106,[105]]]],[[167,14],[[106,[[20,[14]]]]]],[[167,14],[[106,[105]]]],[[168,14],[[106,[[20,[14]]]]]],[[168,14],[[106,[105]]]],[[169,14],[[106,[105]]]],[[169,14],[[106,[[20,[14]]]]]],[[123,[20,[14]]]],[[124,[20,[14]]]],[[125,[20,[14]]]],[[126,[20,[14]]]],[[127,[20,[14]]]],[[128,[20,[14]]]],[[129,[20,[14]]]],[[130,[20,[14]]]],[[131,[20,[14]]]],[[132,[20,[14]]]],[[133,[20,[14]]]],[[134,[20,[14]]]],[[157,[20,[14]]]],[[161,[20,[14]]]],[[163,[20,[14]]]],[[164,[20,[14]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[109,[111,[[26,[172]]]]],109],[[112,[111,[[26,[172]]]]],112],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[102,[15,[14]]],[[5,[135,28]]]],[[102,[15,[14]]],[[5,[136,28]]]],[[102,[15,[14]]],[[5,[137,28]]]],[[102,[15,[14]]],[[5,[138,28]]]],[[102,[15,[14]]],[[5,[139,28]]]],[[102,[15,[14]]],[[5,[140,28]]]],[[102,[15,[14]]],[[5,[141,28]]]],[[102,[15,[14]]],[[5,[142,28]]]],[[102,[15,[14]]],[[5,[143,28]]]],[[102,[15,[14]]],[[5,[144,28]]]],[[102,[15,[14]]],[[5,[145,28]]]],[[102,[15,[14]]],[[5,[146,28]]]],[[102,[15,[14]]],[[5,[147,28]]]],[[102,[15,[14]]],[[5,[148,28]]]],[[102,[15,[14]]],[[5,[149,28]]]],[[102,[15,[14]]],[[5,[150,28]]]],[[102,[15,[14]]],[[5,[151,28]]]],[[102,[15,[14]]],[[5,[152,28]]]],[[102,[15,[14]]],[[5,[153,28]]]],[[102,[15,[14]]],[[5,[154,28]]]],[[102,[15,[14]]],[[5,[155,28]]]],[[102,[15,[14]]],[[5,[156,28]]]],[[102,[15,[14]]],[[5,[158,28]]]],[[102,[15,[14]]],[[5,[159,28]]]],[[102,[15,[14]]],[[5,[160,28]]]],[[102,[15,[14]]],[[5,[162,28]]]],[[102,[15,[14]]],[[5,[165,28]]]],[[102,[15,[14]]],[[5,[166,28]]]],[[102,[15,[14]]],[[5,[167,28]]]],[[102,[15,[14]]],[[5,[168,28]]]],[[102,[15,[14]]],[[5,[169,28]]]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[173,173],[174,174],[175,175],[176,176],[71,71],[177,177],[178,178],[179,179],[180,180],[181,181],[67,67],[182,182],[183,183],[75,75],[184,184],[90,90],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[173,173],41],[[174,174],41],[[175,175],41],[[176,176],41],[[71,71],41],[[177,177],41],[[178,178],41],[[179,179],41],[[180,180],41],[[181,181],41],[[67,67],41],[[182,182],41],[[183,183],41],[[75,75],41],[[184,184],41],[[90,90],41],[[],173],[[],174],[[],175],[[],176],[[],71],[[],177],[[],178],[[],179],[[],180],[[],181],[[],67],[[],182],[[],183],[[],75],[[],184],[[],90],0,0,0,0,0,0,0,0,0,0,0,0,0,[[173,173],6],[[174,174],6],[[175,175],6],[[176,176],6],[[71,71],6],[[177,177],6],[[178,178],6],[[179,179],6],[[180,180],6],[[181,181],6],[[67,67],6],[[182,182],6],[[183,183],6],[[75,75],6],[[184,184],6],[[90,90],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,0,[[173,7],8],[[174,7],8],[[175,7],8],[[176,7],8],[[71,7],8],[[177,7],8],[[178,7],8],[[179,7],8],[[180,7],8],[[181,7],8],[[67,7],8],[[182,7],8],[[183,7],8],[[75,7],8],[[184,7],8],[[90,7],8],[[]],[14,173],[[]],[14,174],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[173,10]],[[174,10]],[[175,10]],[[176,10]],[[71,10]],[[177,10]],[[178,10]],[[179,10]],[[180,10]],[[181,10]],[[67,10]],[[182,10]],[[183,10]],[[75,10]],[[184,10]],[[90,10]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[177,177],0,0,0,0,0,0,0,0,0,0,0,[[173,173],[[26,[41]]]],[[174,174],[[26,[41]]]],[[175,175],[[26,[41]]]],[[176,176],[[26,[41]]]],[[71,71],[[26,[41]]]],[[177,177],[[26,[41]]]],[[178,178],[[26,[41]]]],[[179,179],[[26,[41]]]],[[180,180],[[26,[41]]]],[[181,181],[[26,[41]]]],[[67,67],[[26,[41]]]],[[182,182],[[26,[41]]]],[[183,183],[[26,[41]]]],[[75,75],[[26,[41]]]],[[184,184],[[26,[41]]]],[[90,90],[[26,[41]]]],0,0,[90,32],0,0,0,0,0,0,[[176,14],[[106,[105]]]],[[176,14],[[106,[[20,[14]]]]]],[[177,14],[[106,[105]]]],[[177,14],[[106,[[20,[14]]]]]],[[178,14],[[106,[105]]]],[[178,14],[[106,[[20,[14]]]]]],[[179,14],[[106,[[20,[14]]]]]],[[179,14],[[106,[105]]]],[[180,14],[[106,[[20,[14]]]]]],[[180,14],[[106,[105]]]],[[181,14],[[106,[[20,[14]]]]]],[[181,14],[[106,[105]]]],[[182,14],[[106,[[20,[14]]]]]],[[182,14],[[106,[105]]]],[[183,14],[[106,[[20,[14]]]]]],[[183,14],[[106,[105]]]],[[184,14],[[106,[105]]]],[[184,14],[[106,[[20,[14]]]]]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[102,[15,[14]]],[[5,[176,28]]]],[[102,[15,[14]]],[[5,[177,28]]]],[[102,[15,[14]]],[[5,[178,28]]]],[[102,[15,[14]]],[[5,[179,28]]]],[[102,[15,[14]]],[[5,[180,28]]]],[[102,[15,[14]]],[[5,[181,28]]]],[[102,[15,[14]]],[[5,[182,28]]]],[[102,[15,[14]]],[[5,[183,28]]]],[[102,[15,[14]]],[[5,[184,28]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[185,185],[93,93],[186,186],[33,33],[187,187],[62,62],[[]],[[]],[[]],[[]],[[]],[[]],[[185,185],41],[[93,93],41],[[186,186],41],[[33,33],41],[[187,187],41],[[62,62],41],0,0,[[],185],[[],93],[[],186],[[],33],[[],187],[[],62],[[185,185],6],[[93,93],6],[[186,186],6],[[33,33],6],[[187,187],6],[[62,62],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[185,7],8],[[93,7],8],[[186,7],8],[[33,7],8],[[187,7],8],[[62,7],8],[[]],[[]],[[]],[[]],[[]],[[]],[[185,10]],[[93,10]],[[186,10]],[[33,10]],[[187,10]],[[62,10]],0,[62,32],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[185,185],[[26,[41]]]],[[93,93],[[26,[41]]]],[[186,186],[[26,[41]]]],[[33,33],[[26,[41]]]],[[187,187],[[26,[41]]]],[[62,62],[[26,[41]]]],0,0,0,[[185,14],[[106,[[20,[14]]]]]],[[185,14],[[106,[105]]]],[[186,14],[[106,[[20,[14]]]]]],[[186,14],[[106,[105]]]],[[187,14],[[106,[105]]]],[[187,14],[[106,[[20,[14]]]]]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[102,[15,[14]]],[[5,[185,28]]]],[[102,[15,[14]]],[[5,[186,28]]]],[[102,[15,[14]]],[[5,[187,28]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[188,14]],[[188,188]],[[189,14]],[[189,189]],[[190,190]],[[190,14]],[[188,14]],[[189,14]],[[190,14]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[191,191],[69,69],[192,192],[193,193],[194,194],[195,195],[196,196],[188,188],[197,197],[198,198],[199,199],[189,189],[200,200],[201,201],[202,202],[58,58],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[216,216],[217,217],[218,218],[47,47],[219,219],[220,220],[221,221],[222,222],[223,223],[44,44],[224,224],[82,82],[225,225],[226,226],[227,227],[228,228],[229,229],[190,190],[230,230],[231,231],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[191,191],41],[[69,69],41],[[192,192],41],[[193,193],41],[[194,194],41],[[195,195],41],[[196,196],41],[[188,188],41],[[197,197],41],[[198,198],41],[[199,199],41],[[189,189],41],[[200,200],41],[[201,201],41],[[202,202],41],[[58,58],41],[[203,203],41],[[204,204],41],[[205,205],41],[[206,206],41],[[207,207],41],[[208,208],41],[[209,209],41],[[210,210],41],[[211,211],41],[[212,212],41],[[213,213],41],[[214,214],41],[[215,215],41],[[216,216],41],[[217,217],41],[[218,218],41],[[47,47],41],[[219,219],41],[[220,220],41],[[221,221],41],[[222,222],41],[[223,223],41],[[44,44],41],[[224,224],41],[[82,82],41],[[225,225],41],[[226,226],41],[[227,227],41],[[228,228],41],[[229,229],41],[[190,190],41],[[230,230],41],[[231,231],41],0,0,0,0,0,0,0,0,[[],191],[[],69],[[],192],[[],193],[[],194],[[],195],[[],196],[[],188],[[],197],[[],198],[[],199],[[],189],[[],200],[[],201],[[],202],[[],58],[[],203],[[],204],[[],205],[[],206],[[],207],[[],208],[[],209],[[],210],[[],211],[[],212],[[],213],[[],214],[[],215],[[],216],[[],217],[[],218],[[],47],[[],219],[[],220],[[],221],[[],222],[[],223],[[],44],[[],224],[[],82],[[],225],[[],226],[[],227],[[],228],[[],229],[[],190],[[],230],[[],231],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[191,191],6],[[69,69],6],[[192,192],6],[[193,193],6],[[194,194],6],[[195,195],6],[[196,196],6],[[188,188],6],[[197,197],6],[[198,198],6],[[199,199],6],[[189,189],6],[[200,200],6],[[201,201],6],[[202,202],6],[[58,58],6],[[203,203],6],[[204,204],6],[[205,205],6],[[206,206],6],[[207,207],6],[[208,208],6],[[209,209],6],[[210,210],6],[[211,211],6],[[212,212],6],[[213,213],6],[[214,214],6],[[215,215],6],[[216,216],6],[[217,217],6],[[218,218],6],[[47,47],6],[[219,219],6],[[220,220],6],[[221,221],6],[[222,222],6],[[223,223],6],[[44,44],6],[[224,224],6],[[82,82],6],[[225,225],6],[[226,226],6],[[227,227],6],[[228,228],6],[[229,229],6],[[190,190],6],[[230,230],6],[[231,231],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,[[191,7],8],[[69,7],8],[[192,7],8],[[193,7],8],[[194,7],8],[[195,7],8],[[196,7],8],[[188,7],8],[[197,7],8],[[198,7],8],[[199,7],8],[[189,7],8],[[200,7],8],[[201,7],8],[[202,7],8],[[58,7],8],[[203,7],8],[[204,7],8],[[205,7],8],[[206,7],8],[[207,7],8],[[208,7],8],[[209,7],8],[[210,7],8],[[211,7],8],[[212,7],8],[[213,7],8],[[214,7],8],[[215,7],8],[[216,7],8],[[217,7],8],[[218,7],8],[[47,7],8],[[219,7],8],[[220,7],8],[[221,7],8],[[222,7],8],[[223,7],8],[[44,7],8],[[224,7],8],[[82,7],8],[[225,7],8],[[226,7],8],[[227,7],8],[[228,7],8],[[229,7],8],[[190,7],8],[[230,7],8],[[231,7],8],[[]],[[]],[14,192],[[]],[[]],[14,193],[14,194],[[]],[[]],[14,196],[[]],[14,188],[[]],[[]],[[]],[14,199],[[]],[14,189],[[]],[[]],[[]],[[]],[[]],[14,203],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,190],[[]],[[]],0,0,[[191,10]],[[69,10]],[[192,10]],[[193,10]],[[194,10]],[[195,10]],[[196,10]],[[188,10]],[[197,10]],[[198,10]],[[199,10]],[[189,10]],[[200,10]],[[201,10]],[[202,10]],[[58,10]],[[203,10]],[[204,10]],[[205,10]],[[206,10]],[[207,10]],[[208,10]],[[209,10]],[[210,10]],[[211,10]],[[212,10]],[[213,10]],[[214,10]],[[215,10]],[[216,10]],[[217,10]],[[218,10]],[[47,10]],[[219,10]],[[220,10]],[[221,10]],[[222,10]],[[223,10]],[[44,10]],[[224,10]],[[82,10]],[[225,10]],[[226,10]],[[227,10]],[[228,10]],[[229,10]],[[190,10]],[[230,10]],[[231,10]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[204,204],[210,210],[222,222],[226,226],[230,230],0,0,[47,32],0,0,0,0,0,0,0,0,0,0,0,0,0,[44,19],[82,19],0,[[191,191],[[26,[41]]]],[[69,69],[[26,[41]]]],[[192,192],[[26,[41]]]],[[193,193],[[26,[41]]]],[[194,194],[[26,[41]]]],[[195,195],[[26,[41]]]],[[196,196],[[26,[41]]]],[[188,188],[[26,[41]]]],[[197,197],[[26,[41]]]],[[198,198],[[26,[41]]]],[[199,199],[[26,[41]]]],[[189,189],[[26,[41]]]],[[200,200],[[26,[41]]]],[[201,201],[[26,[41]]]],[[202,202],[[26,[41]]]],[[58,58],[[26,[41]]]],[[203,203],[[26,[41]]]],[[204,204],[[26,[41]]]],[[205,205],[[26,[41]]]],[[206,206],[[26,[41]]]],[[207,207],[[26,[41]]]],[[208,208],[[26,[41]]]],[[209,209],[[26,[41]]]],[[210,210],[[26,[41]]]],[[211,211],[[26,[41]]]],[[212,212],[[26,[41]]]],[[213,213],[[26,[41]]]],[[214,214],[[26,[41]]]],[[215,215],[[26,[41]]]],[[216,216],[[26,[41]]]],[[217,217],[[26,[41]]]],[[218,218],[[26,[41]]]],[[47,47],[[26,[41]]]],[[219,219],[[26,[41]]]],[[220,220],[[26,[41]]]],[[221,221],[[26,[41]]]],[[222,222],[[26,[41]]]],[[223,223],[[26,[41]]]],[[44,44],[[26,[41]]]],[[224,224],[[26,[41]]]],[[82,82],[[26,[41]]]],[[225,225],[[26,[41]]]],[[226,226],[[26,[41]]]],[[227,227],[[26,[41]]]],[[228,228],[[26,[41]]]],[[229,229],[[26,[41]]]],[[190,190],[[26,[41]]]],[[230,230],[[26,[41]]]],[[231,231],[[26,[41]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[191,14],[[106,[[20,[14]]]]]],[[191,14],[[106,[105]]]],[[195,14],[[106,[105]]]],[[195,14],[[106,[[20,[14]]]]]],[[198,14],[[106,[105]]]],[[198,14],[[106,[[20,[14]]]]]],[[201,14],[[106,[105]]]],[[201,14],[[106,[[20,[14]]]]]],[[202,14],[[106,[[20,[14]]]]]],[[202,14],[[106,[105]]]],[[204,14],[[106,[[20,[14]]]]]],[[204,14],[[106,[105]]]],[[205,14],[[106,[[20,[14]]]]]],[[205,14],[[106,[105]]]],[[206,14],[[106,[[20,[14]]]]]],[[206,14],[[106,[105]]]],[[207,14],[[106,[105]]]],[[207,14],[[106,[[20,[14]]]]]],[[208,14],[[106,[105]]]],[[208,14],[[106,[[20,[14]]]]]],[[209,14],[[106,[105]]]],[[209,14],[[106,[[20,[14]]]]]],[[210,14],[[106,[[20,[14]]]]]],[[210,14],[[106,[105]]]],[[211,14],[[106,[[20,[14]]]]]],[[211,14],[[106,[105]]]],[[212,14],[[106,[[20,[14]]]]]],[[212,14],[[106,[105]]]],[[213,14],[[106,[[20,[14]]]]]],[[213,14],[[106,[105]]]],[[214,14],[[106,[105]]]],[[214,14],[[106,[[20,[14]]]]]],[[215,14],[[106,[105]]]],[[215,14],[[106,[[20,[14]]]]]],[[216,14],[[106,[[20,[14]]]]]],[[216,14],[[106,[105]]]],[[217,14],[[106,[105]]]],[[217,14],[[106,[[20,[14]]]]]],[[218,14],[[106,[[20,[14]]]]]],[[218,14],[[106,[105]]]],[[219,14],[[106,[105]]]],[[219,14],[[106,[[20,[14]]]]]],[[220,14],[[106,[105]]]],[[220,14],[[106,[[20,[14]]]]]],[[221,14],[[106,[[20,[14]]]]]],[[221,14],[[106,[105]]]],[[222,14],[[106,[105]]]],[[222,14],[[106,[[20,[14]]]]]],[[223,14],[[106,[105]]]],[[223,14],[[106,[[20,[14]]]]]],[[224,14],[[106,[[20,[14]]]]]],[[224,14],[[106,[105]]]],[[225,14],[[106,[[20,[14]]]]]],[[225,14],[[106,[105]]]],[[226,14],[[106,[105]]]],[[226,14],[[106,[[20,[14]]]]]],[[227,14],[[106,[[20,[14]]]]]],[[227,14],[[106,[105]]]],[[228,14],[[106,[105]]]],[[228,14],[[106,[[20,[14]]]]]],[[229,14],[[106,[[20,[14]]]]]],[[229,14],[[106,[105]]]],[[230,14],[[106,[[20,[14]]]]]],[[230,14],[[106,[105]]]],[[231,14],[[106,[105]]]],[[231,14],[[106,[[20,[14]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[102,[15,[14]]],[[5,[191,28]]]],[[102,[15,[14]]],[[5,[195,28]]]],[[102,[15,[14]]],[[5,[198,28]]]],[[102,[15,[14]]],[[5,[201,28]]]],[[102,[15,[14]]],[[5,[202,28]]]],[[102,[15,[14]]],[[5,[204,28]]]],[[102,[15,[14]]],[[5,[205,28]]]],[[102,[15,[14]]],[[5,[206,28]]]],[[102,[15,[14]]],[[5,[207,28]]]],[[102,[15,[14]]],[[5,[208,28]]]],[[102,[15,[14]]],[[5,[209,28]]]],[[102,[15,[14]]],[[5,[210,28]]]],[[102,[15,[14]]],[[5,[211,28]]]],[[102,[15,[14]]],[[5,[212,28]]]],[[102,[15,[14]]],[[5,[213,28]]]],[[102,[15,[14]]],[[5,[214,28]]]],[[102,[15,[14]]],[[5,[215,28]]]],[[102,[15,[14]]],[[5,[216,28]]]],[[102,[15,[14]]],[[5,[217,28]]]],[[102,[15,[14]]],[[5,[218,28]]]],[[102,[15,[14]]],[[5,[219,28]]]],[[102,[15,[14]]],[[5,[220,28]]]],[[102,[15,[14]]],[[5,[221,28]]]],[[102,[15,[14]]],[[5,[222,28]]]],[[102,[15,[14]]],[[5,[223,28]]]],[[102,[15,[14]]],[[5,[224,28]]]],[[102,[15,[14]]],[[5,[225,28]]]],[[102,[15,[14]]],[[5,[226,28]]]],[[102,[15,[14]]],[[5,[227,28]]]],[[102,[15,[14]]],[[5,[228,28]]]],[[102,[15,[14]]],[[5,[229,28]]]],[[102,[15,[14]]],[[5,[230,28]]]],[[102,[15,[14]]],[[5,[231,28]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[232,19],0,0,0,0,0,0,0,[233,14],0,0,[[234,[111,[[26,[235]]]]],234],[[236,[111,[[26,[235]]]]],236],0,0,0,0,[237,[[171,[19]]]],[237,[[171,[32]]]],[237,[[171,[14]]]],0,0,0,0,0,0,[54,19],0,0,[238,19],0,[238,19],[[239,[111,[[26,[240]]]]],239],0,0,0,0,0,0,0,0,0,0,0,[[234,[111,[[26,[32]]]]],234],[[236,[111,[[26,[32]]]]],236],0,0,[[241,[111,[[26,[32]]]]],241],[[242,[111,[[26,[32]]]]],242],0,0,[[241,[111,[[26,[115]]]]],241],[[242,[111,[[26,[115]]]]],242],0,0,[[241,[111,[[26,[32]]]]],241],[[242,[111,[[26,[32]]]]],242],0,0,0,[[241,[111,[[26,[32]]]]],241],[[242,[111,[[26,[32]]]]],242],0,0,0,[[241,[111,[[26,[243]]]]],241],[[242,[111,[[26,[243]]]]],242],0,0,0,0,[[239,[111,[[26,[113]]]]],239],0,0,[[239,[111,[[26,[113]]]]],239],0,0,[[239,[111,[[26,[113]]]]],239],0,0,[[241,[111,[[26,[244]]]]],241],[[242,[111,[[26,[244]]]]],242],0,0,0,0,0,0,0,[[245,32]],[[245,245]],[[246,246]],[[246,19]],[[247,247]],[[247,19]],[[248,248]],[[248,19]],[[249,249]],[[249,19]],[[250,250]],[[250,14]],[[251,32]],[[251,251]],[[252,14]],[[252,252]],[[253,253]],[[253,14]],[[245,32]],[[246,19]],[[247,19]],[[248,19]],[[249,19]],[[250,14]],[[251,32]],[[252,14]],[[253,14]],0,0,0,0,0,0,0,0,0,0,[[241,[111,[[26,[32]]]]],241],[[242,[111,[[26,[32]]]]],242],0,0,[[241,[111,[[26,[115]]]]],241],[[242,[111,[[26,[115]]]]],242],0,0,[[254,[111,[[26,[32]]]]],254],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[234,[111,[[26,[255]]]]],234],[[236,[111,[[26,[255]]]]],236],0,0,0,[83,32],0,0,0,0,0,0,0,0,[61,19],0,0,0,0,0,0,0,[[234,[111,[[26,[115]]]]],234],[[236,[111,[[26,[115]]]]],236],0,0,[[234,[111,[[26,[113]]]]],234],[[236,[111,[[26,[113]]]]],236],0,0,0,[[234,[111,[[26,[113]]]]],234],[[236,[111,[[26,[113]]]]],236],0,0,0,[256,256],[257,257],[258,258],[259,259],[260,260],[261,261],[262,262],[263,263],[245,245],[243,243],[233,233],[238,238],[264,264],[265,265],[266,266],[16,16],[246,246],[247,247],[267,267],[268,268],[248,248],[269,269],[270,270],[271,271],[272,272],[273,273],[274,274],[275,275],[276,276],[277,277],[278,278],[279,279],[280,280],[281,281],[282,282],[283,283],[284,284],[285,285],[286,286],[287,287],[288,288],[289,289],[290,290],[291,291],[292,292],[293,293],[294,294],[295,295],[296,296],[297,297],[298,298],[299,299],[300,300],[301,301],[302,302],[303,303],[237,237],[304,304],[305,305],[306,306],[307,307],[308,308],[249,249],[309,309],[244,244],[241,241],[310,310],[242,242],[311,311],[312,312],[313,313],[66,66],[314,314],[315,315],[316,316],[317,317],[318,318],[319,319],[320,320],[321,321],[322,322],[250,250],[323,323],[254,254],[324,324],[325,325],[326,326],[327,327],[87,87],[328,328],[61,61],[329,329],[97,97],[330,330],[57,57],[331,331],[332,332],[333,333],[334,334],[335,335],[49,49],[336,336],[54,54],[337,337],[338,338],[92,92],[339,339],[340,340],[341,341],[342,342],[343,343],[344,344],[345,345],[94,94],[346,346],[347,347],[348,348],[349,349],[350,350],[351,351],[48,48],[352,352],[353,353],[354,354],[355,355],[356,356],[357,357],[358,358],[359,359],[360,360],[76,76],[361,361],[362,362],[77,77],[363,363],[65,65],[364,364],[365,365],[366,366],[367,367],[72,72],[368,368],[81,81],[369,369],[370,370],[371,371],[372,372],[373,373],[374,374],[83,83],[375,375],[51,51],[376,376],[377,377],[63,63],[378,378],[96,96],[379,379],[380,380],[78,78],[381,381],[382,382],[251,251],[383,383],[384,384],[255,255],[385,385],[386,386],[387,387],[172,172],[235,235],[234,234],[388,388],[236,236],[389,389],[390,390],[391,391],[392,392],[393,393],[394,394],[395,395],[396,396],[397,397],[398,398],[399,399],[400,400],[401,401],[402,402],[403,403],[404,404],[405,405],[406,406],[407,407],[408,408],[409,409],[410,410],[411,411],[100,100],[412,412],[413,413],[414,414],[415,415],[416,416],[417,417],[418,418],[419,419],[420,420],[421,421],[422,422],[80,80],[423,423],[52,52],[424,424],[73,73],[425,425],[79,79],[426,426],[53,53],[427,427],[252,252],[428,428],[429,429],[430,430],[431,431],[432,432],[68,68],[433,433],[56,56],[434,434],[435,435],[436,436],[437,437],[438,438],[439,439],[440,440],[441,441],[74,74],[442,442],[64,64],[443,443],[45,45],[444,444],[445,445],[98,98],[253,253],[446,446],[240,240],[239,239],[447,447],[448,448],[70,70],[449,449],[450,450],[451,451],[59,59],[452,452],[453,453],[454,454],[455,455],[84,84],[456,456],[457,457],[458,458],[232,232],[459,459],[85,85],[460,460],[461,461],[462,462],[463,463],[464,464],[465,465],[466,466],[467,467],[468,468],[469,469],[470,470],[46,46],[471,471],[50,50],[472,472],[473,473],[88,88],[474,474],[60,60],[475,475],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[80,19],[[256,256],41],[[257,257],41],[[258,258],41],[[259,259],41],[[260,260],41],[[261,261],41],[[262,262],41],[[263,263],41],[[245,245],41],[[243,243],41],[[233,233],41],[[238,238],41],[[264,264],41],[[265,265],41],[[266,266],41],[[16,16],41],[[246,246],41],[[247,247],41],[[267,267],41],[[268,268],41],[[248,248],41],[[269,269],41],[[270,270],41],[[271,271],41],[[272,272],41],[[273,273],41],[[274,274],41],[[275,275],41],[[276,276],41],[[277,277],41],[[278,278],41],[[279,279],41],[[280,280],41],[[281,281],41],[[282,282],41],[[283,283],41],[[284,284],41],[[285,285],41],[[286,286],41],[[287,287],41],[[288,288],41],[[289,289],41],[[290,290],41],[[291,291],41],[[292,292],41],[[293,293],41],[[294,294],41],[[295,295],41],[[296,296],41],[[297,297],41],[[298,298],41],[[299,299],41],[[300,300],41],[[301,301],41],[[302,302],41],[[303,303],41],[[305,305],41],[[306,306],41],[[307,307],41],[[308,308],41],[[249,249],41],[[309,309],41],[[244,244],41],[[241,241],41],[[310,310],41],[[242,242],41],[[311,311],41],[[312,312],41],[[313,313],41],[[66,66],41],[[314,314],41],[[315,315],41],[[316,316],41],[[317,317],41],[[318,318],41],[[319,319],41],[[320,320],41],[[321,321],41],[[322,322],41],[[250,250],41],[[323,323],41],[[254,254],41],[[324,324],41],[[325,325],41],[[326,326],41],[[327,327],41],[[87,87],41],[[328,328],41],[[61,61],41],[[329,329],41],[[97,97],41],[[330,330],41],[[57,57],41],[[331,331],41],[[332,332],41],[[333,333],41],[[334,334],41],[[335,335],41],[[49,49],41],[[336,336],41],[[54,54],41],[[337,337],41],[[338,338],41],[[92,92],41],[[339,339],41],[[340,340],41],[[341,341],41],[[342,342],41],[[343,343],41],[[344,344],41],[[345,345],41],[[94,94],41],[[346,346],41],[[347,347],41],[[348,348],41],[[349,349],41],[[350,350],41],[[351,351],41],[[48,48],41],[[352,352],41],[[353,353],41],[[354,354],41],[[355,355],41],[[356,356],41],[[357,357],41],[[358,358],41],[[359,359],41],[[360,360],41],[[76,76],41],[[361,361],41],[[362,362],41],[[77,77],41],[[363,363],41],[[65,65],41],[[364,364],41],[[365,365],41],[[366,366],41],[[367,367],41],[[72,72],41],[[368,368],41],[[81,81],41],[[369,369],41],[[370,370],41],[[371,371],41],[[372,372],41],[[373,373],41],[[374,374],41],[[83,83],41],[[375,375],41],[[51,51],41],[[376,376],41],[[377,377],41],[[63,63],41],[[378,378],41],[[96,96],41],[[379,379],41],[[380,380],41],[[78,78],41],[[381,381],41],[[382,382],41],[[251,251],41],[[383,383],41],[[384,384],41],[[255,255],41],[[385,385],41],[[386,386],41],[[387,387],41],[[172,172],41],[[235,235],41],[[234,234],41],[[388,388],41],[[236,236],41],[[389,389],41],[[390,390],41],[[391,391],41],[[392,392],41],[[393,393],41],[[394,394],41],[[395,395],41],[[396,396],41],[[397,397],41],[[398,398],41],[[399,399],41],[[400,400],41],[[401,401],41],[[402,402],41],[[403,403],41],[[404,404],41],[[405,405],41],[[406,406],41],[[407,407],41],[[408,408],41],[[409,409],41],[[410,410],41],[[411,411],41],[[100,100],41],[[412,412],41],[[413,413],41],[[414,414],41],[[415,415],41],[[416,416],41],[[417,417],41],[[418,418],41],[[419,419],41],[[420,420],41],[[421,421],41],[[422,422],41],[[80,80],41],[[423,423],41],[[52,52],41],[[424,424],41],[[73,73],41],[[425,425],41],[[79,79],41],[[426,426],41],[[53,53],41],[[427,427],41],[[252,252],41],[[428,428],41],[[429,429],41],[[430,430],41],[[431,431],41],[[432,432],41],[[68,68],41],[[433,433],41],[[56,56],41],[[434,434],41],[[435,435],41],[[436,436],41],[[437,437],41],[[438,438],41],[[439,439],41],[[440,440],41],[[441,441],41],[[74,74],41],[[442,442],41],[[64,64],41],[[443,443],41],[[45,45],41],[[444,444],41],[[445,445],41],[[98,98],41],[[253,253],41],[[446,446],41],[[240,240],41],[[239,239],41],[[447,447],41],[[448,448],41],[[70,70],41],[[449,449],41],[[450,450],41],[[451,451],41],[[59,59],41],[[452,452],41],[[453,453],41],[[454,454],41],[[455,455],41],[[84,84],41],[[456,456],41],[[457,457],41],[[458,458],41],[[232,232],41],[[459,459],41],[[85,85],41],[[460,460],41],[[461,461],41],[[462,462],41],[[463,463],41],[[464,464],41],[[465,465],41],[[466,466],41],[[467,467],41],[[468,468],41],[[469,469],41],[[470,470],41],[[46,46],41],[[471,471],41],[[50,50],41],[[472,472],41],[[473,473],41],[[88,88],41],[[474,474],41],[[60,60],41],[[475,475],41],[[241,[111,[[26,[476]]]]],241],[[242,[111,[[26,[476]]]]],242],0,0,0,0,0,0,0,0,[68,19],0,0,0,0,0,0,0,0,0,0,0,0,[[241,[111,[[26,[477]]]]],241],[[242,[111,[[26,[477]]]]],242],0,0,0,0,0,0,0,[[234,[111,[[26,[32]]]]],234],[[236,[111,[[26,[32]]]]],236],0,0,0,[[234,[111,[[26,[32]]]]],234],[[236,[111,[[26,[32]]]]],236],0,0,0,0,0,0,0,0,[[],256],[[],257],[[],258],[[],259],[[],260],[[],261],[[],262],[[],263],[[],245],[[],243],[[],233],[[],238],[[],264],[[],265],[[],266],[[],16],[[],246],[[],247],[[],267],[[],268],[[],248],[[],269],[[],270],[[],271],[[],272],[[],273],[[],274],[[],275],[[],276],[[],277],[[],278],[[],279],[[],280],[[],281],[[],282],[[],283],[[],284],[[],285],[[],286],[[],287],[[],288],[[],289],[[],290],[[],291],[[],292],[[],293],[[],294],[[],295],[[],296],[[],297],[[],298],[[],299],[[],300],[[],301],[[],302],[[],303],[[],305],[[],306],[[],307],[[],308],[[],249],[[],309],[[],244],[[],241],[[],310],[[],242],[[],311],[[],312],[[],313],[[],66],[[],314],[[],315],[[],316],[[],317],[[],318],[[],319],[[],320],[[],321],[[],322],[[],250],[[],323],[[],254],[[],324],[[],325],[[],326],[[],327],[[],87],[[],328],[[],61],[[],329],[[],97],[[],330],[[],57],[[],331],[[],332],[[],333],[[],334],[[],335],[[],49],[[],336],[[],54],[[],337],[[],338],[[],92],[[],339],[[],340],[[],341],[[],342],[[],343],[[],344],[[],345],[[],94],[[],346],[[],347],[[],348],[[],349],[[],350],[[],351],[[],48],[[],352],[[],353],[[],354],[[],355],[[],356],[[],357],[[],358],[[],359],[[],360],[[],76],[[],361],[[],362],[[],77],[[],363],[[],65],[[],364],[[],365],[[],366],[[],367],[[],72],[[],368],[[],81],[[],369],[[],370],[[],371],[[],372],[[],373],[[],374],[[],83],[[],375],[[],51],[[],376],[[],377],[[],63],[[],378],[[],96],[[],379],[[],380],[[],78],[[],381],[[],382],[[],251],[[],383],[[],384],[[],255],[[],385],[[],386],[[],387],[[],172],[[],235],[[],234],[[],388],[[],236],[[],389],[[],390],[[],391],[[],392],[[],393],[[],394],[[],395],[[],396],[[],397],[[],398],[[],399],[[],400],[[],401],[[],402],[[],403],[[],404],[[],405],[[],406],[[],407],[[],408],[[],409],[[],410],[[],411],[[],100],[[],412],[[],413],[[],414],[[],415],[[],416],[[],417],[[],418],[[],419],[[],420],[[],421],[[],422],[[],80],[[],423],[[],52],[[],424],[[],73],[[],425],[[],79],[[],426],[[],53],[[],427],[[],252],[[],428],[[],429],[[],430],[[],431],[[],432],[[],68],[[],433],[[],56],[[],434],[[],435],[[],436],[[],437],[[],438],[[],439],[[],440],[[],441],[[],74],[[],442],[[],64],[[],443],[[],45],[[],444],[[],445],[[],98],[[],253],[[],446],[[],240],[[],239],[[],447],[[],448],[[],70],[[],449],[[],450],[[],451],[[],59],[[],452],[[],453],[[],454],[[],455],[[],84],[[],456],[[],457],[[],458],[[],232],[[],459],[[],85],[[],460],[[],461],[[],462],[[],463],[[],464],[[],465],[[],466],[[],467],[[],468],[[],469],[[],470],[[],46],[[],471],[[],50],[[],472],[[],473],[[],88],[[],474],[[],60],[[],475],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[241,[111,[[26,[32]]]]],241],[[242,[111,[[26,[32]]]]],242],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[256,256],6],[[257,257],6],[[258,258],6],[[259,259],6],[[260,260],6],[[261,261],6],[[262,262],6],[[263,263],6],[[245,245],6],[[243,243],6],[[233,233],6],[[238,238],6],[[264,264],6],[[265,265],6],[[266,266],6],[[16,16],6],[[246,246],6],[[247,247],6],[[267,267],6],[[268,268],6],[[248,248],6],[[269,269],6],[[270,270],6],[[271,271],6],[[272,272],6],[[273,273],6],[[274,274],6],[[275,275],6],[[276,276],6],[[277,277],6],[[278,278],6],[[279,279],6],[[280,280],6],[[281,281],6],[[282,282],6],[[283,283],6],[[284,284],6],[[285,285],6],[[286,286],6],[[287,287],6],[[288,288],6],[[289,289],6],[[290,290],6],[[291,291],6],[[292,292],6],[[293,293],6],[[294,294],6],[[295,295],6],[[296,296],6],[[297,297],6],[[298,298],6],[[299,299],6],[[300,300],6],[[301,301],6],[[302,302],6],[[303,303],6],[[305,305],6],[[306,306],6],[[307,307],6],[[308,308],6],[[249,249],6],[[309,309],6],[[244,244],6],[[241,241],6],[[310,310],6],[[242,242],6],[[311,311],6],[[312,312],6],[[313,313],6],[[66,66],6],[[314,314],6],[[315,315],6],[[316,316],6],[[317,317],6],[[318,318],6],[[319,319],6],[[320,320],6],[[321,321],6],[[322,322],6],[[250,250],6],[[323,323],6],[[254,254],6],[[324,324],6],[[325,325],6],[[326,326],6],[[327,327],6],[[87,87],6],[[328,328],6],[[61,61],6],[[329,329],6],[[97,97],6],[[330,330],6],[[57,57],6],[[331,331],6],[[332,332],6],[[333,333],6],[[334,334],6],[[335,335],6],[[49,49],6],[[336,336],6],[[54,54],6],[[337,337],6],[[338,338],6],[[92,92],6],[[339,339],6],[[340,340],6],[[341,341],6],[[342,342],6],[[343,343],6],[[344,344],6],[[345,345],6],[[94,94],6],[[346,346],6],[[347,347],6],[[348,348],6],[[349,349],6],[[350,350],6],[[351,351],6],[[48,48],6],[[352,352],6],[[353,353],6],[[354,354],6],[[355,355],6],[[356,356],6],[[357,357],6],[[358,358],6],[[359,359],6],[[360,360],6],[[76,76],6],[[361,361],6],[[362,362],6],[[77,77],6],[[363,363],6],[[65,65],6],[[364,364],6],[[365,365],6],[[366,366],6],[[367,367],6],[[72,72],6],[[368,368],6],[[81,81],6],[[369,369],6],[[370,370],6],[[371,371],6],[[372,372],6],[[373,373],6],[[374,374],6],[[83,83],6],[[375,375],6],[[51,51],6],[[376,376],6],[[377,377],6],[[63,63],6],[[378,378],6],[[96,96],6],[[379,379],6],[[380,380],6],[[78,78],6],[[381,381],6],[[382,382],6],[[251,251],6],[[383,383],6],[[384,384],6],[[255,255],6],[[385,385],6],[[386,386],6],[[387,387],6],[[172,172],6],[[235,235],6],[[234,234],6],[[388,388],6],[[236,236],6],[[389,389],6],[[390,390],6],[[391,391],6],[[392,392],6],[[393,393],6],[[394,394],6],[[395,395],6],[[396,396],6],[[397,397],6],[[398,398],6],[[399,399],6],[[400,400],6],[[401,401],6],[[402,402],6],[[403,403],6],[[404,404],6],[[405,405],6],[[406,406],6],[[407,407],6],[[408,408],6],[[409,409],6],[[410,410],6],[[411,411],6],[[100,100],6],[[412,412],6],[[413,413],6],[[414,414],6],[[415,415],6],[[416,416],6],[[417,417],6],[[418,418],6],[[419,419],6],[[420,420],6],[[421,421],6],[[422,422],6],[[80,80],6],[[423,423],6],[[52,52],6],[[424,424],6],[[73,73],6],[[425,425],6],[[79,79],6],[[426,426],6],[[53,53],6],[[427,427],6],[[252,252],6],[[428,428],6],[[429,429],6],[[430,430],6],[[431,431],6],[[432,432],6],[[68,68],6],[[433,433],6],[[56,56],6],[[434,434],6],[[435,435],6],[[436,436],6],[[437,437],6],[[438,438],6],[[439,439],6],[[440,440],6],[[441,441],6],[[74,74],6],[[442,442],6],[[64,64],6],[[443,443],6],[[45,45],6],[[444,444],6],[[445,445],6],[[98,98],6],[[253,253],6],[[446,446],6],[[240,240],6],[[239,239],6],[[447,447],6],[[448,448],6],[[70,70],6],[[449,449],6],[[450,450],6],[[451,451],6],[[59,59],6],[[452,452],6],[[453,453],6],[[454,454],6],[[455,455],6],[[84,84],6],[[456,456],6],[[457,457],6],[[458,458],6],[[232,232],6],[[459,459],6],[[85,85],6],[[460,460],6],[[461,461],6],[[462,462],6],[[463,463],6],[[464,464],6],[[465,465],6],[[466,466],6],[[467,467],6],[[468,468],6],[[469,469],6],[[470,470],6],[[46,46],6],[[471,471],6],[[50,50],6],[[472,472],6],[[473,473],6],[[88,88],6],[[474,474],6],[[60,60],6],[[475,475],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],0,0,0,0,0,0,0,0,0,0,0,0,0,[[241,[111,[[26,[32]]]]],241],[[242,[111,[[26,[32]]]]],242],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[77,32],0,0,0,0,0,0,0,0,0,0,0,[[234,[111,[[26,[387]]]]],234],[[236,[111,[[26,[387]]]]],236],0,0,[[234,[111,[[26,[386]]]]],234],[[236,[111,[[26,[386]]]]],236],0,0,0,0,0,0,0,0,0,[[256,7],8],[[257,7],8],[[258,7],8],[[259,7],8],[[260,7],8],[[261,7],8],[[262,7],8],[[263,7],8],[[245,7],8],[[243,7],8],[[233,7],8],[[238,7],8],[[264,7],8],[[265,7],8],[[266,7],8],[[16,7],8],[[246,7],8],[[247,7],8],[[267,7],8],[[268,7],8],[[248,7],8],[[269,7],8],[[270,7],8],[[271,7],8],[[272,7],8],[[273,7],8],[[274,7],8],[[275,7],8],[[276,7],8],[[277,7],8],[[278,7],8],[[279,7],8],[[280,7],8],[[281,7],8],[[282,7],8],[[283,7],8],[[284,7],8],[[285,7],8],[[286,7],8],[[287,7],8],[[288,7],8],[[289,7],8],[[290,7],8],[[291,7],8],[[292,7],8],[[293,7],8],[[294,7],8],[[295,7],8],[[296,7],8],[[297,7],8],[[298,7],8],[[299,7],8],[[300,7],8],[[301,7],8],[[302,7],8],[[303,7],8],[[237,7],8],[[304,7],8],[[305,7],8],[[306,7],8],[[307,7],8],[[308,7],8],[[249,7],8],[[309,7],8],[[244,7],8],[[241,7],8],[[310,7],8],[[242,7],8],[[311,7],8],[[312,7],8],[[313,7],8],[[66,7],8],[[314,7],8],[[315,7],8],[[316,7],8],[[317,7],8],[[318,7],8],[[319,7],8],[[320,7],8],[[321,7],8],[[322,7],8],[[250,7],8],[[323,7],8],[[254,7],8],[[324,7],8],[[325,7],8],[[326,7],8],[[327,7],8],[[87,7],8],[[328,7],8],[[61,7],8],[[329,7],8],[[97,7],8],[[330,7],8],[[57,7],8],[[331,7],8],[[332,7],8],[[333,7],8],[[334,7],8],[[335,7],8],[[49,7],8],[[336,7],8],[[54,7],8],[[337,7],8],[[338,7],8],[[92,7],8],[[339,7],8],[[340,7],8],[[341,7],8],[[342,7],8],[[343,7],8],[[344,7],8],[[345,7],8],[[94,7],8],[[346,7],8],[[347,7],8],[[348,7],8],[[349,7],8],[[350,7],8],[[351,7],8],[[48,7],8],[[352,7],8],[[353,7],8],[[354,7],8],[[355,7],8],[[356,7],8],[[357,7],8],[[358,7],8],[[359,7],8],[[360,7],8],[[76,7],8],[[361,7],8],[[362,7],8],[[77,7],8],[[363,7],8],[[65,7],8],[[364,7],8],[[365,7],8],[[366,7],8],[[367,7],8],[[72,7],8],[[368,7],8],[[81,7],8],[[369,7],8],[[370,7],8],[[371,7],8],[[372,7],8],[[373,7],8],[[374,7],8],[[83,7],8],[[375,7],8],[[51,7],8],[[376,7],8],[[377,7],8],[[63,7],8],[[378,7],8],[[96,7],8],[[379,7],8],[[380,7],8],[[78,7],8],[[381,7],8],[[382,7],8],[[251,7],8],[[383,7],8],[[384,7],8],[[255,7],8],[[385,7],8],[[386,7],8],[[387,7],8],[[172,7],8],[[235,7],8],[[234,7],8],[[388,7],8],[[236,7],8],[[389,7],8],[[390,7],8],[[391,7],8],[[392,7],8],[[393,7],8],[[394,7],8],[[395,7],8],[[396,7],8],[[397,7],8],[[398,7],8],[[399,7],8],[[400,7],8],[[401,7],8],[[402,7],8],[[403,7],8],[[404,7],8],[[405,7],8],[[406,7],8],[[407,7],8],[[408,7],8],[[409,7],8],[[410,7],8],[[411,7],8],[[100,7],8],[[412,7],8],[[413,7],8],[[414,7],8],[[415,7],8],[[416,7],8],[[417,7],8],[[418,7],8],[[419,7],8],[[420,7],8],[[421,7],8],[[422,7],8],[[80,7],8],[[423,7],8],[[52,7],8],[[424,7],8],[[73,7],8],[[425,7],8],[[79,7],8],[[426,7],8],[[53,7],8],[[427,7],8],[[252,7],8],[[428,7],8],[[429,7],8],[[430,7],8],[[431,7],8],[[432,7],8],[[68,7],8],[[433,7],8],[[56,7],8],[[434,7],8],[[435,7],8],[[436,7],8],[[437,7],8],[[438,7],8],[[439,7],8],[[440,7],8],[[441,7],8],[[74,7],8],[[442,7],8],[[64,7],8],[[443,7],8],[[45,7],8],[[444,7],8],[[445,7],8],[[98,7],8],[[253,7],8],[[446,7],8],[[240,7],8],[[239,7],8],[[447,7],8],[[448,7],8],[[70,7],8],[[449,7],8],[[450,7],8],[[451,7],8],[[59,7],8],[[452,7],8],[[453,7],8],[[454,7],8],[[455,7],8],[[84,7],8],[[456,7],8],[[457,7],8],[[458,7],8],[[232,7],8],[[459,7],8],[[85,7],8],[[460,7],8],[[461,7],8],[[462,7],8],[[463,7],8],[[464,7],8],[[465,7],8],[[466,7],8],[[467,7],8],[[468,7],8],[[469,7],8],[[470,7],8],[[46,7],8],[[471,7],8],[[50,7],8],[[472,7],8],[[473,7],8],[[88,7],8],[[474,7],8],[[60,7],8],[[475,7],8],0,0,[[234,[111,[[26,[478]]]]],234],[[236,[111,[[26,[478]]]]],236],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[234,[111,[[26,[32]]]]],234],[[236,[111,[[26,[32]]]]],236],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[14,261],[[]],[[]],[32,245],[[]],[19,245],[14,245],[[]],[32,243],[19,243],[14,243],[[]],[[]],[[]],[[]],[[]],[14,266],[[]],[14,246],[19,246],[[]],[[]],[14,247],[19,247],[14,267],[[]],[[]],[[]],[19,248],[14,248],[[]],[[]],[14,270],[[]],[14,272],[[]],[14,273],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,280],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,292],[[]],[[]],[14,294],[[]],[[]],[[]],[14,297],[14,298],[[]],[[]],[[]],[14,301],[[]],[[]],[14,302],[[]],[[]],[[[171,[32]]],237],[[[171,[14]]],237],[[[171,[19]]],237],[[]],[14,305],[[]],[[]],[[]],[[]],[19,308],[14,308],[14,249],[[]],[19,249],[6,309],[[]],[19,244],[32,244],[[]],[14,244],[[]],[[]],[[]],[[]],[[]],[14,312],[[]],[[]],[[]],[[]],[14,316],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,250],[[]],[19,323],[[]],[32,323],[14,323],[[]],[[]],[[]],[14,325],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,331],[[]],[[]],[[]],[[]],[14,334],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,340],[[]],[[]],[14,342],[[]],[[]],[14,343],[14,344],[[]],[[]],[[]],[[]],[[]],[14,347],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,353],[[]],[[]],[14,356],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,365],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,371],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,251],[19,251],[32,251],[[]],[19,383],[14,383],[32,383],[[]],[[]],[14,384],[32,384],[19,384],[19,255],[32,255],[[]],[14,255],[32,385],[14,385],[19,385],[[]],[[]],[32,386],[19,386],[14,386],[14,387],[[]],[32,387],[19,387],[[]],[14,172],[19,172],[32,172],[[]],[32,235],[14,235],[19,235],[[]],[[]],[[]],[[]],[[]],[[]],[14,392],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,398],[[]],[[]],[[]],[[]],[[]],[[]],[14,405],[[]],[[]],[[]],[[]],[14,409],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,416],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,252],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,434],[[]],[[]],[[]],[14,436],[[]],[[]],[[]],[14,440],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,253],[32,446],[[]],[19,446],[14,446],[[]],[32,240],[19,240],[14,240],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[14,452],[[]],[14,453],[[]],[[]],[[]],[14,456],[[]],[14,457],[[]],[[]],[[]],[[]],[[]],[[]],[14,460],[[]],[14,462],[[]],[[]],[14,464],[[]],[[]],[[]],[14,467],[[]],[[]],[[]],[14,469],[[]],[[]],[[]],[[]],[[]],[14,472],[[]],[[]],[[]],[[]],[[]],0,[289,254],[[234,[111,[[26,[383]]]]],234],[[236,[111,[[26,[383]]]]],236],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[234,[111,[[26,[479]]]]],234],[[236,[111,[[26,[479]]]]],236],0,0,0,0,0,0,0,0,0,[[256,10]],[[257,10]],[[258,10]],[[259,10]],[[260,10]],[[261,10]],[[262,10]],[[263,10]],[[245,10]],[[243,10]],[[233,10]],[[238,10]],[[264,10]],[[265,10]],[[266,10]],[[16,10]],[[246,10]],[[247,10]],[[267,10]],[[268,10]],[[248,10]],[[269,10]],[[270,10]],[[271,10]],[[272,10]],[[273,10]],[[274,10]],[[275,10]],[[276,10]],[[277,10]],[[278,10]],[[279,10]],[[280,10]],[[281,10]],[[282,10]],[[283,10]],[[284,10]],[[285,10]],[[286,10]],[[287,10]],[[288,10]],[[289,10]],[[290,10]],[[291,10]],[[292,10]],[[293,10]],[[294,10]],[[295,10]],[[296,10]],[[297,10]],[[298,10]],[[299,10]],[[300,10]],[[301,10]],[[302,10]],[[303,10]],[[305,10]],[[306,10]],[[307,10]],[[308,10]],[[249,10]],[[309,10]],[[244,10]],[[241,10]],[[310,10]],[[242,10]],[[311,10]],[[312,10]],[[313,10]],[[66,10]],[[314,10]],[[315,10]],[[316,10]],[[317,10]],[[318,10]],[[319,10]],[[320,10]],[[321,10]],[[322,10]],[[250,10]],[[323,10]],[[254,10]],[[324,10]],[[325,10]],[[326,10]],[[327,10]],[[87,10]],[[328,10]],[[61,10]],[[329,10]],[[97,10]],[[330,10]],[[57,10]],[[331,10]],[[332,10]],[[333,10]],[[334,10]],[[335,10]],[[49,10]],[[336,10]],[[54,10]],[[337,10]],[[338,10]],[[92,10]],[[339,10]],[[340,10]],[[341,10]],[[342,10]],[[343,10]],[[344,10]],[[345,10]],[[94,10]],[[346,10]],[[347,10]],[[348,10]],[[349,10]],[[350,10]],[[351,10]],[[48,10]],[[352,10]],[[353,10]],[[354,10]],[[355,10]],[[356,10]],[[357,10]],[[358,10]],[[359,10]],[[360,10]],[[76,10]],[[361,10]],[[362,10]],[[77,10]],[[363,10]],[[65,10]],[[364,10]],[[365,10]],[[366,10]],[[367,10]],[[72,10]],[[368,10]],[[81,10]],[[369,10]],[[370,10]],[[371,10]],[[372,10]],[[373,10]],[[374,10]],[[83,10]],[[375,10]],[[51,10]],[[376,10]],[[377,10]],[[63,10]],[[378,10]],[[96,10]],[[379,10]],[[380,10]],[[78,10]],[[381,10]],[[382,10]],[[251,10]],[[383,10]],[[384,10]],[[255,10]],[[385,10]],[[386,10]],[[387,10]],[[172,10]],[[235,10]],[[234,10]],[[388,10]],[[236,10]],[[389,10]],[[390,10]],[[391,10]],[[392,10]],[[393,10]],[[394,10]],[[395,10]],[[396,10]],[[397,10]],[[398,10]],[[399,10]],[[400,10]],[[401,10]],[[402,10]],[[403,10]],[[404,10]],[[405,10]],[[406,10]],[[407,10]],[[408,10]],[[409,10]],[[410,10]],[[411,10]],[[100,10]],[[412,10]],[[413,10]],[[414,10]],[[415,10]],[[416,10]],[[417,10]],[[418,10]],[[419,10]],[[420,10]],[[421,10]],[[422,10]],[[80,10]],[[423,10]],[[52,10]],[[424,10]],[[73,10]],[[425,10]],[[79,10]],[[426,10]],[[53,10]],[[427,10]],[[252,10]],[[428,10]],[[429,10]],[[430,10]],[[431,10]],[[432,10]],[[68,10]],[[433,10]],[[56,10]],[[434,10]],[[435,10]],[[436,10]],[[437,10]],[[438,10]],[[439,10]],[[440,10]],[[441,10]],[[74,10]],[[442,10]],[[64,10]],[[443,10]],[[45,10]],[[444,10]],[[445,10]],[[98,10]],[[253,10]],[[446,10]],[[240,10]],[[239,10]],[[447,10]],[[448,10]],[[70,10]],[[449,10]],[[450,10]],[[451,10]],[[59,10]],[[452,10]],[[453,10]],[[454,10]],[[455,10]],[[84,10]],[[456,10]],[[457,10]],[[458,10]],[[232,10]],[[459,10]],[[85,10]],[[460,10]],[[461,10]],[[462,10]],[[463,10]],[[464,10]],[[465,10]],[[466,10]],[[467,10]],[[468,10]],[[469,10]],[[470,10]],[[46,10]],[[471,10]],[[50,10]],[[472,10]],[[473,10]],[[88,10]],[[474,10]],[[60,10]],[[475,10]],[[254,[111,[[26,[32]]]]],254],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[85,19],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[310,310],[311,311],[324,324],[329,329],[332,332],[341,341],[369,369],[375,375],[377,377],[378,378],[379,379],[388,388],[389,389],[391,391],[393,393],[399,399],[400,400],[402,402],[403,403],[404,404],[406,406],[407,407],[408,408],[410,410],[412,412],[413,413],[414,414],[415,415],[424,424],[427,427],[429,429],[430,430],[432,432],[433,433],[442,442],[444,444],[447,447],[458,458],[466,466],[470,470],[473,473],0,0,0,[[234,[111,[[26,[385]]]]],234],[[236,[111,[[26,[385]]]]],236],0,0,[[239,[111,[[26,[480]]]]],239],0,0,0,[[239,[111,[[26,[113]]]]],239],0,0,0,0,0,0,0,0,0,[60,14],0,0,0,0,0,0,[[239,[111,[[26,[32]]]]],239],0,0,[[239,[111,[[26,[446]]]]],239],0,0,0,[265,19],[100,32],[98,32],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[234,[111,[[26,[384]]]]],234],[[236,[111,[[26,[384]]]]],236],0,0,[[234,[111,[[26,[32]]]]],234],[[236,[111,[[26,[32]]]]],236],0,0,0,0,0,0,0,0,0,0,[50,14],0,0,0,0,0,0,[79,19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[57,19],[376,14],[96,14],0,0,[63,19],[45,14],[[14,481,[111,[170]],[111,[237]]],304],[[],241],[[],242],[[],254],[[],234],[[],236],[[],239],0,0,0,0,0,0,0,0,[[241,[111,[[26,[479]]]]],241],[[242,[111,[[26,[479]]]]],242],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[256,256],[[26,[41]]]],[[257,257],[[26,[41]]]],[[258,258],[[26,[41]]]],[[259,259],[[26,[41]]]],[[260,260],[[26,[41]]]],[[261,261],[[26,[41]]]],[[262,262],[[26,[41]]]],[[263,263],[[26,[41]]]],[[245,245],[[26,[41]]]],[[243,243],[[26,[41]]]],[[233,233],[[26,[41]]]],[[238,238],[[26,[41]]]],[[264,264],[[26,[41]]]],[[265,265],[[26,[41]]]],[[266,266],[[26,[41]]]],[[16,16],[[26,[41]]]],[[246,246],[[26,[41]]]],[[247,247],[[26,[41]]]],[[267,267],[[26,[41]]]],[[268,268],[[26,[41]]]],[[248,248],[[26,[41]]]],[[269,269],[[26,[41]]]],[[270,270],[[26,[41]]]],[[271,271],[[26,[41]]]],[[272,272],[[26,[41]]]],[[273,273],[[26,[41]]]],[[274,274],[[26,[41]]]],[[275,275],[[26,[41]]]],[[276,276],[[26,[41]]]],[[277,277],[[26,[41]]]],[[278,278],[[26,[41]]]],[[279,279],[[26,[41]]]],[[280,280],[[26,[41]]]],[[281,281],[[26,[41]]]],[[282,282],[[26,[41]]]],[[283,283],[[26,[41]]]],[[284,284],[[26,[41]]]],[[285,285],[[26,[41]]]],[[286,286],[[26,[41]]]],[[287,287],[[26,[41]]]],[[288,288],[[26,[41]]]],[[289,289],[[26,[41]]]],[[290,290],[[26,[41]]]],[[291,291],[[26,[41]]]],[[292,292],[[26,[41]]]],[[293,293],[[26,[41]]]],[[294,294],[[26,[41]]]],[[295,295],[[26,[41]]]],[[296,296],[[26,[41]]]],[[297,297],[[26,[41]]]],[[298,298],[[26,[41]]]],[[299,299],[[26,[41]]]],[[300,300],[[26,[41]]]],[[301,301],[[26,[41]]]],[[302,302],[[26,[41]]]],[[303,303],[[26,[41]]]],[[305,305],[[26,[41]]]],[[306,306],[[26,[41]]]],[[307,307],[[26,[41]]]],[[308,308],[[26,[41]]]],[[249,249],[[26,[41]]]],[[309,309],[[26,[41]]]],[[244,244],[[26,[41]]]],[[241,241],[[26,[41]]]],[[310,310],[[26,[41]]]],[[242,242],[[26,[41]]]],[[311,311],[[26,[41]]]],[[312,312],[[26,[41]]]],[[313,313],[[26,[41]]]],[[66,66],[[26,[41]]]],[[314,314],[[26,[41]]]],[[315,315],[[26,[41]]]],[[316,316],[[26,[41]]]],[[317,317],[[26,[41]]]],[[318,318],[[26,[41]]]],[[319,319],[[26,[41]]]],[[320,320],[[26,[41]]]],[[321,321],[[26,[41]]]],[[322,322],[[26,[41]]]],[[250,250],[[26,[41]]]],[[323,323],[[26,[41]]]],[[254,254],[[26,[41]]]],[[324,324],[[26,[41]]]],[[325,325],[[26,[41]]]],[[326,326],[[26,[41]]]],[[327,327],[[26,[41]]]],[[87,87],[[26,[41]]]],[[328,328],[[26,[41]]]],[[61,61],[[26,[41]]]],[[329,329],[[26,[41]]]],[[97,97],[[26,[41]]]],[[330,330],[[26,[41]]]],[[57,57],[[26,[41]]]],[[331,331],[[26,[41]]]],[[332,332],[[26,[41]]]],[[333,333],[[26,[41]]]],[[334,334],[[26,[41]]]],[[335,335],[[26,[41]]]],[[49,49],[[26,[41]]]],[[336,336],[[26,[41]]]],[[54,54],[[26,[41]]]],[[337,337],[[26,[41]]]],[[338,338],[[26,[41]]]],[[92,92],[[26,[41]]]],[[339,339],[[26,[41]]]],[[340,340],[[26,[41]]]],[[341,341],[[26,[41]]]],[[342,342],[[26,[41]]]],[[343,343],[[26,[41]]]],[[344,344],[[26,[41]]]],[[345,345],[[26,[41]]]],[[94,94],[[26,[41]]]],[[346,346],[[26,[41]]]],[[347,347],[[26,[41]]]],[[348,348],[[26,[41]]]],[[349,349],[[26,[41]]]],[[350,350],[[26,[41]]]],[[351,351],[[26,[41]]]],[[48,48],[[26,[41]]]],[[352,352],[[26,[41]]]],[[353,353],[[26,[41]]]],[[354,354],[[26,[41]]]],[[355,355],[[26,[41]]]],[[356,356],[[26,[41]]]],[[357,357],[[26,[41]]]],[[358,358],[[26,[41]]]],[[359,359],[[26,[41]]]],[[360,360],[[26,[41]]]],[[76,76],[[26,[41]]]],[[361,361],[[26,[41]]]],[[362,362],[[26,[41]]]],[[77,77],[[26,[41]]]],[[363,363],[[26,[41]]]],[[65,65],[[26,[41]]]],[[364,364],[[26,[41]]]],[[365,365],[[26,[41]]]],[[366,366],[[26,[41]]]],[[367,367],[[26,[41]]]],[[72,72],[[26,[41]]]],[[368,368],[[26,[41]]]],[[81,81],[[26,[41]]]],[[369,369],[[26,[41]]]],[[370,370],[[26,[41]]]],[[371,371],[[26,[41]]]],[[372,372],[[26,[41]]]],[[373,373],[[26,[41]]]],[[374,374],[[26,[41]]]],[[83,83],[[26,[41]]]],[[375,375],[[26,[41]]]],[[51,51],[[26,[41]]]],[[376,376],[[26,[41]]]],[[377,377],[[26,[41]]]],[[63,63],[[26,[41]]]],[[378,378],[[26,[41]]]],[[96,96],[[26,[41]]]],[[379,379],[[26,[41]]]],[[380,380],[[26,[41]]]],[[78,78],[[26,[41]]]],[[381,381],[[26,[41]]]],[[382,382],[[26,[41]]]],[[251,251],[[26,[41]]]],[[383,383],[[26,[41]]]],[[384,384],[[26,[41]]]],[[255,255],[[26,[41]]]],[[385,385],[[26,[41]]]],[[386,386],[[26,[41]]]],[[387,387],[[26,[41]]]],[[172,172],[[26,[41]]]],[[235,235],[[26,[41]]]],[[234,234],[[26,[41]]]],[[388,388],[[26,[41]]]],[[236,236],[[26,[41]]]],[[389,389],[[26,[41]]]],[[390,390],[[26,[41]]]],[[391,391],[[26,[41]]]],[[392,392],[[26,[41]]]],[[393,393],[[26,[41]]]],[[394,394],[[26,[41]]]],[[395,395],[[26,[41]]]],[[396,396],[[26,[41]]]],[[397,397],[[26,[41]]]],[[398,398],[[26,[41]]]],[[399,399],[[26,[41]]]],[[400,400],[[26,[41]]]],[[401,401],[[26,[41]]]],[[402,402],[[26,[41]]]],[[403,403],[[26,[41]]]],[[404,404],[[26,[41]]]],[[405,405],[[26,[41]]]],[[406,406],[[26,[41]]]],[[407,407],[[26,[41]]]],[[408,408],[[26,[41]]]],[[409,409],[[26,[41]]]],[[410,410],[[26,[41]]]],[[411,411],[[26,[41]]]],[[100,100],[[26,[41]]]],[[412,412],[[26,[41]]]],[[413,413],[[26,[41]]]],[[414,414],[[26,[41]]]],[[415,415],[[26,[41]]]],[[416,416],[[26,[41]]]],[[417,417],[[26,[41]]]],[[418,418],[[26,[41]]]],[[419,419],[[26,[41]]]],[[420,420],[[26,[41]]]],[[421,421],[[26,[41]]]],[[422,422],[[26,[41]]]],[[80,80],[[26,[41]]]],[[423,423],[[26,[41]]]],[[52,52],[[26,[41]]]],[[424,424],[[26,[41]]]],[[73,73],[[26,[41]]]],[[425,425],[[26,[41]]]],[[79,79],[[26,[41]]]],[[426,426],[[26,[41]]]],[[53,53],[[26,[41]]]],[[427,427],[[26,[41]]]],[[252,252],[[26,[41]]]],[[428,428],[[26,[41]]]],[[429,429],[[26,[41]]]],[[430,430],[[26,[41]]]],[[431,431],[[26,[41]]]],[[432,432],[[26,[41]]]],[[68,68],[[26,[41]]]],[[433,433],[[26,[41]]]],[[56,56],[[26,[41]]]],[[434,434],[[26,[41]]]],[[435,435],[[26,[41]]]],[[436,436],[[26,[41]]]],[[437,437],[[26,[41]]]],[[438,438],[[26,[41]]]],[[439,439],[[26,[41]]]],[[440,440],[[26,[41]]]],[[441,441],[[26,[41]]]],[[74,74],[[26,[41]]]],[[442,442],[[26,[41]]]],[[64,64],[[26,[41]]]],[[443,443],[[26,[41]]]],[[45,45],[[26,[41]]]],[[444,444],[[26,[41]]]],[[445,445],[[26,[41]]]],[[98,98],[[26,[41]]]],[[253,253],[[26,[41]]]],[[446,446],[[26,[41]]]],[[240,240],[[26,[41]]]],[[239,239],[[26,[41]]]],[[447,447],[[26,[41]]]],[[448,448],[[26,[41]]]],[[70,70],[[26,[41]]]],[[449,449],[[26,[41]]]],[[450,450],[[26,[41]]]],[[451,451],[[26,[41]]]],[[59,59],[[26,[41]]]],[[452,452],[[26,[41]]]],[[453,453],[[26,[41]]]],[[454,454],[[26,[41]]]],[[455,455],[[26,[41]]]],[[84,84],[[26,[41]]]],[[456,456],[[26,[41]]]],[[457,457],[[26,[41]]]],[[458,458],[[26,[41]]]],[[232,232],[[26,[41]]]],[[459,459],[[26,[41]]]],[[85,85],[[26,[41]]]],[[460,460],[[26,[41]]]],[[461,461],[[26,[41]]]],[[462,462],[[26,[41]]]],[[463,463],[[26,[41]]]],[[464,464],[[26,[41]]]],[[465,465],[[26,[41]]]],[[466,466],[[26,[41]]]],[[467,467],[[26,[41]]]],[[468,468],[[26,[41]]]],[[469,469],[[26,[41]]]],[[470,470],[[26,[41]]]],[[46,46],[[26,[41]]]],[[471,471],[[26,[41]]]],[[50,50],[[26,[41]]]],[[472,472],[[26,[41]]]],[[473,473],[[26,[41]]]],[[88,88],[[26,[41]]]],[[474,474],[[26,[41]]]],[[60,60],[[26,[41]]]],[[475,475],[[26,[41]]]],0,[78,19],0,0,0,0,0,0,0,0,0,0,0,0,[79,19],[53,19],0,0,[16,14],0,[[234,[111,[[26,[32]]]]],234],[[236,[111,[[26,[32]]]]],236],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[83,19],[96,19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[264,14],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[16,14],0,0,0,0,0,0,[[241,[111,[[26,[479]]]]],241],[[242,[111,[[26,[479]]]]],242],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[256,[[171,[14]]]],[257,[[171,[14]]]],[258,[[171,[14]]]],[259,[[171,[14]]]],[260,[[171,[14]]]],[262,[[171,[14]]]],[263,[[20,[14]]]],[233,[[20,[14]]]],[238,[[20,[14]]]],[264,[[20,[14]]]],[265,[[20,[14]]]],[16,[[20,[14]]]],[237,[[171,[14]]]],[310,[[106,[105]]]],[[310,14],[[106,[[20,[14]]]]]],[311,[[106,[105]]]],[[311,14],[[106,[[20,[14]]]]]],[313,[[106,[105]]]],[[313,14],[[106,[[20,[14]]]]]],[[314,14],[[106,[[20,[14]]]]]],[314,[[106,[105]]]],[[315,14],[[106,[[20,[14]]]]]],[315,[[106,[105]]]],[[317,14],[[106,[[20,[14]]]]]],[317,[[106,[105]]]],[318,[[106,[105]]]],[[318,14],[[106,[[20,[14]]]]]],[319,[[106,[105]]]],[[319,14],[[106,[[20,[14]]]]]],[[320,14],[[106,[[20,[14]]]]]],[320,[[106,[105]]]],[321,[[106,[105]]]],[[321,14],[[106,[[20,[14]]]]]],[322,[[106,[105]]]],[[322,14],[[106,[[20,[14]]]]]],[324,[[106,[105]]]],[[324,14],[[106,[[20,[14]]]]]],[[326,14],[[106,[[20,[14]]]]]],[326,[[106,[105]]]],[327,[[106,[105]]]],[[327,14],[[106,[[20,[14]]]]]],[[328,14],[[106,[[20,[14]]]]]],[328,[[106,[105]]]],[329,[[106,[105]]]],[[329,14],[[106,[[20,[14]]]]]],[[330,14],[[106,[[20,[14]]]]]],[330,[[106,[105]]]],[332,[[106,[105]]]],[[332,14],[[106,[[20,[14]]]]]],[[333,14],[[106,[[20,[14]]]]]],[333,[[106,[105]]]],[[335,14],[[106,[[20,[14]]]]]],[335,[[106,[105]]]],[336,[[106,[105]]]],[[336,14],[[106,[[20,[14]]]]]],[[337,14],[[106,[[20,[14]]]]]],[337,[[106,[105]]]],[[338,14],[[106,[[20,[14]]]]]],[338,[[106,[105]]]],[[339,14],[[106,[[20,[14]]]]]],[339,[[106,[105]]]],[[341,14],[[106,[[20,[14]]]]]],[341,[[106,[105]]]],[345,[[106,[105]]]],[[345,14],[[106,[[20,[14]]]]]],[346,[[106,[105]]]],[[346,14],[[106,[[20,[14]]]]]],[[348,14],[[106,[[20,[14]]]]]],[348,[[106,[105]]]],[[349,14],[[106,[[20,[14]]]]]],[349,[[106,[105]]]],[[350,14],[[106,[[20,[14]]]]]],[350,[[106,[105]]]],[[351,14],[[106,[[20,[14]]]]]],[351,[[106,[105]]]],[[352,14],[[106,[[20,[14]]]]]],[352,[[106,[105]]]],[[354,14],[[106,[[20,[14]]]]]],[354,[[106,[105]]]],[[355,14],[[106,[[20,[14]]]]]],[355,[[106,[105]]]],[357,[[106,[105]]]],[[357,14],[[106,[[20,[14]]]]]],[[358,14],[[106,[[20,[14]]]]]],[358,[[106,[105]]]],[[359,14],[[106,[[20,[14]]]]]],[359,[[106,[105]]]],[[360,14],[[106,[[20,[14]]]]]],[360,[[106,[105]]]],[361,[[171,[14]]]],[362,[[106,[105]]]],[[362,14],[[106,[[20,[14]]]]]],[363,[[106,[105]]]],[[363,14],[[106,[[20,[14]]]]]],[364,[[106,[105]]]],[[364,14],[[106,[[20,[14]]]]]],[366,[[106,[105]]]],[[366,14],[[106,[[20,[14]]]]]],[367,[[106,[105]]]],[[367,14],[[106,[[20,[14]]]]]],[[368,14],[[106,[[20,[14]]]]]],[368,[[106,[105]]]],[[369,14],[[106,[[20,[14]]]]]],[369,[[106,[105]]]],[[370,14],[[106,[[20,[14]]]]]],[370,[[106,[105]]]],[372,[[171,[14]]]],[373,[[171,[14]]]],[374,[[106,[105]]]],[[374,14],[[106,[[20,[14]]]]]],[375,[[106,[105]]]],[[375,14],[[106,[[20,[14]]]]]],[376,[[20,[14]]]],[[377,14],[[106,[[20,[14]]]]]],[377,[[106,[105]]]],[[378,14],[[106,[[20,[14]]]]]],[378,[[106,[105]]]],[379,[[106,[105]]]],[[379,14],[[106,[[20,[14]]]]]],[[380,14],[[106,[[20,[14]]]]]],[380,[[106,[105]]]],[381,[[106,[105]]]],[[381,14],[[106,[[20,[14]]]]]],[[382,14],[[106,[[20,[14]]]]]],[382,[[106,[105]]]],[[388,14],[[106,[[20,[14]]]]]],[388,[[106,[105]]]],[389,[[106,[105]]]],[[389,14],[[106,[[20,[14]]]]]],[390,[[106,[105]]]],[[390,14],[[106,[[20,[14]]]]]],[391,[[106,[105]]]],[[391,14],[[106,[[20,[14]]]]]],[393,[[106,[105]]]],[[393,14],[[106,[[20,[14]]]]]],[394,[[106,[105]]]],[[394,14],[[106,[[20,[14]]]]]],[[395,14],[[106,[[20,[14]]]]]],[395,[[106,[105]]]],[396,[[106,[105]]]],[[396,14],[[106,[[20,[14]]]]]],[[397,14],[[106,[[20,[14]]]]]],[397,[[106,[105]]]],[[399,14],[[106,[[20,[14]]]]]],[399,[[106,[105]]]],[[400,14],[[106,[[20,[14]]]]]],[400,[[106,[105]]]],[401,[[171,[14]]]],[[402,14],[[106,[[20,[14]]]]]],[402,[[106,[105]]]],[403,[[106,[105]]]],[[403,14],[[106,[[20,[14]]]]]],[[404,14],[[106,[[20,[14]]]]]],[404,[[106,[105]]]],[406,[[106,[105]]]],[[406,14],[[106,[[20,[14]]]]]],[[407,14],[[106,[[20,[14]]]]]],[407,[[106,[105]]]],[408,[[106,[105]]]],[[408,14],[[106,[[20,[14]]]]]],[[410,14],[[106,[[20,[14]]]]]],[410,[[106,[105]]]],[[411,14],[[106,[[20,[14]]]]]],[411,[[106,[105]]]],[[412,14],[[106,[[20,[14]]]]]],[412,[[106,[105]]]],[[413,14],[[106,[[20,[14]]]]]],[413,[[106,[105]]]],[414,[[106,[105]]]],[[414,14],[[106,[[20,[14]]]]]],[415,[[106,[105]]]],[[415,14],[[106,[[20,[14]]]]]],[417,[[106,[105]]]],[[417,14],[[106,[[20,[14]]]]]],[418,[[106,[105]]]],[[418,14],[[106,[[20,[14]]]]]],[419,[[106,[105]]]],[[419,14],[[106,[[20,[14]]]]]],[420,[[106,[105]]]],[[420,14],[[106,[[20,[14]]]]]],[421,[[106,[105]]]],[[421,14],[[106,[[20,[14]]]]]],[[422,14],[[106,[[20,[14]]]]]],[422,[[106,[105]]]],[[423,14],[[106,[[20,[14]]]]]],[423,[[106,[105]]]],[[424,14],[[106,[[20,[14]]]]]],[424,[[106,[105]]]],[[425,14],[[106,[[20,[14]]]]]],[425,[[106,[105]]]],[[426,14],[[106,[[20,[14]]]]]],[426,[[106,[105]]]],[[427,14],[[106,[[20,[14]]]]]],[427,[[106,[105]]]],[428,[[171,[14]]]],[429,[[106,[105]]]],[[429,14],[[106,[[20,[14]]]]]],[[430,14],[[106,[[20,[14]]]]]],[430,[[106,[105]]]],[431,[[171,[14]]]],[432,[[106,[105]]]],[[432,14],[[106,[[20,[14]]]]]],[433,[[106,[105]]]],[[433,14],[[106,[[20,[14]]]]]],[435,[[106,[105]]]],[[435,14],[[106,[[20,[14]]]]]],[437,[[106,[105]]]],[[437,14],[[106,[[20,[14]]]]]],[[438,14],[[106,[[20,[14]]]]]],[438,[[106,[105]]]],[[439,14],[[106,[[20,[14]]]]]],[439,[[106,[105]]]],[441,[[106,[105]]]],[[441,14],[[106,[[20,[14]]]]]],[[442,14],[[106,[[20,[14]]]]]],[442,[[106,[105]]]],[443,[[106,[105]]]],[[443,14],[[106,[[20,[14]]]]]],[444,[[106,[105]]]],[[444,14],[[106,[[20,[14]]]]]],[[445,14],[[106,[[20,[14]]]]]],[445,[[106,[105]]]],[447,[[106,[105]]]],[[447,14],[[106,[[20,[14]]]]]],[448,[[106,[105]]]],[[448,14],[[106,[[20,[14]]]]]],[449,[[106,[105]]]],[[449,14],[[106,[[20,[14]]]]]],[450,[[106,[105]]]],[[450,14],[[106,[[20,[14]]]]]],[451,[[106,[105]]]],[[451,14],[[106,[[20,[14]]]]]],[454,[[106,[105]]]],[[454,14],[[106,[[20,[14]]]]]],[[455,14],[[106,[[20,[14]]]]]],[455,[[106,[105]]]],[458,[[106,[105]]]],[[458,14],[[106,[[20,[14]]]]]],[232,[[20,[14]]]],[459,[[106,[105]]]],[[459,14],[[106,[[20,[14]]]]]],[[461,14],[[106,[[20,[14]]]]]],[461,[[106,[105]]]],[[463,14],[[106,[[20,[14]]]]]],[463,[[106,[105]]]],[[465,14],[[106,[[20,[14]]]]]],[465,[[106,[105]]]],[466,[[106,[105]]]],[[466,14],[[106,[[20,[14]]]]]],[468,[[106,[105]]]],[[468,14],[[106,[[20,[14]]]]]],[[470,14],[[106,[[20,[14]]]]]],[470,[[106,[105]]]],[[471,14],[[106,[[20,[14]]]]]],[471,[[106,[105]]]],[[473,14],[[106,[[20,[14]]]]]],[473,[[106,[105]]]],[474,[[106,[105]]]],[[474,14],[[106,[[20,[14]]]]]],[[475,14],[[106,[[20,[14]]]]]],[475,[[106,[105]]]],[[256,[20,[14]]]],[[257,[20,[14]]]],[[258,[20,[14]]]],[[259,[20,[14]]]],[[260,[20,[14]]]],[[262,[20,[14]]]],[[263,[20,[14]]]],[[233,[20,[14]]]],[[238,[20,[14]]]],[[264,[20,[14]]]],[[265,[20,[14]]]],[[16,[20,[14]]]],[[237,[20,[14]]]],[[361,[20,[14]]]],[[372,[20,[14]]]],[[373,[20,[14]]]],[[376,[20,[14]]]],[[401,[20,[14]]]],[[428,[20,[14]]]],[[431,[20,[14]]]],[[232,[20,[14]]]],0,[[254,[111,[[26,[481]]]]],254],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[254,[111,[[26,[323]]]]],254],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[234,[111,[[26,[115]]]]],234],[[236,[111,[[26,[115]]]]],236],0,0,0,0,0,0,[[234,[111,[[26,[172]]]]],234],[[236,[111,[[26,[172]]]]],236],0,0,0,0,0,0,0,[[234,[111,[[26,[115]]]]],234],[[236,[111,[[26,[115]]]]],236],0,0,[[234,[111,[[26,[113]]]]],234],[[236,[111,[[26,[113]]]]],236],0,0,[[234,[111,[[26,[113]]]]],234],[[236,[111,[[26,[113]]]]],236],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[12,[[5,[16]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[[15,[14]],[20,[1,107]]],[[5,[28]]]],[[102,[15,[14]]],[[5,[310,28]]]],[[102,[15,[14]]],[[5,[311,28]]]],[[102,[15,[14]]],[[5,[313,28]]]],[[102,[15,[14]]],[[5,[314,28]]]],[[102,[15,[14]]],[[5,[315,28]]]],[[102,[15,[14]]],[[5,[317,28]]]],[[102,[15,[14]]],[[5,[318,28]]]],[[102,[15,[14]]],[[5,[319,28]]]],[[102,[15,[14]]],[[5,[320,28]]]],[[102,[15,[14]]],[[5,[321,28]]]],[[102,[15,[14]]],[[5,[322,28]]]],[[102,[15,[14]]],[[5,[324,28]]]],[[102,[15,[14]]],[[5,[326,28]]]],[[102,[15,[14]]],[[5,[327,28]]]],[[102,[15,[14]]],[[5,[328,28]]]],[[102,[15,[14]]],[[5,[329,28]]]],[[102,[15,[14]]],[[5,[330,28]]]],[[102,[15,[14]]],[[5,[332,28]]]],[[102,[15,[14]]],[[5,[333,28]]]],[[102,[15,[14]]],[[5,[335,28]]]],[[102,[15,[14]]],[[5,[336,28]]]],[[102,[15,[14]]],[[5,[337,28]]]],[[102,[15,[14]]],[[5,[338,28]]]],[[102,[15,[14]]],[[5,[339,28]]]],[[102,[15,[14]]],[[5,[341,28]]]],[[102,[15,[14]]],[[5,[345,28]]]],[[102,[15,[14]]],[[5,[346,28]]]],[[102,[15,[14]]],[[5,[348,28]]]],[[102,[15,[14]]],[[5,[349,28]]]],[[102,[15,[14]]],[[5,[350,28]]]],[[102,[15,[14]]],[[5,[351,28]]]],[[102,[15,[14]]],[[5,[352,28]]]],[[102,[15,[14]]],[[5,[354,28]]]],[[102,[15,[14]]],[[5,[355,28]]]],[[102,[15,[14]]],[[5,[357,28]]]],[[102,[15,[14]]],[[5,[358,28]]]],[[102,[15,[14]]],[[5,[359,28]]]],[[102,[15,[14]]],[[5,[360,28]]]],[[102,[15,[14]]],[[5,[362,28]]]],[[102,[15,[14]]],[[5,[363,28]]]],[[102,[15,[14]]],[[5,[364,28]]]],[[102,[15,[14]]],[[5,[366,28]]]],[[102,[15,[14]]],[[5,[367,28]]]],[[102,[15,[14]]],[[5,[368,28]]]],[[102,[15,[14]]],[[5,[369,28]]]],[[102,[15,[14]]],[[5,[370,28]]]],[[102,[15,[14]]],[[5,[374,28]]]],[[102,[15,[14]]],[[5,[375,28]]]],[[102,[15,[14]]],[[5,[377,28]]]],[[102,[15,[14]]],[[5,[378,28]]]],[[102,[15,[14]]],[[5,[379,28]]]],[[102,[15,[14]]],[[5,[380,28]]]],[[102,[15,[14]]],[[5,[381,28]]]],[[102,[15,[14]]],[[5,[382,28]]]],[[102,[15,[14]]],[[5,[388,28]]]],[[102,[15,[14]]],[[5,[389,28]]]],[[102,[15,[14]]],[[5,[390,28]]]],[[102,[15,[14]]],[[5,[391,28]]]],[[102,[15,[14]]],[[5,[393,28]]]],[[102,[15,[14]]],[[5,[394,28]]]],[[102,[15,[14]]],[[5,[395,28]]]],[[102,[15,[14]]],[[5,[396,28]]]],[[102,[15,[14]]],[[5,[397,28]]]],[[102,[15,[14]]],[[5,[399,28]]]],[[102,[15,[14]]],[[5,[400,28]]]],[[102,[15,[14]]],[[5,[402,28]]]],[[102,[15,[14]]],[[5,[403,28]]]],[[102,[15,[14]]],[[5,[404,28]]]],[[102,[15,[14]]],[[5,[406,28]]]],[[102,[15,[14]]],[[5,[407,28]]]],[[102,[15,[14]]],[[5,[408,28]]]],[[102,[15,[14]]],[[5,[410,28]]]],[[102,[15,[14]]],[[5,[411,28]]]],[[102,[15,[14]]],[[5,[412,28]]]],[[102,[15,[14]]],[[5,[413,28]]]],[[102,[15,[14]]],[[5,[414,28]]]],[[102,[15,[14]]],[[5,[415,28]]]],[[102,[15,[14]]],[[5,[417,28]]]],[[102,[15,[14]]],[[5,[418,28]]]],[[102,[15,[14]]],[[5,[419,28]]]],[[102,[15,[14]]],[[5,[420,28]]]],[[102,[15,[14]]],[[5,[421,28]]]],[[102,[15,[14]]],[[5,[422,28]]]],[[102,[15,[14]]],[[5,[423,28]]]],[[102,[15,[14]]],[[5,[424,28]]]],[[102,[15,[14]]],[[5,[425,28]]]],[[102,[15,[14]]],[[5,[426,28]]]],[[102,[15,[14]]],[[5,[427,28]]]],[[102,[15,[14]]],[[5,[429,28]]]],[[102,[15,[14]]],[[5,[430,28]]]],[[102,[15,[14]]],[[5,[432,28]]]],[[102,[15,[14]]],[[5,[433,28]]]],[[102,[15,[14]]],[[5,[435,28]]]],[[102,[15,[14]]],[[5,[437,28]]]],[[102,[15,[14]]],[[5,[438,28]]]],[[102,[15,[14]]],[[5,[439,28]]]],[[102,[15,[14]]],[[5,[441,28]]]],[[102,[15,[14]]],[[5,[442,28]]]],[[102,[15,[14]]],[[5,[443,28]]]],[[102,[15,[14]]],[[5,[444,28]]]],[[102,[15,[14]]],[[5,[445,28]]]],[[102,[15,[14]]],[[5,[447,28]]]],[[102,[15,[14]]],[[5,[448,28]]]],[[102,[15,[14]]],[[5,[449,28]]]],[[102,[15,[14]]],[[5,[450,28]]]],[[102,[15,[14]]],[[5,[451,28]]]],[[102,[15,[14]]],[[5,[454,28]]]],[[102,[15,[14]]],[[5,[455,28]]]],[[102,[15,[14]]],[[5,[458,28]]]],[[102,[15,[14]]],[[5,[459,28]]]],[[102,[15,[14]]],[[5,[461,28]]]],[[102,[15,[14]]],[[5,[463,28]]]],[[102,[15,[14]]],[[5,[465,28]]]],[[102,[15,[14]]],[[5,[466,28]]]],[[102,[15,[14]]],[[5,[468,28]]]],[[102,[15,[14]]],[[5,[470,28]]]],[[102,[15,[14]]],[[5,[471,28]]]],[[102,[15,[14]]],[[5,[473,28]]]],[[102,[15,[14]]],[[5,[474,28]]]],[[102,[15,[14]]],[[5,[475,28]]]],0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[49,[[26,[37]]]],[49,[[26,[37]]]],[49,[[26,[37]]]],0,0,0,0,0,0,0,0,0,0,[16,19],0,0,0,0,0,0,0,0,0,0,0,0,[263,19],0,0,[[254,[111,[[26,[32]]]]],254],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[241,[111,[[26,[244]]]]],241],[[242,[111,[[26,[244]]]]],242],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[254,[111,[[26,[113]]]]],254],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[254,[111,[[26,[113]]]]],254],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[483,[482]]],[[483,[482]]]],[[]],[[[483,[484]],7],8],[[]],[[]],[[]],[[[483,[485]]],26],[[[483,[485]]]],[[]],[[],5],[[],5],[[],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[486,486],[487,487],[102,102],[488,488],[[]],[[]],[[]],[[]],[[486,486],6],[[487,487],6],[[488,488],6],[[],6],[[],6],[[],6],0,0,0,0,0,[[486,7],8],[[487,7],8],[[102,7],8],[[488,7],8],[[]],[[]],[[]],[[]],[14,26],[14,26],[14,26],[[]],[[]],[[]],[[]],0,0,0,0,0,[[[15,[14]],488],[[5,[28]]]],0,0,0,[14,[[106,[[20,[14]]]]]],[[]],[[[20,[14]]]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[15,[14]]],[[5,[28]]]],[[[15,[14]],101],[[5,[486,28]]]],[[[15,[14]],[20,[1]]],[[5,[28]]]],[[],11],[[],11],[[],11],[[],11],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[18,18],[[]],[[18,18],6],[[],6],[[18,7],8],[[]],[19,18],[457,18],[[18,[15,[14]],19],[[5,[26,4]]]],[[]],[[]],[[],5],[[],5],[[],11]],"c":[],"p":[[3,"RawFdContainer"],[6,"RawFd"],[4,"DiscardMode"],[3,"Error"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[8,"IntoRawFd"],[8,"Hasher"],[3,"TypeId"],[3,"Connect"],[15,"usize"],[15,"u8"],[15,"slice"],[3,"Setup"],[4,"ConnectError"],[3,"Family"],[15,"u16"],[3,"Vec"],[4,"ReplyFdKind"],[4,"PollReply"],[3,"Connection"],[6,"SequenceNumber"],[6,"RawEventAndSeqNumber"],[4,"Option"],[6,"BufWithFds"],[4,"ParseError"],[3,"String"],[3,"IdAllocator"],[3,"IdsExhausted"],[15,"u32"],[3,"GetXIDRangeReply"],[3,"PacketReader"],[4,"ConnectAddress"],[3,"ParsedDisplay"],[8,"Iterator"],[15,"str"],[4,"ErrorKind"],[4,"Event"],[4,"Ordering"],[4,"Request"],[4,"Reply"],[3,"GetCursorNameReply"],[3,"ListExtensionsReply"],[3,"SetPointerMappingReply"],[3,"FetchRegionReply"],[3,"GrabKeyboardReply"],[3,"GetPropertyReply"],[3,"GetPointerMappingReply"],[3,"QueryTextExtentsReply"],[3,"AllocColorReply"],[3,"AllocColorPlanesReply"],[3,"ListPropertiesReply"],[3,"QueryVersionReply"],[3,"LookupColorReply"],[3,"GetAtomNameReply"],[3,"GetCursorImageReply"],[3,"GetPointerControlReply"],[3,"GetModifierMappingReply"],[3,"QueryTreeReply"],[3,"GetXIDListReply"],[3,"ListFontsReply"],[3,"QueryExtensionReply"],[3,"TranslateCoordinatesReply"],[3,"GetWindowAttributesReply"],[3,"QueryExtentsReply"],[3,"QueryColorsReply"],[3,"QueryVersionReply"],[3,"GetKeyboardControlReply"],[3,"QueryVersionReply"],[3,"GetInputFocusReply"],[3,"AllocNamedColorReply"],[3,"QueryBestSizeReply"],[3,"InputSelectedReply"],[3,"QueryPointerReply"],[3,"GetMotionEventsReply"],[3,"GetFontPathReply"],[3,"AllocColorCellsReply"],[3,"ListInstalledColormapsReply"],[3,"QueryKeymapReply"],[3,"GetCursorImageAndNameReply"],[3,"QueryFontReply"],[3,"GetScreenSaverReply"],[3,"ListHostsReply"],[3,"QueryFiltersReply"],[3,"GetGeometryReply"],[3,"SetModifierMappingReply"],[3,"QueryVersionReply"],[3,"GetRectanglesReply"],[3,"QueryPictFormatsReply"],[3,"GetSelectionOwnerReply"],[3,"GetVersionReply"],[3,"GrabPointerReply"],[3,"EnableReply"],[3,"ListFontsWithInfoReply"],[3,"InternAtomReply"],[3,"GetKeyboardMappingReply"],[3,"QueryPictIndexValuesReply"],[3,"GetImageReply"],[8,"ExtInfoProvider"],[3,"RequestHeader"],[6,"ReplyParsingFunction"],[3,"EnableRequest"],[6,"PiecewiseBuf"],[6,"BufWithFds"],[3,"Global"],[3,"QueryVersionRequest"],[3,"CreatePictureAux"],[6,"Picture"],[8,"Into"],[3,"ChangePictureAux"],[15,"i32"],[3,"CP"],[6,"Pixmap"],[3,"PictType"],[3,"PictureEnum"],[3,"PictOp"],[3,"PolyEdge"],[3,"PolyMode"],[3,"SubPixel"],[3,"Repeat"],[3,"Directformat"],[3,"Pictforminfo"],[3,"Pictvisual"],[3,"Pictdepth"],[3,"Pictscreen"],[3,"Indexvalue"],[3,"Color"],[3,"Pointfix"],[3,"Linefix"],[3,"Triangle"],[3,"Trapezoid"],[3,"Glyphinfo"],[3,"QueryVersionRequest"],[3,"QueryPictFormatsRequest"],[3,"QueryPictIndexValuesRequest"],[3,"CreatePictureRequest"],[3,"ChangePictureRequest"],[3,"SetPictureClipRectanglesRequest"],[3,"FreePictureRequest"],[3,"CompositeRequest"],[3,"TrapezoidsRequest"],[3,"TrianglesRequest"],[3,"TriStripRequest"],[3,"TriFanRequest"],[3,"CreateGlyphSetRequest"],[3,"ReferenceGlyphSetRequest"],[3,"FreeGlyphSetRequest"],[3,"AddGlyphsRequest"],[3,"FreeGlyphsRequest"],[3,"CompositeGlyphs8Request"],[3,"CompositeGlyphs16Request"],[3,"CompositeGlyphs32Request"],[3,"FillRectanglesRequest"],[3,"CreateCursorRequest"],[3,"Transform"],[3,"SetPictureTransformRequest"],[3,"QueryFiltersRequest"],[3,"SetPictureFilterRequest"],[3,"Animcursorelt"],[3,"CreateAnimCursorRequest"],[3,"Spanfix"],[3,"Trap"],[3,"AddTrapsRequest"],[3,"CreateSolidFillRequest"],[3,"CreateLinearGradientRequest"],[3,"CreateRadialGradientRequest"],[3,"CreateConicalGradientRequest"],[6,"Atom"],[15,"array"],[3,"SubwindowMode"],[3,"SO"],[3,"SK"],[3,"NotifyEvent"],[3,"QueryVersionRequest"],[3,"RectanglesRequest"],[3,"MaskRequest"],[3,"CombineRequest"],[3,"OffsetRequest"],[3,"QueryExtentsRequest"],[3,"SelectInputRequest"],[3,"InputSelectedRequest"],[3,"GetRectanglesRequest"],[3,"GetVersionRequest"],[3,"GetXIDRangeRequest"],[3,"GetXIDListRequest"],[3,"SelectionEventMask"],[3,"CursorNotifyMask"],[3,"BarrierDirections"],[3,"QueryVersionRequest"],[3,"SaveSetMode"],[3,"SaveSetTarget"],[3,"SaveSetMapping"],[3,"ChangeSaveSetRequest"],[3,"SelectionEvent"],[3,"SelectionNotifyEvent"],[3,"SelectSelectionInputRequest"],[3,"CursorNotify"],[3,"CursorNotifyEvent"],[3,"SelectCursorInputRequest"],[3,"GetCursorImageRequest"],[3,"RegionEnum"],[3,"CreateRegionRequest"],[3,"CreateRegionFromBitmapRequest"],[3,"CreateRegionFromWindowRequest"],[3,"CreateRegionFromGCRequest"],[3,"CreateRegionFromPictureRequest"],[3,"DestroyRegionRequest"],[3,"SetRegionRequest"],[3,"CopyRegionRequest"],[3,"UnionRegionRequest"],[3,"IntersectRegionRequest"],[3,"SubtractRegionRequest"],[3,"InvertRegionRequest"],[3,"TranslateRegionRequest"],[3,"RegionExtentsRequest"],[3,"FetchRegionRequest"],[3,"SetGCClipRegionRequest"],[3,"SetWindowShapeRegionRequest"],[3,"SetPictureClipRegionRequest"],[3,"SetCursorNameRequest"],[3,"GetCursorNameRequest"],[3,"GetCursorImageAndNameRequest"],[3,"ChangeCursorRequest"],[3,"ChangeCursorByNameRequest"],[3,"ExpandRegionRequest"],[3,"HideCursorRequest"],[3,"ShowCursorRequest"],[3,"CreatePointerBarrierRequest"],[3,"DeletePointerBarrierRequest"],[3,"Host"],[3,"Screen"],[3,"CreateGCAux"],[3,"ArcMode"],[3,"ChangeGCAux"],[3,"ClientMessageData"],[3,"SetupRequest"],[3,"ChangeKeyboardControlAux"],[3,"AutoRepeatMode"],[3,"CreateWindowAux"],[3,"ChangeWindowAttributesAux"],[3,"BackingStore"],[3,"Gravity"],[3,"EventMask"],[3,"ModMask"],[3,"KeyButMask"],[3,"ButtonMask"],[3,"CW"],[3,"ConfigWindow"],[3,"GC"],[3,"ColorFlag"],[3,"KB"],[3,"ConfigureWindowAux"],[3,"CapStyle"],[3,"Char2b"],[3,"Point"],[3,"Rectangle"],[3,"Arc"],[3,"Format"],[3,"VisualClass"],[3,"Visualtype"],[3,"Depth"],[3,"SetupFailed"],[3,"SetupAuthenticate"],[3,"ImageOrder"],[3,"WindowEnum"],[3,"KeyPressEvent"],[3,"ButtonPressEvent"],[3,"Motion"],[3,"MotionNotifyEvent"],[3,"NotifyDetail"],[3,"NotifyMode"],[3,"EnterNotifyEvent"],[3,"FocusInEvent"],[3,"KeymapNotifyEvent"],[3,"ExposeEvent"],[3,"GraphicsExposureEvent"],[3,"NoExposureEvent"],[3,"Visibility"],[3,"VisibilityNotifyEvent"],[3,"CreateNotifyEvent"],[3,"DestroyNotifyEvent"],[3,"UnmapNotifyEvent"],[3,"MapNotifyEvent"],[3,"MapRequestEvent"],[3,"ReparentNotifyEvent"],[3,"ConfigureNotifyEvent"],[3,"ConfigureRequestEvent"],[3,"GravityNotifyEvent"],[3,"ResizeRequestEvent"],[3,"Place"],[3,"CirculateNotifyEvent"],[3,"Property"],[3,"PropertyNotifyEvent"],[3,"SelectionClearEvent"],[3,"Time"],[3,"AtomEnum"],[3,"SelectionRequestEvent"],[3,"SelectionNotifyEvent"],[3,"ColormapState"],[3,"ColormapEnum"],[3,"ColormapNotifyEvent"],[3,"ClientMessageEvent"],[3,"Mapping"],[3,"MappingNotifyEvent"],[3,"GeGenericEvent"],[3,"WindowClass"],[3,"BackPixmap"],[3,"CreateWindowRequest"],[3,"ChangeWindowAttributesRequest"],[3,"MapState"],[3,"GetWindowAttributesRequest"],[3,"DestroyWindowRequest"],[3,"DestroySubwindowsRequest"],[3,"SetMode"],[3,"ChangeSaveSetRequest"],[3,"ReparentWindowRequest"],[3,"MapWindowRequest"],[3,"MapSubwindowsRequest"],[3,"UnmapWindowRequest"],[3,"UnmapSubwindowsRequest"],[3,"StackMode"],[3,"ConfigureWindowRequest"],[3,"Circulate"],[3,"CirculateWindowRequest"],[3,"GetGeometryRequest"],[3,"QueryTreeRequest"],[3,"InternAtomRequest"],[3,"GetAtomNameRequest"],[3,"PropMode"],[3,"ChangePropertyRequest"],[3,"DeletePropertyRequest"],[3,"GetPropertyType"],[3,"GetPropertyRequest"],[3,"ListPropertiesRequest"],[3,"SetSelectionOwnerRequest"],[3,"GetSelectionOwnerRequest"],[3,"ConvertSelectionRequest"],[3,"SendEventDest"],[3,"SendEventRequest"],[3,"GrabMode"],[3,"GrabStatus"],[3,"CursorEnum"],[3,"GrabPointerRequest"],[3,"UngrabPointerRequest"],[3,"ButtonIndex"],[3,"GrabButtonRequest"],[3,"UngrabButtonRequest"],[3,"ChangeActivePointerGrabRequest"],[3,"GrabKeyboardRequest"],[3,"UngrabKeyboardRequest"],[3,"Grab"],[3,"GrabKeyRequest"],[3,"UngrabKeyRequest"],[3,"Allow"],[3,"AllowEventsRequest"],[3,"GrabServerRequest"],[3,"UngrabServerRequest"],[3,"QueryPointerRequest"],[3,"Timecoord"],[3,"GetMotionEventsRequest"],[3,"TranslateCoordinatesRequest"],[3,"WarpPointerRequest"],[3,"InputFocus"],[3,"SetInputFocusRequest"],[3,"GetInputFocusRequest"],[3,"QueryKeymapRequest"],[3,"OpenFontRequest"],[3,"CloseFontRequest"],[3,"FontDraw"],[3,"Fontprop"],[3,"Charinfo"],[3,"QueryFontRequest"],[3,"QueryTextExtentsRequest"],[3,"Str"],[3,"ListFontsRequest"],[3,"ListFontsWithInfoRequest"],[3,"SetFontPathRequest"],[3,"GetFontPathRequest"],[3,"CreatePixmapRequest"],[3,"FreePixmapRequest"],[3,"GX"],[3,"LineStyle"],[3,"JoinStyle"],[3,"FillStyle"],[3,"FillRule"],[3,"CreateGCRequest"],[3,"ChangeGCRequest"],[3,"CopyGCRequest"],[3,"SetDashesRequest"],[3,"ClipOrdering"],[3,"SetClipRectanglesRequest"],[3,"FreeGCRequest"],[3,"ClearAreaRequest"],[3,"CopyAreaRequest"],[3,"CopyPlaneRequest"],[3,"CoordMode"],[3,"PolyPointRequest"],[3,"PolyLineRequest"],[3,"Segment"],[3,"PolySegmentRequest"],[3,"PolyRectangleRequest"],[3,"PolyArcRequest"],[3,"PolyShape"],[3,"FillPolyRequest"],[3,"PolyFillRectangleRequest"],[3,"PolyFillArcRequest"],[3,"ImageFormat"],[3,"PutImageRequest"],[3,"GetImageRequest"],[3,"PolyText8Request"],[3,"PolyText16Request"],[3,"ImageText8Request"],[3,"ImageText16Request"],[3,"ColormapAlloc"],[3,"CreateColormapRequest"],[3,"FreeColormapRequest"],[3,"CopyColormapAndFreeRequest"],[3,"InstallColormapRequest"],[3,"UninstallColormapRequest"],[3,"ListInstalledColormapsRequest"],[3,"AllocColorRequest"],[3,"AllocNamedColorRequest"],[3,"AllocColorCellsRequest"],[3,"AllocColorPlanesRequest"],[3,"FreeColorsRequest"],[3,"Coloritem"],[3,"StoreColorsRequest"],[3,"StoreNamedColorRequest"],[3,"Rgb"],[3,"QueryColorsRequest"],[3,"LookupColorRequest"],[3,"PixmapEnum"],[3,"CreateCursorRequest"],[3,"FontEnum"],[3,"CreateGlyphCursorRequest"],[3,"FreeCursorRequest"],[3,"RecolorCursorRequest"],[3,"QueryShapeOf"],[3,"QueryBestSizeRequest"],[3,"QueryExtensionRequest"],[3,"ListExtensionsRequest"],[3,"ChangeKeyboardMappingRequest"],[3,"GetKeyboardMappingRequest"],[3,"LedMode"],[3,"ChangeKeyboardControlRequest"],[3,"GetKeyboardControlRequest"],[3,"BellRequest"],[3,"ChangePointerControlRequest"],[3,"GetPointerControlRequest"],[3,"Blanking"],[3,"Exposures"],[3,"SetScreenSaverRequest"],[3,"GetScreenSaverRequest"],[3,"HostMode"],[3,"Family"],[3,"ChangeHostsRequest"],[3,"ListHostsRequest"],[3,"AccessControl"],[3,"SetAccessControlRequest"],[3,"CloseDown"],[3,"SetCloseDownModeRequest"],[3,"Kill"],[3,"KillClientRequest"],[3,"RotatePropertiesRequest"],[3,"ScreenSaver"],[3,"ForceScreenSaverRequest"],[3,"MappingStatus"],[3,"SetPointerMappingRequest"],[3,"GetPointerMappingRequest"],[3,"MapIndex"],[3,"SetModifierMappingRequest"],[3,"GetModifierMappingRequest"],[3,"NoOperationRequest"],[6,"Colormap"],[6,"Cursor"],[6,"Font"],[6,"Bool32"],[6,"Keycode32"],[6,"Window"],[8,"Clone"],[3,"PropertyIterator"],[8,"Debug"],[8,"TryParse"],[3,"X11Error"],[3,"ExtensionInformation"],[4,"BigRequests"],[13,"Incomplete"],[8,"Serialize"],[8,"Request"],[8,"ReplyRequest"],[8,"ReplyFDsRequest"],[8,"TryParseFd"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
